// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_security_private_ca_protos || ($protobuf.roots._google_cloud_security_private_ca_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.security = (function() {
    
                /**
                 * Namespace security.
                 * @memberof google.cloud
                 * @namespace
                 */
                var security = {};
    
                security.privateca = (function() {
    
                    /**
                     * Namespace privateca.
                     * @memberof google.cloud.security
                     * @namespace
                     */
                    var privateca = {};
    
                    privateca.v1 = (function() {
    
                        /**
                         * Namespace v1.
                         * @memberof google.cloud.security.privateca
                         * @namespace
                         */
                        var v1 = {};
    
                        v1.CertificateAuthority = (function() {
    
                            /**
                             * Properties of a CertificateAuthority.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateAuthority
                             * @property {string|null} [name] CertificateAuthority name
                             * @property {google.cloud.security.privateca.v1.CertificateAuthority.Type|null} [type] CertificateAuthority type
                             * @property {google.cloud.security.privateca.v1.ICertificateConfig|null} [config] CertificateAuthority config
                             * @property {google.protobuf.IDuration|null} [lifetime] CertificateAuthority lifetime
                             * @property {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec|null} [keySpec] CertificateAuthority keySpec
                             * @property {google.cloud.security.privateca.v1.ISubordinateConfig|null} [subordinateConfig] CertificateAuthority subordinateConfig
                             * @property {google.cloud.security.privateca.v1.CaPool.Tier|null} [tier] CertificateAuthority tier
                             * @property {google.cloud.security.privateca.v1.CertificateAuthority.State|null} [state] CertificateAuthority state
                             * @property {Array.<string>|null} [pemCaCertificates] CertificateAuthority pemCaCertificates
                             * @property {Array.<google.cloud.security.privateca.v1.ICertificateDescription>|null} [caCertificateDescriptions] CertificateAuthority caCertificateDescriptions
                             * @property {string|null} [gcsBucket] CertificateAuthority gcsBucket
                             * @property {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls|null} [accessUrls] CertificateAuthority accessUrls
                             * @property {google.protobuf.ITimestamp|null} [createTime] CertificateAuthority createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] CertificateAuthority updateTime
                             * @property {google.protobuf.ITimestamp|null} [deleteTime] CertificateAuthority deleteTime
                             * @property {google.protobuf.ITimestamp|null} [expireTime] CertificateAuthority expireTime
                             * @property {Object.<string,string>|null} [labels] CertificateAuthority labels
                             */
    
                            /**
                             * Constructs a new CertificateAuthority.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateAuthority.
                             * @implements ICertificateAuthority
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateAuthority=} [properties] Properties to set
                             */
                            function CertificateAuthority(properties) {
                                this.pemCaCertificates = [];
                                this.caCertificateDescriptions = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateAuthority name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.name = "";
    
                            /**
                             * CertificateAuthority type.
                             * @member {google.cloud.security.privateca.v1.CertificateAuthority.Type} type
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.type = 0;
    
                            /**
                             * CertificateAuthority config.
                             * @member {google.cloud.security.privateca.v1.ICertificateConfig|null|undefined} config
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.config = null;
    
                            /**
                             * CertificateAuthority lifetime.
                             * @member {google.protobuf.IDuration|null|undefined} lifetime
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.lifetime = null;
    
                            /**
                             * CertificateAuthority keySpec.
                             * @member {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec|null|undefined} keySpec
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.keySpec = null;
    
                            /**
                             * CertificateAuthority subordinateConfig.
                             * @member {google.cloud.security.privateca.v1.ISubordinateConfig|null|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.subordinateConfig = null;
    
                            /**
                             * CertificateAuthority tier.
                             * @member {google.cloud.security.privateca.v1.CaPool.Tier} tier
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.tier = 0;
    
                            /**
                             * CertificateAuthority state.
                             * @member {google.cloud.security.privateca.v1.CertificateAuthority.State} state
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.state = 0;
    
                            /**
                             * CertificateAuthority pemCaCertificates.
                             * @member {Array.<string>} pemCaCertificates
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.pemCaCertificates = $util.emptyArray;
    
                            /**
                             * CertificateAuthority caCertificateDescriptions.
                             * @member {Array.<google.cloud.security.privateca.v1.ICertificateDescription>} caCertificateDescriptions
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.caCertificateDescriptions = $util.emptyArray;
    
                            /**
                             * CertificateAuthority gcsBucket.
                             * @member {string} gcsBucket
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.gcsBucket = "";
    
                            /**
                             * CertificateAuthority accessUrls.
                             * @member {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls|null|undefined} accessUrls
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.accessUrls = null;
    
                            /**
                             * CertificateAuthority createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.createTime = null;
    
                            /**
                             * CertificateAuthority updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.updateTime = null;
    
                            /**
                             * CertificateAuthority deleteTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.deleteTime = null;
    
                            /**
                             * CertificateAuthority expireTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} expireTime
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.expireTime = null;
    
                            /**
                             * CertificateAuthority labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CertificateAuthority instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateAuthority=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateAuthority} CertificateAuthority instance
                             */
                            CertificateAuthority.create = function create(properties) {
                                return new CertificateAuthority(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateAuthority message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateAuthority} message CertificateAuthority message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateAuthority.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                    $root.google.cloud.security.privateca.v1.CertificateConfig.encode(message.config, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                    $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.keySpec != null && Object.hasOwnProperty.call(message, "keySpec"))
                                    $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.encode(message.keySpec, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.subordinateConfig != null && Object.hasOwnProperty.call(message, "subordinateConfig"))
                                    $root.google.cloud.security.privateca.v1.SubordinateConfig.encode(message.subordinateConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.tier);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 8, wireType 0 =*/64).int32(message.state);
                                if (message.pemCaCertificates != null && message.pemCaCertificates.length)
                                    for (var i = 0; i < message.pemCaCertificates.length; ++i)
                                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.pemCaCertificates[i]);
                                if (message.caCertificateDescriptions != null && message.caCertificateDescriptions.length)
                                    for (var i = 0; i < message.caCertificateDescriptions.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CertificateDescription.encode(message.caCertificateDescriptions[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.gcsBucket != null && Object.hasOwnProperty.call(message, "gcsBucket"))
                                    writer.uint32(/* id 11, wireType 2 =*/90).string(message.gcsBucket);
                                if (message.accessUrls != null && Object.hasOwnProperty.call(message, "accessUrls"))
                                    $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.encode(message.accessUrls, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                    $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                                if (message.expireTime != null && Object.hasOwnProperty.call(message, "expireTime"))
                                    $root.google.protobuf.Timestamp.encode(message.expireTime, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 17, wireType 2 =*/138).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateAuthority message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateAuthority} message CertificateAuthority message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateAuthority.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateAuthority message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateAuthority} CertificateAuthority
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateAuthority.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateAuthority(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.config = $root.google.cloud.security.privateca.v1.CertificateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.keySpec = $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.tier = reader.int32();
                                            break;
                                        }
                                    case 8: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 9: {
                                            if (!(message.pemCaCertificates && message.pemCaCertificates.length))
                                                message.pemCaCertificates = [];
                                            message.pemCaCertificates.push(reader.string());
                                            break;
                                        }
                                    case 10: {
                                            if (!(message.caCertificateDescriptions && message.caCertificateDescriptions.length))
                                                message.caCertificateDescriptions = [];
                                            message.caCertificateDescriptions.push($root.google.cloud.security.privateca.v1.CertificateDescription.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 11: {
                                            message.gcsBucket = reader.string();
                                            break;
                                        }
                                    case 12: {
                                            message.accessUrls = $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 13: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 14: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 15: {
                                            message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 16: {
                                            message.expireTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 17: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateAuthority message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateAuthority} CertificateAuthority
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateAuthority.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateAuthority message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateAuthority.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateConfig.verify(message.config);
                                    if (error)
                                        return "config." + error;
                                }
                                if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                    var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                    if (error)
                                        return "lifetime." + error;
                                }
                                if (message.keySpec != null && message.hasOwnProperty("keySpec")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.verify(message.keySpec);
                                    if (error)
                                        return "keySpec." + error;
                                }
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1.SubordinateConfig.verify(message.subordinateConfig);
                                    if (error)
                                        return "subordinateConfig." + error;
                                }
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    switch (message.tier) {
                                    default:
                                        return "tier: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                        break;
                                    }
                                if (message.pemCaCertificates != null && message.hasOwnProperty("pemCaCertificates")) {
                                    if (!Array.isArray(message.pemCaCertificates))
                                        return "pemCaCertificates: array expected";
                                    for (var i = 0; i < message.pemCaCertificates.length; ++i)
                                        if (!$util.isString(message.pemCaCertificates[i]))
                                            return "pemCaCertificates: string[] expected";
                                }
                                if (message.caCertificateDescriptions != null && message.hasOwnProperty("caCertificateDescriptions")) {
                                    if (!Array.isArray(message.caCertificateDescriptions))
                                        return "caCertificateDescriptions: array expected";
                                    for (var i = 0; i < message.caCertificateDescriptions.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateDescription.verify(message.caCertificateDescriptions[i]);
                                        if (error)
                                            return "caCertificateDescriptions." + error;
                                    }
                                }
                                if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                    if (!$util.isString(message.gcsBucket))
                                        return "gcsBucket: string expected";
                                if (message.accessUrls != null && message.hasOwnProperty("accessUrls")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.verify(message.accessUrls);
                                    if (error)
                                        return "accessUrls." + error;
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                    if (error)
                                        return "deleteTime." + error;
                                }
                                if (message.expireTime != null && message.hasOwnProperty("expireTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.expireTime);
                                    if (error)
                                        return "expireTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateAuthority message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateAuthority} CertificateAuthority
                             */
                            CertificateAuthority.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateAuthority)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateAuthority();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "SELF_SIGNED":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "SUBORDINATE":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                if (object.config != null) {
                                    if (typeof object.config !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.config: object expected");
                                    message.config = $root.google.cloud.security.privateca.v1.CertificateConfig.fromObject(object.config);
                                }
                                if (object.lifetime != null) {
                                    if (typeof object.lifetime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.lifetime: object expected");
                                    message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                }
                                if (object.keySpec != null) {
                                    if (typeof object.keySpec !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.keySpec: object expected");
                                    message.keySpec = $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.fromObject(object.keySpec);
                                }
                                if (object.subordinateConfig != null) {
                                    if (typeof object.subordinateConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.subordinateConfig: object expected");
                                    message.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.fromObject(object.subordinateConfig);
                                }
                                switch (object.tier) {
                                default:
                                    if (typeof object.tier === "number") {
                                        message.tier = object.tier;
                                        break;
                                    }
                                    break;
                                case "TIER_UNSPECIFIED":
                                case 0:
                                    message.tier = 0;
                                    break;
                                case "ENTERPRISE":
                                case 1:
                                    message.tier = 1;
                                    break;
                                case "DEVOPS":
                                case 2:
                                    message.tier = 2;
                                    break;
                                }
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "ENABLED":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "DISABLED":
                                case 2:
                                    message.state = 2;
                                    break;
                                case "STAGED":
                                case 3:
                                    message.state = 3;
                                    break;
                                case "AWAITING_USER_ACTIVATION":
                                case 4:
                                    message.state = 4;
                                    break;
                                case "DELETED":
                                case 5:
                                    message.state = 5;
                                    break;
                                }
                                if (object.pemCaCertificates) {
                                    if (!Array.isArray(object.pemCaCertificates))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.pemCaCertificates: array expected");
                                    message.pemCaCertificates = [];
                                    for (var i = 0; i < object.pemCaCertificates.length; ++i)
                                        message.pemCaCertificates[i] = String(object.pemCaCertificates[i]);
                                }
                                if (object.caCertificateDescriptions) {
                                    if (!Array.isArray(object.caCertificateDescriptions))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.caCertificateDescriptions: array expected");
                                    message.caCertificateDescriptions = [];
                                    for (var i = 0; i < object.caCertificateDescriptions.length; ++i) {
                                        if (typeof object.caCertificateDescriptions[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.caCertificateDescriptions: object expected");
                                        message.caCertificateDescriptions[i] = $root.google.cloud.security.privateca.v1.CertificateDescription.fromObject(object.caCertificateDescriptions[i]);
                                    }
                                }
                                if (object.gcsBucket != null)
                                    message.gcsBucket = String(object.gcsBucket);
                                if (object.accessUrls != null) {
                                    if (typeof object.accessUrls !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.accessUrls: object expected");
                                    message.accessUrls = $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.fromObject(object.accessUrls);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.deleteTime != null) {
                                    if (typeof object.deleteTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.deleteTime: object expected");
                                    message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                                }
                                if (object.expireTime != null) {
                                    if (typeof object.expireTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.expireTime: object expected");
                                    message.expireTime = $root.google.protobuf.Timestamp.fromObject(object.expireTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateAuthority message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateAuthority} message CertificateAuthority
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateAuthority.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.pemCaCertificates = [];
                                    object.caCertificateDescriptions = [];
                                }
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.config = null;
                                    object.lifetime = null;
                                    object.keySpec = null;
                                    object.subordinateConfig = null;
                                    object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.gcsBucket = "";
                                    object.accessUrls = null;
                                    object.createTime = null;
                                    object.updateTime = null;
                                    object.deleteTime = null;
                                    object.expireTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.security.privateca.v1.CertificateAuthority.Type[message.type] === undefined ? message.type : $root.google.cloud.security.privateca.v1.CertificateAuthority.Type[message.type] : message.type;
                                if (message.config != null && message.hasOwnProperty("config"))
                                    object.config = $root.google.cloud.security.privateca.v1.CertificateConfig.toObject(message.config, options);
                                if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                    object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                if (message.keySpec != null && message.hasOwnProperty("keySpec"))
                                    object.keySpec = $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.toObject(message.keySpec, options);
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig"))
                                    object.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.toObject(message.subordinateConfig, options);
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    object.tier = options.enums === String ? $root.google.cloud.security.privateca.v1.CaPool.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.security.privateca.v1.CaPool.Tier[message.tier] : message.tier;
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.security.privateca.v1.CertificateAuthority.State[message.state] === undefined ? message.state : $root.google.cloud.security.privateca.v1.CertificateAuthority.State[message.state] : message.state;
                                if (message.pemCaCertificates && message.pemCaCertificates.length) {
                                    object.pemCaCertificates = [];
                                    for (var j = 0; j < message.pemCaCertificates.length; ++j)
                                        object.pemCaCertificates[j] = message.pemCaCertificates[j];
                                }
                                if (message.caCertificateDescriptions && message.caCertificateDescriptions.length) {
                                    object.caCertificateDescriptions = [];
                                    for (var j = 0; j < message.caCertificateDescriptions.length; ++j)
                                        object.caCertificateDescriptions[j] = $root.google.cloud.security.privateca.v1.CertificateDescription.toObject(message.caCertificateDescriptions[j], options);
                                }
                                if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                    object.gcsBucket = message.gcsBucket;
                                if (message.accessUrls != null && message.hasOwnProperty("accessUrls"))
                                    object.accessUrls = $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.toObject(message.accessUrls, options);
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                    object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                                if (message.expireTime != null && message.hasOwnProperty("expireTime"))
                                    object.expireTime = $root.google.protobuf.Timestamp.toObject(message.expireTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateAuthority to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateAuthority.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateAuthority
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateAuthority.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateAuthority";
                            };
    
                            /**
                             * Type enum.
                             * @name google.cloud.security.privateca.v1.CertificateAuthority.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} SELF_SIGNED=1 SELF_SIGNED value
                             * @property {number} SUBORDINATE=2 SUBORDINATE value
                             */
                            CertificateAuthority.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SELF_SIGNED"] = 1;
                                values[valuesById[2] = "SUBORDINATE"] = 2;
                                return values;
                            })();
    
                            /**
                             * State enum.
                             * @name google.cloud.security.privateca.v1.CertificateAuthority.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} ENABLED=1 ENABLED value
                             * @property {number} DISABLED=2 DISABLED value
                             * @property {number} STAGED=3 STAGED value
                             * @property {number} AWAITING_USER_ACTIVATION=4 AWAITING_USER_ACTIVATION value
                             * @property {number} DELETED=5 DELETED value
                             */
                            CertificateAuthority.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ENABLED"] = 1;
                                values[valuesById[2] = "DISABLED"] = 2;
                                values[valuesById[3] = "STAGED"] = 3;
                                values[valuesById[4] = "AWAITING_USER_ACTIVATION"] = 4;
                                values[valuesById[5] = "DELETED"] = 5;
                                return values;
                            })();
    
                            CertificateAuthority.AccessUrls = (function() {
    
                                /**
                                 * Properties of an AccessUrls.
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                                 * @interface IAccessUrls
                                 * @property {string|null} [caCertificateAccessUrl] AccessUrls caCertificateAccessUrl
                                 * @property {Array.<string>|null} [crlAccessUrls] AccessUrls crlAccessUrls
                                 */
    
                                /**
                                 * Constructs a new AccessUrls.
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                                 * @classdesc Represents an AccessUrls.
                                 * @implements IAccessUrls
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls=} [properties] Properties to set
                                 */
                                function AccessUrls(properties) {
                                    this.crlAccessUrls = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * AccessUrls caCertificateAccessUrl.
                                 * @member {string} caCertificateAccessUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @instance
                                 */
                                AccessUrls.prototype.caCertificateAccessUrl = "";
    
                                /**
                                 * AccessUrls crlAccessUrls.
                                 * @member {Array.<string>} crlAccessUrls
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @instance
                                 */
                                AccessUrls.prototype.crlAccessUrls = $util.emptyArray;
    
                                /**
                                 * Creates a new AccessUrls instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls} AccessUrls instance
                                 */
                                AccessUrls.create = function create(properties) {
                                    return new AccessUrls(properties);
                                };
    
                                /**
                                 * Encodes the specified AccessUrls message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls} message AccessUrls message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AccessUrls.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.caCertificateAccessUrl != null && Object.hasOwnProperty.call(message, "caCertificateAccessUrl"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.caCertificateAccessUrl);
                                    if (message.crlAccessUrls != null && message.crlAccessUrls.length)
                                        for (var i = 0; i < message.crlAccessUrls.length; ++i)
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.crlAccessUrls[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified AccessUrls message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IAccessUrls} message AccessUrls message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AccessUrls.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an AccessUrls message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls} AccessUrls
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AccessUrls.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.caCertificateAccessUrl = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.crlAccessUrls && message.crlAccessUrls.length))
                                                    message.crlAccessUrls = [];
                                                message.crlAccessUrls.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an AccessUrls message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls} AccessUrls
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AccessUrls.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an AccessUrls message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                AccessUrls.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.caCertificateAccessUrl != null && message.hasOwnProperty("caCertificateAccessUrl"))
                                        if (!$util.isString(message.caCertificateAccessUrl))
                                            return "caCertificateAccessUrl: string expected";
                                    if (message.crlAccessUrls != null && message.hasOwnProperty("crlAccessUrls")) {
                                        if (!Array.isArray(message.crlAccessUrls))
                                            return "crlAccessUrls: array expected";
                                        for (var i = 0; i < message.crlAccessUrls.length; ++i)
                                            if (!$util.isString(message.crlAccessUrls[i]))
                                                return "crlAccessUrls: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an AccessUrls message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls} AccessUrls
                                 */
                                AccessUrls.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls();
                                    if (object.caCertificateAccessUrl != null)
                                        message.caCertificateAccessUrl = String(object.caCertificateAccessUrl);
                                    if (object.crlAccessUrls) {
                                        if (!Array.isArray(object.crlAccessUrls))
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls.crlAccessUrls: array expected");
                                        message.crlAccessUrls = [];
                                        for (var i = 0; i < object.crlAccessUrls.length; ++i)
                                            message.crlAccessUrls[i] = String(object.crlAccessUrls[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an AccessUrls message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls} message AccessUrls
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                AccessUrls.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.crlAccessUrls = [];
                                    if (options.defaults)
                                        object.caCertificateAccessUrl = "";
                                    if (message.caCertificateAccessUrl != null && message.hasOwnProperty("caCertificateAccessUrl"))
                                        object.caCertificateAccessUrl = message.caCertificateAccessUrl;
                                    if (message.crlAccessUrls && message.crlAccessUrls.length) {
                                        object.crlAccessUrls = [];
                                        for (var j = 0; j < message.crlAccessUrls.length; ++j)
                                            object.crlAccessUrls[j] = message.crlAccessUrls[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this AccessUrls to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                AccessUrls.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for AccessUrls
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                AccessUrls.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateAuthority.AccessUrls";
                                };
    
                                return AccessUrls;
                            })();
    
                            CertificateAuthority.KeyVersionSpec = (function() {
    
                                /**
                                 * Properties of a KeyVersionSpec.
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                                 * @interface IKeyVersionSpec
                                 * @property {string|null} [cloudKmsKeyVersion] KeyVersionSpec cloudKmsKeyVersion
                                 * @property {google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm|null} [algorithm] KeyVersionSpec algorithm
                                 */
    
                                /**
                                 * Constructs a new KeyVersionSpec.
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority
                                 * @classdesc Represents a KeyVersionSpec.
                                 * @implements IKeyVersionSpec
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec=} [properties] Properties to set
                                 */
                                function KeyVersionSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyVersionSpec cloudKmsKeyVersion.
                                 * @member {string|null|undefined} cloudKmsKeyVersion
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                KeyVersionSpec.prototype.cloudKmsKeyVersion = null;
    
                                /**
                                 * KeyVersionSpec algorithm.
                                 * @member {google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm|null|undefined} algorithm
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                KeyVersionSpec.prototype.algorithm = null;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * KeyVersionSpec KeyVersion.
                                 * @member {"cloudKmsKeyVersion"|"algorithm"|undefined} KeyVersion
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                Object.defineProperty(KeyVersionSpec.prototype, "KeyVersion", {
                                    get: $util.oneOfGetter($oneOfFields = ["cloudKmsKeyVersion", "algorithm"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new KeyVersionSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec instance
                                 */
                                KeyVersionSpec.create = function create(properties) {
                                    return new KeyVersionSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyVersionSpec message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec} message KeyVersionSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyVersionSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.cloudKmsKeyVersion != null && Object.hasOwnProperty.call(message, "cloudKmsKeyVersion"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.cloudKmsKeyVersion);
                                    if (message.algorithm != null && Object.hasOwnProperty.call(message, "algorithm"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.algorithm);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyVersionSpec message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.IKeyVersionSpec} message KeyVersionSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyVersionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyVersionSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyVersionSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.cloudKmsKeyVersion = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.algorithm = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyVersionSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyVersionSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyVersionSpec message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyVersionSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.cloudKmsKeyVersion != null && message.hasOwnProperty("cloudKmsKeyVersion")) {
                                        properties.KeyVersion = 1;
                                        if (!$util.isString(message.cloudKmsKeyVersion))
                                            return "cloudKmsKeyVersion: string expected";
                                    }
                                    if (message.algorithm != null && message.hasOwnProperty("algorithm")) {
                                        if (properties.KeyVersion === 1)
                                            return "KeyVersion: multiple values";
                                        properties.KeyVersion = 1;
                                        switch (message.algorithm) {
                                        default:
                                            return "algorithm: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 6:
                                        case 7:
                                        case 8:
                                        case 4:
                                        case 5:
                                            break;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyVersionSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 */
                                KeyVersionSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec();
                                    if (object.cloudKmsKeyVersion != null)
                                        message.cloudKmsKeyVersion = String(object.cloudKmsKeyVersion);
                                    switch (object.algorithm) {
                                    default:
                                        if (typeof object.algorithm === "number") {
                                            message.algorithm = object.algorithm;
                                            break;
                                        }
                                        break;
                                    case "SIGN_HASH_ALGORITHM_UNSPECIFIED":
                                    case 0:
                                        message.algorithm = 0;
                                        break;
                                    case "RSA_PSS_2048_SHA256":
                                    case 1:
                                        message.algorithm = 1;
                                        break;
                                    case "RSA_PSS_3072_SHA256":
                                    case 2:
                                        message.algorithm = 2;
                                        break;
                                    case "RSA_PSS_4096_SHA256":
                                    case 3:
                                        message.algorithm = 3;
                                        break;
                                    case "RSA_PKCS1_2048_SHA256":
                                    case 6:
                                        message.algorithm = 6;
                                        break;
                                    case "RSA_PKCS1_3072_SHA256":
                                    case 7:
                                        message.algorithm = 7;
                                        break;
                                    case "RSA_PKCS1_4096_SHA256":
                                    case 8:
                                        message.algorithm = 8;
                                        break;
                                    case "EC_P256_SHA256":
                                    case 4:
                                        message.algorithm = 4;
                                        break;
                                    case "EC_P384_SHA384":
                                    case 5:
                                        message.algorithm = 5;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyVersionSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec} message KeyVersionSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyVersionSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (message.cloudKmsKeyVersion != null && message.hasOwnProperty("cloudKmsKeyVersion")) {
                                        object.cloudKmsKeyVersion = message.cloudKmsKeyVersion;
                                        if (options.oneofs)
                                            object.KeyVersion = "cloudKmsKeyVersion";
                                    }
                                    if (message.algorithm != null && message.hasOwnProperty("algorithm")) {
                                        object.algorithm = options.enums === String ? $root.google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm[message.algorithm] === undefined ? message.algorithm : $root.google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm[message.algorithm] : message.algorithm;
                                        if (options.oneofs)
                                            object.KeyVersion = "algorithm";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyVersionSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyVersionSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyVersionSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyVersionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateAuthority.KeyVersionSpec";
                                };
    
                                return KeyVersionSpec;
                            })();
    
                            /**
                             * SignHashAlgorithm enum.
                             * @name google.cloud.security.privateca.v1.CertificateAuthority.SignHashAlgorithm
                             * @enum {number}
                             * @property {number} SIGN_HASH_ALGORITHM_UNSPECIFIED=0 SIGN_HASH_ALGORITHM_UNSPECIFIED value
                             * @property {number} RSA_PSS_2048_SHA256=1 RSA_PSS_2048_SHA256 value
                             * @property {number} RSA_PSS_3072_SHA256=2 RSA_PSS_3072_SHA256 value
                             * @property {number} RSA_PSS_4096_SHA256=3 RSA_PSS_4096_SHA256 value
                             * @property {number} RSA_PKCS1_2048_SHA256=6 RSA_PKCS1_2048_SHA256 value
                             * @property {number} RSA_PKCS1_3072_SHA256=7 RSA_PKCS1_3072_SHA256 value
                             * @property {number} RSA_PKCS1_4096_SHA256=8 RSA_PKCS1_4096_SHA256 value
                             * @property {number} EC_P256_SHA256=4 EC_P256_SHA256 value
                             * @property {number} EC_P384_SHA384=5 EC_P384_SHA384 value
                             */
                            CertificateAuthority.SignHashAlgorithm = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SIGN_HASH_ALGORITHM_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RSA_PSS_2048_SHA256"] = 1;
                                values[valuesById[2] = "RSA_PSS_3072_SHA256"] = 2;
                                values[valuesById[3] = "RSA_PSS_4096_SHA256"] = 3;
                                values[valuesById[6] = "RSA_PKCS1_2048_SHA256"] = 6;
                                values[valuesById[7] = "RSA_PKCS1_3072_SHA256"] = 7;
                                values[valuesById[8] = "RSA_PKCS1_4096_SHA256"] = 8;
                                values[valuesById[4] = "EC_P256_SHA256"] = 4;
                                values[valuesById[5] = "EC_P384_SHA384"] = 5;
                                return values;
                            })();
    
                            return CertificateAuthority;
                        })();
    
                        v1.CaPool = (function() {
    
                            /**
                             * Properties of a CaPool.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICaPool
                             * @property {string|null} [name] CaPool name
                             * @property {google.cloud.security.privateca.v1.CaPool.Tier|null} [tier] CaPool tier
                             * @property {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy|null} [issuancePolicy] CaPool issuancePolicy
                             * @property {google.cloud.security.privateca.v1.CaPool.IPublishingOptions|null} [publishingOptions] CaPool publishingOptions
                             * @property {Object.<string,string>|null} [labels] CaPool labels
                             */
    
                            /**
                             * Constructs a new CaPool.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CaPool.
                             * @implements ICaPool
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICaPool=} [properties] Properties to set
                             */
                            function CaPool(properties) {
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CaPool name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             */
                            CaPool.prototype.name = "";
    
                            /**
                             * CaPool tier.
                             * @member {google.cloud.security.privateca.v1.CaPool.Tier} tier
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             */
                            CaPool.prototype.tier = 0;
    
                            /**
                             * CaPool issuancePolicy.
                             * @member {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy|null|undefined} issuancePolicy
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             */
                            CaPool.prototype.issuancePolicy = null;
    
                            /**
                             * CaPool publishingOptions.
                             * @member {google.cloud.security.privateca.v1.CaPool.IPublishingOptions|null|undefined} publishingOptions
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             */
                            CaPool.prototype.publishingOptions = null;
    
                            /**
                             * CaPool labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             */
                            CaPool.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CaPool instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICaPool=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CaPool} CaPool instance
                             */
                            CaPool.create = function create(properties) {
                                return new CaPool(properties);
                            };
    
                            /**
                             * Encodes the specified CaPool message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICaPool} message CaPool message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaPool.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.tier);
                                if (message.issuancePolicy != null && Object.hasOwnProperty.call(message, "issuancePolicy"))
                                    $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.encode(message.issuancePolicy, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.publishingOptions != null && Object.hasOwnProperty.call(message, "publishingOptions"))
                                    $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions.encode(message.publishingOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CaPool message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICaPool} message CaPool message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CaPool.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CaPool message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CaPool} CaPool
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaPool.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.tier = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.issuancePolicy = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.publishingOptions = $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CaPool message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CaPool} CaPool
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CaPool.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CaPool message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CaPool.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    switch (message.tier) {
                                    default:
                                        return "tier: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.issuancePolicy != null && message.hasOwnProperty("issuancePolicy")) {
                                    var error = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.verify(message.issuancePolicy);
                                    if (error)
                                        return "issuancePolicy." + error;
                                }
                                if (message.publishingOptions != null && message.hasOwnProperty("publishingOptions")) {
                                    var error = $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions.verify(message.publishingOptions);
                                    if (error)
                                        return "publishingOptions." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CaPool message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CaPool} CaPool
                             */
                            CaPool.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CaPool)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CaPool();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.tier) {
                                default:
                                    if (typeof object.tier === "number") {
                                        message.tier = object.tier;
                                        break;
                                    }
                                    break;
                                case "TIER_UNSPECIFIED":
                                case 0:
                                    message.tier = 0;
                                    break;
                                case "ENTERPRISE":
                                case 1:
                                    message.tier = 1;
                                    break;
                                case "DEVOPS":
                                case 2:
                                    message.tier = 2;
                                    break;
                                }
                                if (object.issuancePolicy != null) {
                                    if (typeof object.issuancePolicy !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CaPool.issuancePolicy: object expected");
                                    message.issuancePolicy = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.fromObject(object.issuancePolicy);
                                }
                                if (object.publishingOptions != null) {
                                    if (typeof object.publishingOptions !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CaPool.publishingOptions: object expected");
                                    message.publishingOptions = $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions.fromObject(object.publishingOptions);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CaPool.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CaPool message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {google.cloud.security.privateca.v1.CaPool} message CaPool
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CaPool.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                    object.issuancePolicy = null;
                                    object.publishingOptions = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    object.tier = options.enums === String ? $root.google.cloud.security.privateca.v1.CaPool.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.security.privateca.v1.CaPool.Tier[message.tier] : message.tier;
                                if (message.issuancePolicy != null && message.hasOwnProperty("issuancePolicy"))
                                    object.issuancePolicy = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.toObject(message.issuancePolicy, options);
                                if (message.publishingOptions != null && message.hasOwnProperty("publishingOptions"))
                                    object.publishingOptions = $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions.toObject(message.publishingOptions, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CaPool to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CaPool.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CaPool
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CaPool
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CaPool.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool";
                            };
    
                            /**
                             * Tier enum.
                             * @name google.cloud.security.privateca.v1.CaPool.Tier
                             * @enum {number}
                             * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                             * @property {number} ENTERPRISE=1 ENTERPRISE value
                             * @property {number} DEVOPS=2 DEVOPS value
                             */
                            CaPool.Tier = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ENTERPRISE"] = 1;
                                values[valuesById[2] = "DEVOPS"] = 2;
                                return values;
                            })();
    
                            CaPool.PublishingOptions = (function() {
    
                                /**
                                 * Properties of a PublishingOptions.
                                 * @memberof google.cloud.security.privateca.v1.CaPool
                                 * @interface IPublishingOptions
                                 * @property {boolean|null} [publishCaCert] PublishingOptions publishCaCert
                                 * @property {boolean|null} [publishCrl] PublishingOptions publishCrl
                                 */
    
                                /**
                                 * Constructs a new PublishingOptions.
                                 * @memberof google.cloud.security.privateca.v1.CaPool
                                 * @classdesc Represents a PublishingOptions.
                                 * @implements IPublishingOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CaPool.IPublishingOptions=} [properties] Properties to set
                                 */
                                function PublishingOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * PublishingOptions publishCaCert.
                                 * @member {boolean} publishCaCert
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @instance
                                 */
                                PublishingOptions.prototype.publishCaCert = false;
    
                                /**
                                 * PublishingOptions publishCrl.
                                 * @member {boolean} publishCrl
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @instance
                                 */
                                PublishingOptions.prototype.publishCrl = false;
    
                                /**
                                 * Creates a new PublishingOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IPublishingOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CaPool.PublishingOptions} PublishingOptions instance
                                 */
                                PublishingOptions.create = function create(properties) {
                                    return new PublishingOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified PublishingOptions message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.PublishingOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IPublishingOptions} message PublishingOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublishingOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.publishCaCert != null && Object.hasOwnProperty.call(message, "publishCaCert"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.publishCaCert);
                                    if (message.publishCrl != null && Object.hasOwnProperty.call(message, "publishCrl"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.publishCrl);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified PublishingOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.PublishingOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IPublishingOptions} message PublishingOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                PublishingOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a PublishingOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CaPool.PublishingOptions} PublishingOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublishingOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.publishCaCert = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.publishCrl = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a PublishingOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CaPool.PublishingOptions} PublishingOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                PublishingOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a PublishingOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                PublishingOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.publishCaCert != null && message.hasOwnProperty("publishCaCert"))
                                        if (typeof message.publishCaCert !== "boolean")
                                            return "publishCaCert: boolean expected";
                                    if (message.publishCrl != null && message.hasOwnProperty("publishCrl"))
                                        if (typeof message.publishCrl !== "boolean")
                                            return "publishCrl: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a PublishingOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CaPool.PublishingOptions} PublishingOptions
                                 */
                                PublishingOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CaPool.PublishingOptions();
                                    if (object.publishCaCert != null)
                                        message.publishCaCert = Boolean(object.publishCaCert);
                                    if (object.publishCrl != null)
                                        message.publishCrl = Boolean(object.publishCrl);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a PublishingOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.PublishingOptions} message PublishingOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                PublishingOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.publishCaCert = false;
                                        object.publishCrl = false;
                                    }
                                    if (message.publishCaCert != null && message.hasOwnProperty("publishCaCert"))
                                        object.publishCaCert = message.publishCaCert;
                                    if (message.publishCrl != null && message.hasOwnProperty("publishCrl"))
                                        object.publishCrl = message.publishCrl;
                                    return object;
                                };
    
                                /**
                                 * Converts this PublishingOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                PublishingOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for PublishingOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CaPool.PublishingOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                PublishingOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.PublishingOptions";
                                };
    
                                return PublishingOptions;
                            })();
    
                            CaPool.IssuancePolicy = (function() {
    
                                /**
                                 * Properties of an IssuancePolicy.
                                 * @memberof google.cloud.security.privateca.v1.CaPool
                                 * @interface IIssuancePolicy
                                 * @property {Array.<google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType>|null} [allowedKeyTypes] IssuancePolicy allowedKeyTypes
                                 * @property {google.protobuf.IDuration|null} [maximumLifetime] IssuancePolicy maximumLifetime
                                 * @property {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes|null} [allowedIssuanceModes] IssuancePolicy allowedIssuanceModes
                                 * @property {google.cloud.security.privateca.v1.IX509Parameters|null} [baselineValues] IssuancePolicy baselineValues
                                 * @property {google.cloud.security.privateca.v1.ICertificateIdentityConstraints|null} [identityConstraints] IssuancePolicy identityConstraints
                                 * @property {google.cloud.security.privateca.v1.ICertificateExtensionConstraints|null} [passthroughExtensions] IssuancePolicy passthroughExtensions
                                 */
    
                                /**
                                 * Constructs a new IssuancePolicy.
                                 * @memberof google.cloud.security.privateca.v1.CaPool
                                 * @classdesc Represents an IssuancePolicy.
                                 * @implements IIssuancePolicy
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy=} [properties] Properties to set
                                 */
                                function IssuancePolicy(properties) {
                                    this.allowedKeyTypes = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * IssuancePolicy allowedKeyTypes.
                                 * @member {Array.<google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType>} allowedKeyTypes
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.allowedKeyTypes = $util.emptyArray;
    
                                /**
                                 * IssuancePolicy maximumLifetime.
                                 * @member {google.protobuf.IDuration|null|undefined} maximumLifetime
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.maximumLifetime = null;
    
                                /**
                                 * IssuancePolicy allowedIssuanceModes.
                                 * @member {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes|null|undefined} allowedIssuanceModes
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.allowedIssuanceModes = null;
    
                                /**
                                 * IssuancePolicy baselineValues.
                                 * @member {google.cloud.security.privateca.v1.IX509Parameters|null|undefined} baselineValues
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.baselineValues = null;
    
                                /**
                                 * IssuancePolicy identityConstraints.
                                 * @member {google.cloud.security.privateca.v1.ICertificateIdentityConstraints|null|undefined} identityConstraints
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.identityConstraints = null;
    
                                /**
                                 * IssuancePolicy passthroughExtensions.
                                 * @member {google.cloud.security.privateca.v1.ICertificateExtensionConstraints|null|undefined} passthroughExtensions
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 */
                                IssuancePolicy.prototype.passthroughExtensions = null;
    
                                /**
                                 * Creates a new IssuancePolicy instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy} IssuancePolicy instance
                                 */
                                IssuancePolicy.create = function create(properties) {
                                    return new IssuancePolicy(properties);
                                };
    
                                /**
                                 * Encodes the specified IssuancePolicy message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy} message IssuancePolicy message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                IssuancePolicy.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.allowedKeyTypes != null && message.allowedKeyTypes.length)
                                        for (var i = 0; i < message.allowedKeyTypes.length; ++i)
                                            $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.encode(message.allowedKeyTypes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.maximumLifetime != null && Object.hasOwnProperty.call(message, "maximumLifetime"))
                                        $root.google.protobuf.Duration.encode(message.maximumLifetime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.allowedIssuanceModes != null && Object.hasOwnProperty.call(message, "allowedIssuanceModes"))
                                        $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.encode(message.allowedIssuanceModes, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.baselineValues != null && Object.hasOwnProperty.call(message, "baselineValues"))
                                        $root.google.cloud.security.privateca.v1.X509Parameters.encode(message.baselineValues, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.identityConstraints != null && Object.hasOwnProperty.call(message, "identityConstraints"))
                                        $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.encode(message.identityConstraints, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.passthroughExtensions != null && Object.hasOwnProperty.call(message, "passthroughExtensions"))
                                        $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.encode(message.passthroughExtensions, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified IssuancePolicy message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IIssuancePolicy} message IssuancePolicy message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                IssuancePolicy.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an IssuancePolicy message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy} IssuancePolicy
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                IssuancePolicy.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.allowedKeyTypes && message.allowedKeyTypes.length))
                                                    message.allowedKeyTypes = [];
                                                message.allowedKeyTypes.push($root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 2: {
                                                message.maximumLifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                message.allowedIssuanceModes = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.baselineValues = $root.google.cloud.security.privateca.v1.X509Parameters.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an IssuancePolicy message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy} IssuancePolicy
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                IssuancePolicy.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an IssuancePolicy message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                IssuancePolicy.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.allowedKeyTypes != null && message.hasOwnProperty("allowedKeyTypes")) {
                                        if (!Array.isArray(message.allowedKeyTypes))
                                            return "allowedKeyTypes: array expected";
                                        for (var i = 0; i < message.allowedKeyTypes.length; ++i) {
                                            var error = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.verify(message.allowedKeyTypes[i]);
                                            if (error)
                                                return "allowedKeyTypes." + error;
                                        }
                                    }
                                    if (message.maximumLifetime != null && message.hasOwnProperty("maximumLifetime")) {
                                        var error = $root.google.protobuf.Duration.verify(message.maximumLifetime);
                                        if (error)
                                            return "maximumLifetime." + error;
                                    }
                                    if (message.allowedIssuanceModes != null && message.hasOwnProperty("allowedIssuanceModes")) {
                                        var error = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.verify(message.allowedIssuanceModes);
                                        if (error)
                                            return "allowedIssuanceModes." + error;
                                    }
                                    if (message.baselineValues != null && message.hasOwnProperty("baselineValues")) {
                                        var error = $root.google.cloud.security.privateca.v1.X509Parameters.verify(message.baselineValues);
                                        if (error)
                                            return "baselineValues." + error;
                                    }
                                    if (message.identityConstraints != null && message.hasOwnProperty("identityConstraints")) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.verify(message.identityConstraints);
                                        if (error)
                                            return "identityConstraints." + error;
                                    }
                                    if (message.passthroughExtensions != null && message.hasOwnProperty("passthroughExtensions")) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.verify(message.passthroughExtensions);
                                        if (error)
                                            return "passthroughExtensions." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates an IssuancePolicy message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy} IssuancePolicy
                                 */
                                IssuancePolicy.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy();
                                    if (object.allowedKeyTypes) {
                                        if (!Array.isArray(object.allowedKeyTypes))
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.allowedKeyTypes: array expected");
                                        message.allowedKeyTypes = [];
                                        for (var i = 0; i < object.allowedKeyTypes.length; ++i) {
                                            if (typeof object.allowedKeyTypes[i] !== "object")
                                                throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.allowedKeyTypes: object expected");
                                            message.allowedKeyTypes[i] = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.fromObject(object.allowedKeyTypes[i]);
                                        }
                                    }
                                    if (object.maximumLifetime != null) {
                                        if (typeof object.maximumLifetime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.maximumLifetime: object expected");
                                        message.maximumLifetime = $root.google.protobuf.Duration.fromObject(object.maximumLifetime);
                                    }
                                    if (object.allowedIssuanceModes != null) {
                                        if (typeof object.allowedIssuanceModes !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.allowedIssuanceModes: object expected");
                                        message.allowedIssuanceModes = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.fromObject(object.allowedIssuanceModes);
                                    }
                                    if (object.baselineValues != null) {
                                        if (typeof object.baselineValues !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.baselineValues: object expected");
                                        message.baselineValues = $root.google.cloud.security.privateca.v1.X509Parameters.fromObject(object.baselineValues);
                                    }
                                    if (object.identityConstraints != null) {
                                        if (typeof object.identityConstraints !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.identityConstraints: object expected");
                                        message.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.fromObject(object.identityConstraints);
                                    }
                                    if (object.passthroughExtensions != null) {
                                        if (typeof object.passthroughExtensions !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.passthroughExtensions: object expected");
                                        message.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.fromObject(object.passthroughExtensions);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an IssuancePolicy message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy} message IssuancePolicy
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                IssuancePolicy.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.allowedKeyTypes = [];
                                    if (options.defaults) {
                                        object.maximumLifetime = null;
                                        object.allowedIssuanceModes = null;
                                        object.baselineValues = null;
                                        object.identityConstraints = null;
                                        object.passthroughExtensions = null;
                                    }
                                    if (message.allowedKeyTypes && message.allowedKeyTypes.length) {
                                        object.allowedKeyTypes = [];
                                        for (var j = 0; j < message.allowedKeyTypes.length; ++j)
                                            object.allowedKeyTypes[j] = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.toObject(message.allowedKeyTypes[j], options);
                                    }
                                    if (message.maximumLifetime != null && message.hasOwnProperty("maximumLifetime"))
                                        object.maximumLifetime = $root.google.protobuf.Duration.toObject(message.maximumLifetime, options);
                                    if (message.allowedIssuanceModes != null && message.hasOwnProperty("allowedIssuanceModes"))
                                        object.allowedIssuanceModes = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.toObject(message.allowedIssuanceModes, options);
                                    if (message.baselineValues != null && message.hasOwnProperty("baselineValues"))
                                        object.baselineValues = $root.google.cloud.security.privateca.v1.X509Parameters.toObject(message.baselineValues, options);
                                    if (message.identityConstraints != null && message.hasOwnProperty("identityConstraints"))
                                        object.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.toObject(message.identityConstraints, options);
                                    if (message.passthroughExtensions != null && message.hasOwnProperty("passthroughExtensions"))
                                        object.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.toObject(message.passthroughExtensions, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this IssuancePolicy to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                IssuancePolicy.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for IssuancePolicy
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                IssuancePolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.IssuancePolicy";
                                };
    
                                IssuancePolicy.AllowedKeyType = (function() {
    
                                    /**
                                     * Properties of an AllowedKeyType.
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                     * @interface IAllowedKeyType
                                     * @property {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType|null} [rsa] AllowedKeyType rsa
                                     * @property {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType|null} [ellipticCurve] AllowedKeyType ellipticCurve
                                     */
    
                                    /**
                                     * Constructs a new AllowedKeyType.
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                     * @classdesc Represents an AllowedKeyType.
                                     * @implements IAllowedKeyType
                                     * @constructor
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType=} [properties] Properties to set
                                     */
                                    function AllowedKeyType(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * AllowedKeyType rsa.
                                     * @member {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType|null|undefined} rsa
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @instance
                                     */
                                    AllowedKeyType.prototype.rsa = null;
    
                                    /**
                                     * AllowedKeyType ellipticCurve.
                                     * @member {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType|null|undefined} ellipticCurve
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @instance
                                     */
                                    AllowedKeyType.prototype.ellipticCurve = null;
    
                                    // OneOf field names bound to virtual getters and setters
                                    var $oneOfFields;
    
                                    /**
                                     * AllowedKeyType keyType.
                                     * @member {"rsa"|"ellipticCurve"|undefined} keyType
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @instance
                                     */
                                    Object.defineProperty(AllowedKeyType.prototype, "keyType", {
                                        get: $util.oneOfGetter($oneOfFields = ["rsa", "ellipticCurve"]),
                                        set: $util.oneOfSetter($oneOfFields)
                                    });
    
                                    /**
                                     * Creates a new AllowedKeyType instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType=} [properties] Properties to set
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType} AllowedKeyType instance
                                     */
                                    AllowedKeyType.create = function create(properties) {
                                        return new AllowedKeyType(properties);
                                    };
    
                                    /**
                                     * Encodes the specified AllowedKeyType message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType} message AllowedKeyType message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedKeyType.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.rsa != null && Object.hasOwnProperty.call(message, "rsa"))
                                            $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.encode(message.rsa, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        if (message.ellipticCurve != null && Object.hasOwnProperty.call(message, "ellipticCurve"))
                                            $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.encode(message.ellipticCurve, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified AllowedKeyType message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IAllowedKeyType} message AllowedKeyType message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedKeyType.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes an AllowedKeyType message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType} AllowedKeyType
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedKeyType.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.rsa = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            case 2: {
                                                    message.ellipticCurve = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.decode(reader, reader.uint32());
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes an AllowedKeyType message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType} AllowedKeyType
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedKeyType.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies an AllowedKeyType message.
                                     * @function verify
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    AllowedKeyType.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        var properties = {};
                                        if (message.rsa != null && message.hasOwnProperty("rsa")) {
                                            properties.keyType = 1;
                                            {
                                                var error = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.verify(message.rsa);
                                                if (error)
                                                    return "rsa." + error;
                                            }
                                        }
                                        if (message.ellipticCurve != null && message.hasOwnProperty("ellipticCurve")) {
                                            if (properties.keyType === 1)
                                                return "keyType: multiple values";
                                            properties.keyType = 1;
                                            {
                                                var error = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.verify(message.ellipticCurve);
                                                if (error)
                                                    return "ellipticCurve." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates an AllowedKeyType message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType} AllowedKeyType
                                     */
                                    AllowedKeyType.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType)
                                            return object;
                                        var message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType();
                                        if (object.rsa != null) {
                                            if (typeof object.rsa !== "object")
                                                throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.rsa: object expected");
                                            message.rsa = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.fromObject(object.rsa);
                                        }
                                        if (object.ellipticCurve != null) {
                                            if (typeof object.ellipticCurve !== "object")
                                                throw TypeError(".google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.ellipticCurve: object expected");
                                            message.ellipticCurve = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.fromObject(object.ellipticCurve);
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from an AllowedKeyType message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType} message AllowedKeyType
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    AllowedKeyType.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (message.rsa != null && message.hasOwnProperty("rsa")) {
                                            object.rsa = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.toObject(message.rsa, options);
                                            if (options.oneofs)
                                                object.keyType = "rsa";
                                        }
                                        if (message.ellipticCurve != null && message.hasOwnProperty("ellipticCurve")) {
                                            object.ellipticCurve = $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.toObject(message.ellipticCurve, options);
                                            if (options.oneofs)
                                                object.keyType = "ellipticCurve";
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this AllowedKeyType to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    AllowedKeyType.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for AllowedKeyType
                                     * @function getTypeUrl
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    AllowedKeyType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType";
                                    };
    
                                    AllowedKeyType.RsaKeyType = (function() {
    
                                        /**
                                         * Properties of a RsaKeyType.
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                         * @interface IRsaKeyType
                                         * @property {number|Long|null} [minModulusSize] RsaKeyType minModulusSize
                                         * @property {number|Long|null} [maxModulusSize] RsaKeyType maxModulusSize
                                         */
    
                                        /**
                                         * Constructs a new RsaKeyType.
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                         * @classdesc Represents a RsaKeyType.
                                         * @implements IRsaKeyType
                                         * @constructor
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType=} [properties] Properties to set
                                         */
                                        function RsaKeyType(properties) {
                                            if (properties)
                                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                    if (properties[keys[i]] != null)
                                                        this[keys[i]] = properties[keys[i]];
                                        }
    
                                        /**
                                         * RsaKeyType minModulusSize.
                                         * @member {number|Long} minModulusSize
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @instance
                                         */
                                        RsaKeyType.prototype.minModulusSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                        /**
                                         * RsaKeyType maxModulusSize.
                                         * @member {number|Long} maxModulusSize
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @instance
                                         */
                                        RsaKeyType.prototype.maxModulusSize = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                                        /**
                                         * Creates a new RsaKeyType instance using the specified properties.
                                         * @function create
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType=} [properties] Properties to set
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType} RsaKeyType instance
                                         */
                                        RsaKeyType.create = function create(properties) {
                                            return new RsaKeyType(properties);
                                        };
    
                                        /**
                                         * Encodes the specified RsaKeyType message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.verify|verify} messages.
                                         * @function encode
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType} message RsaKeyType message or plain object to encode
                                         * @param {$protobuf.Writer} [writer] Writer to encode to
                                         * @returns {$protobuf.Writer} Writer
                                         */
                                        RsaKeyType.encode = function encode(message, writer) {
                                            if (!writer)
                                                writer = $Writer.create();
                                            if (message.minModulusSize != null && Object.hasOwnProperty.call(message, "minModulusSize"))
                                                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.minModulusSize);
                                            if (message.maxModulusSize != null && Object.hasOwnProperty.call(message, "maxModulusSize"))
                                                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.maxModulusSize);
                                            return writer;
                                        };
    
                                        /**
                                         * Encodes the specified RsaKeyType message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType.verify|verify} messages.
                                         * @function encodeDelimited
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IRsaKeyType} message RsaKeyType message or plain object to encode
                                         * @param {$protobuf.Writer} [writer] Writer to encode to
                                         * @returns {$protobuf.Writer} Writer
                                         */
                                        RsaKeyType.encodeDelimited = function encodeDelimited(message, writer) {
                                            return this.encode(message, writer).ldelim();
                                        };
    
                                        /**
                                         * Decodes a RsaKeyType message from the specified reader or buffer.
                                         * @function decode
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                         * @param {number} [length] Message length if known beforehand
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType} RsaKeyType
                                         * @throws {Error} If the payload is not a reader or valid buffer
                                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                         */
                                        RsaKeyType.decode = function decode(reader, length) {
                                            if (!(reader instanceof $Reader))
                                                reader = $Reader.create(reader);
                                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType();
                                            while (reader.pos < end) {
                                                var tag = reader.uint32();
                                                switch (tag >>> 3) {
                                                case 1: {
                                                        message.minModulusSize = reader.int64();
                                                        break;
                                                    }
                                                case 2: {
                                                        message.maxModulusSize = reader.int64();
                                                        break;
                                                    }
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                                }
                                            }
                                            return message;
                                        };
    
                                        /**
                                         * Decodes a RsaKeyType message from the specified reader or buffer, length delimited.
                                         * @function decodeDelimited
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType} RsaKeyType
                                         * @throws {Error} If the payload is not a reader or valid buffer
                                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                         */
                                        RsaKeyType.decodeDelimited = function decodeDelimited(reader) {
                                            if (!(reader instanceof $Reader))
                                                reader = new $Reader(reader);
                                            return this.decode(reader, reader.uint32());
                                        };
    
                                        /**
                                         * Verifies a RsaKeyType message.
                                         * @function verify
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {Object.<string,*>} message Plain object to verify
                                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                         */
                                        RsaKeyType.verify = function verify(message) {
                                            if (typeof message !== "object" || message === null)
                                                return "object expected";
                                            if (message.minModulusSize != null && message.hasOwnProperty("minModulusSize"))
                                                if (!$util.isInteger(message.minModulusSize) && !(message.minModulusSize && $util.isInteger(message.minModulusSize.low) && $util.isInteger(message.minModulusSize.high)))
                                                    return "minModulusSize: integer|Long expected";
                                            if (message.maxModulusSize != null && message.hasOwnProperty("maxModulusSize"))
                                                if (!$util.isInteger(message.maxModulusSize) && !(message.maxModulusSize && $util.isInteger(message.maxModulusSize.low) && $util.isInteger(message.maxModulusSize.high)))
                                                    return "maxModulusSize: integer|Long expected";
                                            return null;
                                        };
    
                                        /**
                                         * Creates a RsaKeyType message from a plain object. Also converts values to their respective internal types.
                                         * @function fromObject
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {Object.<string,*>} object Plain object
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType} RsaKeyType
                                         */
                                        RsaKeyType.fromObject = function fromObject(object) {
                                            if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType)
                                                return object;
                                            var message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType();
                                            if (object.minModulusSize != null)
                                                if ($util.Long)
                                                    (message.minModulusSize = $util.Long.fromValue(object.minModulusSize)).unsigned = false;
                                                else if (typeof object.minModulusSize === "string")
                                                    message.minModulusSize = parseInt(object.minModulusSize, 10);
                                                else if (typeof object.minModulusSize === "number")
                                                    message.minModulusSize = object.minModulusSize;
                                                else if (typeof object.minModulusSize === "object")
                                                    message.minModulusSize = new $util.LongBits(object.minModulusSize.low >>> 0, object.minModulusSize.high >>> 0).toNumber();
                                            if (object.maxModulusSize != null)
                                                if ($util.Long)
                                                    (message.maxModulusSize = $util.Long.fromValue(object.maxModulusSize)).unsigned = false;
                                                else if (typeof object.maxModulusSize === "string")
                                                    message.maxModulusSize = parseInt(object.maxModulusSize, 10);
                                                else if (typeof object.maxModulusSize === "number")
                                                    message.maxModulusSize = object.maxModulusSize;
                                                else if (typeof object.maxModulusSize === "object")
                                                    message.maxModulusSize = new $util.LongBits(object.maxModulusSize.low >>> 0, object.maxModulusSize.high >>> 0).toNumber();
                                            return message;
                                        };
    
                                        /**
                                         * Creates a plain object from a RsaKeyType message. Also converts values to other types if specified.
                                         * @function toObject
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType} message RsaKeyType
                                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                                         * @returns {Object.<string,*>} Plain object
                                         */
                                        RsaKeyType.toObject = function toObject(message, options) {
                                            if (!options)
                                                options = {};
                                            var object = {};
                                            if (options.defaults) {
                                                if ($util.Long) {
                                                    var long = new $util.Long(0, 0, false);
                                                    object.minModulusSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                                } else
                                                    object.minModulusSize = options.longs === String ? "0" : 0;
                                                if ($util.Long) {
                                                    var long = new $util.Long(0, 0, false);
                                                    object.maxModulusSize = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                                } else
                                                    object.maxModulusSize = options.longs === String ? "0" : 0;
                                            }
                                            if (message.minModulusSize != null && message.hasOwnProperty("minModulusSize"))
                                                if (typeof message.minModulusSize === "number")
                                                    object.minModulusSize = options.longs === String ? String(message.minModulusSize) : message.minModulusSize;
                                                else
                                                    object.minModulusSize = options.longs === String ? $util.Long.prototype.toString.call(message.minModulusSize) : options.longs === Number ? new $util.LongBits(message.minModulusSize.low >>> 0, message.minModulusSize.high >>> 0).toNumber() : message.minModulusSize;
                                            if (message.maxModulusSize != null && message.hasOwnProperty("maxModulusSize"))
                                                if (typeof message.maxModulusSize === "number")
                                                    object.maxModulusSize = options.longs === String ? String(message.maxModulusSize) : message.maxModulusSize;
                                                else
                                                    object.maxModulusSize = options.longs === String ? $util.Long.prototype.toString.call(message.maxModulusSize) : options.longs === Number ? new $util.LongBits(message.maxModulusSize.low >>> 0, message.maxModulusSize.high >>> 0).toNumber() : message.maxModulusSize;
                                            return object;
                                        };
    
                                        /**
                                         * Converts this RsaKeyType to JSON.
                                         * @function toJSON
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @instance
                                         * @returns {Object.<string,*>} JSON object
                                         */
                                        RsaKeyType.prototype.toJSON = function toJSON() {
                                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                        };
    
                                        /**
                                         * Gets the default type url for RsaKeyType
                                         * @function getTypeUrl
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType
                                         * @static
                                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                         * @returns {string} The default type url
                                         */
                                        RsaKeyType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                            if (typeUrlPrefix === undefined) {
                                                typeUrlPrefix = "type.googleapis.com";
                                            }
                                            return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.RsaKeyType";
                                        };
    
                                        return RsaKeyType;
                                    })();
    
                                    AllowedKeyType.EcKeyType = (function() {
    
                                        /**
                                         * Properties of an EcKeyType.
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                         * @interface IEcKeyType
                                         * @property {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm|null} [signatureAlgorithm] EcKeyType signatureAlgorithm
                                         */
    
                                        /**
                                         * Constructs a new EcKeyType.
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType
                                         * @classdesc Represents an EcKeyType.
                                         * @implements IEcKeyType
                                         * @constructor
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType=} [properties] Properties to set
                                         */
                                        function EcKeyType(properties) {
                                            if (properties)
                                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                    if (properties[keys[i]] != null)
                                                        this[keys[i]] = properties[keys[i]];
                                        }
    
                                        /**
                                         * EcKeyType signatureAlgorithm.
                                         * @member {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm} signatureAlgorithm
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @instance
                                         */
                                        EcKeyType.prototype.signatureAlgorithm = 0;
    
                                        /**
                                         * Creates a new EcKeyType instance using the specified properties.
                                         * @function create
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType=} [properties] Properties to set
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType} EcKeyType instance
                                         */
                                        EcKeyType.create = function create(properties) {
                                            return new EcKeyType(properties);
                                        };
    
                                        /**
                                         * Encodes the specified EcKeyType message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.verify|verify} messages.
                                         * @function encode
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType} message EcKeyType message or plain object to encode
                                         * @param {$protobuf.Writer} [writer] Writer to encode to
                                         * @returns {$protobuf.Writer} Writer
                                         */
                                        EcKeyType.encode = function encode(message, writer) {
                                            if (!writer)
                                                writer = $Writer.create();
                                            if (message.signatureAlgorithm != null && Object.hasOwnProperty.call(message, "signatureAlgorithm"))
                                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.signatureAlgorithm);
                                            return writer;
                                        };
    
                                        /**
                                         * Encodes the specified EcKeyType message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.verify|verify} messages.
                                         * @function encodeDelimited
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.IEcKeyType} message EcKeyType message or plain object to encode
                                         * @param {$protobuf.Writer} [writer] Writer to encode to
                                         * @returns {$protobuf.Writer} Writer
                                         */
                                        EcKeyType.encodeDelimited = function encodeDelimited(message, writer) {
                                            return this.encode(message, writer).ldelim();
                                        };
    
                                        /**
                                         * Decodes an EcKeyType message from the specified reader or buffer.
                                         * @function decode
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                         * @param {number} [length] Message length if known beforehand
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType} EcKeyType
                                         * @throws {Error} If the payload is not a reader or valid buffer
                                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                         */
                                        EcKeyType.decode = function decode(reader, length) {
                                            if (!(reader instanceof $Reader))
                                                reader = $Reader.create(reader);
                                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType();
                                            while (reader.pos < end) {
                                                var tag = reader.uint32();
                                                switch (tag >>> 3) {
                                                case 1: {
                                                        message.signatureAlgorithm = reader.int32();
                                                        break;
                                                    }
                                                default:
                                                    reader.skipType(tag & 7);
                                                    break;
                                                }
                                            }
                                            return message;
                                        };
    
                                        /**
                                         * Decodes an EcKeyType message from the specified reader or buffer, length delimited.
                                         * @function decodeDelimited
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType} EcKeyType
                                         * @throws {Error} If the payload is not a reader or valid buffer
                                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                         */
                                        EcKeyType.decodeDelimited = function decodeDelimited(reader) {
                                            if (!(reader instanceof $Reader))
                                                reader = new $Reader(reader);
                                            return this.decode(reader, reader.uint32());
                                        };
    
                                        /**
                                         * Verifies an EcKeyType message.
                                         * @function verify
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {Object.<string,*>} message Plain object to verify
                                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                         */
                                        EcKeyType.verify = function verify(message) {
                                            if (typeof message !== "object" || message === null)
                                                return "object expected";
                                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                                switch (message.signatureAlgorithm) {
                                                default:
                                                    return "signatureAlgorithm: enum value expected";
                                                case 0:
                                                case 1:
                                                case 2:
                                                case 3:
                                                    break;
                                                }
                                            return null;
                                        };
    
                                        /**
                                         * Creates an EcKeyType message from a plain object. Also converts values to their respective internal types.
                                         * @function fromObject
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {Object.<string,*>} object Plain object
                                         * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType} EcKeyType
                                         */
                                        EcKeyType.fromObject = function fromObject(object) {
                                            if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType)
                                                return object;
                                            var message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType();
                                            switch (object.signatureAlgorithm) {
                                            default:
                                                if (typeof object.signatureAlgorithm === "number") {
                                                    message.signatureAlgorithm = object.signatureAlgorithm;
                                                    break;
                                                }
                                                break;
                                            case "EC_SIGNATURE_ALGORITHM_UNSPECIFIED":
                                            case 0:
                                                message.signatureAlgorithm = 0;
                                                break;
                                            case "ECDSA_P256":
                                            case 1:
                                                message.signatureAlgorithm = 1;
                                                break;
                                            case "ECDSA_P384":
                                            case 2:
                                                message.signatureAlgorithm = 2;
                                                break;
                                            case "EDDSA_25519":
                                            case 3:
                                                message.signatureAlgorithm = 3;
                                                break;
                                            }
                                            return message;
                                        };
    
                                        /**
                                         * Creates a plain object from an EcKeyType message. Also converts values to other types if specified.
                                         * @function toObject
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType} message EcKeyType
                                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                                         * @returns {Object.<string,*>} Plain object
                                         */
                                        EcKeyType.toObject = function toObject(message, options) {
                                            if (!options)
                                                options = {};
                                            var object = {};
                                            if (options.defaults)
                                                object.signatureAlgorithm = options.enums === String ? "EC_SIGNATURE_ALGORITHM_UNSPECIFIED" : 0;
                                            if (message.signatureAlgorithm != null && message.hasOwnProperty("signatureAlgorithm"))
                                                object.signatureAlgorithm = options.enums === String ? $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm[message.signatureAlgorithm] === undefined ? message.signatureAlgorithm : $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm[message.signatureAlgorithm] : message.signatureAlgorithm;
                                            return object;
                                        };
    
                                        /**
                                         * Converts this EcKeyType to JSON.
                                         * @function toJSON
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @instance
                                         * @returns {Object.<string,*>} JSON object
                                         */
                                        EcKeyType.prototype.toJSON = function toJSON() {
                                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                        };
    
                                        /**
                                         * Gets the default type url for EcKeyType
                                         * @function getTypeUrl
                                         * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType
                                         * @static
                                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                         * @returns {string} The default type url
                                         */
                                        EcKeyType.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                            if (typeUrlPrefix === undefined) {
                                                typeUrlPrefix = "type.googleapis.com";
                                            }
                                            return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType";
                                        };
    
                                        /**
                                         * EcSignatureAlgorithm enum.
                                         * @name google.cloud.security.privateca.v1.CaPool.IssuancePolicy.AllowedKeyType.EcKeyType.EcSignatureAlgorithm
                                         * @enum {number}
                                         * @property {number} EC_SIGNATURE_ALGORITHM_UNSPECIFIED=0 EC_SIGNATURE_ALGORITHM_UNSPECIFIED value
                                         * @property {number} ECDSA_P256=1 ECDSA_P256 value
                                         * @property {number} ECDSA_P384=2 ECDSA_P384 value
                                         * @property {number} EDDSA_25519=3 EDDSA_25519 value
                                         */
                                        EcKeyType.EcSignatureAlgorithm = (function() {
                                            var valuesById = {}, values = Object.create(valuesById);
                                            values[valuesById[0] = "EC_SIGNATURE_ALGORITHM_UNSPECIFIED"] = 0;
                                            values[valuesById[1] = "ECDSA_P256"] = 1;
                                            values[valuesById[2] = "ECDSA_P384"] = 2;
                                            values[valuesById[3] = "EDDSA_25519"] = 3;
                                            return values;
                                        })();
    
                                        return EcKeyType;
                                    })();
    
                                    return AllowedKeyType;
                                })();
    
                                IssuancePolicy.IssuanceModes = (function() {
    
                                    /**
                                     * Properties of an IssuanceModes.
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                     * @interface IIssuanceModes
                                     * @property {boolean|null} [allowCsrBasedIssuance] IssuanceModes allowCsrBasedIssuance
                                     * @property {boolean|null} [allowConfigBasedIssuance] IssuanceModes allowConfigBasedIssuance
                                     */
    
                                    /**
                                     * Constructs a new IssuanceModes.
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy
                                     * @classdesc Represents an IssuanceModes.
                                     * @implements IIssuanceModes
                                     * @constructor
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes=} [properties] Properties to set
                                     */
                                    function IssuanceModes(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * IssuanceModes allowCsrBasedIssuance.
                                     * @member {boolean} allowCsrBasedIssuance
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @instance
                                     */
                                    IssuanceModes.prototype.allowCsrBasedIssuance = false;
    
                                    /**
                                     * IssuanceModes allowConfigBasedIssuance.
                                     * @member {boolean} allowConfigBasedIssuance
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @instance
                                     */
                                    IssuanceModes.prototype.allowConfigBasedIssuance = false;
    
                                    /**
                                     * Creates a new IssuanceModes instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes=} [properties] Properties to set
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes} IssuanceModes instance
                                     */
                                    IssuanceModes.create = function create(properties) {
                                        return new IssuanceModes(properties);
                                    };
    
                                    /**
                                     * Encodes the specified IssuanceModes message. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes} message IssuanceModes message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    IssuanceModes.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.allowCsrBasedIssuance != null && Object.hasOwnProperty.call(message, "allowCsrBasedIssuance"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.allowCsrBasedIssuance);
                                        if (message.allowConfigBasedIssuance != null && Object.hasOwnProperty.call(message, "allowConfigBasedIssuance"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowConfigBasedIssuance);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified IssuanceModes message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IIssuanceModes} message IssuanceModes message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    IssuanceModes.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes an IssuanceModes message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes} IssuanceModes
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    IssuanceModes.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.allowCsrBasedIssuance = reader.bool();
                                                    break;
                                                }
                                            case 2: {
                                                    message.allowConfigBasedIssuance = reader.bool();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes an IssuanceModes message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes} IssuanceModes
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    IssuanceModes.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies an IssuanceModes message.
                                     * @function verify
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    IssuanceModes.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.allowCsrBasedIssuance != null && message.hasOwnProperty("allowCsrBasedIssuance"))
                                            if (typeof message.allowCsrBasedIssuance !== "boolean")
                                                return "allowCsrBasedIssuance: boolean expected";
                                        if (message.allowConfigBasedIssuance != null && message.hasOwnProperty("allowConfigBasedIssuance"))
                                            if (typeof message.allowConfigBasedIssuance !== "boolean")
                                                return "allowConfigBasedIssuance: boolean expected";
                                        return null;
                                    };
    
                                    /**
                                     * Creates an IssuanceModes message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes} IssuanceModes
                                     */
                                    IssuanceModes.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes)
                                            return object;
                                        var message = new $root.google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes();
                                        if (object.allowCsrBasedIssuance != null)
                                            message.allowCsrBasedIssuance = Boolean(object.allowCsrBasedIssuance);
                                        if (object.allowConfigBasedIssuance != null)
                                            message.allowConfigBasedIssuance = Boolean(object.allowConfigBasedIssuance);
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from an IssuanceModes message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes} message IssuanceModes
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    IssuanceModes.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.allowCsrBasedIssuance = false;
                                            object.allowConfigBasedIssuance = false;
                                        }
                                        if (message.allowCsrBasedIssuance != null && message.hasOwnProperty("allowCsrBasedIssuance"))
                                            object.allowCsrBasedIssuance = message.allowCsrBasedIssuance;
                                        if (message.allowConfigBasedIssuance != null && message.hasOwnProperty("allowConfigBasedIssuance"))
                                            object.allowConfigBasedIssuance = message.allowConfigBasedIssuance;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this IssuanceModes to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    IssuanceModes.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for IssuanceModes
                                     * @function getTypeUrl
                                     * @memberof google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    IssuanceModes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.security.privateca.v1.CaPool.IssuancePolicy.IssuanceModes";
                                    };
    
                                    return IssuanceModes;
                                })();
    
                                return IssuancePolicy;
                            })();
    
                            return CaPool;
                        })();
    
                        v1.CertificateRevocationList = (function() {
    
                            /**
                             * Properties of a CertificateRevocationList.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateRevocationList
                             * @property {string|null} [name] CertificateRevocationList name
                             * @property {number|Long|null} [sequenceNumber] CertificateRevocationList sequenceNumber
                             * @property {Array.<google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate>|null} [revokedCertificates] CertificateRevocationList revokedCertificates
                             * @property {string|null} [pemCrl] CertificateRevocationList pemCrl
                             * @property {string|null} [accessUrl] CertificateRevocationList accessUrl
                             * @property {google.cloud.security.privateca.v1.CertificateRevocationList.State|null} [state] CertificateRevocationList state
                             * @property {google.protobuf.ITimestamp|null} [createTime] CertificateRevocationList createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] CertificateRevocationList updateTime
                             * @property {string|null} [revisionId] CertificateRevocationList revisionId
                             * @property {Object.<string,string>|null} [labels] CertificateRevocationList labels
                             */
    
                            /**
                             * Constructs a new CertificateRevocationList.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateRevocationList.
                             * @implements ICertificateRevocationList
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateRevocationList=} [properties] Properties to set
                             */
                            function CertificateRevocationList(properties) {
                                this.revokedCertificates = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateRevocationList name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.name = "";
    
                            /**
                             * CertificateRevocationList sequenceNumber.
                             * @member {number|Long} sequenceNumber
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.sequenceNumber = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * CertificateRevocationList revokedCertificates.
                             * @member {Array.<google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate>} revokedCertificates
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.revokedCertificates = $util.emptyArray;
    
                            /**
                             * CertificateRevocationList pemCrl.
                             * @member {string} pemCrl
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.pemCrl = "";
    
                            /**
                             * CertificateRevocationList accessUrl.
                             * @member {string} accessUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.accessUrl = "";
    
                            /**
                             * CertificateRevocationList state.
                             * @member {google.cloud.security.privateca.v1.CertificateRevocationList.State} state
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.state = 0;
    
                            /**
                             * CertificateRevocationList createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.createTime = null;
    
                            /**
                             * CertificateRevocationList updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.updateTime = null;
    
                            /**
                             * CertificateRevocationList revisionId.
                             * @member {string} revisionId
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.revisionId = "";
    
                            /**
                             * CertificateRevocationList labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CertificateRevocationList instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateRevocationList=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateRevocationList} CertificateRevocationList instance
                             */
                            CertificateRevocationList.create = function create(properties) {
                                return new CertificateRevocationList(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateRevocationList message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateRevocationList.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateRevocationList} message CertificateRevocationList message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateRevocationList.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.sequenceNumber != null && Object.hasOwnProperty.call(message, "sequenceNumber"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.sequenceNumber);
                                if (message.revokedCertificates != null && message.revokedCertificates.length)
                                    for (var i = 0; i < message.revokedCertificates.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.encode(message.revokedCertificates[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.pemCrl != null && Object.hasOwnProperty.call(message, "pemCrl"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.pemCrl);
                                if (message.accessUrl != null && Object.hasOwnProperty.call(message, "accessUrl"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.accessUrl);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.revisionId != null && Object.hasOwnProperty.call(message, "revisionId"))
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.revisionId);
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 10, wireType 2 =*/82).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateRevocationList message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateRevocationList.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateRevocationList} message CertificateRevocationList message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateRevocationList.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateRevocationList message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateRevocationList} CertificateRevocationList
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateRevocationList.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateRevocationList(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.sequenceNumber = reader.int64();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.revokedCertificates && message.revokedCertificates.length))
                                                message.revokedCertificates = [];
                                            message.revokedCertificates.push($root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            message.pemCrl = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.accessUrl = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 7: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 9: {
                                            message.revisionId = reader.string();
                                            break;
                                        }
                                    case 10: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateRevocationList message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateRevocationList} CertificateRevocationList
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateRevocationList.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateRevocationList message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateRevocationList.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.sequenceNumber != null && message.hasOwnProperty("sequenceNumber"))
                                    if (!$util.isInteger(message.sequenceNumber) && !(message.sequenceNumber && $util.isInteger(message.sequenceNumber.low) && $util.isInteger(message.sequenceNumber.high)))
                                        return "sequenceNumber: integer|Long expected";
                                if (message.revokedCertificates != null && message.hasOwnProperty("revokedCertificates")) {
                                    if (!Array.isArray(message.revokedCertificates))
                                        return "revokedCertificates: array expected";
                                    for (var i = 0; i < message.revokedCertificates.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.verify(message.revokedCertificates[i]);
                                        if (error)
                                            return "revokedCertificates." + error;
                                    }
                                }
                                if (message.pemCrl != null && message.hasOwnProperty("pemCrl"))
                                    if (!$util.isString(message.pemCrl))
                                        return "pemCrl: string expected";
                                if (message.accessUrl != null && message.hasOwnProperty("accessUrl"))
                                    if (!$util.isString(message.accessUrl))
                                        return "accessUrl: string expected";
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.revisionId != null && message.hasOwnProperty("revisionId"))
                                    if (!$util.isString(message.revisionId))
                                        return "revisionId: string expected";
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateRevocationList message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateRevocationList} CertificateRevocationList
                             */
                            CertificateRevocationList.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateRevocationList)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateRevocationList();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.sequenceNumber != null)
                                    if ($util.Long)
                                        (message.sequenceNumber = $util.Long.fromValue(object.sequenceNumber)).unsigned = false;
                                    else if (typeof object.sequenceNumber === "string")
                                        message.sequenceNumber = parseInt(object.sequenceNumber, 10);
                                    else if (typeof object.sequenceNumber === "number")
                                        message.sequenceNumber = object.sequenceNumber;
                                    else if (typeof object.sequenceNumber === "object")
                                        message.sequenceNumber = new $util.LongBits(object.sequenceNumber.low >>> 0, object.sequenceNumber.high >>> 0).toNumber();
                                if (object.revokedCertificates) {
                                    if (!Array.isArray(object.revokedCertificates))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateRevocationList.revokedCertificates: array expected");
                                    message.revokedCertificates = [];
                                    for (var i = 0; i < object.revokedCertificates.length; ++i) {
                                        if (typeof object.revokedCertificates[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateRevocationList.revokedCertificates: object expected");
                                        message.revokedCertificates[i] = $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.fromObject(object.revokedCertificates[i]);
                                    }
                                }
                                if (object.pemCrl != null)
                                    message.pemCrl = String(object.pemCrl);
                                if (object.accessUrl != null)
                                    message.accessUrl = String(object.accessUrl);
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "ACTIVE":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "SUPERSEDED":
                                case 2:
                                    message.state = 2;
                                    break;
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateRevocationList.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateRevocationList.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.revisionId != null)
                                    message.revisionId = String(object.revisionId);
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateRevocationList.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateRevocationList message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateRevocationList} message CertificateRevocationList
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateRevocationList.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.revokedCertificates = [];
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.sequenceNumber = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.sequenceNumber = options.longs === String ? "0" : 0;
                                    object.pemCrl = "";
                                    object.accessUrl = "";
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.createTime = null;
                                    object.updateTime = null;
                                    object.revisionId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.sequenceNumber != null && message.hasOwnProperty("sequenceNumber"))
                                    if (typeof message.sequenceNumber === "number")
                                        object.sequenceNumber = options.longs === String ? String(message.sequenceNumber) : message.sequenceNumber;
                                    else
                                        object.sequenceNumber = options.longs === String ? $util.Long.prototype.toString.call(message.sequenceNumber) : options.longs === Number ? new $util.LongBits(message.sequenceNumber.low >>> 0, message.sequenceNumber.high >>> 0).toNumber() : message.sequenceNumber;
                                if (message.revokedCertificates && message.revokedCertificates.length) {
                                    object.revokedCertificates = [];
                                    for (var j = 0; j < message.revokedCertificates.length; ++j)
                                        object.revokedCertificates[j] = $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.toObject(message.revokedCertificates[j], options);
                                }
                                if (message.pemCrl != null && message.hasOwnProperty("pemCrl"))
                                    object.pemCrl = message.pemCrl;
                                if (message.accessUrl != null && message.hasOwnProperty("accessUrl"))
                                    object.accessUrl = message.accessUrl;
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.security.privateca.v1.CertificateRevocationList.State[message.state] === undefined ? message.state : $root.google.cloud.security.privateca.v1.CertificateRevocationList.State[message.state] : message.state;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                if (message.revisionId != null && message.hasOwnProperty("revisionId"))
                                    object.revisionId = message.revisionId;
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateRevocationList to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateRevocationList.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateRevocationList
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateRevocationList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateRevocationList";
                            };
    
                            CertificateRevocationList.RevokedCertificate = (function() {
    
                                /**
                                 * Properties of a RevokedCertificate.
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                                 * @interface IRevokedCertificate
                                 * @property {string|null} [certificate] RevokedCertificate certificate
                                 * @property {string|null} [hexSerialNumber] RevokedCertificate hexSerialNumber
                                 * @property {google.cloud.security.privateca.v1.RevocationReason|null} [revocationReason] RevokedCertificate revocationReason
                                 */
    
                                /**
                                 * Constructs a new RevokedCertificate.
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList
                                 * @classdesc Represents a RevokedCertificate.
                                 * @implements IRevokedCertificate
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate=} [properties] Properties to set
                                 */
                                function RevokedCertificate(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * RevokedCertificate certificate.
                                 * @member {string} certificate
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.certificate = "";
    
                                /**
                                 * RevokedCertificate hexSerialNumber.
                                 * @member {string} hexSerialNumber
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.hexSerialNumber = "";
    
                                /**
                                 * RevokedCertificate revocationReason.
                                 * @member {google.cloud.security.privateca.v1.RevocationReason} revocationReason
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.revocationReason = 0;
    
                                /**
                                 * Creates a new RevokedCertificate instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate} RevokedCertificate instance
                                 */
                                RevokedCertificate.create = function create(properties) {
                                    return new RevokedCertificate(properties);
                                };
    
                                /**
                                 * Encodes the specified RevokedCertificate message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate} message RevokedCertificate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevokedCertificate.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.certificate);
                                    if (message.hexSerialNumber != null && Object.hasOwnProperty.call(message, "hexSerialNumber"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.hexSerialNumber);
                                    if (message.revocationReason != null && Object.hasOwnProperty.call(message, "revocationReason"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.revocationReason);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified RevokedCertificate message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateRevocationList.IRevokedCertificate} message RevokedCertificate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevokedCertificate.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a RevokedCertificate message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevokedCertificate.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.certificate = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.hexSerialNumber = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.revocationReason = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a RevokedCertificate message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevokedCertificate.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a RevokedCertificate message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                RevokedCertificate.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.certificate != null && message.hasOwnProperty("certificate"))
                                        if (!$util.isString(message.certificate))
                                            return "certificate: string expected";
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        if (!$util.isString(message.hexSerialNumber))
                                            return "hexSerialNumber: string expected";
                                    if (message.revocationReason != null && message.hasOwnProperty("revocationReason"))
                                        switch (message.revocationReason) {
                                        default:
                                            return "revocationReason: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                        case 8:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a RevokedCertificate message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 */
                                RevokedCertificate.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate();
                                    if (object.certificate != null)
                                        message.certificate = String(object.certificate);
                                    if (object.hexSerialNumber != null)
                                        message.hexSerialNumber = String(object.hexSerialNumber);
                                    switch (object.revocationReason) {
                                    default:
                                        if (typeof object.revocationReason === "number") {
                                            message.revocationReason = object.revocationReason;
                                            break;
                                        }
                                        break;
                                    case "REVOCATION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.revocationReason = 0;
                                        break;
                                    case "KEY_COMPROMISE":
                                    case 1:
                                        message.revocationReason = 1;
                                        break;
                                    case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                    case 2:
                                        message.revocationReason = 2;
                                        break;
                                    case "AFFILIATION_CHANGED":
                                    case 3:
                                        message.revocationReason = 3;
                                        break;
                                    case "SUPERSEDED":
                                    case 4:
                                        message.revocationReason = 4;
                                        break;
                                    case "CESSATION_OF_OPERATION":
                                    case 5:
                                        message.revocationReason = 5;
                                        break;
                                    case "CERTIFICATE_HOLD":
                                    case 6:
                                        message.revocationReason = 6;
                                        break;
                                    case "PRIVILEGE_WITHDRAWN":
                                    case 7:
                                        message.revocationReason = 7;
                                        break;
                                    case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                    case 8:
                                        message.revocationReason = 8;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a RevokedCertificate message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate} message RevokedCertificate
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                RevokedCertificate.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.certificate = "";
                                        object.hexSerialNumber = "";
                                        object.revocationReason = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                    }
                                    if (message.certificate != null && message.hasOwnProperty("certificate"))
                                        object.certificate = message.certificate;
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        object.hexSerialNumber = message.hexSerialNumber;
                                    if (message.revocationReason != null && message.hasOwnProperty("revocationReason"))
                                        object.revocationReason = options.enums === String ? $root.google.cloud.security.privateca.v1.RevocationReason[message.revocationReason] === undefined ? message.revocationReason : $root.google.cloud.security.privateca.v1.RevocationReason[message.revocationReason] : message.revocationReason;
                                    return object;
                                };
    
                                /**
                                 * Converts this RevokedCertificate to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                RevokedCertificate.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for RevokedCertificate
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                RevokedCertificate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateRevocationList.RevokedCertificate";
                                };
    
                                return RevokedCertificate;
                            })();
    
                            /**
                             * State enum.
                             * @name google.cloud.security.privateca.v1.CertificateRevocationList.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} ACTIVE=1 ACTIVE value
                             * @property {number} SUPERSEDED=2 SUPERSEDED value
                             */
                            CertificateRevocationList.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ACTIVE"] = 1;
                                values[valuesById[2] = "SUPERSEDED"] = 2;
                                return values;
                            })();
    
                            return CertificateRevocationList;
                        })();
    
                        v1.Certificate = (function() {
    
                            /**
                             * Properties of a Certificate.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificate
                             * @property {string|null} [name] Certificate name
                             * @property {string|null} [pemCsr] Certificate pemCsr
                             * @property {google.cloud.security.privateca.v1.ICertificateConfig|null} [config] Certificate config
                             * @property {string|null} [issuerCertificateAuthority] Certificate issuerCertificateAuthority
                             * @property {google.protobuf.IDuration|null} [lifetime] Certificate lifetime
                             * @property {string|null} [certificateTemplate] Certificate certificateTemplate
                             * @property {google.cloud.security.privateca.v1.SubjectRequestMode|null} [subjectMode] Certificate subjectMode
                             * @property {google.cloud.security.privateca.v1.Certificate.IRevocationDetails|null} [revocationDetails] Certificate revocationDetails
                             * @property {string|null} [pemCertificate] Certificate pemCertificate
                             * @property {google.cloud.security.privateca.v1.ICertificateDescription|null} [certificateDescription] Certificate certificateDescription
                             * @property {Array.<string>|null} [pemCertificateChain] Certificate pemCertificateChain
                             * @property {google.protobuf.ITimestamp|null} [createTime] Certificate createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] Certificate updateTime
                             * @property {Object.<string,string>|null} [labels] Certificate labels
                             */
    
                            /**
                             * Constructs a new Certificate.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a Certificate.
                             * @implements ICertificate
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificate=} [properties] Properties to set
                             */
                            function Certificate(properties) {
                                this.pemCertificateChain = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Certificate name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.name = "";
    
                            /**
                             * Certificate pemCsr.
                             * @member {string|null|undefined} pemCsr
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCsr = null;
    
                            /**
                             * Certificate config.
                             * @member {google.cloud.security.privateca.v1.ICertificateConfig|null|undefined} config
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.config = null;
    
                            /**
                             * Certificate issuerCertificateAuthority.
                             * @member {string} issuerCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.issuerCertificateAuthority = "";
    
                            /**
                             * Certificate lifetime.
                             * @member {google.protobuf.IDuration|null|undefined} lifetime
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.lifetime = null;
    
                            /**
                             * Certificate certificateTemplate.
                             * @member {string} certificateTemplate
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.certificateTemplate = "";
    
                            /**
                             * Certificate subjectMode.
                             * @member {google.cloud.security.privateca.v1.SubjectRequestMode} subjectMode
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.subjectMode = 0;
    
                            /**
                             * Certificate revocationDetails.
                             * @member {google.cloud.security.privateca.v1.Certificate.IRevocationDetails|null|undefined} revocationDetails
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.revocationDetails = null;
    
                            /**
                             * Certificate pemCertificate.
                             * @member {string} pemCertificate
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCertificate = "";
    
                            /**
                             * Certificate certificateDescription.
                             * @member {google.cloud.security.privateca.v1.ICertificateDescription|null|undefined} certificateDescription
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.certificateDescription = null;
    
                            /**
                             * Certificate pemCertificateChain.
                             * @member {Array.<string>} pemCertificateChain
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCertificateChain = $util.emptyArray;
    
                            /**
                             * Certificate createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.createTime = null;
    
                            /**
                             * Certificate updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.updateTime = null;
    
                            /**
                             * Certificate labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Certificate.prototype.labels = $util.emptyObject;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Certificate certificateConfig.
                             * @member {"pemCsr"|"config"|undefined} certificateConfig
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             */
                            Object.defineProperty(Certificate.prototype, "certificateConfig", {
                                get: $util.oneOfGetter($oneOfFields = ["pemCsr", "config"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Certificate instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificate=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.Certificate} Certificate instance
                             */
                            Certificate.create = function create(properties) {
                                return new Certificate(properties);
                            };
    
                            /**
                             * Encodes the specified Certificate message. Does not implicitly {@link google.cloud.security.privateca.v1.Certificate.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificate} message Certificate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Certificate.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.pemCsr != null && Object.hasOwnProperty.call(message, "pemCsr"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.pemCsr);
                                if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                    $root.google.cloud.security.privateca.v1.CertificateConfig.encode(message.config, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.issuerCertificateAuthority != null && Object.hasOwnProperty.call(message, "issuerCertificateAuthority"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.issuerCertificateAuthority);
                                if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                    $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.certificateTemplate != null && Object.hasOwnProperty.call(message, "certificateTemplate"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.certificateTemplate);
                                if (message.subjectMode != null && Object.hasOwnProperty.call(message, "subjectMode"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.subjectMode);
                                if (message.revocationDetails != null && Object.hasOwnProperty.call(message, "revocationDetails"))
                                    $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails.encode(message.revocationDetails, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.pemCertificate != null && Object.hasOwnProperty.call(message, "pemCertificate"))
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.pemCertificate);
                                if (message.certificateDescription != null && Object.hasOwnProperty.call(message, "certificateDescription"))
                                    $root.google.cloud.security.privateca.v1.CertificateDescription.encode(message.certificateDescription, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.pemCertificateChain != null && message.pemCertificateChain.length)
                                    for (var i = 0; i < message.pemCertificateChain.length; ++i)
                                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.pemCertificateChain[i]);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 14, wireType 2 =*/114).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Certificate message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.Certificate.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificate} message Certificate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Certificate.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Certificate message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.Certificate} Certificate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Certificate.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.Certificate(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemCsr = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.config = $root.google.cloud.security.privateca.v1.CertificateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.issuerCertificateAuthority = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.certificateTemplate = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.subjectMode = reader.int32();
                                            break;
                                        }
                                    case 8: {
                                            message.revocationDetails = $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 9: {
                                            message.pemCertificate = reader.string();
                                            break;
                                        }
                                    case 10: {
                                            message.certificateDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 11: {
                                            if (!(message.pemCertificateChain && message.pemCertificateChain.length))
                                                message.pemCertificateChain = [];
                                            message.pemCertificateChain.push(reader.string());
                                            break;
                                        }
                                    case 12: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 13: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 14: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Certificate message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.Certificate} Certificate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Certificate.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Certificate message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Certificate.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr")) {
                                    properties.certificateConfig = 1;
                                    if (!$util.isString(message.pemCsr))
                                        return "pemCsr: string expected";
                                }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    if (properties.certificateConfig === 1)
                                        return "certificateConfig: multiple values";
                                    properties.certificateConfig = 1;
                                    {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateConfig.verify(message.config);
                                        if (error)
                                            return "config." + error;
                                    }
                                }
                                if (message.issuerCertificateAuthority != null && message.hasOwnProperty("issuerCertificateAuthority"))
                                    if (!$util.isString(message.issuerCertificateAuthority))
                                        return "issuerCertificateAuthority: string expected";
                                if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                    var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                    if (error)
                                        return "lifetime." + error;
                                }
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate"))
                                    if (!$util.isString(message.certificateTemplate))
                                        return "certificateTemplate: string expected";
                                if (message.subjectMode != null && message.hasOwnProperty("subjectMode"))
                                    switch (message.subjectMode) {
                                    default:
                                        return "subjectMode: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.revocationDetails != null && message.hasOwnProperty("revocationDetails")) {
                                    var error = $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails.verify(message.revocationDetails);
                                    if (error)
                                        return "revocationDetails." + error;
                                }
                                if (message.pemCertificate != null && message.hasOwnProperty("pemCertificate"))
                                    if (!$util.isString(message.pemCertificate))
                                        return "pemCertificate: string expected";
                                if (message.certificateDescription != null && message.hasOwnProperty("certificateDescription")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateDescription.verify(message.certificateDescription);
                                    if (error)
                                        return "certificateDescription." + error;
                                }
                                if (message.pemCertificateChain != null && message.hasOwnProperty("pemCertificateChain")) {
                                    if (!Array.isArray(message.pemCertificateChain))
                                        return "pemCertificateChain: array expected";
                                    for (var i = 0; i < message.pemCertificateChain.length; ++i)
                                        if (!$util.isString(message.pemCertificateChain[i]))
                                            return "pemCertificateChain: string[] expected";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Certificate message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.Certificate} Certificate
                             */
                            Certificate.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.Certificate)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.Certificate();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.pemCsr != null)
                                    message.pemCsr = String(object.pemCsr);
                                if (object.config != null) {
                                    if (typeof object.config !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.config: object expected");
                                    message.config = $root.google.cloud.security.privateca.v1.CertificateConfig.fromObject(object.config);
                                }
                                if (object.issuerCertificateAuthority != null)
                                    message.issuerCertificateAuthority = String(object.issuerCertificateAuthority);
                                if (object.lifetime != null) {
                                    if (typeof object.lifetime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.lifetime: object expected");
                                    message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                }
                                if (object.certificateTemplate != null)
                                    message.certificateTemplate = String(object.certificateTemplate);
                                switch (object.subjectMode) {
                                default:
                                    if (typeof object.subjectMode === "number") {
                                        message.subjectMode = object.subjectMode;
                                        break;
                                    }
                                    break;
                                case "SUBJECT_REQUEST_MODE_UNSPECIFIED":
                                case 0:
                                    message.subjectMode = 0;
                                    break;
                                case "DEFAULT":
                                case 1:
                                    message.subjectMode = 1;
                                    break;
                                case "REFLECTED_SPIFFE":
                                case 2:
                                    message.subjectMode = 2;
                                    break;
                                }
                                if (object.revocationDetails != null) {
                                    if (typeof object.revocationDetails !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.revocationDetails: object expected");
                                    message.revocationDetails = $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails.fromObject(object.revocationDetails);
                                }
                                if (object.pemCertificate != null)
                                    message.pemCertificate = String(object.pemCertificate);
                                if (object.certificateDescription != null) {
                                    if (typeof object.certificateDescription !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.certificateDescription: object expected");
                                    message.certificateDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.fromObject(object.certificateDescription);
                                }
                                if (object.pemCertificateChain) {
                                    if (!Array.isArray(object.pemCertificateChain))
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.pemCertificateChain: array expected");
                                    message.pemCertificateChain = [];
                                    for (var i = 0; i < object.pemCertificateChain.length; ++i)
                                        message.pemCertificateChain[i] = String(object.pemCertificateChain[i]);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.Certificate.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Certificate message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1.Certificate} message Certificate
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Certificate.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pemCertificateChain = [];
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.issuerCertificateAuthority = "";
                                    object.lifetime = null;
                                    object.certificateTemplate = "";
                                    object.subjectMode = options.enums === String ? "SUBJECT_REQUEST_MODE_UNSPECIFIED" : 0;
                                    object.revocationDetails = null;
                                    object.pemCertificate = "";
                                    object.certificateDescription = null;
                                    object.createTime = null;
                                    object.updateTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr")) {
                                    object.pemCsr = message.pemCsr;
                                    if (options.oneofs)
                                        object.certificateConfig = "pemCsr";
                                }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    object.config = $root.google.cloud.security.privateca.v1.CertificateConfig.toObject(message.config, options);
                                    if (options.oneofs)
                                        object.certificateConfig = "config";
                                }
                                if (message.issuerCertificateAuthority != null && message.hasOwnProperty("issuerCertificateAuthority"))
                                    object.issuerCertificateAuthority = message.issuerCertificateAuthority;
                                if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                    object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate"))
                                    object.certificateTemplate = message.certificateTemplate;
                                if (message.subjectMode != null && message.hasOwnProperty("subjectMode"))
                                    object.subjectMode = options.enums === String ? $root.google.cloud.security.privateca.v1.SubjectRequestMode[message.subjectMode] === undefined ? message.subjectMode : $root.google.cloud.security.privateca.v1.SubjectRequestMode[message.subjectMode] : message.subjectMode;
                                if (message.revocationDetails != null && message.hasOwnProperty("revocationDetails"))
                                    object.revocationDetails = $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails.toObject(message.revocationDetails, options);
                                if (message.pemCertificate != null && message.hasOwnProperty("pemCertificate"))
                                    object.pemCertificate = message.pemCertificate;
                                if (message.certificateDescription != null && message.hasOwnProperty("certificateDescription"))
                                    object.certificateDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.toObject(message.certificateDescription, options);
                                if (message.pemCertificateChain && message.pemCertificateChain.length) {
                                    object.pemCertificateChain = [];
                                    for (var j = 0; j < message.pemCertificateChain.length; ++j)
                                        object.pemCertificateChain[j] = message.pemCertificateChain[j];
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Certificate to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Certificate.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Certificate
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.Certificate
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Certificate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.Certificate";
                            };
    
                            Certificate.RevocationDetails = (function() {
    
                                /**
                                 * Properties of a RevocationDetails.
                                 * @memberof google.cloud.security.privateca.v1.Certificate
                                 * @interface IRevocationDetails
                                 * @property {google.cloud.security.privateca.v1.RevocationReason|null} [revocationState] RevocationDetails revocationState
                                 * @property {google.protobuf.ITimestamp|null} [revocationTime] RevocationDetails revocationTime
                                 */
    
                                /**
                                 * Constructs a new RevocationDetails.
                                 * @memberof google.cloud.security.privateca.v1.Certificate
                                 * @classdesc Represents a RevocationDetails.
                                 * @implements IRevocationDetails
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.Certificate.IRevocationDetails=} [properties] Properties to set
                                 */
                                function RevocationDetails(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * RevocationDetails revocationState.
                                 * @member {google.cloud.security.privateca.v1.RevocationReason} revocationState
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @instance
                                 */
                                RevocationDetails.prototype.revocationState = 0;
    
                                /**
                                 * RevocationDetails revocationTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} revocationTime
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @instance
                                 */
                                RevocationDetails.prototype.revocationTime = null;
    
                                /**
                                 * Creates a new RevocationDetails instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.Certificate.IRevocationDetails=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.Certificate.RevocationDetails} RevocationDetails instance
                                 */
                                RevocationDetails.create = function create(properties) {
                                    return new RevocationDetails(properties);
                                };
    
                                /**
                                 * Encodes the specified RevocationDetails message. Does not implicitly {@link google.cloud.security.privateca.v1.Certificate.RevocationDetails.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.Certificate.IRevocationDetails} message RevocationDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevocationDetails.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.revocationState != null && Object.hasOwnProperty.call(message, "revocationState"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revocationState);
                                    if (message.revocationTime != null && Object.hasOwnProperty.call(message, "revocationTime"))
                                        $root.google.protobuf.Timestamp.encode(message.revocationTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified RevocationDetails message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.Certificate.RevocationDetails.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.Certificate.IRevocationDetails} message RevocationDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevocationDetails.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a RevocationDetails message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.Certificate.RevocationDetails} RevocationDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevocationDetails.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.revocationState = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.revocationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a RevocationDetails message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.Certificate.RevocationDetails} RevocationDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevocationDetails.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a RevocationDetails message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                RevocationDetails.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.revocationState != null && message.hasOwnProperty("revocationState"))
                                        switch (message.revocationState) {
                                        default:
                                            return "revocationState: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                        case 8:
                                            break;
                                        }
                                    if (message.revocationTime != null && message.hasOwnProperty("revocationTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.revocationTime);
                                        if (error)
                                            return "revocationTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a RevocationDetails message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.Certificate.RevocationDetails} RevocationDetails
                                 */
                                RevocationDetails.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.Certificate.RevocationDetails();
                                    switch (object.revocationState) {
                                    default:
                                        if (typeof object.revocationState === "number") {
                                            message.revocationState = object.revocationState;
                                            break;
                                        }
                                        break;
                                    case "REVOCATION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.revocationState = 0;
                                        break;
                                    case "KEY_COMPROMISE":
                                    case 1:
                                        message.revocationState = 1;
                                        break;
                                    case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                    case 2:
                                        message.revocationState = 2;
                                        break;
                                    case "AFFILIATION_CHANGED":
                                    case 3:
                                        message.revocationState = 3;
                                        break;
                                    case "SUPERSEDED":
                                    case 4:
                                        message.revocationState = 4;
                                        break;
                                    case "CESSATION_OF_OPERATION":
                                    case 5:
                                        message.revocationState = 5;
                                        break;
                                    case "CERTIFICATE_HOLD":
                                    case 6:
                                        message.revocationState = 6;
                                        break;
                                    case "PRIVILEGE_WITHDRAWN":
                                    case 7:
                                        message.revocationState = 7;
                                        break;
                                    case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                    case 8:
                                        message.revocationState = 8;
                                        break;
                                    }
                                    if (object.revocationTime != null) {
                                        if (typeof object.revocationTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.Certificate.RevocationDetails.revocationTime: object expected");
                                        message.revocationTime = $root.google.protobuf.Timestamp.fromObject(object.revocationTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a RevocationDetails message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.Certificate.RevocationDetails} message RevocationDetails
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                RevocationDetails.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.revocationState = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                        object.revocationTime = null;
                                    }
                                    if (message.revocationState != null && message.hasOwnProperty("revocationState"))
                                        object.revocationState = options.enums === String ? $root.google.cloud.security.privateca.v1.RevocationReason[message.revocationState] === undefined ? message.revocationState : $root.google.cloud.security.privateca.v1.RevocationReason[message.revocationState] : message.revocationState;
                                    if (message.revocationTime != null && message.hasOwnProperty("revocationTime"))
                                        object.revocationTime = $root.google.protobuf.Timestamp.toObject(message.revocationTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this RevocationDetails to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                RevocationDetails.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for RevocationDetails
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.Certificate.RevocationDetails
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                RevocationDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.Certificate.RevocationDetails";
                                };
    
                                return RevocationDetails;
                            })();
    
                            return Certificate;
                        })();
    
                        v1.CertificateTemplate = (function() {
    
                            /**
                             * Properties of a CertificateTemplate.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateTemplate
                             * @property {string|null} [name] CertificateTemplate name
                             * @property {google.cloud.security.privateca.v1.IX509Parameters|null} [predefinedValues] CertificateTemplate predefinedValues
                             * @property {google.cloud.security.privateca.v1.ICertificateIdentityConstraints|null} [identityConstraints] CertificateTemplate identityConstraints
                             * @property {google.cloud.security.privateca.v1.ICertificateExtensionConstraints|null} [passthroughExtensions] CertificateTemplate passthroughExtensions
                             * @property {string|null} [description] CertificateTemplate description
                             * @property {google.protobuf.ITimestamp|null} [createTime] CertificateTemplate createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] CertificateTemplate updateTime
                             * @property {Object.<string,string>|null} [labels] CertificateTemplate labels
                             */
    
                            /**
                             * Constructs a new CertificateTemplate.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateTemplate.
                             * @implements ICertificateTemplate
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateTemplate=} [properties] Properties to set
                             */
                            function CertificateTemplate(properties) {
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateTemplate name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.name = "";
    
                            /**
                             * CertificateTemplate predefinedValues.
                             * @member {google.cloud.security.privateca.v1.IX509Parameters|null|undefined} predefinedValues
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.predefinedValues = null;
    
                            /**
                             * CertificateTemplate identityConstraints.
                             * @member {google.cloud.security.privateca.v1.ICertificateIdentityConstraints|null|undefined} identityConstraints
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.identityConstraints = null;
    
                            /**
                             * CertificateTemplate passthroughExtensions.
                             * @member {google.cloud.security.privateca.v1.ICertificateExtensionConstraints|null|undefined} passthroughExtensions
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.passthroughExtensions = null;
    
                            /**
                             * CertificateTemplate description.
                             * @member {string} description
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.description = "";
    
                            /**
                             * CertificateTemplate createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.createTime = null;
    
                            /**
                             * CertificateTemplate updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.updateTime = null;
    
                            /**
                             * CertificateTemplate labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             */
                            CertificateTemplate.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CertificateTemplate instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateTemplate=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateTemplate} CertificateTemplate instance
                             */
                            CertificateTemplate.create = function create(properties) {
                                return new CertificateTemplate(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateTemplate message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateTemplate.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateTemplate} message CertificateTemplate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateTemplate.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.predefinedValues != null && Object.hasOwnProperty.call(message, "predefinedValues"))
                                    $root.google.cloud.security.privateca.v1.X509Parameters.encode(message.predefinedValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.identityConstraints != null && Object.hasOwnProperty.call(message, "identityConstraints"))
                                    $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.encode(message.identityConstraints, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.passthroughExtensions != null && Object.hasOwnProperty.call(message, "passthroughExtensions"))
                                    $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.encode(message.passthroughExtensions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.description);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateTemplate message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateTemplate.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateTemplate} message CertificateTemplate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateTemplate message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateTemplate} CertificateTemplate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateTemplate.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateTemplate(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.predefinedValues = $root.google.cloud.security.privateca.v1.X509Parameters.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.description = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateTemplate message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateTemplate} CertificateTemplate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateTemplate.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateTemplate message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateTemplate.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.predefinedValues != null && message.hasOwnProperty("predefinedValues")) {
                                    var error = $root.google.cloud.security.privateca.v1.X509Parameters.verify(message.predefinedValues);
                                    if (error)
                                        return "predefinedValues." + error;
                                }
                                if (message.identityConstraints != null && message.hasOwnProperty("identityConstraints")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.verify(message.identityConstraints);
                                    if (error)
                                        return "identityConstraints." + error;
                                }
                                if (message.passthroughExtensions != null && message.hasOwnProperty("passthroughExtensions")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.verify(message.passthroughExtensions);
                                    if (error)
                                        return "passthroughExtensions." + error;
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateTemplate message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateTemplate} CertificateTemplate
                             */
                            CertificateTemplate.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateTemplate)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateTemplate();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.predefinedValues != null) {
                                    if (typeof object.predefinedValues !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.predefinedValues: object expected");
                                    message.predefinedValues = $root.google.cloud.security.privateca.v1.X509Parameters.fromObject(object.predefinedValues);
                                }
                                if (object.identityConstraints != null) {
                                    if (typeof object.identityConstraints !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.identityConstraints: object expected");
                                    message.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.fromObject(object.identityConstraints);
                                }
                                if (object.passthroughExtensions != null) {
                                    if (typeof object.passthroughExtensions !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.passthroughExtensions: object expected");
                                    message.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.fromObject(object.passthroughExtensions);
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateTemplate.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateTemplate message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateTemplate} message CertificateTemplate
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateTemplate.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.predefinedValues = null;
                                    object.identityConstraints = null;
                                    object.passthroughExtensions = null;
                                    object.description = "";
                                    object.createTime = null;
                                    object.updateTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.predefinedValues != null && message.hasOwnProperty("predefinedValues"))
                                    object.predefinedValues = $root.google.cloud.security.privateca.v1.X509Parameters.toObject(message.predefinedValues, options);
                                if (message.identityConstraints != null && message.hasOwnProperty("identityConstraints"))
                                    object.identityConstraints = $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints.toObject(message.identityConstraints, options);
                                if (message.passthroughExtensions != null && message.hasOwnProperty("passthroughExtensions"))
                                    object.passthroughExtensions = $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.toObject(message.passthroughExtensions, options);
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateTemplate to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateTemplate.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateTemplate
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateTemplate
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateTemplate";
                            };
    
                            return CertificateTemplate;
                        })();
    
                        v1.X509Parameters = (function() {
    
                            /**
                             * Properties of a X509Parameters.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IX509Parameters
                             * @property {google.cloud.security.privateca.v1.IKeyUsage|null} [keyUsage] X509Parameters keyUsage
                             * @property {google.cloud.security.privateca.v1.X509Parameters.ICaOptions|null} [caOptions] X509Parameters caOptions
                             * @property {Array.<google.cloud.security.privateca.v1.IObjectId>|null} [policyIds] X509Parameters policyIds
                             * @property {Array.<string>|null} [aiaOcspServers] X509Parameters aiaOcspServers
                             * @property {google.cloud.security.privateca.v1.X509Parameters.INameConstraints|null} [nameConstraints] X509Parameters nameConstraints
                             * @property {Array.<google.cloud.security.privateca.v1.IX509Extension>|null} [additionalExtensions] X509Parameters additionalExtensions
                             */
    
                            /**
                             * Constructs a new X509Parameters.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a X509Parameters.
                             * @implements IX509Parameters
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IX509Parameters=} [properties] Properties to set
                             */
                            function X509Parameters(properties) {
                                this.policyIds = [];
                                this.aiaOcspServers = [];
                                this.additionalExtensions = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * X509Parameters keyUsage.
                             * @member {google.cloud.security.privateca.v1.IKeyUsage|null|undefined} keyUsage
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.keyUsage = null;
    
                            /**
                             * X509Parameters caOptions.
                             * @member {google.cloud.security.privateca.v1.X509Parameters.ICaOptions|null|undefined} caOptions
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.caOptions = null;
    
                            /**
                             * X509Parameters policyIds.
                             * @member {Array.<google.cloud.security.privateca.v1.IObjectId>} policyIds
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.policyIds = $util.emptyArray;
    
                            /**
                             * X509Parameters aiaOcspServers.
                             * @member {Array.<string>} aiaOcspServers
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.aiaOcspServers = $util.emptyArray;
    
                            /**
                             * X509Parameters nameConstraints.
                             * @member {google.cloud.security.privateca.v1.X509Parameters.INameConstraints|null|undefined} nameConstraints
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.nameConstraints = null;
    
                            /**
                             * X509Parameters additionalExtensions.
                             * @member {Array.<google.cloud.security.privateca.v1.IX509Extension>} additionalExtensions
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             */
                            X509Parameters.prototype.additionalExtensions = $util.emptyArray;
    
                            /**
                             * Creates a new X509Parameters instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Parameters=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.X509Parameters} X509Parameters instance
                             */
                            X509Parameters.create = function create(properties) {
                                return new X509Parameters(properties);
                            };
    
                            /**
                             * Encodes the specified X509Parameters message. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Parameters} message X509Parameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Parameters.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.keyUsage != null && Object.hasOwnProperty.call(message, "keyUsage"))
                                    $root.google.cloud.security.privateca.v1.KeyUsage.encode(message.keyUsage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.caOptions != null && Object.hasOwnProperty.call(message, "caOptions"))
                                    $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions.encode(message.caOptions, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.policyIds != null && message.policyIds.length)
                                    for (var i = 0; i < message.policyIds.length; ++i)
                                        $root.google.cloud.security.privateca.v1.ObjectId.encode(message.policyIds[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.aiaOcspServers != null && message.aiaOcspServers.length)
                                    for (var i = 0; i < message.aiaOcspServers.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.aiaOcspServers[i]);
                                if (message.additionalExtensions != null && message.additionalExtensions.length)
                                    for (var i = 0; i < message.additionalExtensions.length; ++i)
                                        $root.google.cloud.security.privateca.v1.X509Extension.encode(message.additionalExtensions[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.nameConstraints != null && Object.hasOwnProperty.call(message, "nameConstraints"))
                                    $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints.encode(message.nameConstraints, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified X509Parameters message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Parameters} message X509Parameters message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Parameters.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a X509Parameters message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.X509Parameters} X509Parameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Parameters.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.X509Parameters();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.keyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.caOptions = $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.policyIds && message.policyIds.length))
                                                message.policyIds = [];
                                            message.policyIds.push($root.google.cloud.security.privateca.v1.ObjectId.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.aiaOcspServers && message.aiaOcspServers.length))
                                                message.aiaOcspServers = [];
                                            message.aiaOcspServers.push(reader.string());
                                            break;
                                        }
                                    case 6: {
                                            message.nameConstraints = $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.additionalExtensions && message.additionalExtensions.length))
                                                message.additionalExtensions = [];
                                            message.additionalExtensions.push($root.google.cloud.security.privateca.v1.X509Extension.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a X509Parameters message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.X509Parameters} X509Parameters
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Parameters.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a X509Parameters message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            X509Parameters.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.keyUsage != null && message.hasOwnProperty("keyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1.KeyUsage.verify(message.keyUsage);
                                    if (error)
                                        return "keyUsage." + error;
                                }
                                if (message.caOptions != null && message.hasOwnProperty("caOptions")) {
                                    var error = $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions.verify(message.caOptions);
                                    if (error)
                                        return "caOptions." + error;
                                }
                                if (message.policyIds != null && message.hasOwnProperty("policyIds")) {
                                    if (!Array.isArray(message.policyIds))
                                        return "policyIds: array expected";
                                    for (var i = 0; i < message.policyIds.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.ObjectId.verify(message.policyIds[i]);
                                        if (error)
                                            return "policyIds." + error;
                                    }
                                }
                                if (message.aiaOcspServers != null && message.hasOwnProperty("aiaOcspServers")) {
                                    if (!Array.isArray(message.aiaOcspServers))
                                        return "aiaOcspServers: array expected";
                                    for (var i = 0; i < message.aiaOcspServers.length; ++i)
                                        if (!$util.isString(message.aiaOcspServers[i]))
                                            return "aiaOcspServers: string[] expected";
                                }
                                if (message.nameConstraints != null && message.hasOwnProperty("nameConstraints")) {
                                    var error = $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints.verify(message.nameConstraints);
                                    if (error)
                                        return "nameConstraints." + error;
                                }
                                if (message.additionalExtensions != null && message.hasOwnProperty("additionalExtensions")) {
                                    if (!Array.isArray(message.additionalExtensions))
                                        return "additionalExtensions: array expected";
                                    for (var i = 0; i < message.additionalExtensions.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.X509Extension.verify(message.additionalExtensions[i]);
                                        if (error)
                                            return "additionalExtensions." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a X509Parameters message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.X509Parameters} X509Parameters
                             */
                            X509Parameters.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.X509Parameters)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.X509Parameters();
                                if (object.keyUsage != null) {
                                    if (typeof object.keyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.keyUsage: object expected");
                                    message.keyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.fromObject(object.keyUsage);
                                }
                                if (object.caOptions != null) {
                                    if (typeof object.caOptions !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.caOptions: object expected");
                                    message.caOptions = $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions.fromObject(object.caOptions);
                                }
                                if (object.policyIds) {
                                    if (!Array.isArray(object.policyIds))
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.policyIds: array expected");
                                    message.policyIds = [];
                                    for (var i = 0; i < object.policyIds.length; ++i) {
                                        if (typeof object.policyIds[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.policyIds: object expected");
                                        message.policyIds[i] = $root.google.cloud.security.privateca.v1.ObjectId.fromObject(object.policyIds[i]);
                                    }
                                }
                                if (object.aiaOcspServers) {
                                    if (!Array.isArray(object.aiaOcspServers))
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.aiaOcspServers: array expected");
                                    message.aiaOcspServers = [];
                                    for (var i = 0; i < object.aiaOcspServers.length; ++i)
                                        message.aiaOcspServers[i] = String(object.aiaOcspServers[i]);
                                }
                                if (object.nameConstraints != null) {
                                    if (typeof object.nameConstraints !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.nameConstraints: object expected");
                                    message.nameConstraints = $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints.fromObject(object.nameConstraints);
                                }
                                if (object.additionalExtensions) {
                                    if (!Array.isArray(object.additionalExtensions))
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.additionalExtensions: array expected");
                                    message.additionalExtensions = [];
                                    for (var i = 0; i < object.additionalExtensions.length; ++i) {
                                        if (typeof object.additionalExtensions[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.additionalExtensions: object expected");
                                        message.additionalExtensions[i] = $root.google.cloud.security.privateca.v1.X509Extension.fromObject(object.additionalExtensions[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a X509Parameters message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {google.cloud.security.privateca.v1.X509Parameters} message X509Parameters
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            X509Parameters.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.policyIds = [];
                                    object.aiaOcspServers = [];
                                    object.additionalExtensions = [];
                                }
                                if (options.defaults) {
                                    object.keyUsage = null;
                                    object.caOptions = null;
                                    object.nameConstraints = null;
                                }
                                if (message.keyUsage != null && message.hasOwnProperty("keyUsage"))
                                    object.keyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.toObject(message.keyUsage, options);
                                if (message.caOptions != null && message.hasOwnProperty("caOptions"))
                                    object.caOptions = $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions.toObject(message.caOptions, options);
                                if (message.policyIds && message.policyIds.length) {
                                    object.policyIds = [];
                                    for (var j = 0; j < message.policyIds.length; ++j)
                                        object.policyIds[j] = $root.google.cloud.security.privateca.v1.ObjectId.toObject(message.policyIds[j], options);
                                }
                                if (message.aiaOcspServers && message.aiaOcspServers.length) {
                                    object.aiaOcspServers = [];
                                    for (var j = 0; j < message.aiaOcspServers.length; ++j)
                                        object.aiaOcspServers[j] = message.aiaOcspServers[j];
                                }
                                if (message.additionalExtensions && message.additionalExtensions.length) {
                                    object.additionalExtensions = [];
                                    for (var j = 0; j < message.additionalExtensions.length; ++j)
                                        object.additionalExtensions[j] = $root.google.cloud.security.privateca.v1.X509Extension.toObject(message.additionalExtensions[j], options);
                                }
                                if (message.nameConstraints != null && message.hasOwnProperty("nameConstraints"))
                                    object.nameConstraints = $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints.toObject(message.nameConstraints, options);
                                return object;
                            };
    
                            /**
                             * Converts this X509Parameters to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            X509Parameters.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for X509Parameters
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.X509Parameters
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            X509Parameters.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.X509Parameters";
                            };
    
                            X509Parameters.CaOptions = (function() {
    
                                /**
                                 * Properties of a CaOptions.
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters
                                 * @interface ICaOptions
                                 * @property {boolean|null} [isCa] CaOptions isCa
                                 * @property {number|null} [maxIssuerPathLength] CaOptions maxIssuerPathLength
                                 */
    
                                /**
                                 * Constructs a new CaOptions.
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters
                                 * @classdesc Represents a CaOptions.
                                 * @implements ICaOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.ICaOptions=} [properties] Properties to set
                                 */
                                function CaOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CaOptions isCa.
                                 * @member {boolean|null|undefined} isCa
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @instance
                                 */
                                CaOptions.prototype.isCa = null;
    
                                /**
                                 * CaOptions maxIssuerPathLength.
                                 * @member {number|null|undefined} maxIssuerPathLength
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @instance
                                 */
                                CaOptions.prototype.maxIssuerPathLength = null;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * CaOptions _isCa.
                                 * @member {"isCa"|undefined} _isCa
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @instance
                                 */
                                Object.defineProperty(CaOptions.prototype, "_isCa", {
                                    get: $util.oneOfGetter($oneOfFields = ["isCa"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * CaOptions _maxIssuerPathLength.
                                 * @member {"maxIssuerPathLength"|undefined} _maxIssuerPathLength
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @instance
                                 */
                                Object.defineProperty(CaOptions.prototype, "_maxIssuerPathLength", {
                                    get: $util.oneOfGetter($oneOfFields = ["maxIssuerPathLength"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new CaOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.ICaOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.CaOptions} CaOptions instance
                                 */
                                CaOptions.create = function create(properties) {
                                    return new CaOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified CaOptions message. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.CaOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.ICaOptions} message CaOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CaOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.isCa != null && Object.hasOwnProperty.call(message, "isCa"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.isCa);
                                    if (message.maxIssuerPathLength != null && Object.hasOwnProperty.call(message, "maxIssuerPathLength"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxIssuerPathLength);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CaOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.CaOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.ICaOptions} message CaOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CaOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CaOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.CaOptions} CaOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CaOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.isCa = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.maxIssuerPathLength = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CaOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.CaOptions} CaOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CaOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CaOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CaOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.isCa != null && message.hasOwnProperty("isCa")) {
                                        properties._isCa = 1;
                                        if (typeof message.isCa !== "boolean")
                                            return "isCa: boolean expected";
                                    }
                                    if (message.maxIssuerPathLength != null && message.hasOwnProperty("maxIssuerPathLength")) {
                                        properties._maxIssuerPathLength = 1;
                                        if (!$util.isInteger(message.maxIssuerPathLength))
                                            return "maxIssuerPathLength: integer expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a CaOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.CaOptions} CaOptions
                                 */
                                CaOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.X509Parameters.CaOptions();
                                    if (object.isCa != null)
                                        message.isCa = Boolean(object.isCa);
                                    if (object.maxIssuerPathLength != null)
                                        message.maxIssuerPathLength = object.maxIssuerPathLength | 0;
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CaOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.CaOptions} message CaOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CaOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (message.isCa != null && message.hasOwnProperty("isCa")) {
                                        object.isCa = message.isCa;
                                        if (options.oneofs)
                                            object._isCa = "isCa";
                                    }
                                    if (message.maxIssuerPathLength != null && message.hasOwnProperty("maxIssuerPathLength")) {
                                        object.maxIssuerPathLength = message.maxIssuerPathLength;
                                        if (options.oneofs)
                                            object._maxIssuerPathLength = "maxIssuerPathLength";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this CaOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CaOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CaOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.CaOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CaOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.X509Parameters.CaOptions";
                                };
    
                                return CaOptions;
                            })();
    
                            X509Parameters.NameConstraints = (function() {
    
                                /**
                                 * Properties of a NameConstraints.
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters
                                 * @interface INameConstraints
                                 * @property {boolean|null} [critical] NameConstraints critical
                                 * @property {Array.<string>|null} [permittedDnsNames] NameConstraints permittedDnsNames
                                 * @property {Array.<string>|null} [excludedDnsNames] NameConstraints excludedDnsNames
                                 * @property {Array.<string>|null} [permittedIpRanges] NameConstraints permittedIpRanges
                                 * @property {Array.<string>|null} [excludedIpRanges] NameConstraints excludedIpRanges
                                 * @property {Array.<string>|null} [permittedEmailAddresses] NameConstraints permittedEmailAddresses
                                 * @property {Array.<string>|null} [excludedEmailAddresses] NameConstraints excludedEmailAddresses
                                 * @property {Array.<string>|null} [permittedUris] NameConstraints permittedUris
                                 * @property {Array.<string>|null} [excludedUris] NameConstraints excludedUris
                                 */
    
                                /**
                                 * Constructs a new NameConstraints.
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters
                                 * @classdesc Represents a NameConstraints.
                                 * @implements INameConstraints
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.INameConstraints=} [properties] Properties to set
                                 */
                                function NameConstraints(properties) {
                                    this.permittedDnsNames = [];
                                    this.excludedDnsNames = [];
                                    this.permittedIpRanges = [];
                                    this.excludedIpRanges = [];
                                    this.permittedEmailAddresses = [];
                                    this.excludedEmailAddresses = [];
                                    this.permittedUris = [];
                                    this.excludedUris = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * NameConstraints critical.
                                 * @member {boolean} critical
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.critical = false;
    
                                /**
                                 * NameConstraints permittedDnsNames.
                                 * @member {Array.<string>} permittedDnsNames
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.permittedDnsNames = $util.emptyArray;
    
                                /**
                                 * NameConstraints excludedDnsNames.
                                 * @member {Array.<string>} excludedDnsNames
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.excludedDnsNames = $util.emptyArray;
    
                                /**
                                 * NameConstraints permittedIpRanges.
                                 * @member {Array.<string>} permittedIpRanges
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.permittedIpRanges = $util.emptyArray;
    
                                /**
                                 * NameConstraints excludedIpRanges.
                                 * @member {Array.<string>} excludedIpRanges
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.excludedIpRanges = $util.emptyArray;
    
                                /**
                                 * NameConstraints permittedEmailAddresses.
                                 * @member {Array.<string>} permittedEmailAddresses
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.permittedEmailAddresses = $util.emptyArray;
    
                                /**
                                 * NameConstraints excludedEmailAddresses.
                                 * @member {Array.<string>} excludedEmailAddresses
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.excludedEmailAddresses = $util.emptyArray;
    
                                /**
                                 * NameConstraints permittedUris.
                                 * @member {Array.<string>} permittedUris
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.permittedUris = $util.emptyArray;
    
                                /**
                                 * NameConstraints excludedUris.
                                 * @member {Array.<string>} excludedUris
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 */
                                NameConstraints.prototype.excludedUris = $util.emptyArray;
    
                                /**
                                 * Creates a new NameConstraints instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.INameConstraints=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.NameConstraints} NameConstraints instance
                                 */
                                NameConstraints.create = function create(properties) {
                                    return new NameConstraints(properties);
                                };
    
                                /**
                                 * Encodes the specified NameConstraints message. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.NameConstraints.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.INameConstraints} message NameConstraints message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NameConstraints.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.critical != null && Object.hasOwnProperty.call(message, "critical"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.critical);
                                    if (message.permittedDnsNames != null && message.permittedDnsNames.length)
                                        for (var i = 0; i < message.permittedDnsNames.length; ++i)
                                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.permittedDnsNames[i]);
                                    if (message.excludedDnsNames != null && message.excludedDnsNames.length)
                                        for (var i = 0; i < message.excludedDnsNames.length; ++i)
                                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.excludedDnsNames[i]);
                                    if (message.permittedIpRanges != null && message.permittedIpRanges.length)
                                        for (var i = 0; i < message.permittedIpRanges.length; ++i)
                                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.permittedIpRanges[i]);
                                    if (message.excludedIpRanges != null && message.excludedIpRanges.length)
                                        for (var i = 0; i < message.excludedIpRanges.length; ++i)
                                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.excludedIpRanges[i]);
                                    if (message.permittedEmailAddresses != null && message.permittedEmailAddresses.length)
                                        for (var i = 0; i < message.permittedEmailAddresses.length; ++i)
                                            writer.uint32(/* id 6, wireType 2 =*/50).string(message.permittedEmailAddresses[i]);
                                    if (message.excludedEmailAddresses != null && message.excludedEmailAddresses.length)
                                        for (var i = 0; i < message.excludedEmailAddresses.length; ++i)
                                            writer.uint32(/* id 7, wireType 2 =*/58).string(message.excludedEmailAddresses[i]);
                                    if (message.permittedUris != null && message.permittedUris.length)
                                        for (var i = 0; i < message.permittedUris.length; ++i)
                                            writer.uint32(/* id 8, wireType 2 =*/66).string(message.permittedUris[i]);
                                    if (message.excludedUris != null && message.excludedUris.length)
                                        for (var i = 0; i < message.excludedUris.length; ++i)
                                            writer.uint32(/* id 9, wireType 2 =*/74).string(message.excludedUris[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified NameConstraints message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.X509Parameters.NameConstraints.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.INameConstraints} message NameConstraints message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                NameConstraints.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a NameConstraints message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.NameConstraints} NameConstraints
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NameConstraints.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.critical = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                if (!(message.permittedDnsNames && message.permittedDnsNames.length))
                                                    message.permittedDnsNames = [];
                                                message.permittedDnsNames.push(reader.string());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.excludedDnsNames && message.excludedDnsNames.length))
                                                    message.excludedDnsNames = [];
                                                message.excludedDnsNames.push(reader.string());
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.permittedIpRanges && message.permittedIpRanges.length))
                                                    message.permittedIpRanges = [];
                                                message.permittedIpRanges.push(reader.string());
                                                break;
                                            }
                                        case 5: {
                                                if (!(message.excludedIpRanges && message.excludedIpRanges.length))
                                                    message.excludedIpRanges = [];
                                                message.excludedIpRanges.push(reader.string());
                                                break;
                                            }
                                        case 6: {
                                                if (!(message.permittedEmailAddresses && message.permittedEmailAddresses.length))
                                                    message.permittedEmailAddresses = [];
                                                message.permittedEmailAddresses.push(reader.string());
                                                break;
                                            }
                                        case 7: {
                                                if (!(message.excludedEmailAddresses && message.excludedEmailAddresses.length))
                                                    message.excludedEmailAddresses = [];
                                                message.excludedEmailAddresses.push(reader.string());
                                                break;
                                            }
                                        case 8: {
                                                if (!(message.permittedUris && message.permittedUris.length))
                                                    message.permittedUris = [];
                                                message.permittedUris.push(reader.string());
                                                break;
                                            }
                                        case 9: {
                                                if (!(message.excludedUris && message.excludedUris.length))
                                                    message.excludedUris = [];
                                                message.excludedUris.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a NameConstraints message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.NameConstraints} NameConstraints
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                NameConstraints.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a NameConstraints message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                NameConstraints.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.critical != null && message.hasOwnProperty("critical"))
                                        if (typeof message.critical !== "boolean")
                                            return "critical: boolean expected";
                                    if (message.permittedDnsNames != null && message.hasOwnProperty("permittedDnsNames")) {
                                        if (!Array.isArray(message.permittedDnsNames))
                                            return "permittedDnsNames: array expected";
                                        for (var i = 0; i < message.permittedDnsNames.length; ++i)
                                            if (!$util.isString(message.permittedDnsNames[i]))
                                                return "permittedDnsNames: string[] expected";
                                    }
                                    if (message.excludedDnsNames != null && message.hasOwnProperty("excludedDnsNames")) {
                                        if (!Array.isArray(message.excludedDnsNames))
                                            return "excludedDnsNames: array expected";
                                        for (var i = 0; i < message.excludedDnsNames.length; ++i)
                                            if (!$util.isString(message.excludedDnsNames[i]))
                                                return "excludedDnsNames: string[] expected";
                                    }
                                    if (message.permittedIpRanges != null && message.hasOwnProperty("permittedIpRanges")) {
                                        if (!Array.isArray(message.permittedIpRanges))
                                            return "permittedIpRanges: array expected";
                                        for (var i = 0; i < message.permittedIpRanges.length; ++i)
                                            if (!$util.isString(message.permittedIpRanges[i]))
                                                return "permittedIpRanges: string[] expected";
                                    }
                                    if (message.excludedIpRanges != null && message.hasOwnProperty("excludedIpRanges")) {
                                        if (!Array.isArray(message.excludedIpRanges))
                                            return "excludedIpRanges: array expected";
                                        for (var i = 0; i < message.excludedIpRanges.length; ++i)
                                            if (!$util.isString(message.excludedIpRanges[i]))
                                                return "excludedIpRanges: string[] expected";
                                    }
                                    if (message.permittedEmailAddresses != null && message.hasOwnProperty("permittedEmailAddresses")) {
                                        if (!Array.isArray(message.permittedEmailAddresses))
                                            return "permittedEmailAddresses: array expected";
                                        for (var i = 0; i < message.permittedEmailAddresses.length; ++i)
                                            if (!$util.isString(message.permittedEmailAddresses[i]))
                                                return "permittedEmailAddresses: string[] expected";
                                    }
                                    if (message.excludedEmailAddresses != null && message.hasOwnProperty("excludedEmailAddresses")) {
                                        if (!Array.isArray(message.excludedEmailAddresses))
                                            return "excludedEmailAddresses: array expected";
                                        for (var i = 0; i < message.excludedEmailAddresses.length; ++i)
                                            if (!$util.isString(message.excludedEmailAddresses[i]))
                                                return "excludedEmailAddresses: string[] expected";
                                    }
                                    if (message.permittedUris != null && message.hasOwnProperty("permittedUris")) {
                                        if (!Array.isArray(message.permittedUris))
                                            return "permittedUris: array expected";
                                        for (var i = 0; i < message.permittedUris.length; ++i)
                                            if (!$util.isString(message.permittedUris[i]))
                                                return "permittedUris: string[] expected";
                                    }
                                    if (message.excludedUris != null && message.hasOwnProperty("excludedUris")) {
                                        if (!Array.isArray(message.excludedUris))
                                            return "excludedUris: array expected";
                                        for (var i = 0; i < message.excludedUris.length; ++i)
                                            if (!$util.isString(message.excludedUris[i]))
                                                return "excludedUris: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a NameConstraints message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.X509Parameters.NameConstraints} NameConstraints
                                 */
                                NameConstraints.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.X509Parameters.NameConstraints();
                                    if (object.critical != null)
                                        message.critical = Boolean(object.critical);
                                    if (object.permittedDnsNames) {
                                        if (!Array.isArray(object.permittedDnsNames))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.permittedDnsNames: array expected");
                                        message.permittedDnsNames = [];
                                        for (var i = 0; i < object.permittedDnsNames.length; ++i)
                                            message.permittedDnsNames[i] = String(object.permittedDnsNames[i]);
                                    }
                                    if (object.excludedDnsNames) {
                                        if (!Array.isArray(object.excludedDnsNames))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.excludedDnsNames: array expected");
                                        message.excludedDnsNames = [];
                                        for (var i = 0; i < object.excludedDnsNames.length; ++i)
                                            message.excludedDnsNames[i] = String(object.excludedDnsNames[i]);
                                    }
                                    if (object.permittedIpRanges) {
                                        if (!Array.isArray(object.permittedIpRanges))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.permittedIpRanges: array expected");
                                        message.permittedIpRanges = [];
                                        for (var i = 0; i < object.permittedIpRanges.length; ++i)
                                            message.permittedIpRanges[i] = String(object.permittedIpRanges[i]);
                                    }
                                    if (object.excludedIpRanges) {
                                        if (!Array.isArray(object.excludedIpRanges))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.excludedIpRanges: array expected");
                                        message.excludedIpRanges = [];
                                        for (var i = 0; i < object.excludedIpRanges.length; ++i)
                                            message.excludedIpRanges[i] = String(object.excludedIpRanges[i]);
                                    }
                                    if (object.permittedEmailAddresses) {
                                        if (!Array.isArray(object.permittedEmailAddresses))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.permittedEmailAddresses: array expected");
                                        message.permittedEmailAddresses = [];
                                        for (var i = 0; i < object.permittedEmailAddresses.length; ++i)
                                            message.permittedEmailAddresses[i] = String(object.permittedEmailAddresses[i]);
                                    }
                                    if (object.excludedEmailAddresses) {
                                        if (!Array.isArray(object.excludedEmailAddresses))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.excludedEmailAddresses: array expected");
                                        message.excludedEmailAddresses = [];
                                        for (var i = 0; i < object.excludedEmailAddresses.length; ++i)
                                            message.excludedEmailAddresses[i] = String(object.excludedEmailAddresses[i]);
                                    }
                                    if (object.permittedUris) {
                                        if (!Array.isArray(object.permittedUris))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.permittedUris: array expected");
                                        message.permittedUris = [];
                                        for (var i = 0; i < object.permittedUris.length; ++i)
                                            message.permittedUris[i] = String(object.permittedUris[i]);
                                    }
                                    if (object.excludedUris) {
                                        if (!Array.isArray(object.excludedUris))
                                            throw TypeError(".google.cloud.security.privateca.v1.X509Parameters.NameConstraints.excludedUris: array expected");
                                        message.excludedUris = [];
                                        for (var i = 0; i < object.excludedUris.length; ++i)
                                            message.excludedUris[i] = String(object.excludedUris[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a NameConstraints message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.X509Parameters.NameConstraints} message NameConstraints
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                NameConstraints.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.permittedDnsNames = [];
                                        object.excludedDnsNames = [];
                                        object.permittedIpRanges = [];
                                        object.excludedIpRanges = [];
                                        object.permittedEmailAddresses = [];
                                        object.excludedEmailAddresses = [];
                                        object.permittedUris = [];
                                        object.excludedUris = [];
                                    }
                                    if (options.defaults)
                                        object.critical = false;
                                    if (message.critical != null && message.hasOwnProperty("critical"))
                                        object.critical = message.critical;
                                    if (message.permittedDnsNames && message.permittedDnsNames.length) {
                                        object.permittedDnsNames = [];
                                        for (var j = 0; j < message.permittedDnsNames.length; ++j)
                                            object.permittedDnsNames[j] = message.permittedDnsNames[j];
                                    }
                                    if (message.excludedDnsNames && message.excludedDnsNames.length) {
                                        object.excludedDnsNames = [];
                                        for (var j = 0; j < message.excludedDnsNames.length; ++j)
                                            object.excludedDnsNames[j] = message.excludedDnsNames[j];
                                    }
                                    if (message.permittedIpRanges && message.permittedIpRanges.length) {
                                        object.permittedIpRanges = [];
                                        for (var j = 0; j < message.permittedIpRanges.length; ++j)
                                            object.permittedIpRanges[j] = message.permittedIpRanges[j];
                                    }
                                    if (message.excludedIpRanges && message.excludedIpRanges.length) {
                                        object.excludedIpRanges = [];
                                        for (var j = 0; j < message.excludedIpRanges.length; ++j)
                                            object.excludedIpRanges[j] = message.excludedIpRanges[j];
                                    }
                                    if (message.permittedEmailAddresses && message.permittedEmailAddresses.length) {
                                        object.permittedEmailAddresses = [];
                                        for (var j = 0; j < message.permittedEmailAddresses.length; ++j)
                                            object.permittedEmailAddresses[j] = message.permittedEmailAddresses[j];
                                    }
                                    if (message.excludedEmailAddresses && message.excludedEmailAddresses.length) {
                                        object.excludedEmailAddresses = [];
                                        for (var j = 0; j < message.excludedEmailAddresses.length; ++j)
                                            object.excludedEmailAddresses[j] = message.excludedEmailAddresses[j];
                                    }
                                    if (message.permittedUris && message.permittedUris.length) {
                                        object.permittedUris = [];
                                        for (var j = 0; j < message.permittedUris.length; ++j)
                                            object.permittedUris[j] = message.permittedUris[j];
                                    }
                                    if (message.excludedUris && message.excludedUris.length) {
                                        object.excludedUris = [];
                                        for (var j = 0; j < message.excludedUris.length; ++j)
                                            object.excludedUris[j] = message.excludedUris[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this NameConstraints to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                NameConstraints.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for NameConstraints
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.X509Parameters.NameConstraints
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                NameConstraints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.X509Parameters.NameConstraints";
                                };
    
                                return NameConstraints;
                            })();
    
                            return X509Parameters;
                        })();
    
                        v1.SubordinateConfig = (function() {
    
                            /**
                             * Properties of a SubordinateConfig.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ISubordinateConfig
                             * @property {string|null} [certificateAuthority] SubordinateConfig certificateAuthority
                             * @property {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain|null} [pemIssuerChain] SubordinateConfig pemIssuerChain
                             */
    
                            /**
                             * Constructs a new SubordinateConfig.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a SubordinateConfig.
                             * @implements ISubordinateConfig
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ISubordinateConfig=} [properties] Properties to set
                             */
                            function SubordinateConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SubordinateConfig certificateAuthority.
                             * @member {string|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @instance
                             */
                            SubordinateConfig.prototype.certificateAuthority = null;
    
                            /**
                             * SubordinateConfig pemIssuerChain.
                             * @member {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain|null|undefined} pemIssuerChain
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @instance
                             */
                            SubordinateConfig.prototype.pemIssuerChain = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * SubordinateConfig subordinateConfig.
                             * @member {"certificateAuthority"|"pemIssuerChain"|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @instance
                             */
                            Object.defineProperty(SubordinateConfig.prototype, "subordinateConfig", {
                                get: $util.oneOfGetter($oneOfFields = ["certificateAuthority", "pemIssuerChain"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new SubordinateConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubordinateConfig=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.SubordinateConfig} SubordinateConfig instance
                             */
                            SubordinateConfig.create = function create(properties) {
                                return new SubordinateConfig(properties);
                            };
    
                            /**
                             * Encodes the specified SubordinateConfig message. Does not implicitly {@link google.cloud.security.privateca.v1.SubordinateConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubordinateConfig} message SubordinateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubordinateConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.certificateAuthority);
                                if (message.pemIssuerChain != null && Object.hasOwnProperty.call(message, "pemIssuerChain"))
                                    $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.encode(message.pemIssuerChain, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SubordinateConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.SubordinateConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubordinateConfig} message SubordinateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubordinateConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SubordinateConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.SubordinateConfig} SubordinateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubordinateConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.SubordinateConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateAuthority = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemIssuerChain = $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SubordinateConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.SubordinateConfig} SubordinateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubordinateConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SubordinateConfig message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SubordinateConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    properties.subordinateConfig = 1;
                                    if (!$util.isString(message.certificateAuthority))
                                        return "certificateAuthority: string expected";
                                }
                                if (message.pemIssuerChain != null && message.hasOwnProperty("pemIssuerChain")) {
                                    if (properties.subordinateConfig === 1)
                                        return "subordinateConfig: multiple values";
                                    properties.subordinateConfig = 1;
                                    {
                                        var error = $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.verify(message.pemIssuerChain);
                                        if (error)
                                            return "pemIssuerChain." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SubordinateConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.SubordinateConfig} SubordinateConfig
                             */
                            SubordinateConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.SubordinateConfig)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.SubordinateConfig();
                                if (object.certificateAuthority != null)
                                    message.certificateAuthority = String(object.certificateAuthority);
                                if (object.pemIssuerChain != null) {
                                    if (typeof object.pemIssuerChain !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.SubordinateConfig.pemIssuerChain: object expected");
                                    message.pemIssuerChain = $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.fromObject(object.pemIssuerChain);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SubordinateConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.SubordinateConfig} message SubordinateConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SubordinateConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    object.certificateAuthority = message.certificateAuthority;
                                    if (options.oneofs)
                                        object.subordinateConfig = "certificateAuthority";
                                }
                                if (message.pemIssuerChain != null && message.hasOwnProperty("pemIssuerChain")) {
                                    object.pemIssuerChain = $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.toObject(message.pemIssuerChain, options);
                                    if (options.oneofs)
                                        object.subordinateConfig = "pemIssuerChain";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SubordinateConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SubordinateConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SubordinateConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SubordinateConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.SubordinateConfig";
                            };
    
                            SubordinateConfig.SubordinateConfigChain = (function() {
    
                                /**
                                 * Properties of a SubordinateConfigChain.
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                                 * @interface ISubordinateConfigChain
                                 * @property {Array.<string>|null} [pemCertificates] SubordinateConfigChain pemCertificates
                                 */
    
                                /**
                                 * Constructs a new SubordinateConfigChain.
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig
                                 * @classdesc Represents a SubordinateConfigChain.
                                 * @implements ISubordinateConfigChain
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain=} [properties] Properties to set
                                 */
                                function SubordinateConfigChain(properties) {
                                    this.pemCertificates = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubordinateConfigChain pemCertificates.
                                 * @member {Array.<string>} pemCertificates
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @instance
                                 */
                                SubordinateConfigChain.prototype.pemCertificates = $util.emptyArray;
    
                                /**
                                 * Creates a new SubordinateConfigChain instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain instance
                                 */
                                SubordinateConfigChain.create = function create(properties) {
                                    return new SubordinateConfigChain(properties);
                                };
    
                                /**
                                 * Encodes the specified SubordinateConfigChain message. Does not implicitly {@link google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain} message SubordinateConfigChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubordinateConfigChain.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.pemCertificates != null && message.pemCertificates.length)
                                        for (var i = 0; i < message.pemCertificates.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.pemCertificates[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubordinateConfigChain message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.SubordinateConfig.ISubordinateConfigChain} message SubordinateConfigChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubordinateConfigChain.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubordinateConfigChain message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubordinateConfigChain.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.pemCertificates && message.pemCertificates.length))
                                                    message.pemCertificates = [];
                                                message.pemCertificates.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubordinateConfigChain message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubordinateConfigChain.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubordinateConfigChain message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubordinateConfigChain.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.pemCertificates != null && message.hasOwnProperty("pemCertificates")) {
                                        if (!Array.isArray(message.pemCertificates))
                                            return "pemCertificates: array expected";
                                        for (var i = 0; i < message.pemCertificates.length; ++i)
                                            if (!$util.isString(message.pemCertificates[i]))
                                                return "pemCertificates: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubordinateConfigChain message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 */
                                SubordinateConfigChain.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain();
                                    if (object.pemCertificates) {
                                        if (!Array.isArray(object.pemCertificates))
                                            throw TypeError(".google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain.pemCertificates: array expected");
                                        message.pemCertificates = [];
                                        for (var i = 0; i < object.pemCertificates.length; ++i)
                                            message.pemCertificates[i] = String(object.pemCertificates[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubordinateConfigChain message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain} message SubordinateConfigChain
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubordinateConfigChain.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.pemCertificates = [];
                                    if (message.pemCertificates && message.pemCertificates.length) {
                                        object.pemCertificates = [];
                                        for (var j = 0; j < message.pemCertificates.length; ++j)
                                            object.pemCertificates[j] = message.pemCertificates[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this SubordinateConfigChain to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubordinateConfigChain.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubordinateConfigChain
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubordinateConfigChain.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.SubordinateConfig.SubordinateConfigChain";
                                };
    
                                return SubordinateConfigChain;
                            })();
    
                            return SubordinateConfig;
                        })();
    
                        v1.PublicKey = (function() {
    
                            /**
                             * Properties of a PublicKey.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IPublicKey
                             * @property {Uint8Array|null} [key] PublicKey key
                             * @property {google.cloud.security.privateca.v1.PublicKey.KeyFormat|null} [format] PublicKey format
                             */
    
                            /**
                             * Constructs a new PublicKey.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a PublicKey.
                             * @implements IPublicKey
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IPublicKey=} [properties] Properties to set
                             */
                            function PublicKey(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PublicKey key.
                             * @member {Uint8Array} key
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @instance
                             */
                            PublicKey.prototype.key = $util.newBuffer([]);
    
                            /**
                             * PublicKey format.
                             * @member {google.cloud.security.privateca.v1.PublicKey.KeyFormat} format
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @instance
                             */
                            PublicKey.prototype.format = 0;
    
                            /**
                             * Creates a new PublicKey instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1.IPublicKey=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.PublicKey} PublicKey instance
                             */
                            PublicKey.create = function create(properties) {
                                return new PublicKey(properties);
                            };
    
                            /**
                             * Encodes the specified PublicKey message. Does not implicitly {@link google.cloud.security.privateca.v1.PublicKey.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1.IPublicKey} message PublicKey message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PublicKey.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.key);
                                if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.format);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PublicKey message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.PublicKey.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1.IPublicKey} message PublicKey message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PublicKey message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.PublicKey} PublicKey
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PublicKey.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.PublicKey();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.key = reader.bytes();
                                            break;
                                        }
                                    case 2: {
                                            message.format = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PublicKey message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.PublicKey} PublicKey
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PublicKey.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PublicKey message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PublicKey.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
                                        return "key: buffer expected";
                                if (message.format != null && message.hasOwnProperty("format"))
                                    switch (message.format) {
                                    default:
                                        return "format: enum value expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.PublicKey} PublicKey
                             */
                            PublicKey.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.PublicKey)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.PublicKey();
                                if (object.key != null)
                                    if (typeof object.key === "string")
                                        $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
                                    else if (object.key.length >= 0)
                                        message.key = object.key;
                                switch (object.format) {
                                default:
                                    if (typeof object.format === "number") {
                                        message.format = object.format;
                                        break;
                                    }
                                    break;
                                case "KEY_FORMAT_UNSPECIFIED":
                                case 0:
                                    message.format = 0;
                                    break;
                                case "PEM":
                                case 1:
                                    message.format = 1;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PublicKey message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1.PublicKey} message PublicKey
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PublicKey.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if (options.bytes === String)
                                        object.key = "";
                                    else {
                                        object.key = [];
                                        if (options.bytes !== Array)
                                            object.key = $util.newBuffer(object.key);
                                    }
                                    object.format = options.enums === String ? "KEY_FORMAT_UNSPECIFIED" : 0;
                                }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
                                if (message.format != null && message.hasOwnProperty("format"))
                                    object.format = options.enums === String ? $root.google.cloud.security.privateca.v1.PublicKey.KeyFormat[message.format] === undefined ? message.format : $root.google.cloud.security.privateca.v1.PublicKey.KeyFormat[message.format] : message.format;
                                return object;
                            };
    
                            /**
                             * Converts this PublicKey to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PublicKey.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PublicKey
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.PublicKey
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.PublicKey";
                            };
    
                            /**
                             * KeyFormat enum.
                             * @name google.cloud.security.privateca.v1.PublicKey.KeyFormat
                             * @enum {number}
                             * @property {number} KEY_FORMAT_UNSPECIFIED=0 KEY_FORMAT_UNSPECIFIED value
                             * @property {number} PEM=1 PEM value
                             */
                            PublicKey.KeyFormat = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "KEY_FORMAT_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "PEM"] = 1;
                                return values;
                            })();
    
                            return PublicKey;
                        })();
    
                        v1.CertificateConfig = (function() {
    
                            /**
                             * Properties of a CertificateConfig.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateConfig
                             * @property {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig|null} [subjectConfig] CertificateConfig subjectConfig
                             * @property {google.cloud.security.privateca.v1.IX509Parameters|null} [x509Config] CertificateConfig x509Config
                             * @property {google.cloud.security.privateca.v1.IPublicKey|null} [publicKey] CertificateConfig publicKey
                             */
    
                            /**
                             * Constructs a new CertificateConfig.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateConfig.
                             * @implements ICertificateConfig
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateConfig=} [properties] Properties to set
                             */
                            function CertificateConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateConfig subjectConfig.
                             * @member {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig|null|undefined} subjectConfig
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.subjectConfig = null;
    
                            /**
                             * CertificateConfig x509Config.
                             * @member {google.cloud.security.privateca.v1.IX509Parameters|null|undefined} x509Config
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.x509Config = null;
    
                            /**
                             * CertificateConfig publicKey.
                             * @member {google.cloud.security.privateca.v1.IPublicKey|null|undefined} publicKey
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.publicKey = null;
    
                            /**
                             * Creates a new CertificateConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateConfig=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateConfig} CertificateConfig instance
                             */
                            CertificateConfig.create = function create(properties) {
                                return new CertificateConfig(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateConfig message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateConfig} message CertificateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectConfig != null && Object.hasOwnProperty.call(message, "subjectConfig"))
                                    $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.encode(message.subjectConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.x509Config != null && Object.hasOwnProperty.call(message, "x509Config"))
                                    $root.google.cloud.security.privateca.v1.X509Parameters.encode(message.x509Config, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.publicKey != null && Object.hasOwnProperty.call(message, "publicKey"))
                                    $root.google.cloud.security.privateca.v1.PublicKey.encode(message.publicKey, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateConfig} message CertificateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateConfig} CertificateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectConfig = $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.x509Config = $root.google.cloud.security.privateca.v1.X509Parameters.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateConfig} CertificateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateConfig message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectConfig != null && message.hasOwnProperty("subjectConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.verify(message.subjectConfig);
                                    if (error)
                                        return "subjectConfig." + error;
                                }
                                if (message.x509Config != null && message.hasOwnProperty("x509Config")) {
                                    var error = $root.google.cloud.security.privateca.v1.X509Parameters.verify(message.x509Config);
                                    if (error)
                                        return "x509Config." + error;
                                }
                                if (message.publicKey != null && message.hasOwnProperty("publicKey")) {
                                    var error = $root.google.cloud.security.privateca.v1.PublicKey.verify(message.publicKey);
                                    if (error)
                                        return "publicKey." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateConfig} CertificateConfig
                             */
                            CertificateConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateConfig)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateConfig();
                                if (object.subjectConfig != null) {
                                    if (typeof object.subjectConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateConfig.subjectConfig: object expected");
                                    message.subjectConfig = $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.fromObject(object.subjectConfig);
                                }
                                if (object.x509Config != null) {
                                    if (typeof object.x509Config !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateConfig.x509Config: object expected");
                                    message.x509Config = $root.google.cloud.security.privateca.v1.X509Parameters.fromObject(object.x509Config);
                                }
                                if (object.publicKey != null) {
                                    if (typeof object.publicKey !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateConfig.publicKey: object expected");
                                    message.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.fromObject(object.publicKey);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateConfig} message CertificateConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.subjectConfig = null;
                                    object.x509Config = null;
                                    object.publicKey = null;
                                }
                                if (message.subjectConfig != null && message.hasOwnProperty("subjectConfig"))
                                    object.subjectConfig = $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.toObject(message.subjectConfig, options);
                                if (message.x509Config != null && message.hasOwnProperty("x509Config"))
                                    object.x509Config = $root.google.cloud.security.privateca.v1.X509Parameters.toObject(message.x509Config, options);
                                if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                    object.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.toObject(message.publicKey, options);
                                return object;
                            };
    
                            /**
                             * Converts this CertificateConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateConfig";
                            };
    
                            CertificateConfig.SubjectConfig = (function() {
    
                                /**
                                 * Properties of a SubjectConfig.
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig
                                 * @interface ISubjectConfig
                                 * @property {google.cloud.security.privateca.v1.ISubject|null} [subject] SubjectConfig subject
                                 * @property {google.cloud.security.privateca.v1.ISubjectAltNames|null} [subjectAltName] SubjectConfig subjectAltName
                                 */
    
                                /**
                                 * Constructs a new SubjectConfig.
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig
                                 * @classdesc Represents a SubjectConfig.
                                 * @implements ISubjectConfig
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig=} [properties] Properties to set
                                 */
                                function SubjectConfig(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubjectConfig subject.
                                 * @member {google.cloud.security.privateca.v1.ISubject|null|undefined} subject
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @instance
                                 */
                                SubjectConfig.prototype.subject = null;
    
                                /**
                                 * SubjectConfig subjectAltName.
                                 * @member {google.cloud.security.privateca.v1.ISubjectAltNames|null|undefined} subjectAltName
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @instance
                                 */
                                SubjectConfig.prototype.subjectAltName = null;
    
                                /**
                                 * Creates a new SubjectConfig instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig} SubjectConfig instance
                                 */
                                SubjectConfig.create = function create(properties) {
                                    return new SubjectConfig(properties);
                                };
    
                                /**
                                 * Encodes the specified SubjectConfig message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig} message SubjectConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectConfig.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.subject != null && Object.hasOwnProperty.call(message, "subject"))
                                        $root.google.cloud.security.privateca.v1.Subject.encode(message.subject, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.subjectAltName != null && Object.hasOwnProperty.call(message, "subjectAltName"))
                                        $root.google.cloud.security.privateca.v1.SubjectAltNames.encode(message.subjectAltName, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubjectConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateConfig.ISubjectConfig} message SubjectConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubjectConfig message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig} SubjectConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectConfig.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.subject = $root.google.cloud.security.privateca.v1.Subject.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubjectConfig message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig} SubjectConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectConfig.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubjectConfig message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubjectConfig.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.subject != null && message.hasOwnProperty("subject")) {
                                        var error = $root.google.cloud.security.privateca.v1.Subject.verify(message.subject);
                                        if (error)
                                            return "subject." + error;
                                    }
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName")) {
                                        var error = $root.google.cloud.security.privateca.v1.SubjectAltNames.verify(message.subjectAltName);
                                        if (error)
                                            return "subjectAltName." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubjectConfig message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig} SubjectConfig
                                 */
                                SubjectConfig.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig();
                                    if (object.subject != null) {
                                        if (typeof object.subject !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.subject: object expected");
                                        message.subject = $root.google.cloud.security.privateca.v1.Subject.fromObject(object.subject);
                                    }
                                    if (object.subjectAltName != null) {
                                        if (typeof object.subjectAltName !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig.subjectAltName: object expected");
                                        message.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.fromObject(object.subjectAltName);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubjectConfig message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig} message SubjectConfig
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubjectConfig.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.subject = null;
                                        object.subjectAltName = null;
                                    }
                                    if (message.subject != null && message.hasOwnProperty("subject"))
                                        object.subject = $root.google.cloud.security.privateca.v1.Subject.toObject(message.subject, options);
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName"))
                                        object.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.toObject(message.subjectAltName, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this SubjectConfig to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubjectConfig.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubjectConfig
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubjectConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateConfig.SubjectConfig";
                                };
    
                                return SubjectConfig;
                            })();
    
                            return CertificateConfig;
                        })();
    
                        v1.CertificateDescription = (function() {
    
                            /**
                             * Properties of a CertificateDescription.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateDescription
                             * @property {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription|null} [subjectDescription] CertificateDescription subjectDescription
                             * @property {google.cloud.security.privateca.v1.IX509Parameters|null} [x509Description] CertificateDescription x509Description
                             * @property {google.cloud.security.privateca.v1.IPublicKey|null} [publicKey] CertificateDescription publicKey
                             * @property {google.cloud.security.privateca.v1.CertificateDescription.IKeyId|null} [subjectKeyId] CertificateDescription subjectKeyId
                             * @property {google.cloud.security.privateca.v1.CertificateDescription.IKeyId|null} [authorityKeyId] CertificateDescription authorityKeyId
                             * @property {Array.<string>|null} [crlDistributionPoints] CertificateDescription crlDistributionPoints
                             * @property {Array.<string>|null} [aiaIssuingCertificateUrls] CertificateDescription aiaIssuingCertificateUrls
                             * @property {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint|null} [certFingerprint] CertificateDescription certFingerprint
                             */
    
                            /**
                             * Constructs a new CertificateDescription.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateDescription.
                             * @implements ICertificateDescription
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateDescription=} [properties] Properties to set
                             */
                            function CertificateDescription(properties) {
                                this.crlDistributionPoints = [];
                                this.aiaIssuingCertificateUrls = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateDescription subjectDescription.
                             * @member {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription|null|undefined} subjectDescription
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.subjectDescription = null;
    
                            /**
                             * CertificateDescription x509Description.
                             * @member {google.cloud.security.privateca.v1.IX509Parameters|null|undefined} x509Description
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.x509Description = null;
    
                            /**
                             * CertificateDescription publicKey.
                             * @member {google.cloud.security.privateca.v1.IPublicKey|null|undefined} publicKey
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.publicKey = null;
    
                            /**
                             * CertificateDescription subjectKeyId.
                             * @member {google.cloud.security.privateca.v1.CertificateDescription.IKeyId|null|undefined} subjectKeyId
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.subjectKeyId = null;
    
                            /**
                             * CertificateDescription authorityKeyId.
                             * @member {google.cloud.security.privateca.v1.CertificateDescription.IKeyId|null|undefined} authorityKeyId
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.authorityKeyId = null;
    
                            /**
                             * CertificateDescription crlDistributionPoints.
                             * @member {Array.<string>} crlDistributionPoints
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.crlDistributionPoints = $util.emptyArray;
    
                            /**
                             * CertificateDescription aiaIssuingCertificateUrls.
                             * @member {Array.<string>} aiaIssuingCertificateUrls
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.aiaIssuingCertificateUrls = $util.emptyArray;
    
                            /**
                             * CertificateDescription certFingerprint.
                             * @member {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint|null|undefined} certFingerprint
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.certFingerprint = null;
    
                            /**
                             * Creates a new CertificateDescription instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateDescription=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateDescription} CertificateDescription instance
                             */
                            CertificateDescription.create = function create(properties) {
                                return new CertificateDescription(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateDescription message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateDescription} message CertificateDescription message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateDescription.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectDescription != null && Object.hasOwnProperty.call(message, "subjectDescription"))
                                    $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.encode(message.subjectDescription, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.x509Description != null && Object.hasOwnProperty.call(message, "x509Description"))
                                    $root.google.cloud.security.privateca.v1.X509Parameters.encode(message.x509Description, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.publicKey != null && Object.hasOwnProperty.call(message, "publicKey"))
                                    $root.google.cloud.security.privateca.v1.PublicKey.encode(message.publicKey, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.subjectKeyId != null && Object.hasOwnProperty.call(message, "subjectKeyId"))
                                    $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.encode(message.subjectKeyId, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.authorityKeyId != null && Object.hasOwnProperty.call(message, "authorityKeyId"))
                                    $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.encode(message.authorityKeyId, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.crlDistributionPoints != null && message.crlDistributionPoints.length)
                                    for (var i = 0; i < message.crlDistributionPoints.length; ++i)
                                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.crlDistributionPoints[i]);
                                if (message.aiaIssuingCertificateUrls != null && message.aiaIssuingCertificateUrls.length)
                                    for (var i = 0; i < message.aiaIssuingCertificateUrls.length; ++i)
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.aiaIssuingCertificateUrls[i]);
                                if (message.certFingerprint != null && Object.hasOwnProperty.call(message, "certFingerprint"))
                                    $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.encode(message.certFingerprint, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateDescription message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateDescription} message CertificateDescription message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateDescription.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateDescription message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateDescription} CertificateDescription
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateDescription.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateDescription();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.x509Description = $root.google.cloud.security.privateca.v1.X509Parameters.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.subjectKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.authorityKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            if (!(message.crlDistributionPoints && message.crlDistributionPoints.length))
                                                message.crlDistributionPoints = [];
                                            message.crlDistributionPoints.push(reader.string());
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.aiaIssuingCertificateUrls && message.aiaIssuingCertificateUrls.length))
                                                message.aiaIssuingCertificateUrls = [];
                                            message.aiaIssuingCertificateUrls.push(reader.string());
                                            break;
                                        }
                                    case 8: {
                                            message.certFingerprint = $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateDescription message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateDescription} CertificateDescription
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateDescription.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateDescription message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateDescription.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectDescription != null && message.hasOwnProperty("subjectDescription")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.verify(message.subjectDescription);
                                    if (error)
                                        return "subjectDescription." + error;
                                }
                                if (message.x509Description != null && message.hasOwnProperty("x509Description")) {
                                    var error = $root.google.cloud.security.privateca.v1.X509Parameters.verify(message.x509Description);
                                    if (error)
                                        return "x509Description." + error;
                                }
                                if (message.publicKey != null && message.hasOwnProperty("publicKey")) {
                                    var error = $root.google.cloud.security.privateca.v1.PublicKey.verify(message.publicKey);
                                    if (error)
                                        return "publicKey." + error;
                                }
                                if (message.subjectKeyId != null && message.hasOwnProperty("subjectKeyId")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.verify(message.subjectKeyId);
                                    if (error)
                                        return "subjectKeyId." + error;
                                }
                                if (message.authorityKeyId != null && message.hasOwnProperty("authorityKeyId")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.verify(message.authorityKeyId);
                                    if (error)
                                        return "authorityKeyId." + error;
                                }
                                if (message.crlDistributionPoints != null && message.hasOwnProperty("crlDistributionPoints")) {
                                    if (!Array.isArray(message.crlDistributionPoints))
                                        return "crlDistributionPoints: array expected";
                                    for (var i = 0; i < message.crlDistributionPoints.length; ++i)
                                        if (!$util.isString(message.crlDistributionPoints[i]))
                                            return "crlDistributionPoints: string[] expected";
                                }
                                if (message.aiaIssuingCertificateUrls != null && message.hasOwnProperty("aiaIssuingCertificateUrls")) {
                                    if (!Array.isArray(message.aiaIssuingCertificateUrls))
                                        return "aiaIssuingCertificateUrls: array expected";
                                    for (var i = 0; i < message.aiaIssuingCertificateUrls.length; ++i)
                                        if (!$util.isString(message.aiaIssuingCertificateUrls[i]))
                                            return "aiaIssuingCertificateUrls: string[] expected";
                                }
                                if (message.certFingerprint != null && message.hasOwnProperty("certFingerprint")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.verify(message.certFingerprint);
                                    if (error)
                                        return "certFingerprint." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateDescription message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateDescription} CertificateDescription
                             */
                            CertificateDescription.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateDescription)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateDescription();
                                if (object.subjectDescription != null) {
                                    if (typeof object.subjectDescription !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.subjectDescription: object expected");
                                    message.subjectDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.fromObject(object.subjectDescription);
                                }
                                if (object.x509Description != null) {
                                    if (typeof object.x509Description !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.x509Description: object expected");
                                    message.x509Description = $root.google.cloud.security.privateca.v1.X509Parameters.fromObject(object.x509Description);
                                }
                                if (object.publicKey != null) {
                                    if (typeof object.publicKey !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.publicKey: object expected");
                                    message.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.fromObject(object.publicKey);
                                }
                                if (object.subjectKeyId != null) {
                                    if (typeof object.subjectKeyId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.subjectKeyId: object expected");
                                    message.subjectKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.fromObject(object.subjectKeyId);
                                }
                                if (object.authorityKeyId != null) {
                                    if (typeof object.authorityKeyId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.authorityKeyId: object expected");
                                    message.authorityKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.fromObject(object.authorityKeyId);
                                }
                                if (object.crlDistributionPoints) {
                                    if (!Array.isArray(object.crlDistributionPoints))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.crlDistributionPoints: array expected");
                                    message.crlDistributionPoints = [];
                                    for (var i = 0; i < object.crlDistributionPoints.length; ++i)
                                        message.crlDistributionPoints[i] = String(object.crlDistributionPoints[i]);
                                }
                                if (object.aiaIssuingCertificateUrls) {
                                    if (!Array.isArray(object.aiaIssuingCertificateUrls))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.aiaIssuingCertificateUrls: array expected");
                                    message.aiaIssuingCertificateUrls = [];
                                    for (var i = 0; i < object.aiaIssuingCertificateUrls.length; ++i)
                                        message.aiaIssuingCertificateUrls[i] = String(object.aiaIssuingCertificateUrls[i]);
                                }
                                if (object.certFingerprint != null) {
                                    if (typeof object.certFingerprint !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.certFingerprint: object expected");
                                    message.certFingerprint = $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.fromObject(object.certFingerprint);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateDescription message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateDescription} message CertificateDescription
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateDescription.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.crlDistributionPoints = [];
                                    object.aiaIssuingCertificateUrls = [];
                                }
                                if (options.defaults) {
                                    object.subjectDescription = null;
                                    object.x509Description = null;
                                    object.publicKey = null;
                                    object.subjectKeyId = null;
                                    object.authorityKeyId = null;
                                    object.certFingerprint = null;
                                }
                                if (message.subjectDescription != null && message.hasOwnProperty("subjectDescription"))
                                    object.subjectDescription = $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.toObject(message.subjectDescription, options);
                                if (message.x509Description != null && message.hasOwnProperty("x509Description"))
                                    object.x509Description = $root.google.cloud.security.privateca.v1.X509Parameters.toObject(message.x509Description, options);
                                if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                    object.publicKey = $root.google.cloud.security.privateca.v1.PublicKey.toObject(message.publicKey, options);
                                if (message.subjectKeyId != null && message.hasOwnProperty("subjectKeyId"))
                                    object.subjectKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.toObject(message.subjectKeyId, options);
                                if (message.authorityKeyId != null && message.hasOwnProperty("authorityKeyId"))
                                    object.authorityKeyId = $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId.toObject(message.authorityKeyId, options);
                                if (message.crlDistributionPoints && message.crlDistributionPoints.length) {
                                    object.crlDistributionPoints = [];
                                    for (var j = 0; j < message.crlDistributionPoints.length; ++j)
                                        object.crlDistributionPoints[j] = message.crlDistributionPoints[j];
                                }
                                if (message.aiaIssuingCertificateUrls && message.aiaIssuingCertificateUrls.length) {
                                    object.aiaIssuingCertificateUrls = [];
                                    for (var j = 0; j < message.aiaIssuingCertificateUrls.length; ++j)
                                        object.aiaIssuingCertificateUrls[j] = message.aiaIssuingCertificateUrls[j];
                                }
                                if (message.certFingerprint != null && message.hasOwnProperty("certFingerprint"))
                                    object.certFingerprint = $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.toObject(message.certFingerprint, options);
                                return object;
                            };
    
                            /**
                             * Converts this CertificateDescription to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateDescription.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateDescription
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateDescription
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateDescription";
                            };
    
                            CertificateDescription.SubjectDescription = (function() {
    
                                /**
                                 * Properties of a SubjectDescription.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @interface ISubjectDescription
                                 * @property {google.cloud.security.privateca.v1.ISubject|null} [subject] SubjectDescription subject
                                 * @property {google.cloud.security.privateca.v1.ISubjectAltNames|null} [subjectAltName] SubjectDescription subjectAltName
                                 * @property {string|null} [hexSerialNumber] SubjectDescription hexSerialNumber
                                 * @property {google.protobuf.IDuration|null} [lifetime] SubjectDescription lifetime
                                 * @property {google.protobuf.ITimestamp|null} [notBeforeTime] SubjectDescription notBeforeTime
                                 * @property {google.protobuf.ITimestamp|null} [notAfterTime] SubjectDescription notAfterTime
                                 */
    
                                /**
                                 * Constructs a new SubjectDescription.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @classdesc Represents a SubjectDescription.
                                 * @implements ISubjectDescription
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription=} [properties] Properties to set
                                 */
                                function SubjectDescription(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubjectDescription subject.
                                 * @member {google.cloud.security.privateca.v1.ISubject|null|undefined} subject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.subject = null;
    
                                /**
                                 * SubjectDescription subjectAltName.
                                 * @member {google.cloud.security.privateca.v1.ISubjectAltNames|null|undefined} subjectAltName
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.subjectAltName = null;
    
                                /**
                                 * SubjectDescription hexSerialNumber.
                                 * @member {string} hexSerialNumber
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.hexSerialNumber = "";
    
                                /**
                                 * SubjectDescription lifetime.
                                 * @member {google.protobuf.IDuration|null|undefined} lifetime
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.lifetime = null;
    
                                /**
                                 * SubjectDescription notBeforeTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} notBeforeTime
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.notBeforeTime = null;
    
                                /**
                                 * SubjectDescription notAfterTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} notAfterTime
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.notAfterTime = null;
    
                                /**
                                 * Creates a new SubjectDescription instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription} SubjectDescription instance
                                 */
                                SubjectDescription.create = function create(properties) {
                                    return new SubjectDescription(properties);
                                };
    
                                /**
                                 * Encodes the specified SubjectDescription message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription} message SubjectDescription message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectDescription.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.subject != null && Object.hasOwnProperty.call(message, "subject"))
                                        $root.google.cloud.security.privateca.v1.Subject.encode(message.subject, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.subjectAltName != null && Object.hasOwnProperty.call(message, "subjectAltName"))
                                        $root.google.cloud.security.privateca.v1.SubjectAltNames.encode(message.subjectAltName, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.hexSerialNumber != null && Object.hasOwnProperty.call(message, "hexSerialNumber"))
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.hexSerialNumber);
                                    if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                        $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                    if (message.notBeforeTime != null && Object.hasOwnProperty.call(message, "notBeforeTime"))
                                        $root.google.protobuf.Timestamp.encode(message.notBeforeTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.notAfterTime != null && Object.hasOwnProperty.call(message, "notAfterTime"))
                                        $root.google.protobuf.Timestamp.encode(message.notAfterTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubjectDescription message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ISubjectDescription} message SubjectDescription message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectDescription.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubjectDescription message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription} SubjectDescription
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectDescription.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.subject = $root.google.cloud.security.privateca.v1.Subject.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                message.hexSerialNumber = reader.string();
                                                break;
                                            }
                                        case 4: {
                                                message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 5: {
                                                message.notBeforeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.notAfterTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubjectDescription message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription} SubjectDescription
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectDescription.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubjectDescription message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubjectDescription.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.subject != null && message.hasOwnProperty("subject")) {
                                        var error = $root.google.cloud.security.privateca.v1.Subject.verify(message.subject);
                                        if (error)
                                            return "subject." + error;
                                    }
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName")) {
                                        var error = $root.google.cloud.security.privateca.v1.SubjectAltNames.verify(message.subjectAltName);
                                        if (error)
                                            return "subjectAltName." + error;
                                    }
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        if (!$util.isString(message.hexSerialNumber))
                                            return "hexSerialNumber: string expected";
                                    if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                        var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                        if (error)
                                            return "lifetime." + error;
                                    }
                                    if (message.notBeforeTime != null && message.hasOwnProperty("notBeforeTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.notBeforeTime);
                                        if (error)
                                            return "notBeforeTime." + error;
                                    }
                                    if (message.notAfterTime != null && message.hasOwnProperty("notAfterTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.notAfterTime);
                                        if (error)
                                            return "notAfterTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubjectDescription message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription} SubjectDescription
                                 */
                                SubjectDescription.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription();
                                    if (object.subject != null) {
                                        if (typeof object.subject !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.subject: object expected");
                                        message.subject = $root.google.cloud.security.privateca.v1.Subject.fromObject(object.subject);
                                    }
                                    if (object.subjectAltName != null) {
                                        if (typeof object.subjectAltName !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.subjectAltName: object expected");
                                        message.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.fromObject(object.subjectAltName);
                                    }
                                    if (object.hexSerialNumber != null)
                                        message.hexSerialNumber = String(object.hexSerialNumber);
                                    if (object.lifetime != null) {
                                        if (typeof object.lifetime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.lifetime: object expected");
                                        message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                    }
                                    if (object.notBeforeTime != null) {
                                        if (typeof object.notBeforeTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.notBeforeTime: object expected");
                                        message.notBeforeTime = $root.google.protobuf.Timestamp.fromObject(object.notBeforeTime);
                                    }
                                    if (object.notAfterTime != null) {
                                        if (typeof object.notAfterTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription.notAfterTime: object expected");
                                        message.notAfterTime = $root.google.protobuf.Timestamp.fromObject(object.notAfterTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubjectDescription message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription} message SubjectDescription
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubjectDescription.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.subject = null;
                                        object.subjectAltName = null;
                                        object.hexSerialNumber = "";
                                        object.lifetime = null;
                                        object.notBeforeTime = null;
                                        object.notAfterTime = null;
                                    }
                                    if (message.subject != null && message.hasOwnProperty("subject"))
                                        object.subject = $root.google.cloud.security.privateca.v1.Subject.toObject(message.subject, options);
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName"))
                                        object.subjectAltName = $root.google.cloud.security.privateca.v1.SubjectAltNames.toObject(message.subjectAltName, options);
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        object.hexSerialNumber = message.hexSerialNumber;
                                    if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                        object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                    if (message.notBeforeTime != null && message.hasOwnProperty("notBeforeTime"))
                                        object.notBeforeTime = $root.google.protobuf.Timestamp.toObject(message.notBeforeTime, options);
                                    if (message.notAfterTime != null && message.hasOwnProperty("notAfterTime"))
                                        object.notAfterTime = $root.google.protobuf.Timestamp.toObject(message.notAfterTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this SubjectDescription to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubjectDescription.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubjectDescription
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubjectDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateDescription.SubjectDescription";
                                };
    
                                return SubjectDescription;
                            })();
    
                            CertificateDescription.KeyId = (function() {
    
                                /**
                                 * Properties of a KeyId.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @interface IKeyId
                                 * @property {string|null} [keyId] KeyId keyId
                                 */
    
                                /**
                                 * Constructs a new KeyId.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @classdesc Represents a KeyId.
                                 * @implements IKeyId
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.IKeyId=} [properties] Properties to set
                                 */
                                function KeyId(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyId keyId.
                                 * @member {string} keyId
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @instance
                                 */
                                KeyId.prototype.keyId = "";
    
                                /**
                                 * Creates a new KeyId instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.IKeyId=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.KeyId} KeyId instance
                                 */
                                KeyId.create = function create(properties) {
                                    return new KeyId(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyId message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.KeyId.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.IKeyId} message KeyId message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyId.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.keyId != null && Object.hasOwnProperty.call(message, "keyId"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.keyId);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyId message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.KeyId.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.IKeyId} message KeyId message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyId.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyId message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.KeyId} KeyId
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyId.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.keyId = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyId message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.KeyId} KeyId
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyId.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyId message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyId.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.keyId != null && message.hasOwnProperty("keyId"))
                                        if (!$util.isString(message.keyId))
                                            return "keyId: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyId message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.KeyId} KeyId
                                 */
                                KeyId.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateDescription.KeyId();
                                    if (object.keyId != null)
                                        message.keyId = String(object.keyId);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyId message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.KeyId} message KeyId
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyId.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.keyId = "";
                                    if (message.keyId != null && message.hasOwnProperty("keyId"))
                                        object.keyId = message.keyId;
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyId to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyId.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyId
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.KeyId
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateDescription.KeyId";
                                };
    
                                return KeyId;
                            })();
    
                            CertificateDescription.CertificateFingerprint = (function() {
    
                                /**
                                 * Properties of a CertificateFingerprint.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @interface ICertificateFingerprint
                                 * @property {string|null} [sha256Hash] CertificateFingerprint sha256Hash
                                 */
    
                                /**
                                 * Constructs a new CertificateFingerprint.
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription
                                 * @classdesc Represents a CertificateFingerprint.
                                 * @implements ICertificateFingerprint
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint=} [properties] Properties to set
                                 */
                                function CertificateFingerprint(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CertificateFingerprint sha256Hash.
                                 * @member {string} sha256Hash
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @instance
                                 */
                                CertificateFingerprint.prototype.sha256Hash = "";
    
                                /**
                                 * Creates a new CertificateFingerprint instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint} CertificateFingerprint instance
                                 */
                                CertificateFingerprint.create = function create(properties) {
                                    return new CertificateFingerprint(properties);
                                };
    
                                /**
                                 * Encodes the specified CertificateFingerprint message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint} message CertificateFingerprint message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateFingerprint.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.sha256Hash != null && Object.hasOwnProperty.call(message, "sha256Hash"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.sha256Hash);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CertificateFingerprint message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.ICertificateFingerprint} message CertificateFingerprint message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateFingerprint.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CertificateFingerprint message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateFingerprint.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.sha256Hash = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CertificateFingerprint message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateFingerprint.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CertificateFingerprint message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CertificateFingerprint.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                        if (!$util.isString(message.sha256Hash))
                                            return "sha256Hash: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CertificateFingerprint message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 */
                                CertificateFingerprint.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint();
                                    if (object.sha256Hash != null)
                                        message.sha256Hash = String(object.sha256Hash);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CertificateFingerprint message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint} message CertificateFingerprint
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CertificateFingerprint.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.sha256Hash = "";
                                    if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                        object.sha256Hash = message.sha256Hash;
                                    return object;
                                };
    
                                /**
                                 * Converts this CertificateFingerprint to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CertificateFingerprint.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CertificateFingerprint
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CertificateFingerprint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateDescription.CertificateFingerprint";
                                };
    
                                return CertificateFingerprint;
                            })();
    
                            return CertificateDescription;
                        })();
    
                        v1.ObjectId = (function() {
    
                            /**
                             * Properties of an ObjectId.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IObjectId
                             * @property {Array.<number>|null} [objectIdPath] ObjectId objectIdPath
                             */
    
                            /**
                             * Constructs a new ObjectId.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an ObjectId.
                             * @implements IObjectId
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IObjectId=} [properties] Properties to set
                             */
                            function ObjectId(properties) {
                                this.objectIdPath = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ObjectId objectIdPath.
                             * @member {Array.<number>} objectIdPath
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @instance
                             */
                            ObjectId.prototype.objectIdPath = $util.emptyArray;
    
                            /**
                             * Creates a new ObjectId instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1.IObjectId=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ObjectId} ObjectId instance
                             */
                            ObjectId.create = function create(properties) {
                                return new ObjectId(properties);
                            };
    
                            /**
                             * Encodes the specified ObjectId message. Does not implicitly {@link google.cloud.security.privateca.v1.ObjectId.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1.IObjectId} message ObjectId message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ObjectId.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.objectIdPath != null && message.objectIdPath.length) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                    for (var i = 0; i < message.objectIdPath.length; ++i)
                                        writer.int32(message.objectIdPath[i]);
                                    writer.ldelim();
                                }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ObjectId message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ObjectId.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1.IObjectId} message ObjectId message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ObjectId.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ObjectId message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ObjectId} ObjectId
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ObjectId.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ObjectId();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.objectIdPath && message.objectIdPath.length))
                                                message.objectIdPath = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.objectIdPath.push(reader.int32());
                                            } else
                                                message.objectIdPath.push(reader.int32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ObjectId message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ObjectId} ObjectId
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ObjectId.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ObjectId message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ObjectId.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.objectIdPath != null && message.hasOwnProperty("objectIdPath")) {
                                    if (!Array.isArray(message.objectIdPath))
                                        return "objectIdPath: array expected";
                                    for (var i = 0; i < message.objectIdPath.length; ++i)
                                        if (!$util.isInteger(message.objectIdPath[i]))
                                            return "objectIdPath: integer[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ObjectId message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ObjectId} ObjectId
                             */
                            ObjectId.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ObjectId)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ObjectId();
                                if (object.objectIdPath) {
                                    if (!Array.isArray(object.objectIdPath))
                                        throw TypeError(".google.cloud.security.privateca.v1.ObjectId.objectIdPath: array expected");
                                    message.objectIdPath = [];
                                    for (var i = 0; i < object.objectIdPath.length; ++i)
                                        message.objectIdPath[i] = object.objectIdPath[i] | 0;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ObjectId message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1.ObjectId} message ObjectId
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ObjectId.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.objectIdPath = [];
                                if (message.objectIdPath && message.objectIdPath.length) {
                                    object.objectIdPath = [];
                                    for (var j = 0; j < message.objectIdPath.length; ++j)
                                        object.objectIdPath[j] = message.objectIdPath[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ObjectId to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ObjectId.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ObjectId
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ObjectId
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ObjectId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ObjectId";
                            };
    
                            return ObjectId;
                        })();
    
                        v1.X509Extension = (function() {
    
                            /**
                             * Properties of a X509Extension.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IX509Extension
                             * @property {google.cloud.security.privateca.v1.IObjectId|null} [objectId] X509Extension objectId
                             * @property {boolean|null} [critical] X509Extension critical
                             * @property {Uint8Array|null} [value] X509Extension value
                             */
    
                            /**
                             * Constructs a new X509Extension.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a X509Extension.
                             * @implements IX509Extension
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IX509Extension=} [properties] Properties to set
                             */
                            function X509Extension(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * X509Extension objectId.
                             * @member {google.cloud.security.privateca.v1.IObjectId|null|undefined} objectId
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.objectId = null;
    
                            /**
                             * X509Extension critical.
                             * @member {boolean} critical
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.critical = false;
    
                            /**
                             * X509Extension value.
                             * @member {Uint8Array} value
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.value = $util.newBuffer([]);
    
                            /**
                             * Creates a new X509Extension instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Extension=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.X509Extension} X509Extension instance
                             */
                            X509Extension.create = function create(properties) {
                                return new X509Extension(properties);
                            };
    
                            /**
                             * Encodes the specified X509Extension message. Does not implicitly {@link google.cloud.security.privateca.v1.X509Extension.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Extension} message X509Extension message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Extension.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.objectId != null && Object.hasOwnProperty.call(message, "objectId"))
                                    $root.google.cloud.security.privateca.v1.ObjectId.encode(message.objectId, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.critical != null && Object.hasOwnProperty.call(message, "critical"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.critical);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified X509Extension message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.X509Extension.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1.IX509Extension} message X509Extension message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Extension.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a X509Extension message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.X509Extension} X509Extension
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Extension.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.X509Extension();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.objectId = $root.google.cloud.security.privateca.v1.ObjectId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.critical = reader.bool();
                                            break;
                                        }
                                    case 3: {
                                            message.value = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a X509Extension message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.X509Extension} X509Extension
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Extension.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a X509Extension message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            X509Extension.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.objectId != null && message.hasOwnProperty("objectId")) {
                                    var error = $root.google.cloud.security.privateca.v1.ObjectId.verify(message.objectId);
                                    if (error)
                                        return "objectId." + error;
                                }
                                if (message.critical != null && message.hasOwnProperty("critical"))
                                    if (typeof message.critical !== "boolean")
                                        return "critical: boolean expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                        return "value: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates a X509Extension message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.X509Extension} X509Extension
                             */
                            X509Extension.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.X509Extension)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.X509Extension();
                                if (object.objectId != null) {
                                    if (typeof object.objectId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.X509Extension.objectId: object expected");
                                    message.objectId = $root.google.cloud.security.privateca.v1.ObjectId.fromObject(object.objectId);
                                }
                                if (object.critical != null)
                                    message.critical = Boolean(object.critical);
                                if (object.value != null)
                                    if (typeof object.value === "string")
                                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                                    else if (object.value.length >= 0)
                                        message.value = object.value;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a X509Extension message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1.X509Extension} message X509Extension
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            X509Extension.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.objectId = null;
                                    object.critical = false;
                                    if (options.bytes === String)
                                        object.value = "";
                                    else {
                                        object.value = [];
                                        if (options.bytes !== Array)
                                            object.value = $util.newBuffer(object.value);
                                    }
                                }
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    object.objectId = $root.google.cloud.security.privateca.v1.ObjectId.toObject(message.objectId, options);
                                if (message.critical != null && message.hasOwnProperty("critical"))
                                    object.critical = message.critical;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                                return object;
                            };
    
                            /**
                             * Converts this X509Extension to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            X509Extension.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for X509Extension
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.X509Extension
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            X509Extension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.X509Extension";
                            };
    
                            return X509Extension;
                        })();
    
                        v1.KeyUsage = (function() {
    
                            /**
                             * Properties of a KeyUsage.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IKeyUsage
                             * @property {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions|null} [baseKeyUsage] KeyUsage baseKeyUsage
                             * @property {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions|null} [extendedKeyUsage] KeyUsage extendedKeyUsage
                             * @property {Array.<google.cloud.security.privateca.v1.IObjectId>|null} [unknownExtendedKeyUsages] KeyUsage unknownExtendedKeyUsages
                             */
    
                            /**
                             * Constructs a new KeyUsage.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a KeyUsage.
                             * @implements IKeyUsage
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IKeyUsage=} [properties] Properties to set
                             */
                            function KeyUsage(properties) {
                                this.unknownExtendedKeyUsages = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * KeyUsage baseKeyUsage.
                             * @member {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions|null|undefined} baseKeyUsage
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.baseKeyUsage = null;
    
                            /**
                             * KeyUsage extendedKeyUsage.
                             * @member {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions|null|undefined} extendedKeyUsage
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.extendedKeyUsage = null;
    
                            /**
                             * KeyUsage unknownExtendedKeyUsages.
                             * @member {Array.<google.cloud.security.privateca.v1.IObjectId>} unknownExtendedKeyUsages
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.unknownExtendedKeyUsages = $util.emptyArray;
    
                            /**
                             * Creates a new KeyUsage instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1.IKeyUsage=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.KeyUsage} KeyUsage instance
                             */
                            KeyUsage.create = function create(properties) {
                                return new KeyUsage(properties);
                            };
    
                            /**
                             * Encodes the specified KeyUsage message. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1.IKeyUsage} message KeyUsage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            KeyUsage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.baseKeyUsage != null && Object.hasOwnProperty.call(message, "baseKeyUsage"))
                                    $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.encode(message.baseKeyUsage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.extendedKeyUsage != null && Object.hasOwnProperty.call(message, "extendedKeyUsage"))
                                    $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.encode(message.extendedKeyUsage, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.unknownExtendedKeyUsages != null && message.unknownExtendedKeyUsages.length)
                                    for (var i = 0; i < message.unknownExtendedKeyUsages.length; ++i)
                                        $root.google.cloud.security.privateca.v1.ObjectId.encode(message.unknownExtendedKeyUsages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified KeyUsage message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1.IKeyUsage} message KeyUsage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            KeyUsage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a KeyUsage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.KeyUsage} KeyUsage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            KeyUsage.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.KeyUsage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.baseKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.extendedKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unknownExtendedKeyUsages && message.unknownExtendedKeyUsages.length))
                                                message.unknownExtendedKeyUsages = [];
                                            message.unknownExtendedKeyUsages.push($root.google.cloud.security.privateca.v1.ObjectId.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a KeyUsage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.KeyUsage} KeyUsage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            KeyUsage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a KeyUsage message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            KeyUsage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.baseKeyUsage != null && message.hasOwnProperty("baseKeyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.verify(message.baseKeyUsage);
                                    if (error)
                                        return "baseKeyUsage." + error;
                                }
                                if (message.extendedKeyUsage != null && message.hasOwnProperty("extendedKeyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.verify(message.extendedKeyUsage);
                                    if (error)
                                        return "extendedKeyUsage." + error;
                                }
                                if (message.unknownExtendedKeyUsages != null && message.hasOwnProperty("unknownExtendedKeyUsages")) {
                                    if (!Array.isArray(message.unknownExtendedKeyUsages))
                                        return "unknownExtendedKeyUsages: array expected";
                                    for (var i = 0; i < message.unknownExtendedKeyUsages.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.ObjectId.verify(message.unknownExtendedKeyUsages[i]);
                                        if (error)
                                            return "unknownExtendedKeyUsages." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a KeyUsage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.KeyUsage} KeyUsage
                             */
                            KeyUsage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.KeyUsage)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.KeyUsage();
                                if (object.baseKeyUsage != null) {
                                    if (typeof object.baseKeyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.KeyUsage.baseKeyUsage: object expected");
                                    message.baseKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.fromObject(object.baseKeyUsage);
                                }
                                if (object.extendedKeyUsage != null) {
                                    if (typeof object.extendedKeyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.KeyUsage.extendedKeyUsage: object expected");
                                    message.extendedKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.fromObject(object.extendedKeyUsage);
                                }
                                if (object.unknownExtendedKeyUsages) {
                                    if (!Array.isArray(object.unknownExtendedKeyUsages))
                                        throw TypeError(".google.cloud.security.privateca.v1.KeyUsage.unknownExtendedKeyUsages: array expected");
                                    message.unknownExtendedKeyUsages = [];
                                    for (var i = 0; i < object.unknownExtendedKeyUsages.length; ++i) {
                                        if (typeof object.unknownExtendedKeyUsages[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.KeyUsage.unknownExtendedKeyUsages: object expected");
                                        message.unknownExtendedKeyUsages[i] = $root.google.cloud.security.privateca.v1.ObjectId.fromObject(object.unknownExtendedKeyUsages[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a KeyUsage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1.KeyUsage} message KeyUsage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            KeyUsage.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.unknownExtendedKeyUsages = [];
                                if (options.defaults) {
                                    object.baseKeyUsage = null;
                                    object.extendedKeyUsage = null;
                                }
                                if (message.baseKeyUsage != null && message.hasOwnProperty("baseKeyUsage"))
                                    object.baseKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.toObject(message.baseKeyUsage, options);
                                if (message.extendedKeyUsage != null && message.hasOwnProperty("extendedKeyUsage"))
                                    object.extendedKeyUsage = $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.toObject(message.extendedKeyUsage, options);
                                if (message.unknownExtendedKeyUsages && message.unknownExtendedKeyUsages.length) {
                                    object.unknownExtendedKeyUsages = [];
                                    for (var j = 0; j < message.unknownExtendedKeyUsages.length; ++j)
                                        object.unknownExtendedKeyUsages[j] = $root.google.cloud.security.privateca.v1.ObjectId.toObject(message.unknownExtendedKeyUsages[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this KeyUsage to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            KeyUsage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for KeyUsage
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.KeyUsage
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            KeyUsage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.KeyUsage";
                            };
    
                            KeyUsage.KeyUsageOptions = (function() {
    
                                /**
                                 * Properties of a KeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage
                                 * @interface IKeyUsageOptions
                                 * @property {boolean|null} [digitalSignature] KeyUsageOptions digitalSignature
                                 * @property {boolean|null} [contentCommitment] KeyUsageOptions contentCommitment
                                 * @property {boolean|null} [keyEncipherment] KeyUsageOptions keyEncipherment
                                 * @property {boolean|null} [dataEncipherment] KeyUsageOptions dataEncipherment
                                 * @property {boolean|null} [keyAgreement] KeyUsageOptions keyAgreement
                                 * @property {boolean|null} [certSign] KeyUsageOptions certSign
                                 * @property {boolean|null} [crlSign] KeyUsageOptions crlSign
                                 * @property {boolean|null} [encipherOnly] KeyUsageOptions encipherOnly
                                 * @property {boolean|null} [decipherOnly] KeyUsageOptions decipherOnly
                                 */
    
                                /**
                                 * Constructs a new KeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage
                                 * @classdesc Represents a KeyUsageOptions.
                                 * @implements IKeyUsageOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions=} [properties] Properties to set
                                 */
                                function KeyUsageOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyUsageOptions digitalSignature.
                                 * @member {boolean} digitalSignature
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.digitalSignature = false;
    
                                /**
                                 * KeyUsageOptions contentCommitment.
                                 * @member {boolean} contentCommitment
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.contentCommitment = false;
    
                                /**
                                 * KeyUsageOptions keyEncipherment.
                                 * @member {boolean} keyEncipherment
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.keyEncipherment = false;
    
                                /**
                                 * KeyUsageOptions dataEncipherment.
                                 * @member {boolean} dataEncipherment
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.dataEncipherment = false;
    
                                /**
                                 * KeyUsageOptions keyAgreement.
                                 * @member {boolean} keyAgreement
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.keyAgreement = false;
    
                                /**
                                 * KeyUsageOptions certSign.
                                 * @member {boolean} certSign
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.certSign = false;
    
                                /**
                                 * KeyUsageOptions crlSign.
                                 * @member {boolean} crlSign
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.crlSign = false;
    
                                /**
                                 * KeyUsageOptions encipherOnly.
                                 * @member {boolean} encipherOnly
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.encipherOnly = false;
    
                                /**
                                 * KeyUsageOptions decipherOnly.
                                 * @member {boolean} decipherOnly
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.decipherOnly = false;
    
                                /**
                                 * Creates a new KeyUsageOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions} KeyUsageOptions instance
                                 */
                                KeyUsageOptions.create = function create(properties) {
                                    return new KeyUsageOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyUsageOptions message. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions} message KeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyUsageOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.digitalSignature != null && Object.hasOwnProperty.call(message, "digitalSignature"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.digitalSignature);
                                    if (message.contentCommitment != null && Object.hasOwnProperty.call(message, "contentCommitment"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.contentCommitment);
                                    if (message.keyEncipherment != null && Object.hasOwnProperty.call(message, "keyEncipherment"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.keyEncipherment);
                                    if (message.dataEncipherment != null && Object.hasOwnProperty.call(message, "dataEncipherment"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.dataEncipherment);
                                    if (message.keyAgreement != null && Object.hasOwnProperty.call(message, "keyAgreement"))
                                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.keyAgreement);
                                    if (message.certSign != null && Object.hasOwnProperty.call(message, "certSign"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.certSign);
                                    if (message.crlSign != null && Object.hasOwnProperty.call(message, "crlSign"))
                                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.crlSign);
                                    if (message.encipherOnly != null && Object.hasOwnProperty.call(message, "encipherOnly"))
                                        writer.uint32(/* id 8, wireType 0 =*/64).bool(message.encipherOnly);
                                    if (message.decipherOnly != null && Object.hasOwnProperty.call(message, "decipherOnly"))
                                        writer.uint32(/* id 9, wireType 0 =*/72).bool(message.decipherOnly);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyUsageOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IKeyUsageOptions} message KeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyUsageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyUsageOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyUsageOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.digitalSignature = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.contentCommitment = reader.bool();
                                                break;
                                            }
                                        case 3: {
                                                message.keyEncipherment = reader.bool();
                                                break;
                                            }
                                        case 4: {
                                                message.dataEncipherment = reader.bool();
                                                break;
                                            }
                                        case 5: {
                                                message.keyAgreement = reader.bool();
                                                break;
                                            }
                                        case 6: {
                                                message.certSign = reader.bool();
                                                break;
                                            }
                                        case 7: {
                                                message.crlSign = reader.bool();
                                                break;
                                            }
                                        case 8: {
                                                message.encipherOnly = reader.bool();
                                                break;
                                            }
                                        case 9: {
                                                message.decipherOnly = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyUsageOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyUsageOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyUsageOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyUsageOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.digitalSignature != null && message.hasOwnProperty("digitalSignature"))
                                        if (typeof message.digitalSignature !== "boolean")
                                            return "digitalSignature: boolean expected";
                                    if (message.contentCommitment != null && message.hasOwnProperty("contentCommitment"))
                                        if (typeof message.contentCommitment !== "boolean")
                                            return "contentCommitment: boolean expected";
                                    if (message.keyEncipherment != null && message.hasOwnProperty("keyEncipherment"))
                                        if (typeof message.keyEncipherment !== "boolean")
                                            return "keyEncipherment: boolean expected";
                                    if (message.dataEncipherment != null && message.hasOwnProperty("dataEncipherment"))
                                        if (typeof message.dataEncipherment !== "boolean")
                                            return "dataEncipherment: boolean expected";
                                    if (message.keyAgreement != null && message.hasOwnProperty("keyAgreement"))
                                        if (typeof message.keyAgreement !== "boolean")
                                            return "keyAgreement: boolean expected";
                                    if (message.certSign != null && message.hasOwnProperty("certSign"))
                                        if (typeof message.certSign !== "boolean")
                                            return "certSign: boolean expected";
                                    if (message.crlSign != null && message.hasOwnProperty("crlSign"))
                                        if (typeof message.crlSign !== "boolean")
                                            return "crlSign: boolean expected";
                                    if (message.encipherOnly != null && message.hasOwnProperty("encipherOnly"))
                                        if (typeof message.encipherOnly !== "boolean")
                                            return "encipherOnly: boolean expected";
                                    if (message.decipherOnly != null && message.hasOwnProperty("decipherOnly"))
                                        if (typeof message.decipherOnly !== "boolean")
                                            return "decipherOnly: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyUsageOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 */
                                KeyUsageOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions();
                                    if (object.digitalSignature != null)
                                        message.digitalSignature = Boolean(object.digitalSignature);
                                    if (object.contentCommitment != null)
                                        message.contentCommitment = Boolean(object.contentCommitment);
                                    if (object.keyEncipherment != null)
                                        message.keyEncipherment = Boolean(object.keyEncipherment);
                                    if (object.dataEncipherment != null)
                                        message.dataEncipherment = Boolean(object.dataEncipherment);
                                    if (object.keyAgreement != null)
                                        message.keyAgreement = Boolean(object.keyAgreement);
                                    if (object.certSign != null)
                                        message.certSign = Boolean(object.certSign);
                                    if (object.crlSign != null)
                                        message.crlSign = Boolean(object.crlSign);
                                    if (object.encipherOnly != null)
                                        message.encipherOnly = Boolean(object.encipherOnly);
                                    if (object.decipherOnly != null)
                                        message.decipherOnly = Boolean(object.decipherOnly);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyUsageOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions} message KeyUsageOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyUsageOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.digitalSignature = false;
                                        object.contentCommitment = false;
                                        object.keyEncipherment = false;
                                        object.dataEncipherment = false;
                                        object.keyAgreement = false;
                                        object.certSign = false;
                                        object.crlSign = false;
                                        object.encipherOnly = false;
                                        object.decipherOnly = false;
                                    }
                                    if (message.digitalSignature != null && message.hasOwnProperty("digitalSignature"))
                                        object.digitalSignature = message.digitalSignature;
                                    if (message.contentCommitment != null && message.hasOwnProperty("contentCommitment"))
                                        object.contentCommitment = message.contentCommitment;
                                    if (message.keyEncipherment != null && message.hasOwnProperty("keyEncipherment"))
                                        object.keyEncipherment = message.keyEncipherment;
                                    if (message.dataEncipherment != null && message.hasOwnProperty("dataEncipherment"))
                                        object.dataEncipherment = message.dataEncipherment;
                                    if (message.keyAgreement != null && message.hasOwnProperty("keyAgreement"))
                                        object.keyAgreement = message.keyAgreement;
                                    if (message.certSign != null && message.hasOwnProperty("certSign"))
                                        object.certSign = message.certSign;
                                    if (message.crlSign != null && message.hasOwnProperty("crlSign"))
                                        object.crlSign = message.crlSign;
                                    if (message.encipherOnly != null && message.hasOwnProperty("encipherOnly"))
                                        object.encipherOnly = message.encipherOnly;
                                    if (message.decipherOnly != null && message.hasOwnProperty("decipherOnly"))
                                        object.decipherOnly = message.decipherOnly;
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyUsageOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyUsageOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyUsageOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyUsageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.KeyUsage.KeyUsageOptions";
                                };
    
                                return KeyUsageOptions;
                            })();
    
                            KeyUsage.ExtendedKeyUsageOptions = (function() {
    
                                /**
                                 * Properties of an ExtendedKeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage
                                 * @interface IExtendedKeyUsageOptions
                                 * @property {boolean|null} [serverAuth] ExtendedKeyUsageOptions serverAuth
                                 * @property {boolean|null} [clientAuth] ExtendedKeyUsageOptions clientAuth
                                 * @property {boolean|null} [codeSigning] ExtendedKeyUsageOptions codeSigning
                                 * @property {boolean|null} [emailProtection] ExtendedKeyUsageOptions emailProtection
                                 * @property {boolean|null} [timeStamping] ExtendedKeyUsageOptions timeStamping
                                 * @property {boolean|null} [ocspSigning] ExtendedKeyUsageOptions ocspSigning
                                 */
    
                                /**
                                 * Constructs a new ExtendedKeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage
                                 * @classdesc Represents an ExtendedKeyUsageOptions.
                                 * @implements IExtendedKeyUsageOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions=} [properties] Properties to set
                                 */
                                function ExtendedKeyUsageOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ExtendedKeyUsageOptions serverAuth.
                                 * @member {boolean} serverAuth
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.serverAuth = false;
    
                                /**
                                 * ExtendedKeyUsageOptions clientAuth.
                                 * @member {boolean} clientAuth
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.clientAuth = false;
    
                                /**
                                 * ExtendedKeyUsageOptions codeSigning.
                                 * @member {boolean} codeSigning
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.codeSigning = false;
    
                                /**
                                 * ExtendedKeyUsageOptions emailProtection.
                                 * @member {boolean} emailProtection
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.emailProtection = false;
    
                                /**
                                 * ExtendedKeyUsageOptions timeStamping.
                                 * @member {boolean} timeStamping
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.timeStamping = false;
    
                                /**
                                 * ExtendedKeyUsageOptions ocspSigning.
                                 * @member {boolean} ocspSigning
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.ocspSigning = false;
    
                                /**
                                 * Creates a new ExtendedKeyUsageOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions instance
                                 */
                                ExtendedKeyUsageOptions.create = function create(properties) {
                                    return new ExtendedKeyUsageOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified ExtendedKeyUsageOptions message. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions} message ExtendedKeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtendedKeyUsageOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.serverAuth != null && Object.hasOwnProperty.call(message, "serverAuth"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.serverAuth);
                                    if (message.clientAuth != null && Object.hasOwnProperty.call(message, "clientAuth"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clientAuth);
                                    if (message.codeSigning != null && Object.hasOwnProperty.call(message, "codeSigning"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.codeSigning);
                                    if (message.emailProtection != null && Object.hasOwnProperty.call(message, "emailProtection"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.emailProtection);
                                    if (message.timeStamping != null && Object.hasOwnProperty.call(message, "timeStamping"))
                                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.timeStamping);
                                    if (message.ocspSigning != null && Object.hasOwnProperty.call(message, "ocspSigning"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.ocspSigning);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ExtendedKeyUsageOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.IExtendedKeyUsageOptions} message ExtendedKeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtendedKeyUsageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ExtendedKeyUsageOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtendedKeyUsageOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.serverAuth = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.clientAuth = reader.bool();
                                                break;
                                            }
                                        case 3: {
                                                message.codeSigning = reader.bool();
                                                break;
                                            }
                                        case 4: {
                                                message.emailProtection = reader.bool();
                                                break;
                                            }
                                        case 5: {
                                                message.timeStamping = reader.bool();
                                                break;
                                            }
                                        case 6: {
                                                message.ocspSigning = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ExtendedKeyUsageOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtendedKeyUsageOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ExtendedKeyUsageOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ExtendedKeyUsageOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.serverAuth != null && message.hasOwnProperty("serverAuth"))
                                        if (typeof message.serverAuth !== "boolean")
                                            return "serverAuth: boolean expected";
                                    if (message.clientAuth != null && message.hasOwnProperty("clientAuth"))
                                        if (typeof message.clientAuth !== "boolean")
                                            return "clientAuth: boolean expected";
                                    if (message.codeSigning != null && message.hasOwnProperty("codeSigning"))
                                        if (typeof message.codeSigning !== "boolean")
                                            return "codeSigning: boolean expected";
                                    if (message.emailProtection != null && message.hasOwnProperty("emailProtection"))
                                        if (typeof message.emailProtection !== "boolean")
                                            return "emailProtection: boolean expected";
                                    if (message.timeStamping != null && message.hasOwnProperty("timeStamping"))
                                        if (typeof message.timeStamping !== "boolean")
                                            return "timeStamping: boolean expected";
                                    if (message.ocspSigning != null && message.hasOwnProperty("ocspSigning"))
                                        if (typeof message.ocspSigning !== "boolean")
                                            return "ocspSigning: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an ExtendedKeyUsageOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 */
                                ExtendedKeyUsageOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions();
                                    if (object.serverAuth != null)
                                        message.serverAuth = Boolean(object.serverAuth);
                                    if (object.clientAuth != null)
                                        message.clientAuth = Boolean(object.clientAuth);
                                    if (object.codeSigning != null)
                                        message.codeSigning = Boolean(object.codeSigning);
                                    if (object.emailProtection != null)
                                        message.emailProtection = Boolean(object.emailProtection);
                                    if (object.timeStamping != null)
                                        message.timeStamping = Boolean(object.timeStamping);
                                    if (object.ocspSigning != null)
                                        message.ocspSigning = Boolean(object.ocspSigning);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ExtendedKeyUsageOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions} message ExtendedKeyUsageOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ExtendedKeyUsageOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.serverAuth = false;
                                        object.clientAuth = false;
                                        object.codeSigning = false;
                                        object.emailProtection = false;
                                        object.timeStamping = false;
                                        object.ocspSigning = false;
                                    }
                                    if (message.serverAuth != null && message.hasOwnProperty("serverAuth"))
                                        object.serverAuth = message.serverAuth;
                                    if (message.clientAuth != null && message.hasOwnProperty("clientAuth"))
                                        object.clientAuth = message.clientAuth;
                                    if (message.codeSigning != null && message.hasOwnProperty("codeSigning"))
                                        object.codeSigning = message.codeSigning;
                                    if (message.emailProtection != null && message.hasOwnProperty("emailProtection"))
                                        object.emailProtection = message.emailProtection;
                                    if (message.timeStamping != null && message.hasOwnProperty("timeStamping"))
                                        object.timeStamping = message.timeStamping;
                                    if (message.ocspSigning != null && message.hasOwnProperty("ocspSigning"))
                                        object.ocspSigning = message.ocspSigning;
                                    return object;
                                };
    
                                /**
                                 * Converts this ExtendedKeyUsageOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ExtendedKeyUsageOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ExtendedKeyUsageOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ExtendedKeyUsageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.KeyUsage.ExtendedKeyUsageOptions";
                                };
    
                                return ExtendedKeyUsageOptions;
                            })();
    
                            return KeyUsage;
                        })();
    
                        v1.Subject = (function() {
    
                            /**
                             * Properties of a Subject.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ISubject
                             * @property {string|null} [commonName] Subject commonName
                             * @property {string|null} [countryCode] Subject countryCode
                             * @property {string|null} [organization] Subject organization
                             * @property {string|null} [organizationalUnit] Subject organizationalUnit
                             * @property {string|null} [locality] Subject locality
                             * @property {string|null} [province] Subject province
                             * @property {string|null} [streetAddress] Subject streetAddress
                             * @property {string|null} [postalCode] Subject postalCode
                             */
    
                            /**
                             * Constructs a new Subject.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a Subject.
                             * @implements ISubject
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ISubject=} [properties] Properties to set
                             */
                            function Subject(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Subject commonName.
                             * @member {string} commonName
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.commonName = "";
    
                            /**
                             * Subject countryCode.
                             * @member {string} countryCode
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.countryCode = "";
    
                            /**
                             * Subject organization.
                             * @member {string} organization
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.organization = "";
    
                            /**
                             * Subject organizationalUnit.
                             * @member {string} organizationalUnit
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.organizationalUnit = "";
    
                            /**
                             * Subject locality.
                             * @member {string} locality
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.locality = "";
    
                            /**
                             * Subject province.
                             * @member {string} province
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.province = "";
    
                            /**
                             * Subject streetAddress.
                             * @member {string} streetAddress
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.streetAddress = "";
    
                            /**
                             * Subject postalCode.
                             * @member {string} postalCode
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             */
                            Subject.prototype.postalCode = "";
    
                            /**
                             * Creates a new Subject instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubject=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.Subject} Subject instance
                             */
                            Subject.create = function create(properties) {
                                return new Subject(properties);
                            };
    
                            /**
                             * Encodes the specified Subject message. Does not implicitly {@link google.cloud.security.privateca.v1.Subject.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubject} message Subject message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Subject.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.commonName != null && Object.hasOwnProperty.call(message, "commonName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.commonName);
                                if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.countryCode);
                                if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.organization);
                                if (message.organizationalUnit != null && Object.hasOwnProperty.call(message, "organizationalUnit"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.organizationalUnit);
                                if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.locality);
                                if (message.province != null && Object.hasOwnProperty.call(message, "province"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.province);
                                if (message.streetAddress != null && Object.hasOwnProperty.call(message, "streetAddress"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.streetAddress);
                                if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.postalCode);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Subject message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.Subject.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubject} message Subject message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Subject.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Subject message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.Subject} Subject
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Subject.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.Subject();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.commonName = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.countryCode = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.organization = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.organizationalUnit = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.locality = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.province = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.streetAddress = reader.string();
                                            break;
                                        }
                                    case 8: {
                                            message.postalCode = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Subject message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.Subject} Subject
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Subject.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Subject message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Subject.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.commonName != null && message.hasOwnProperty("commonName"))
                                    if (!$util.isString(message.commonName))
                                        return "commonName: string expected";
                                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                                    if (!$util.isString(message.countryCode))
                                        return "countryCode: string expected";
                                if (message.organization != null && message.hasOwnProperty("organization"))
                                    if (!$util.isString(message.organization))
                                        return "organization: string expected";
                                if (message.organizationalUnit != null && message.hasOwnProperty("organizationalUnit"))
                                    if (!$util.isString(message.organizationalUnit))
                                        return "organizationalUnit: string expected";
                                if (message.locality != null && message.hasOwnProperty("locality"))
                                    if (!$util.isString(message.locality))
                                        return "locality: string expected";
                                if (message.province != null && message.hasOwnProperty("province"))
                                    if (!$util.isString(message.province))
                                        return "province: string expected";
                                if (message.streetAddress != null && message.hasOwnProperty("streetAddress"))
                                    if (!$util.isString(message.streetAddress))
                                        return "streetAddress: string expected";
                                if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                                    if (!$util.isString(message.postalCode))
                                        return "postalCode: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Subject message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.Subject} Subject
                             */
                            Subject.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.Subject)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.Subject();
                                if (object.commonName != null)
                                    message.commonName = String(object.commonName);
                                if (object.countryCode != null)
                                    message.countryCode = String(object.countryCode);
                                if (object.organization != null)
                                    message.organization = String(object.organization);
                                if (object.organizationalUnit != null)
                                    message.organizationalUnit = String(object.organizationalUnit);
                                if (object.locality != null)
                                    message.locality = String(object.locality);
                                if (object.province != null)
                                    message.province = String(object.province);
                                if (object.streetAddress != null)
                                    message.streetAddress = String(object.streetAddress);
                                if (object.postalCode != null)
                                    message.postalCode = String(object.postalCode);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Subject message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1.Subject} message Subject
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Subject.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.commonName = "";
                                    object.countryCode = "";
                                    object.organization = "";
                                    object.organizationalUnit = "";
                                    object.locality = "";
                                    object.province = "";
                                    object.streetAddress = "";
                                    object.postalCode = "";
                                }
                                if (message.commonName != null && message.hasOwnProperty("commonName"))
                                    object.commonName = message.commonName;
                                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                                    object.countryCode = message.countryCode;
                                if (message.organization != null && message.hasOwnProperty("organization"))
                                    object.organization = message.organization;
                                if (message.organizationalUnit != null && message.hasOwnProperty("organizationalUnit"))
                                    object.organizationalUnit = message.organizationalUnit;
                                if (message.locality != null && message.hasOwnProperty("locality"))
                                    object.locality = message.locality;
                                if (message.province != null && message.hasOwnProperty("province"))
                                    object.province = message.province;
                                if (message.streetAddress != null && message.hasOwnProperty("streetAddress"))
                                    object.streetAddress = message.streetAddress;
                                if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                                    object.postalCode = message.postalCode;
                                return object;
                            };
    
                            /**
                             * Converts this Subject to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Subject.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Subject
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.Subject
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Subject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.Subject";
                            };
    
                            return Subject;
                        })();
    
                        v1.SubjectAltNames = (function() {
    
                            /**
                             * Properties of a SubjectAltNames.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ISubjectAltNames
                             * @property {Array.<string>|null} [dnsNames] SubjectAltNames dnsNames
                             * @property {Array.<string>|null} [uris] SubjectAltNames uris
                             * @property {Array.<string>|null} [emailAddresses] SubjectAltNames emailAddresses
                             * @property {Array.<string>|null} [ipAddresses] SubjectAltNames ipAddresses
                             * @property {Array.<google.cloud.security.privateca.v1.IX509Extension>|null} [customSans] SubjectAltNames customSans
                             */
    
                            /**
                             * Constructs a new SubjectAltNames.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a SubjectAltNames.
                             * @implements ISubjectAltNames
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ISubjectAltNames=} [properties] Properties to set
                             */
                            function SubjectAltNames(properties) {
                                this.dnsNames = [];
                                this.uris = [];
                                this.emailAddresses = [];
                                this.ipAddresses = [];
                                this.customSans = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SubjectAltNames dnsNames.
                             * @member {Array.<string>} dnsNames
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.dnsNames = $util.emptyArray;
    
                            /**
                             * SubjectAltNames uris.
                             * @member {Array.<string>} uris
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.uris = $util.emptyArray;
    
                            /**
                             * SubjectAltNames emailAddresses.
                             * @member {Array.<string>} emailAddresses
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.emailAddresses = $util.emptyArray;
    
                            /**
                             * SubjectAltNames ipAddresses.
                             * @member {Array.<string>} ipAddresses
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.ipAddresses = $util.emptyArray;
    
                            /**
                             * SubjectAltNames customSans.
                             * @member {Array.<google.cloud.security.privateca.v1.IX509Extension>} customSans
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.customSans = $util.emptyArray;
    
                            /**
                             * Creates a new SubjectAltNames instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubjectAltNames=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.SubjectAltNames} SubjectAltNames instance
                             */
                            SubjectAltNames.create = function create(properties) {
                                return new SubjectAltNames(properties);
                            };
    
                            /**
                             * Encodes the specified SubjectAltNames message. Does not implicitly {@link google.cloud.security.privateca.v1.SubjectAltNames.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubjectAltNames} message SubjectAltNames message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubjectAltNames.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dnsNames != null && message.dnsNames.length)
                                    for (var i = 0; i < message.dnsNames.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dnsNames[i]);
                                if (message.uris != null && message.uris.length)
                                    for (var i = 0; i < message.uris.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.uris[i]);
                                if (message.emailAddresses != null && message.emailAddresses.length)
                                    for (var i = 0; i < message.emailAddresses.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.emailAddresses[i]);
                                if (message.ipAddresses != null && message.ipAddresses.length)
                                    for (var i = 0; i < message.ipAddresses.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.ipAddresses[i]);
                                if (message.customSans != null && message.customSans.length)
                                    for (var i = 0; i < message.customSans.length; ++i)
                                        $root.google.cloud.security.privateca.v1.X509Extension.encode(message.customSans[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SubjectAltNames message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.SubjectAltNames.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1.ISubjectAltNames} message SubjectAltNames message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubjectAltNames.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SubjectAltNames message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.SubjectAltNames} SubjectAltNames
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubjectAltNames.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.SubjectAltNames();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.dnsNames && message.dnsNames.length))
                                                message.dnsNames = [];
                                            message.dnsNames.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.uris && message.uris.length))
                                                message.uris = [];
                                            message.uris.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.emailAddresses && message.emailAddresses.length))
                                                message.emailAddresses = [];
                                            message.emailAddresses.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.ipAddresses && message.ipAddresses.length))
                                                message.ipAddresses = [];
                                            message.ipAddresses.push(reader.string());
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.customSans && message.customSans.length))
                                                message.customSans = [];
                                            message.customSans.push($root.google.cloud.security.privateca.v1.X509Extension.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SubjectAltNames message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.SubjectAltNames} SubjectAltNames
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubjectAltNames.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SubjectAltNames message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SubjectAltNames.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dnsNames != null && message.hasOwnProperty("dnsNames")) {
                                    if (!Array.isArray(message.dnsNames))
                                        return "dnsNames: array expected";
                                    for (var i = 0; i < message.dnsNames.length; ++i)
                                        if (!$util.isString(message.dnsNames[i]))
                                            return "dnsNames: string[] expected";
                                }
                                if (message.uris != null && message.hasOwnProperty("uris")) {
                                    if (!Array.isArray(message.uris))
                                        return "uris: array expected";
                                    for (var i = 0; i < message.uris.length; ++i)
                                        if (!$util.isString(message.uris[i]))
                                            return "uris: string[] expected";
                                }
                                if (message.emailAddresses != null && message.hasOwnProperty("emailAddresses")) {
                                    if (!Array.isArray(message.emailAddresses))
                                        return "emailAddresses: array expected";
                                    for (var i = 0; i < message.emailAddresses.length; ++i)
                                        if (!$util.isString(message.emailAddresses[i]))
                                            return "emailAddresses: string[] expected";
                                }
                                if (message.ipAddresses != null && message.hasOwnProperty("ipAddresses")) {
                                    if (!Array.isArray(message.ipAddresses))
                                        return "ipAddresses: array expected";
                                    for (var i = 0; i < message.ipAddresses.length; ++i)
                                        if (!$util.isString(message.ipAddresses[i]))
                                            return "ipAddresses: string[] expected";
                                }
                                if (message.customSans != null && message.hasOwnProperty("customSans")) {
                                    if (!Array.isArray(message.customSans))
                                        return "customSans: array expected";
                                    for (var i = 0; i < message.customSans.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.X509Extension.verify(message.customSans[i]);
                                        if (error)
                                            return "customSans." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SubjectAltNames message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.SubjectAltNames} SubjectAltNames
                             */
                            SubjectAltNames.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.SubjectAltNames)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.SubjectAltNames();
                                if (object.dnsNames) {
                                    if (!Array.isArray(object.dnsNames))
                                        throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.dnsNames: array expected");
                                    message.dnsNames = [];
                                    for (var i = 0; i < object.dnsNames.length; ++i)
                                        message.dnsNames[i] = String(object.dnsNames[i]);
                                }
                                if (object.uris) {
                                    if (!Array.isArray(object.uris))
                                        throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.uris: array expected");
                                    message.uris = [];
                                    for (var i = 0; i < object.uris.length; ++i)
                                        message.uris[i] = String(object.uris[i]);
                                }
                                if (object.emailAddresses) {
                                    if (!Array.isArray(object.emailAddresses))
                                        throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.emailAddresses: array expected");
                                    message.emailAddresses = [];
                                    for (var i = 0; i < object.emailAddresses.length; ++i)
                                        message.emailAddresses[i] = String(object.emailAddresses[i]);
                                }
                                if (object.ipAddresses) {
                                    if (!Array.isArray(object.ipAddresses))
                                        throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.ipAddresses: array expected");
                                    message.ipAddresses = [];
                                    for (var i = 0; i < object.ipAddresses.length; ++i)
                                        message.ipAddresses[i] = String(object.ipAddresses[i]);
                                }
                                if (object.customSans) {
                                    if (!Array.isArray(object.customSans))
                                        throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.customSans: array expected");
                                    message.customSans = [];
                                    for (var i = 0; i < object.customSans.length; ++i) {
                                        if (typeof object.customSans[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.SubjectAltNames.customSans: object expected");
                                        message.customSans[i] = $root.google.cloud.security.privateca.v1.X509Extension.fromObject(object.customSans[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SubjectAltNames message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1.SubjectAltNames} message SubjectAltNames
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SubjectAltNames.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.dnsNames = [];
                                    object.uris = [];
                                    object.emailAddresses = [];
                                    object.ipAddresses = [];
                                    object.customSans = [];
                                }
                                if (message.dnsNames && message.dnsNames.length) {
                                    object.dnsNames = [];
                                    for (var j = 0; j < message.dnsNames.length; ++j)
                                        object.dnsNames[j] = message.dnsNames[j];
                                }
                                if (message.uris && message.uris.length) {
                                    object.uris = [];
                                    for (var j = 0; j < message.uris.length; ++j)
                                        object.uris[j] = message.uris[j];
                                }
                                if (message.emailAddresses && message.emailAddresses.length) {
                                    object.emailAddresses = [];
                                    for (var j = 0; j < message.emailAddresses.length; ++j)
                                        object.emailAddresses[j] = message.emailAddresses[j];
                                }
                                if (message.ipAddresses && message.ipAddresses.length) {
                                    object.ipAddresses = [];
                                    for (var j = 0; j < message.ipAddresses.length; ++j)
                                        object.ipAddresses[j] = message.ipAddresses[j];
                                }
                                if (message.customSans && message.customSans.length) {
                                    object.customSans = [];
                                    for (var j = 0; j < message.customSans.length; ++j)
                                        object.customSans[j] = $root.google.cloud.security.privateca.v1.X509Extension.toObject(message.customSans[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SubjectAltNames to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SubjectAltNames.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SubjectAltNames
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.SubjectAltNames
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SubjectAltNames.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.SubjectAltNames";
                            };
    
                            return SubjectAltNames;
                        })();
    
                        v1.CertificateIdentityConstraints = (function() {
    
                            /**
                             * Properties of a CertificateIdentityConstraints.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateIdentityConstraints
                             * @property {google.type.IExpr|null} [celExpression] CertificateIdentityConstraints celExpression
                             * @property {boolean|null} [allowSubjectPassthrough] CertificateIdentityConstraints allowSubjectPassthrough
                             * @property {boolean|null} [allowSubjectAltNamesPassthrough] CertificateIdentityConstraints allowSubjectAltNamesPassthrough
                             */
    
                            /**
                             * Constructs a new CertificateIdentityConstraints.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateIdentityConstraints.
                             * @implements ICertificateIdentityConstraints
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateIdentityConstraints=} [properties] Properties to set
                             */
                            function CertificateIdentityConstraints(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateIdentityConstraints celExpression.
                             * @member {google.type.IExpr|null|undefined} celExpression
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             */
                            CertificateIdentityConstraints.prototype.celExpression = null;
    
                            /**
                             * CertificateIdentityConstraints allowSubjectPassthrough.
                             * @member {boolean|null|undefined} allowSubjectPassthrough
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             */
                            CertificateIdentityConstraints.prototype.allowSubjectPassthrough = null;
    
                            /**
                             * CertificateIdentityConstraints allowSubjectAltNamesPassthrough.
                             * @member {boolean|null|undefined} allowSubjectAltNamesPassthrough
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             */
                            CertificateIdentityConstraints.prototype.allowSubjectAltNamesPassthrough = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * CertificateIdentityConstraints _allowSubjectPassthrough.
                             * @member {"allowSubjectPassthrough"|undefined} _allowSubjectPassthrough
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             */
                            Object.defineProperty(CertificateIdentityConstraints.prototype, "_allowSubjectPassthrough", {
                                get: $util.oneOfGetter($oneOfFields = ["allowSubjectPassthrough"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * CertificateIdentityConstraints _allowSubjectAltNamesPassthrough.
                             * @member {"allowSubjectAltNamesPassthrough"|undefined} _allowSubjectAltNamesPassthrough
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             */
                            Object.defineProperty(CertificateIdentityConstraints.prototype, "_allowSubjectAltNamesPassthrough", {
                                get: $util.oneOfGetter($oneOfFields = ["allowSubjectAltNamesPassthrough"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new CertificateIdentityConstraints instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateIdentityConstraints=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateIdentityConstraints} CertificateIdentityConstraints instance
                             */
                            CertificateIdentityConstraints.create = function create(properties) {
                                return new CertificateIdentityConstraints(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateIdentityConstraints message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateIdentityConstraints.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateIdentityConstraints} message CertificateIdentityConstraints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateIdentityConstraints.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.celExpression != null && Object.hasOwnProperty.call(message, "celExpression"))
                                    $root.google.type.Expr.encode(message.celExpression, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.allowSubjectPassthrough != null && Object.hasOwnProperty.call(message, "allowSubjectPassthrough"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowSubjectPassthrough);
                                if (message.allowSubjectAltNamesPassthrough != null && Object.hasOwnProperty.call(message, "allowSubjectAltNamesPassthrough"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.allowSubjectAltNamesPassthrough);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateIdentityConstraints message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateIdentityConstraints.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateIdentityConstraints} message CertificateIdentityConstraints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateIdentityConstraints.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateIdentityConstraints message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateIdentityConstraints} CertificateIdentityConstraints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateIdentityConstraints.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.celExpression = $root.google.type.Expr.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.allowSubjectPassthrough = reader.bool();
                                            break;
                                        }
                                    case 3: {
                                            message.allowSubjectAltNamesPassthrough = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateIdentityConstraints message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateIdentityConstraints} CertificateIdentityConstraints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateIdentityConstraints.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateIdentityConstraints message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateIdentityConstraints.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.celExpression != null && message.hasOwnProperty("celExpression")) {
                                    var error = $root.google.type.Expr.verify(message.celExpression);
                                    if (error)
                                        return "celExpression." + error;
                                }
                                if (message.allowSubjectPassthrough != null && message.hasOwnProperty("allowSubjectPassthrough")) {
                                    properties._allowSubjectPassthrough = 1;
                                    if (typeof message.allowSubjectPassthrough !== "boolean")
                                        return "allowSubjectPassthrough: boolean expected";
                                }
                                if (message.allowSubjectAltNamesPassthrough != null && message.hasOwnProperty("allowSubjectAltNamesPassthrough")) {
                                    properties._allowSubjectAltNamesPassthrough = 1;
                                    if (typeof message.allowSubjectAltNamesPassthrough !== "boolean")
                                        return "allowSubjectAltNamesPassthrough: boolean expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateIdentityConstraints message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateIdentityConstraints} CertificateIdentityConstraints
                             */
                            CertificateIdentityConstraints.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateIdentityConstraints();
                                if (object.celExpression != null) {
                                    if (typeof object.celExpression !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateIdentityConstraints.celExpression: object expected");
                                    message.celExpression = $root.google.type.Expr.fromObject(object.celExpression);
                                }
                                if (object.allowSubjectPassthrough != null)
                                    message.allowSubjectPassthrough = Boolean(object.allowSubjectPassthrough);
                                if (object.allowSubjectAltNamesPassthrough != null)
                                    message.allowSubjectAltNamesPassthrough = Boolean(object.allowSubjectAltNamesPassthrough);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateIdentityConstraints message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateIdentityConstraints} message CertificateIdentityConstraints
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateIdentityConstraints.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.celExpression = null;
                                if (message.celExpression != null && message.hasOwnProperty("celExpression"))
                                    object.celExpression = $root.google.type.Expr.toObject(message.celExpression, options);
                                if (message.allowSubjectPassthrough != null && message.hasOwnProperty("allowSubjectPassthrough")) {
                                    object.allowSubjectPassthrough = message.allowSubjectPassthrough;
                                    if (options.oneofs)
                                        object._allowSubjectPassthrough = "allowSubjectPassthrough";
                                }
                                if (message.allowSubjectAltNamesPassthrough != null && message.hasOwnProperty("allowSubjectAltNamesPassthrough")) {
                                    object.allowSubjectAltNamesPassthrough = message.allowSubjectAltNamesPassthrough;
                                    if (options.oneofs)
                                        object._allowSubjectAltNamesPassthrough = "allowSubjectAltNamesPassthrough";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateIdentityConstraints to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateIdentityConstraints.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateIdentityConstraints
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateIdentityConstraints
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateIdentityConstraints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateIdentityConstraints";
                            };
    
                            return CertificateIdentityConstraints;
                        })();
    
                        v1.CertificateExtensionConstraints = (function() {
    
                            /**
                             * Properties of a CertificateExtensionConstraints.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICertificateExtensionConstraints
                             * @property {Array.<google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension>|null} [knownExtensions] CertificateExtensionConstraints knownExtensions
                             * @property {Array.<google.cloud.security.privateca.v1.IObjectId>|null} [additionalExtensions] CertificateExtensionConstraints additionalExtensions
                             */
    
                            /**
                             * Constructs a new CertificateExtensionConstraints.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateExtensionConstraints.
                             * @implements ICertificateExtensionConstraints
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICertificateExtensionConstraints=} [properties] Properties to set
                             */
                            function CertificateExtensionConstraints(properties) {
                                this.knownExtensions = [];
                                this.additionalExtensions = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateExtensionConstraints knownExtensions.
                             * @member {Array.<google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension>} knownExtensions
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @instance
                             */
                            CertificateExtensionConstraints.prototype.knownExtensions = $util.emptyArray;
    
                            /**
                             * CertificateExtensionConstraints additionalExtensions.
                             * @member {Array.<google.cloud.security.privateca.v1.IObjectId>} additionalExtensions
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @instance
                             */
                            CertificateExtensionConstraints.prototype.additionalExtensions = $util.emptyArray;
    
                            /**
                             * Creates a new CertificateExtensionConstraints instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateExtensionConstraints=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CertificateExtensionConstraints} CertificateExtensionConstraints instance
                             */
                            CertificateExtensionConstraints.create = function create(properties) {
                                return new CertificateExtensionConstraints(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateExtensionConstraints message. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateExtensionConstraints.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateExtensionConstraints} message CertificateExtensionConstraints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateExtensionConstraints.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.knownExtensions != null && message.knownExtensions.length) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                    for (var i = 0; i < message.knownExtensions.length; ++i)
                                        writer.int32(message.knownExtensions[i]);
                                    writer.ldelim();
                                }
                                if (message.additionalExtensions != null && message.additionalExtensions.length)
                                    for (var i = 0; i < message.additionalExtensions.length; ++i)
                                        $root.google.cloud.security.privateca.v1.ObjectId.encode(message.additionalExtensions[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateExtensionConstraints message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CertificateExtensionConstraints.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICertificateExtensionConstraints} message CertificateExtensionConstraints message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateExtensionConstraints.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateExtensionConstraints message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CertificateExtensionConstraints} CertificateExtensionConstraints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateExtensionConstraints.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.knownExtensions && message.knownExtensions.length))
                                                message.knownExtensions = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.knownExtensions.push(reader.int32());
                                            } else
                                                message.knownExtensions.push(reader.int32());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.additionalExtensions && message.additionalExtensions.length))
                                                message.additionalExtensions = [];
                                            message.additionalExtensions.push($root.google.cloud.security.privateca.v1.ObjectId.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateExtensionConstraints message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CertificateExtensionConstraints} CertificateExtensionConstraints
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateExtensionConstraints.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateExtensionConstraints message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateExtensionConstraints.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.knownExtensions != null && message.hasOwnProperty("knownExtensions")) {
                                    if (!Array.isArray(message.knownExtensions))
                                        return "knownExtensions: array expected";
                                    for (var i = 0; i < message.knownExtensions.length; ++i)
                                        switch (message.knownExtensions[i]) {
                                        default:
                                            return "knownExtensions: enum value[] expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                            break;
                                        }
                                }
                                if (message.additionalExtensions != null && message.hasOwnProperty("additionalExtensions")) {
                                    if (!Array.isArray(message.additionalExtensions))
                                        return "additionalExtensions: array expected";
                                    for (var i = 0; i < message.additionalExtensions.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.ObjectId.verify(message.additionalExtensions[i]);
                                        if (error)
                                            return "additionalExtensions." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateExtensionConstraints message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CertificateExtensionConstraints} CertificateExtensionConstraints
                             */
                            CertificateExtensionConstraints.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints();
                                if (object.knownExtensions) {
                                    if (!Array.isArray(object.knownExtensions))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateExtensionConstraints.knownExtensions: array expected");
                                    message.knownExtensions = [];
                                    for (var i = 0; i < object.knownExtensions.length; ++i)
                                        switch (object.knownExtensions[i]) {
                                        default:
                                            if (typeof object.knownExtensions[i] === "number") {
                                                message.knownExtensions[i] = object.knownExtensions[i];
                                                break;
                                            }
                                        case "KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED":
                                        case 0:
                                            message.knownExtensions[i] = 0;
                                            break;
                                        case "BASE_KEY_USAGE":
                                        case 1:
                                            message.knownExtensions[i] = 1;
                                            break;
                                        case "EXTENDED_KEY_USAGE":
                                        case 2:
                                            message.knownExtensions[i] = 2;
                                            break;
                                        case "CA_OPTIONS":
                                        case 3:
                                            message.knownExtensions[i] = 3;
                                            break;
                                        case "POLICY_IDS":
                                        case 4:
                                            message.knownExtensions[i] = 4;
                                            break;
                                        case "AIA_OCSP_SERVERS":
                                        case 5:
                                            message.knownExtensions[i] = 5;
                                            break;
                                        case "NAME_CONSTRAINTS":
                                        case 6:
                                            message.knownExtensions[i] = 6;
                                            break;
                                        }
                                }
                                if (object.additionalExtensions) {
                                    if (!Array.isArray(object.additionalExtensions))
                                        throw TypeError(".google.cloud.security.privateca.v1.CertificateExtensionConstraints.additionalExtensions: array expected");
                                    message.additionalExtensions = [];
                                    for (var i = 0; i < object.additionalExtensions.length; ++i) {
                                        if (typeof object.additionalExtensions[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.CertificateExtensionConstraints.additionalExtensions: object expected");
                                        message.additionalExtensions[i] = $root.google.cloud.security.privateca.v1.ObjectId.fromObject(object.additionalExtensions[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateExtensionConstraints message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {google.cloud.security.privateca.v1.CertificateExtensionConstraints} message CertificateExtensionConstraints
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateExtensionConstraints.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.knownExtensions = [];
                                    object.additionalExtensions = [];
                                }
                                if (message.knownExtensions && message.knownExtensions.length) {
                                    object.knownExtensions = [];
                                    for (var j = 0; j < message.knownExtensions.length; ++j)
                                        object.knownExtensions[j] = options.enums === String ? $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension[message.knownExtensions[j]] === undefined ? message.knownExtensions[j] : $root.google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension[message.knownExtensions[j]] : message.knownExtensions[j];
                                }
                                if (message.additionalExtensions && message.additionalExtensions.length) {
                                    object.additionalExtensions = [];
                                    for (var j = 0; j < message.additionalExtensions.length; ++j)
                                        object.additionalExtensions[j] = $root.google.cloud.security.privateca.v1.ObjectId.toObject(message.additionalExtensions[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateExtensionConstraints to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateExtensionConstraints.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateExtensionConstraints
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CertificateExtensionConstraints
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateExtensionConstraints.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CertificateExtensionConstraints";
                            };
    
                            /**
                             * KnownCertificateExtension enum.
                             * @name google.cloud.security.privateca.v1.CertificateExtensionConstraints.KnownCertificateExtension
                             * @enum {number}
                             * @property {number} KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED=0 KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED value
                             * @property {number} BASE_KEY_USAGE=1 BASE_KEY_USAGE value
                             * @property {number} EXTENDED_KEY_USAGE=2 EXTENDED_KEY_USAGE value
                             * @property {number} CA_OPTIONS=3 CA_OPTIONS value
                             * @property {number} POLICY_IDS=4 POLICY_IDS value
                             * @property {number} AIA_OCSP_SERVERS=5 AIA_OCSP_SERVERS value
                             * @property {number} NAME_CONSTRAINTS=6 NAME_CONSTRAINTS value
                             */
                            CertificateExtensionConstraints.KnownCertificateExtension = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "BASE_KEY_USAGE"] = 1;
                                values[valuesById[2] = "EXTENDED_KEY_USAGE"] = 2;
                                values[valuesById[3] = "CA_OPTIONS"] = 3;
                                values[valuesById[4] = "POLICY_IDS"] = 4;
                                values[valuesById[5] = "AIA_OCSP_SERVERS"] = 5;
                                values[valuesById[6] = "NAME_CONSTRAINTS"] = 6;
                                return values;
                            })();
    
                            return CertificateExtensionConstraints;
                        })();
    
                        /**
                         * RevocationReason enum.
                         * @name google.cloud.security.privateca.v1.RevocationReason
                         * @enum {number}
                         * @property {number} REVOCATION_REASON_UNSPECIFIED=0 REVOCATION_REASON_UNSPECIFIED value
                         * @property {number} KEY_COMPROMISE=1 KEY_COMPROMISE value
                         * @property {number} CERTIFICATE_AUTHORITY_COMPROMISE=2 CERTIFICATE_AUTHORITY_COMPROMISE value
                         * @property {number} AFFILIATION_CHANGED=3 AFFILIATION_CHANGED value
                         * @property {number} SUPERSEDED=4 SUPERSEDED value
                         * @property {number} CESSATION_OF_OPERATION=5 CESSATION_OF_OPERATION value
                         * @property {number} CERTIFICATE_HOLD=6 CERTIFICATE_HOLD value
                         * @property {number} PRIVILEGE_WITHDRAWN=7 PRIVILEGE_WITHDRAWN value
                         * @property {number} ATTRIBUTE_AUTHORITY_COMPROMISE=8 ATTRIBUTE_AUTHORITY_COMPROMISE value
                         */
                        v1.RevocationReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REVOCATION_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "KEY_COMPROMISE"] = 1;
                            values[valuesById[2] = "CERTIFICATE_AUTHORITY_COMPROMISE"] = 2;
                            values[valuesById[3] = "AFFILIATION_CHANGED"] = 3;
                            values[valuesById[4] = "SUPERSEDED"] = 4;
                            values[valuesById[5] = "CESSATION_OF_OPERATION"] = 5;
                            values[valuesById[6] = "CERTIFICATE_HOLD"] = 6;
                            values[valuesById[7] = "PRIVILEGE_WITHDRAWN"] = 7;
                            values[valuesById[8] = "ATTRIBUTE_AUTHORITY_COMPROMISE"] = 8;
                            return values;
                        })();
    
                        /**
                         * SubjectRequestMode enum.
                         * @name google.cloud.security.privateca.v1.SubjectRequestMode
                         * @enum {number}
                         * @property {number} SUBJECT_REQUEST_MODE_UNSPECIFIED=0 SUBJECT_REQUEST_MODE_UNSPECIFIED value
                         * @property {number} DEFAULT=1 DEFAULT value
                         * @property {number} REFLECTED_SPIFFE=2 REFLECTED_SPIFFE value
                         */
                        v1.SubjectRequestMode = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "SUBJECT_REQUEST_MODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEFAULT"] = 1;
                            values[valuesById[2] = "REFLECTED_SPIFFE"] = 2;
                            return values;
                        })();
    
                        v1.CertificateAuthorityService = (function() {
    
                            /**
                             * Constructs a new CertificateAuthorityService service.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CertificateAuthorityService
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function CertificateAuthorityService(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (CertificateAuthorityService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CertificateAuthorityService;
    
                            /**
                             * Creates new CertificateAuthorityService service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {CertificateAuthorityService} RPC service. Useful where requests and/or responses are streamed.
                             */
                            CertificateAuthorityService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|createCertificate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef CreateCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls CreateCertificate.
                             * @function createCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest} request CreateCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.CreateCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCertificate = function createCertificate(request, callback) {
                                return this.rpcCall(createCertificate, $root.google.cloud.security.privateca.v1.CreateCertificateRequest, $root.google.cloud.security.privateca.v1.Certificate, request, callback);
                            }, "name", { value: "CreateCertificate" });
    
                            /**
                             * Calls CreateCertificate.
                             * @function createCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest} request CreateCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|getCertificate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef GetCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls GetCertificate.
                             * @function getCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest} request GetCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.GetCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificate = function getCertificate(request, callback) {
                                return this.rpcCall(getCertificate, $root.google.cloud.security.privateca.v1.GetCertificateRequest, $root.google.cloud.security.privateca.v1.Certificate, request, callback);
                            }, "name", { value: "GetCertificate" });
    
                            /**
                             * Calls GetCertificate.
                             * @function getCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest} request GetCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|listCertificates}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ListCertificatesCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.ListCertificatesResponse} [response] ListCertificatesResponse
                             */
    
                            /**
                             * Calls ListCertificates.
                             * @function listCertificates
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest} request ListCertificatesRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ListCertificatesCallback} callback Node-style callback called with the error, if any, and ListCertificatesResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificates = function listCertificates(request, callback) {
                                return this.rpcCall(listCertificates, $root.google.cloud.security.privateca.v1.ListCertificatesRequest, $root.google.cloud.security.privateca.v1.ListCertificatesResponse, request, callback);
                            }, "name", { value: "ListCertificates" });
    
                            /**
                             * Calls ListCertificates.
                             * @function listCertificates
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest} request ListCertificatesRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.ListCertificatesResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|revokeCertificate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef RevokeCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls RevokeCertificate.
                             * @function revokeCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest} request RevokeCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.RevokeCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.revokeCertificate = function revokeCertificate(request, callback) {
                                return this.rpcCall(revokeCertificate, $root.google.cloud.security.privateca.v1.RevokeCertificateRequest, $root.google.cloud.security.privateca.v1.Certificate, request, callback);
                            }, "name", { value: "RevokeCertificate" });
    
                            /**
                             * Calls RevokeCertificate.
                             * @function revokeCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest} request RevokeCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|updateCertificate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UpdateCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls UpdateCertificate.
                             * @function updateCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest} request UpdateCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UpdateCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificate = function updateCertificate(request, callback) {
                                return this.rpcCall(updateCertificate, $root.google.cloud.security.privateca.v1.UpdateCertificateRequest, $root.google.cloud.security.privateca.v1.Certificate, request, callback);
                            }, "name", { value: "UpdateCertificate" });
    
                            /**
                             * Calls UpdateCertificate.
                             * @function updateCertificate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest} request UpdateCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|activateCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ActivateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls ActivateCertificateAuthority.
                             * @function activateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest} request ActivateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ActivateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.activateCertificateAuthority = function activateCertificateAuthority(request, callback) {
                                return this.rpcCall(activateCertificateAuthority, $root.google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "ActivateCertificateAuthority" });
    
                            /**
                             * Calls ActivateCertificateAuthority.
                             * @function activateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest} request ActivateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|createCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef CreateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls CreateCertificateAuthority.
                             * @function createCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest} request CreateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.CreateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCertificateAuthority = function createCertificateAuthority(request, callback) {
                                return this.rpcCall(createCertificateAuthority, $root.google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "CreateCertificateAuthority" });
    
                            /**
                             * Calls CreateCertificateAuthority.
                             * @function createCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest} request CreateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|disableCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef DisableCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls DisableCertificateAuthority.
                             * @function disableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest} request DisableCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.DisableCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.disableCertificateAuthority = function disableCertificateAuthority(request, callback) {
                                return this.rpcCall(disableCertificateAuthority, $root.google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "DisableCertificateAuthority" });
    
                            /**
                             * Calls DisableCertificateAuthority.
                             * @function disableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest} request DisableCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|enableCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef EnableCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls EnableCertificateAuthority.
                             * @function enableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest} request EnableCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.EnableCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.enableCertificateAuthority = function enableCertificateAuthority(request, callback) {
                                return this.rpcCall(enableCertificateAuthority, $root.google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "EnableCertificateAuthority" });
    
                            /**
                             * Calls EnableCertificateAuthority.
                             * @function enableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest} request EnableCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|fetchCertificateAuthorityCsr}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef FetchCertificateAuthorityCsrCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} [response] FetchCertificateAuthorityCsrResponse
                             */
    
                            /**
                             * Calls FetchCertificateAuthorityCsr.
                             * @function fetchCertificateAuthorityCsr
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest} request FetchCertificateAuthorityCsrRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.FetchCertificateAuthorityCsrCallback} callback Node-style callback called with the error, if any, and FetchCertificateAuthorityCsrResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.fetchCertificateAuthorityCsr = function fetchCertificateAuthorityCsr(request, callback) {
                                return this.rpcCall(fetchCertificateAuthorityCsr, $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest, $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse, request, callback);
                            }, "name", { value: "FetchCertificateAuthorityCsr" });
    
                            /**
                             * Calls FetchCertificateAuthorityCsr.
                             * @function fetchCertificateAuthorityCsr
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest} request FetchCertificateAuthorityCsrRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|getCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef GetCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.CertificateAuthority} [response] CertificateAuthority
                             */
    
                            /**
                             * Calls GetCertificateAuthority.
                             * @function getCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest} request GetCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.GetCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and CertificateAuthority
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificateAuthority = function getCertificateAuthority(request, callback) {
                                return this.rpcCall(getCertificateAuthority, $root.google.cloud.security.privateca.v1.GetCertificateAuthorityRequest, $root.google.cloud.security.privateca.v1.CertificateAuthority, request, callback);
                            }, "name", { value: "GetCertificateAuthority" });
    
                            /**
                             * Calls GetCertificateAuthority.
                             * @function getCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest} request GetCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.CertificateAuthority>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|listCertificateAuthorities}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ListCertificateAuthoritiesCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} [response] ListCertificateAuthoritiesResponse
                             */
    
                            /**
                             * Calls ListCertificateAuthorities.
                             * @function listCertificateAuthorities
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest} request ListCertificateAuthoritiesRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ListCertificateAuthoritiesCallback} callback Node-style callback called with the error, if any, and ListCertificateAuthoritiesResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificateAuthorities = function listCertificateAuthorities(request, callback) {
                                return this.rpcCall(listCertificateAuthorities, $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest, $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse, request, callback);
                            }, "name", { value: "ListCertificateAuthorities" });
    
                            /**
                             * Calls ListCertificateAuthorities.
                             * @function listCertificateAuthorities
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest} request ListCertificateAuthoritiesRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|undeleteCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UndeleteCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UndeleteCertificateAuthority.
                             * @function undeleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest} request UndeleteCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UndeleteCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.undeleteCertificateAuthority = function undeleteCertificateAuthority(request, callback) {
                                return this.rpcCall(undeleteCertificateAuthority, $root.google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UndeleteCertificateAuthority" });
    
                            /**
                             * Calls UndeleteCertificateAuthority.
                             * @function undeleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest} request UndeleteCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|deleteCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef DeleteCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls DeleteCertificateAuthority.
                             * @function deleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest} request DeleteCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.DeleteCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.deleteCertificateAuthority = function deleteCertificateAuthority(request, callback) {
                                return this.rpcCall(deleteCertificateAuthority, $root.google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "DeleteCertificateAuthority" });
    
                            /**
                             * Calls DeleteCertificateAuthority.
                             * @function deleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest} request DeleteCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|updateCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UpdateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCertificateAuthority.
                             * @function updateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest} request UpdateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UpdateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificateAuthority = function updateCertificateAuthority(request, callback) {
                                return this.rpcCall(updateCertificateAuthority, $root.google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCertificateAuthority" });
    
                            /**
                             * Calls UpdateCertificateAuthority.
                             * @function updateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest} request UpdateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|createCaPool}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef CreateCaPoolCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls CreateCaPool.
                             * @function createCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest} request CreateCaPoolRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.CreateCaPoolCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCaPool = function createCaPool(request, callback) {
                                return this.rpcCall(createCaPool, $root.google.cloud.security.privateca.v1.CreateCaPoolRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "CreateCaPool" });
    
                            /**
                             * Calls CreateCaPool.
                             * @function createCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest} request CreateCaPoolRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|updateCaPool}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UpdateCaPoolCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCaPool.
                             * @function updateCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest} request UpdateCaPoolRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UpdateCaPoolCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCaPool = function updateCaPool(request, callback) {
                                return this.rpcCall(updateCaPool, $root.google.cloud.security.privateca.v1.UpdateCaPoolRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCaPool" });
    
                            /**
                             * Calls UpdateCaPool.
                             * @function updateCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest} request UpdateCaPoolRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|getCaPool}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef GetCaPoolCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.CaPool} [response] CaPool
                             */
    
                            /**
                             * Calls GetCaPool.
                             * @function getCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest} request GetCaPoolRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.GetCaPoolCallback} callback Node-style callback called with the error, if any, and CaPool
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCaPool = function getCaPool(request, callback) {
                                return this.rpcCall(getCaPool, $root.google.cloud.security.privateca.v1.GetCaPoolRequest, $root.google.cloud.security.privateca.v1.CaPool, request, callback);
                            }, "name", { value: "GetCaPool" });
    
                            /**
                             * Calls GetCaPool.
                             * @function getCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest} request GetCaPoolRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.CaPool>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|listCaPools}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ListCaPoolsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.ListCaPoolsResponse} [response] ListCaPoolsResponse
                             */
    
                            /**
                             * Calls ListCaPools.
                             * @function listCaPools
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest} request ListCaPoolsRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ListCaPoolsCallback} callback Node-style callback called with the error, if any, and ListCaPoolsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCaPools = function listCaPools(request, callback) {
                                return this.rpcCall(listCaPools, $root.google.cloud.security.privateca.v1.ListCaPoolsRequest, $root.google.cloud.security.privateca.v1.ListCaPoolsResponse, request, callback);
                            }, "name", { value: "ListCaPools" });
    
                            /**
                             * Calls ListCaPools.
                             * @function listCaPools
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest} request ListCaPoolsRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.ListCaPoolsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|deleteCaPool}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef DeleteCaPoolCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls DeleteCaPool.
                             * @function deleteCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest} request DeleteCaPoolRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.DeleteCaPoolCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.deleteCaPool = function deleteCaPool(request, callback) {
                                return this.rpcCall(deleteCaPool, $root.google.cloud.security.privateca.v1.DeleteCaPoolRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "DeleteCaPool" });
    
                            /**
                             * Calls DeleteCaPool.
                             * @function deleteCaPool
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest} request DeleteCaPoolRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|fetchCaCerts}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef FetchCaCertsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse} [response] FetchCaCertsResponse
                             */
    
                            /**
                             * Calls FetchCaCerts.
                             * @function fetchCaCerts
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest} request FetchCaCertsRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.FetchCaCertsCallback} callback Node-style callback called with the error, if any, and FetchCaCertsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.fetchCaCerts = function fetchCaCerts(request, callback) {
                                return this.rpcCall(fetchCaCerts, $root.google.cloud.security.privateca.v1.FetchCaCertsRequest, $root.google.cloud.security.privateca.v1.FetchCaCertsResponse, request, callback);
                            }, "name", { value: "FetchCaCerts" });
    
                            /**
                             * Calls FetchCaCerts.
                             * @function fetchCaCerts
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest} request FetchCaCertsRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.FetchCaCertsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|getCertificateRevocationList}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef GetCertificateRevocationListCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.CertificateRevocationList} [response] CertificateRevocationList
                             */
    
                            /**
                             * Calls GetCertificateRevocationList.
                             * @function getCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest} request GetCertificateRevocationListRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.GetCertificateRevocationListCallback} callback Node-style callback called with the error, if any, and CertificateRevocationList
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificateRevocationList = function getCertificateRevocationList(request, callback) {
                                return this.rpcCall(getCertificateRevocationList, $root.google.cloud.security.privateca.v1.GetCertificateRevocationListRequest, $root.google.cloud.security.privateca.v1.CertificateRevocationList, request, callback);
                            }, "name", { value: "GetCertificateRevocationList" });
    
                            /**
                             * Calls GetCertificateRevocationList.
                             * @function getCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest} request GetCertificateRevocationListRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.CertificateRevocationList>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|listCertificateRevocationLists}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ListCertificateRevocationListsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} [response] ListCertificateRevocationListsResponse
                             */
    
                            /**
                             * Calls ListCertificateRevocationLists.
                             * @function listCertificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest} request ListCertificateRevocationListsRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ListCertificateRevocationListsCallback} callback Node-style callback called with the error, if any, and ListCertificateRevocationListsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificateRevocationLists = function listCertificateRevocationLists(request, callback) {
                                return this.rpcCall(listCertificateRevocationLists, $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest, $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse, request, callback);
                            }, "name", { value: "ListCertificateRevocationLists" });
    
                            /**
                             * Calls ListCertificateRevocationLists.
                             * @function listCertificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest} request ListCertificateRevocationListsRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|updateCertificateRevocationList}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UpdateCertificateRevocationListCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCertificateRevocationList.
                             * @function updateCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest} request UpdateCertificateRevocationListRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UpdateCertificateRevocationListCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificateRevocationList = function updateCertificateRevocationList(request, callback) {
                                return this.rpcCall(updateCertificateRevocationList, $root.google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCertificateRevocationList" });
    
                            /**
                             * Calls UpdateCertificateRevocationList.
                             * @function updateCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest} request UpdateCertificateRevocationListRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|createCertificateTemplate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef CreateCertificateTemplateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls CreateCertificateTemplate.
                             * @function createCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest} request CreateCertificateTemplateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.CreateCertificateTemplateCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCertificateTemplate = function createCertificateTemplate(request, callback) {
                                return this.rpcCall(createCertificateTemplate, $root.google.cloud.security.privateca.v1.CreateCertificateTemplateRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "CreateCertificateTemplate" });
    
                            /**
                             * Calls CreateCertificateTemplate.
                             * @function createCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest} request CreateCertificateTemplateRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|deleteCertificateTemplate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef DeleteCertificateTemplateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls DeleteCertificateTemplate.
                             * @function deleteCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest} request DeleteCertificateTemplateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.DeleteCertificateTemplateCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.deleteCertificateTemplate = function deleteCertificateTemplate(request, callback) {
                                return this.rpcCall(deleteCertificateTemplate, $root.google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "DeleteCertificateTemplate" });
    
                            /**
                             * Calls DeleteCertificateTemplate.
                             * @function deleteCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest} request DeleteCertificateTemplateRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|getCertificateTemplate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef GetCertificateTemplateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.CertificateTemplate} [response] CertificateTemplate
                             */
    
                            /**
                             * Calls GetCertificateTemplate.
                             * @function getCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest} request GetCertificateTemplateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.GetCertificateTemplateCallback} callback Node-style callback called with the error, if any, and CertificateTemplate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificateTemplate = function getCertificateTemplate(request, callback) {
                                return this.rpcCall(getCertificateTemplate, $root.google.cloud.security.privateca.v1.GetCertificateTemplateRequest, $root.google.cloud.security.privateca.v1.CertificateTemplate, request, callback);
                            }, "name", { value: "GetCertificateTemplate" });
    
                            /**
                             * Calls GetCertificateTemplate.
                             * @function getCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest} request GetCertificateTemplateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.CertificateTemplate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|listCertificateTemplates}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef ListCertificateTemplatesCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} [response] ListCertificateTemplatesResponse
                             */
    
                            /**
                             * Calls ListCertificateTemplates.
                             * @function listCertificateTemplates
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest} request ListCertificateTemplatesRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.ListCertificateTemplatesCallback} callback Node-style callback called with the error, if any, and ListCertificateTemplatesResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificateTemplates = function listCertificateTemplates(request, callback) {
                                return this.rpcCall(listCertificateTemplates, $root.google.cloud.security.privateca.v1.ListCertificateTemplatesRequest, $root.google.cloud.security.privateca.v1.ListCertificateTemplatesResponse, request, callback);
                            }, "name", { value: "ListCertificateTemplates" });
    
                            /**
                             * Calls ListCertificateTemplates.
                             * @function listCertificateTemplates
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest} request ListCertificateTemplatesRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1.ListCertificateTemplatesResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1.CertificateAuthorityService|updateCertificateTemplate}.
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @typedef UpdateCertificateTemplateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCertificateTemplate.
                             * @function updateCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest} request UpdateCertificateTemplateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1.CertificateAuthorityService.UpdateCertificateTemplateCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificateTemplate = function updateCertificateTemplate(request, callback) {
                                return this.rpcCall(updateCertificateTemplate, $root.google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCertificateTemplate" });
    
                            /**
                             * Calls UpdateCertificateTemplate.
                             * @function updateCertificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest} request UpdateCertificateTemplateRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            return CertificateAuthorityService;
                        })();
    
                        v1.CreateCertificateRequest = (function() {
    
                            /**
                             * Properties of a CreateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICreateCertificateRequest
                             * @property {string|null} [parent] CreateCertificateRequest parent
                             * @property {string|null} [certificateId] CreateCertificateRequest certificateId
                             * @property {google.cloud.security.privateca.v1.ICertificate|null} [certificate] CreateCertificateRequest certificate
                             * @property {string|null} [requestId] CreateCertificateRequest requestId
                             * @property {boolean|null} [validateOnly] CreateCertificateRequest validateOnly
                             * @property {string|null} [issuingCertificateAuthorityId] CreateCertificateRequest issuingCertificateAuthorityId
                             */
    
                            /**
                             * Constructs a new CreateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CreateCertificateRequest.
                             * @implements ICreateCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest=} [properties] Properties to set
                             */
                            function CreateCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCertificateRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.parent = "";
    
                            /**
                             * CreateCertificateRequest certificateId.
                             * @member {string} certificateId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.certificateId = "";
    
                            /**
                             * CreateCertificateRequest certificate.
                             * @member {google.cloud.security.privateca.v1.ICertificate|null|undefined} certificate
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.certificate = null;
    
                            /**
                             * CreateCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.requestId = "";
    
                            /**
                             * CreateCertificateRequest validateOnly.
                             * @member {boolean} validateOnly
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.validateOnly = false;
    
                            /**
                             * CreateCertificateRequest issuingCertificateAuthorityId.
                             * @member {string} issuingCertificateAuthorityId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.issuingCertificateAuthorityId = "";
    
                            /**
                             * Creates a new CreateCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateRequest} CreateCertificateRequest instance
                             */
                            CreateCertificateRequest.create = function create(properties) {
                                return new CreateCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest} message CreateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.certificateId != null && Object.hasOwnProperty.call(message, "certificateId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.certificateId);
                                if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                    $root.google.cloud.security.privateca.v1.Certificate.encode(message.certificate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                if (message.validateOnly != null && Object.hasOwnProperty.call(message, "validateOnly"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.validateOnly);
                                if (message.issuingCertificateAuthorityId != null && Object.hasOwnProperty.call(message, "issuingCertificateAuthorityId"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.issuingCertificateAuthorityId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateRequest} message CreateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateRequest} CreateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CreateCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.certificateId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.certificate = $root.google.cloud.security.privateca.v1.Certificate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.validateOnly = reader.bool();
                                            break;
                                        }
                                    case 6: {
                                            message.issuingCertificateAuthorityId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateRequest} CreateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.certificateId != null && message.hasOwnProperty("certificateId"))
                                    if (!$util.isString(message.certificateId))
                                        return "certificateId: string expected";
                                if (message.certificate != null && message.hasOwnProperty("certificate")) {
                                    var error = $root.google.cloud.security.privateca.v1.Certificate.verify(message.certificate);
                                    if (error)
                                        return "certificate." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                    if (typeof message.validateOnly !== "boolean")
                                        return "validateOnly: boolean expected";
                                if (message.issuingCertificateAuthorityId != null && message.hasOwnProperty("issuingCertificateAuthorityId"))
                                    if (!$util.isString(message.issuingCertificateAuthorityId))
                                        return "issuingCertificateAuthorityId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateRequest} CreateCertificateRequest
                             */
                            CreateCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CreateCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CreateCertificateRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.certificateId != null)
                                    message.certificateId = String(object.certificateId);
                                if (object.certificate != null) {
                                    if (typeof object.certificate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CreateCertificateRequest.certificate: object expected");
                                    message.certificate = $root.google.cloud.security.privateca.v1.Certificate.fromObject(object.certificate);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                if (object.validateOnly != null)
                                    message.validateOnly = Boolean(object.validateOnly);
                                if (object.issuingCertificateAuthorityId != null)
                                    message.issuingCertificateAuthorityId = String(object.issuingCertificateAuthorityId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.CreateCertificateRequest} message CreateCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.certificateId = "";
                                    object.certificate = null;
                                    object.requestId = "";
                                    object.validateOnly = false;
                                    object.issuingCertificateAuthorityId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.certificateId != null && message.hasOwnProperty("certificateId"))
                                    object.certificateId = message.certificateId;
                                if (message.certificate != null && message.hasOwnProperty("certificate"))
                                    object.certificate = $root.google.cloud.security.privateca.v1.Certificate.toObject(message.certificate, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                if (message.validateOnly != null && message.hasOwnProperty("validateOnly"))
                                    object.validateOnly = message.validateOnly;
                                if (message.issuingCertificateAuthorityId != null && message.hasOwnProperty("issuingCertificateAuthorityId"))
                                    object.issuingCertificateAuthorityId = message.issuingCertificateAuthorityId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CreateCertificateRequest";
                            };
    
                            return CreateCertificateRequest;
                        })();
    
                        v1.GetCertificateRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IGetCertificateRequest
                             * @property {string|null} [name] GetCertificateRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a GetCertificateRequest.
                             * @implements IGetCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest=} [properties] Properties to set
                             */
                            function GetCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @instance
                             */
                            GetCertificateRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRequest} GetCertificateRequest instance
                             */
                            GetCertificateRequest.create = function create(properties) {
                                return new GetCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest} message GetCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRequest} message GetCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRequest} GetCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.GetCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRequest} GetCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRequest} GetCertificateRequest
                             */
                            GetCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.GetCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.GetCertificateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.GetCertificateRequest} message GetCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.GetCertificateRequest";
                            };
    
                            return GetCertificateRequest;
                        })();
    
                        v1.ListCertificatesRequest = (function() {
    
                            /**
                             * Properties of a ListCertificatesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificatesRequest
                             * @property {string|null} [parent] ListCertificatesRequest parent
                             * @property {number|null} [pageSize] ListCertificatesRequest pageSize
                             * @property {string|null} [pageToken] ListCertificatesRequest pageToken
                             * @property {string|null} [filter] ListCertificatesRequest filter
                             * @property {string|null} [orderBy] ListCertificatesRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificatesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificatesRequest.
                             * @implements IListCertificatesRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest=} [properties] Properties to set
                             */
                            function ListCertificatesRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificatesRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.parent = "";
    
                            /**
                             * ListCertificatesRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificatesRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificatesRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.filter = "";
    
                            /**
                             * ListCertificatesRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificatesRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesRequest} ListCertificatesRequest instance
                             */
                            ListCertificatesRequest.create = function create(properties) {
                                return new ListCertificatesRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificatesRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificatesRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest} message ListCertificatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificatesRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificatesRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesRequest} message ListCertificatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificatesRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesRequest} ListCertificatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificatesRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificatesRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesRequest} ListCertificatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificatesRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificatesRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificatesRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesRequest} ListCertificatesRequest
                             */
                            ListCertificatesRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificatesRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificatesRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificatesRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificatesRequest} message ListCertificatesRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificatesRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificatesRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificatesRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificatesRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificatesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificatesRequest";
                            };
    
                            return ListCertificatesRequest;
                        })();
    
                        v1.ListCertificatesResponse = (function() {
    
                            /**
                             * Properties of a ListCertificatesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificatesResponse
                             * @property {Array.<google.cloud.security.privateca.v1.ICertificate>|null} [certificates] ListCertificatesResponse certificates
                             * @property {string|null} [nextPageToken] ListCertificatesResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificatesResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificatesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificatesResponse.
                             * @implements IListCertificatesResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificatesResponse=} [properties] Properties to set
                             */
                            function ListCertificatesResponse(properties) {
                                this.certificates = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificatesResponse certificates.
                             * @member {Array.<google.cloud.security.privateca.v1.ICertificate>} certificates
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.certificates = $util.emptyArray;
    
                            /**
                             * ListCertificatesResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificatesResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificatesResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesResponse} ListCertificatesResponse instance
                             */
                            ListCertificatesResponse.create = function create(properties) {
                                return new ListCertificatesResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificatesResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificatesResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesResponse} message ListCertificatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificates != null && message.certificates.length)
                                    for (var i = 0; i < message.certificates.length; ++i)
                                        $root.google.cloud.security.privateca.v1.Certificate.encode(message.certificates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificatesResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificatesResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificatesResponse} message ListCertificatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificatesResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesResponse} ListCertificatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificatesResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificates && message.certificates.length))
                                                message.certificates = [];
                                            message.certificates.push($root.google.cloud.security.privateca.v1.Certificate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificatesResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesResponse} ListCertificatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificatesResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificatesResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificates != null && message.hasOwnProperty("certificates")) {
                                    if (!Array.isArray(message.certificates))
                                        return "certificates: array expected";
                                    for (var i = 0; i < message.certificates.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.Certificate.verify(message.certificates[i]);
                                        if (error)
                                            return "certificates." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificatesResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificatesResponse} ListCertificatesResponse
                             */
                            ListCertificatesResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificatesResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificatesResponse();
                                if (object.certificates) {
                                    if (!Array.isArray(object.certificates))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificatesResponse.certificates: array expected");
                                    message.certificates = [];
                                    for (var i = 0; i < object.certificates.length; ++i) {
                                        if (typeof object.certificates[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.ListCertificatesResponse.certificates: object expected");
                                        message.certificates[i] = $root.google.cloud.security.privateca.v1.Certificate.fromObject(object.certificates[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificatesResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificatesResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificatesResponse} message ListCertificatesResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificatesResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificates = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificates && message.certificates.length) {
                                    object.certificates = [];
                                    for (var j = 0; j < message.certificates.length; ++j)
                                        object.certificates[j] = $root.google.cloud.security.privateca.v1.Certificate.toObject(message.certificates[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificatesResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificatesResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificatesResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificatesResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificatesResponse";
                            };
    
                            return ListCertificatesResponse;
                        })();
    
                        v1.RevokeCertificateRequest = (function() {
    
                            /**
                             * Properties of a RevokeCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IRevokeCertificateRequest
                             * @property {string|null} [name] RevokeCertificateRequest name
                             * @property {google.cloud.security.privateca.v1.RevocationReason|null} [reason] RevokeCertificateRequest reason
                             * @property {string|null} [requestId] RevokeCertificateRequest requestId
                             */
    
                            /**
                             * Constructs a new RevokeCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a RevokeCertificateRequest.
                             * @implements IRevokeCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest=} [properties] Properties to set
                             */
                            function RevokeCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RevokeCertificateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.name = "";
    
                            /**
                             * RevokeCertificateRequest reason.
                             * @member {google.cloud.security.privateca.v1.RevocationReason} reason
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.reason = 0;
    
                            /**
                             * RevokeCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new RevokeCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.RevokeCertificateRequest} RevokeCertificateRequest instance
                             */
                            RevokeCertificateRequest.create = function create(properties) {
                                return new RevokeCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified RevokeCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.RevokeCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest} message RevokeCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RevokeCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.reason);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RevokeCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.RevokeCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IRevokeCertificateRequest} message RevokeCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RevokeCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RevokeCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.RevokeCertificateRequest} RevokeCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RevokeCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.RevokeCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.reason = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RevokeCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.RevokeCertificateRequest} RevokeCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RevokeCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RevokeCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RevokeCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.reason != null && message.hasOwnProperty("reason"))
                                    switch (message.reason) {
                                    default:
                                        return "reason: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                        break;
                                    }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a RevokeCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.RevokeCertificateRequest} RevokeCertificateRequest
                             */
                            RevokeCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.RevokeCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.RevokeCertificateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.reason) {
                                default:
                                    if (typeof object.reason === "number") {
                                        message.reason = object.reason;
                                        break;
                                    }
                                    break;
                                case "REVOCATION_REASON_UNSPECIFIED":
                                case 0:
                                    message.reason = 0;
                                    break;
                                case "KEY_COMPROMISE":
                                case 1:
                                    message.reason = 1;
                                    break;
                                case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                case 2:
                                    message.reason = 2;
                                    break;
                                case "AFFILIATION_CHANGED":
                                case 3:
                                    message.reason = 3;
                                    break;
                                case "SUPERSEDED":
                                case 4:
                                    message.reason = 4;
                                    break;
                                case "CESSATION_OF_OPERATION":
                                case 5:
                                    message.reason = 5;
                                    break;
                                case "CERTIFICATE_HOLD":
                                case 6:
                                    message.reason = 6;
                                    break;
                                case "PRIVILEGE_WITHDRAWN":
                                case 7:
                                    message.reason = 7;
                                    break;
                                case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                case 8:
                                    message.reason = 8;
                                    break;
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RevokeCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.RevokeCertificateRequest} message RevokeCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RevokeCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.reason = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.reason != null && message.hasOwnProperty("reason"))
                                    object.reason = options.enums === String ? $root.google.cloud.security.privateca.v1.RevocationReason[message.reason] === undefined ? message.reason : $root.google.cloud.security.privateca.v1.RevocationReason[message.reason] : message.reason;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this RevokeCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RevokeCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RevokeCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.RevokeCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RevokeCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.RevokeCertificateRequest";
                            };
    
                            return RevokeCertificateRequest;
                        })();
    
                        v1.UpdateCertificateRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUpdateCertificateRequest
                             * @property {google.cloud.security.privateca.v1.ICertificate|null} [certificate] UpdateCertificateRequest certificate
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UpdateCertificateRequest.
                             * @implements IUpdateCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateRequest certificate.
                             * @member {google.cloud.security.privateca.v1.ICertificate|null|undefined} certificate
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.certificate = null;
    
                            /**
                             * UpdateCertificateRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRequest} UpdateCertificateRequest instance
                             */
                            UpdateCertificateRequest.create = function create(properties) {
                                return new UpdateCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest} message UpdateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                    $root.google.cloud.security.privateca.v1.Certificate.encode(message.certificate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRequest} message UpdateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRequest} UpdateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UpdateCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificate = $root.google.cloud.security.privateca.v1.Certificate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRequest} UpdateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificate != null && message.hasOwnProperty("certificate")) {
                                    var error = $root.google.cloud.security.privateca.v1.Certificate.verify(message.certificate);
                                    if (error)
                                        return "certificate." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRequest} UpdateCertificateRequest
                             */
                            UpdateCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UpdateCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UpdateCertificateRequest();
                                if (object.certificate != null) {
                                    if (typeof object.certificate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateRequest.certificate: object expected");
                                    message.certificate = $root.google.cloud.security.privateca.v1.Certificate.fromObject(object.certificate);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UpdateCertificateRequest} message UpdateCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificate = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificate != null && message.hasOwnProperty("certificate"))
                                    object.certificate = $root.google.cloud.security.privateca.v1.Certificate.toObject(message.certificate, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UpdateCertificateRequest";
                            };
    
                            return UpdateCertificateRequest;
                        })();
    
                        v1.ActivateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an ActivateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IActivateCertificateAuthorityRequest
                             * @property {string|null} [name] ActivateCertificateAuthorityRequest name
                             * @property {string|null} [pemCaCertificate] ActivateCertificateAuthorityRequest pemCaCertificate
                             * @property {google.cloud.security.privateca.v1.ISubordinateConfig|null} [subordinateConfig] ActivateCertificateAuthorityRequest subordinateConfig
                             * @property {string|null} [requestId] ActivateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new ActivateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an ActivateCertificateAuthorityRequest.
                             * @implements IActivateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function ActivateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ActivateCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * ActivateCertificateAuthorityRequest pemCaCertificate.
                             * @member {string} pemCaCertificate
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.pemCaCertificate = "";
    
                            /**
                             * ActivateCertificateAuthorityRequest subordinateConfig.
                             * @member {google.cloud.security.privateca.v1.ISubordinateConfig|null|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.subordinateConfig = null;
    
                            /**
                             * ActivateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new ActivateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest instance
                             */
                            ActivateCertificateAuthorityRequest.create = function create(properties) {
                                return new ActivateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ActivateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ActivateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.pemCaCertificate != null && Object.hasOwnProperty.call(message, "pemCaCertificate"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.pemCaCertificate);
                                if (message.subordinateConfig != null && Object.hasOwnProperty.call(message, "subordinateConfig"))
                                    $root.google.cloud.security.privateca.v1.SubordinateConfig.encode(message.subordinateConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ActivateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ActivateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ActivateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ActivateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemCaCertificate = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ActivateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ActivateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ActivateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ActivateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.pemCaCertificate != null && message.hasOwnProperty("pemCaCertificate"))
                                    if (!$util.isString(message.pemCaCertificate))
                                        return "pemCaCertificate: string expected";
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1.SubordinateConfig.verify(message.subordinateConfig);
                                    if (error)
                                        return "subordinateConfig." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an ActivateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             */
                            ActivateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.pemCaCertificate != null)
                                    message.pemCaCertificate = String(object.pemCaCertificate);
                                if (object.subordinateConfig != null) {
                                    if (typeof object.subordinateConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest.subordinateConfig: object expected");
                                    message.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.fromObject(object.subordinateConfig);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ActivateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ActivateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.pemCaCertificate = "";
                                    object.subordinateConfig = null;
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.pemCaCertificate != null && message.hasOwnProperty("pemCaCertificate"))
                                    object.pemCaCertificate = message.pemCaCertificate;
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig"))
                                    object.subordinateConfig = $root.google.cloud.security.privateca.v1.SubordinateConfig.toObject(message.subordinateConfig, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this ActivateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ActivateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ActivateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ActivateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ActivateCertificateAuthorityRequest";
                            };
    
                            return ActivateCertificateAuthorityRequest;
                        })();
    
                        v1.CreateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a CreateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICreateCertificateAuthorityRequest
                             * @property {string|null} [parent] CreateCertificateAuthorityRequest parent
                             * @property {string|null} [certificateAuthorityId] CreateCertificateAuthorityRequest certificateAuthorityId
                             * @property {google.cloud.security.privateca.v1.ICertificateAuthority|null} [certificateAuthority] CreateCertificateAuthorityRequest certificateAuthority
                             * @property {string|null} [requestId] CreateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new CreateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CreateCertificateAuthorityRequest.
                             * @implements ICreateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function CreateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCertificateAuthorityRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.parent = "";
    
                            /**
                             * CreateCertificateAuthorityRequest certificateAuthorityId.
                             * @member {string} certificateAuthorityId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.certificateAuthorityId = "";
    
                            /**
                             * CreateCertificateAuthorityRequest certificateAuthority.
                             * @member {google.cloud.security.privateca.v1.ICertificateAuthority|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.certificateAuthority = null;
    
                            /**
                             * CreateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new CreateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest instance
                             */
                            CreateCertificateAuthorityRequest.create = function create(properties) {
                                return new CreateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.certificateAuthorityId != null && Object.hasOwnProperty.call(message, "certificateAuthorityId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.certificateAuthorityId);
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    $root.google.cloud.security.privateca.v1.CertificateAuthority.encode(message.certificateAuthority, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.certificateAuthorityId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.certificateAuthorityId != null && message.hasOwnProperty("certificateAuthorityId"))
                                    if (!$util.isString(message.certificateAuthorityId))
                                        return "certificateAuthorityId: string expected";
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateAuthority.verify(message.certificateAuthority);
                                    if (error)
                                        return "certificateAuthority." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             */
                            CreateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.certificateAuthorityId != null)
                                    message.certificateAuthorityId = String(object.certificateAuthorityId);
                                if (object.certificateAuthority != null) {
                                    if (typeof object.certificateAuthority !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest.certificateAuthority: object expected");
                                    message.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.fromObject(object.certificateAuthority);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.certificateAuthorityId = "";
                                    object.certificateAuthority = null;
                                    object.requestId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.certificateAuthorityId != null && message.hasOwnProperty("certificateAuthorityId"))
                                    object.certificateAuthorityId = message.certificateAuthorityId;
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority"))
                                    object.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.toObject(message.certificateAuthority, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CreateCertificateAuthorityRequest";
                            };
    
                            return CreateCertificateAuthorityRequest;
                        })();
    
                        v1.DisableCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a DisableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IDisableCertificateAuthorityRequest
                             * @property {string|null} [name] DisableCertificateAuthorityRequest name
                             * @property {string|null} [requestId] DisableCertificateAuthorityRequest requestId
                             * @property {boolean|null} [ignoreDependentResources] DisableCertificateAuthorityRequest ignoreDependentResources
                             */
    
                            /**
                             * Constructs a new DisableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a DisableCertificateAuthorityRequest.
                             * @implements IDisableCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function DisableCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DisableCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @instance
                             */
                            DisableCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * DisableCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @instance
                             */
                            DisableCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * DisableCertificateAuthorityRequest ignoreDependentResources.
                             * @member {boolean} ignoreDependentResources
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @instance
                             */
                            DisableCertificateAuthorityRequest.prototype.ignoreDependentResources = false;
    
                            /**
                             * Creates a new DisableCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest instance
                             */
                            DisableCertificateAuthorityRequest.create = function create(properties) {
                                return new DisableCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified DisableCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DisableCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                if (message.ignoreDependentResources != null && Object.hasOwnProperty.call(message, "ignoreDependentResources"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.ignoreDependentResources);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DisableCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DisableCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DisableCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DisableCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.ignoreDependentResources = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DisableCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DisableCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DisableCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DisableCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    if (typeof message.ignoreDependentResources !== "boolean")
                                        return "ignoreDependentResources: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a DisableCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             */
                            DisableCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                if (object.ignoreDependentResources != null)
                                    message.ignoreDependentResources = Boolean(object.ignoreDependentResources);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DisableCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DisableCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                    object.ignoreDependentResources = false;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    object.ignoreDependentResources = message.ignoreDependentResources;
                                return object;
                            };
    
                            /**
                             * Converts this DisableCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DisableCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DisableCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DisableCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.DisableCertificateAuthorityRequest";
                            };
    
                            return DisableCertificateAuthorityRequest;
                        })();
    
                        v1.EnableCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an EnableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IEnableCertificateAuthorityRequest
                             * @property {string|null} [name] EnableCertificateAuthorityRequest name
                             * @property {string|null} [requestId] EnableCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new EnableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an EnableCertificateAuthorityRequest.
                             * @implements IEnableCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function EnableCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EnableCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @instance
                             */
                            EnableCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * EnableCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @instance
                             */
                            EnableCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new EnableCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest instance
                             */
                            EnableCertificateAuthorityRequest.create = function create(properties) {
                                return new EnableCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified EnableCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EnableCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EnableCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IEnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EnableCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EnableCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EnableCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EnableCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EnableCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EnableCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EnableCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an EnableCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             */
                            EnableCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EnableCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EnableCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this EnableCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EnableCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EnableCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EnableCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.EnableCertificateAuthorityRequest";
                            };
    
                            return EnableCertificateAuthorityRequest;
                        })();
    
                        v1.FetchCertificateAuthorityCsrRequest = (function() {
    
                            /**
                             * Properties of a FetchCertificateAuthorityCsrRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IFetchCertificateAuthorityCsrRequest
                             * @property {string|null} [name] FetchCertificateAuthorityCsrRequest name
                             */
    
                            /**
                             * Constructs a new FetchCertificateAuthorityCsrRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a FetchCertificateAuthorityCsrRequest.
                             * @implements IFetchCertificateAuthorityCsrRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest=} [properties] Properties to set
                             */
                            function FetchCertificateAuthorityCsrRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCertificateAuthorityCsrRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @instance
                             */
                            FetchCertificateAuthorityCsrRequest.prototype.name = "";
    
                            /**
                             * Creates a new FetchCertificateAuthorityCsrRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest instance
                             */
                            FetchCertificateAuthorityCsrRequest.create = function create(properties) {
                                return new FetchCertificateAuthorityCsrRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCertificateAuthorityCsrRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCertificateAuthorityCsrRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FetchCertificateAuthorityCsrRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             */
                            FetchCertificateAuthorityCsrRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCertificateAuthorityCsrRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCertificateAuthorityCsrRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this FetchCertificateAuthorityCsrRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCertificateAuthorityCsrRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCertificateAuthorityCsrRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCertificateAuthorityCsrRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrRequest";
                            };
    
                            return FetchCertificateAuthorityCsrRequest;
                        })();
    
                        v1.FetchCertificateAuthorityCsrResponse = (function() {
    
                            /**
                             * Properties of a FetchCertificateAuthorityCsrResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IFetchCertificateAuthorityCsrResponse
                             * @property {string|null} [pemCsr] FetchCertificateAuthorityCsrResponse pemCsr
                             */
    
                            /**
                             * Constructs a new FetchCertificateAuthorityCsrResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a FetchCertificateAuthorityCsrResponse.
                             * @implements IFetchCertificateAuthorityCsrResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrResponse=} [properties] Properties to set
                             */
                            function FetchCertificateAuthorityCsrResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCertificateAuthorityCsrResponse pemCsr.
                             * @member {string} pemCsr
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @instance
                             */
                            FetchCertificateAuthorityCsrResponse.prototype.pemCsr = "";
    
                            /**
                             * Creates a new FetchCertificateAuthorityCsrResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse instance
                             */
                            FetchCertificateAuthorityCsrResponse.create = function create(properties) {
                                return new FetchCertificateAuthorityCsrResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pemCsr != null && Object.hasOwnProperty.call(message, "pemCsr"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.pemCsr);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.pemCsr = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCertificateAuthorityCsrResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCertificateAuthorityCsrResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr"))
                                    if (!$util.isString(message.pemCsr))
                                        return "pemCsr: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FetchCertificateAuthorityCsrResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             */
                            FetchCertificateAuthorityCsrResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse();
                                if (object.pemCsr != null)
                                    message.pemCsr = String(object.pemCsr);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCertificateAuthorityCsrResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCertificateAuthorityCsrResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.pemCsr = "";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr"))
                                    object.pemCsr = message.pemCsr;
                                return object;
                            };
    
                            /**
                             * Converts this FetchCertificateAuthorityCsrResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCertificateAuthorityCsrResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCertificateAuthorityCsrResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCertificateAuthorityCsrResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.FetchCertificateAuthorityCsrResponse";
                            };
    
                            return FetchCertificateAuthorityCsrResponse;
                        })();
    
                        v1.GetCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IGetCertificateAuthorityRequest
                             * @property {string|null} [name] GetCertificateAuthorityRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a GetCertificateAuthorityRequest.
                             * @implements IGetCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function GetCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @instance
                             */
                            GetCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest instance
                             */
                            GetCertificateAuthorityRequest.create = function create(properties) {
                                return new GetCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest} message GetCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateAuthorityRequest} message GetCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.GetCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             */
                            GetCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.GetCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.GetCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.GetCertificateAuthorityRequest} message GetCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.GetCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.GetCertificateAuthorityRequest";
                            };
    
                            return GetCertificateAuthorityRequest;
                        })();
    
                        v1.ListCertificateAuthoritiesRequest = (function() {
    
                            /**
                             * Properties of a ListCertificateAuthoritiesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateAuthoritiesRequest
                             * @property {string|null} [parent] ListCertificateAuthoritiesRequest parent
                             * @property {number|null} [pageSize] ListCertificateAuthoritiesRequest pageSize
                             * @property {string|null} [pageToken] ListCertificateAuthoritiesRequest pageToken
                             * @property {string|null} [filter] ListCertificateAuthoritiesRequest filter
                             * @property {string|null} [orderBy] ListCertificateAuthoritiesRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificateAuthoritiesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateAuthoritiesRequest.
                             * @implements IListCertificateAuthoritiesRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest=} [properties] Properties to set
                             */
                            function ListCertificateAuthoritiesRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateAuthoritiesRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.parent = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificateAuthoritiesRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.filter = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificateAuthoritiesRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest instance
                             */
                            ListCertificateAuthoritiesRequest.create = function create(properties) {
                                return new ListCertificateAuthoritiesRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateAuthoritiesRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateAuthoritiesRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateAuthoritiesRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             */
                            ListCertificateAuthoritiesRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateAuthoritiesRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateAuthoritiesRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateAuthoritiesRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateAuthoritiesRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateAuthoritiesRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateAuthoritiesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateAuthoritiesRequest";
                            };
    
                            return ListCertificateAuthoritiesRequest;
                        })();
    
                        v1.ListCertificateAuthoritiesResponse = (function() {
    
                            /**
                             * Properties of a ListCertificateAuthoritiesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateAuthoritiesResponse
                             * @property {Array.<google.cloud.security.privateca.v1.ICertificateAuthority>|null} [certificateAuthorities] ListCertificateAuthoritiesResponse certificateAuthorities
                             * @property {string|null} [nextPageToken] ListCertificateAuthoritiesResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificateAuthoritiesResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificateAuthoritiesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateAuthoritiesResponse.
                             * @implements IListCertificateAuthoritiesResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesResponse=} [properties] Properties to set
                             */
                            function ListCertificateAuthoritiesResponse(properties) {
                                this.certificateAuthorities = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateAuthoritiesResponse certificateAuthorities.
                             * @member {Array.<google.cloud.security.privateca.v1.ICertificateAuthority>} certificateAuthorities
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.certificateAuthorities = $util.emptyArray;
    
                            /**
                             * ListCertificateAuthoritiesResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificateAuthoritiesResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificateAuthoritiesResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse instance
                             */
                            ListCertificateAuthoritiesResponse.create = function create(properties) {
                                return new ListCertificateAuthoritiesResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthorities != null && message.certificateAuthorities.length)
                                    for (var i = 0; i < message.certificateAuthorities.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CertificateAuthority.encode(message.certificateAuthorities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificateAuthorities && message.certificateAuthorities.length))
                                                message.certificateAuthorities = [];
                                            message.certificateAuthorities.push($root.google.cloud.security.privateca.v1.CertificateAuthority.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateAuthoritiesResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateAuthoritiesResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateAuthorities != null && message.hasOwnProperty("certificateAuthorities")) {
                                    if (!Array.isArray(message.certificateAuthorities))
                                        return "certificateAuthorities: array expected";
                                    for (var i = 0; i < message.certificateAuthorities.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateAuthority.verify(message.certificateAuthorities[i]);
                                        if (error)
                                            return "certificateAuthorities." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateAuthoritiesResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             */
                            ListCertificateAuthoritiesResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse();
                                if (object.certificateAuthorities) {
                                    if (!Array.isArray(object.certificateAuthorities))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse.certificateAuthorities: array expected");
                                    message.certificateAuthorities = [];
                                    for (var i = 0; i < object.certificateAuthorities.length; ++i) {
                                        if (typeof object.certificateAuthorities[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse.certificateAuthorities: object expected");
                                        message.certificateAuthorities[i] = $root.google.cloud.security.privateca.v1.CertificateAuthority.fromObject(object.certificateAuthorities[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateAuthoritiesResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateAuthoritiesResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificateAuthorities = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificateAuthorities && message.certificateAuthorities.length) {
                                    object.certificateAuthorities = [];
                                    for (var j = 0; j < message.certificateAuthorities.length; ++j)
                                        object.certificateAuthorities[j] = $root.google.cloud.security.privateca.v1.CertificateAuthority.toObject(message.certificateAuthorities[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateAuthoritiesResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateAuthoritiesResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateAuthoritiesResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateAuthoritiesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateAuthoritiesResponse";
                            };
    
                            return ListCertificateAuthoritiesResponse;
                        })();
    
                        v1.UndeleteCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an UndeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUndeleteCertificateAuthorityRequest
                             * @property {string|null} [name] UndeleteCertificateAuthorityRequest name
                             * @property {string|null} [requestId] UndeleteCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new UndeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UndeleteCertificateAuthorityRequest.
                             * @implements IUndeleteCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function UndeleteCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UndeleteCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @instance
                             */
                            UndeleteCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * UndeleteCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @instance
                             */
                            UndeleteCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UndeleteCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest} UndeleteCertificateAuthorityRequest instance
                             */
                            UndeleteCertificateAuthorityRequest.create = function create(properties) {
                                return new UndeleteCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UndeleteCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest} message UndeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UndeleteCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UndeleteCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUndeleteCertificateAuthorityRequest} message UndeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UndeleteCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UndeleteCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest} UndeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UndeleteCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UndeleteCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest} UndeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UndeleteCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UndeleteCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UndeleteCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UndeleteCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest} UndeleteCertificateAuthorityRequest
                             */
                            UndeleteCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UndeleteCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest} message UndeleteCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UndeleteCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UndeleteCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UndeleteCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UndeleteCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UndeleteCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UndeleteCertificateAuthorityRequest";
                            };
    
                            return UndeleteCertificateAuthorityRequest;
                        })();
    
                        v1.DeleteCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a DeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IDeleteCertificateAuthorityRequest
                             * @property {string|null} [name] DeleteCertificateAuthorityRequest name
                             * @property {string|null} [requestId] DeleteCertificateAuthorityRequest requestId
                             * @property {boolean|null} [ignoreActiveCertificates] DeleteCertificateAuthorityRequest ignoreActiveCertificates
                             * @property {boolean|null} [skipGracePeriod] DeleteCertificateAuthorityRequest skipGracePeriod
                             * @property {boolean|null} [ignoreDependentResources] DeleteCertificateAuthorityRequest ignoreDependentResources
                             */
    
                            /**
                             * Constructs a new DeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a DeleteCertificateAuthorityRequest.
                             * @implements IDeleteCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function DeleteCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DeleteCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             */
                            DeleteCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * DeleteCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             */
                            DeleteCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * DeleteCertificateAuthorityRequest ignoreActiveCertificates.
                             * @member {boolean} ignoreActiveCertificates
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             */
                            DeleteCertificateAuthorityRequest.prototype.ignoreActiveCertificates = false;
    
                            /**
                             * DeleteCertificateAuthorityRequest skipGracePeriod.
                             * @member {boolean} skipGracePeriod
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             */
                            DeleteCertificateAuthorityRequest.prototype.skipGracePeriod = false;
    
                            /**
                             * DeleteCertificateAuthorityRequest ignoreDependentResources.
                             * @member {boolean} ignoreDependentResources
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             */
                            DeleteCertificateAuthorityRequest.prototype.ignoreDependentResources = false;
    
                            /**
                             * Creates a new DeleteCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest} DeleteCertificateAuthorityRequest instance
                             */
                            DeleteCertificateAuthorityRequest.create = function create(properties) {
                                return new DeleteCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified DeleteCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest} message DeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                if (message.ignoreActiveCertificates != null && Object.hasOwnProperty.call(message, "ignoreActiveCertificates"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.ignoreActiveCertificates);
                                if (message.skipGracePeriod != null && Object.hasOwnProperty.call(message, "skipGracePeriod"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.skipGracePeriod);
                                if (message.ignoreDependentResources != null && Object.hasOwnProperty.call(message, "ignoreDependentResources"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.ignoreDependentResources);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DeleteCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateAuthorityRequest} message DeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DeleteCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest} DeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.ignoreActiveCertificates = reader.bool();
                                            break;
                                        }
                                    case 5: {
                                            message.skipGracePeriod = reader.bool();
                                            break;
                                        }
                                    case 6: {
                                            message.ignoreDependentResources = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DeleteCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest} DeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DeleteCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DeleteCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                if (message.ignoreActiveCertificates != null && message.hasOwnProperty("ignoreActiveCertificates"))
                                    if (typeof message.ignoreActiveCertificates !== "boolean")
                                        return "ignoreActiveCertificates: boolean expected";
                                if (message.skipGracePeriod != null && message.hasOwnProperty("skipGracePeriod"))
                                    if (typeof message.skipGracePeriod !== "boolean")
                                        return "skipGracePeriod: boolean expected";
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    if (typeof message.ignoreDependentResources !== "boolean")
                                        return "ignoreDependentResources: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a DeleteCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest} DeleteCertificateAuthorityRequest
                             */
                            DeleteCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                if (object.ignoreActiveCertificates != null)
                                    message.ignoreActiveCertificates = Boolean(object.ignoreActiveCertificates);
                                if (object.skipGracePeriod != null)
                                    message.skipGracePeriod = Boolean(object.skipGracePeriod);
                                if (object.ignoreDependentResources != null)
                                    message.ignoreDependentResources = Boolean(object.ignoreDependentResources);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DeleteCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest} message DeleteCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DeleteCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                    object.ignoreActiveCertificates = false;
                                    object.skipGracePeriod = false;
                                    object.ignoreDependentResources = false;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                if (message.ignoreActiveCertificates != null && message.hasOwnProperty("ignoreActiveCertificates"))
                                    object.ignoreActiveCertificates = message.ignoreActiveCertificates;
                                if (message.skipGracePeriod != null && message.hasOwnProperty("skipGracePeriod"))
                                    object.skipGracePeriod = message.skipGracePeriod;
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    object.ignoreDependentResources = message.ignoreDependentResources;
                                return object;
                            };
    
                            /**
                             * Converts this DeleteCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DeleteCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DeleteCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DeleteCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.DeleteCertificateAuthorityRequest";
                            };
    
                            return DeleteCertificateAuthorityRequest;
                        })();
    
                        v1.UpdateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUpdateCertificateAuthorityRequest
                             * @property {google.cloud.security.privateca.v1.ICertificateAuthority|null} [certificateAuthority] UpdateCertificateAuthorityRequest certificateAuthority
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateAuthorityRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UpdateCertificateAuthorityRequest.
                             * @implements IUpdateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateAuthorityRequest certificateAuthority.
                             * @member {google.cloud.security.privateca.v1.ICertificateAuthority|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.certificateAuthority = null;
    
                            /**
                             * UpdateCertificateAuthorityRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest instance
                             */
                            UpdateCertificateAuthorityRequest.create = function create(properties) {
                                return new UpdateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    $root.google.cloud.security.privateca.v1.CertificateAuthority.encode(message.certificateAuthority, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateAuthority.verify(message.certificateAuthority);
                                    if (error)
                                        return "certificateAuthority." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             */
                            UpdateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest();
                                if (object.certificateAuthority != null) {
                                    if (typeof object.certificateAuthority !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest.certificateAuthority: object expected");
                                    message.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.fromObject(object.certificateAuthority);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificateAuthority = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority"))
                                    object.certificateAuthority = $root.google.cloud.security.privateca.v1.CertificateAuthority.toObject(message.certificateAuthority, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UpdateCertificateAuthorityRequest";
                            };
    
                            return UpdateCertificateAuthorityRequest;
                        })();
    
                        v1.CreateCaPoolRequest = (function() {
    
                            /**
                             * Properties of a CreateCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICreateCaPoolRequest
                             * @property {string|null} [parent] CreateCaPoolRequest parent
                             * @property {string|null} [caPoolId] CreateCaPoolRequest caPoolId
                             * @property {google.cloud.security.privateca.v1.ICaPool|null} [caPool] CreateCaPoolRequest caPool
                             * @property {string|null} [requestId] CreateCaPoolRequest requestId
                             */
    
                            /**
                             * Constructs a new CreateCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CreateCaPoolRequest.
                             * @implements ICreateCaPoolRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest=} [properties] Properties to set
                             */
                            function CreateCaPoolRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCaPoolRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @instance
                             */
                            CreateCaPoolRequest.prototype.parent = "";
    
                            /**
                             * CreateCaPoolRequest caPoolId.
                             * @member {string} caPoolId
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @instance
                             */
                            CreateCaPoolRequest.prototype.caPoolId = "";
    
                            /**
                             * CreateCaPoolRequest caPool.
                             * @member {google.cloud.security.privateca.v1.ICaPool|null|undefined} caPool
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @instance
                             */
                            CreateCaPoolRequest.prototype.caPool = null;
    
                            /**
                             * CreateCaPoolRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @instance
                             */
                            CreateCaPoolRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new CreateCaPoolRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CreateCaPoolRequest} CreateCaPoolRequest instance
                             */
                            CreateCaPoolRequest.create = function create(properties) {
                                return new CreateCaPoolRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCaPoolRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCaPoolRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest} message CreateCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCaPoolRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.caPoolId != null && Object.hasOwnProperty.call(message, "caPoolId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.caPoolId);
                                if (message.caPool != null && Object.hasOwnProperty.call(message, "caPool"))
                                    $root.google.cloud.security.privateca.v1.CaPool.encode(message.caPool, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCaPoolRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCaPoolRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCaPoolRequest} message CreateCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCaPoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCaPoolRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CreateCaPoolRequest} CreateCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCaPoolRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CreateCaPoolRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.caPoolId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.caPool = $root.google.cloud.security.privateca.v1.CaPool.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCaPoolRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CreateCaPoolRequest} CreateCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCaPoolRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCaPoolRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCaPoolRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.caPoolId != null && message.hasOwnProperty("caPoolId"))
                                    if (!$util.isString(message.caPoolId))
                                        return "caPoolId: string expected";
                                if (message.caPool != null && message.hasOwnProperty("caPool")) {
                                    var error = $root.google.cloud.security.privateca.v1.CaPool.verify(message.caPool);
                                    if (error)
                                        return "caPool." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCaPoolRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CreateCaPoolRequest} CreateCaPoolRequest
                             */
                            CreateCaPoolRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CreateCaPoolRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CreateCaPoolRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.caPoolId != null)
                                    message.caPoolId = String(object.caPoolId);
                                if (object.caPool != null) {
                                    if (typeof object.caPool !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CreateCaPoolRequest.caPool: object expected");
                                    message.caPool = $root.google.cloud.security.privateca.v1.CaPool.fromObject(object.caPool);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCaPoolRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.CreateCaPoolRequest} message CreateCaPoolRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCaPoolRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.caPoolId = "";
                                    object.caPool = null;
                                    object.requestId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.caPoolId != null && message.hasOwnProperty("caPoolId"))
                                    object.caPoolId = message.caPoolId;
                                if (message.caPool != null && message.hasOwnProperty("caPool"))
                                    object.caPool = $root.google.cloud.security.privateca.v1.CaPool.toObject(message.caPool, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCaPoolRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCaPoolRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCaPoolRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CreateCaPoolRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCaPoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CreateCaPoolRequest";
                            };
    
                            return CreateCaPoolRequest;
                        })();
    
                        v1.UpdateCaPoolRequest = (function() {
    
                            /**
                             * Properties of an UpdateCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUpdateCaPoolRequest
                             * @property {google.cloud.security.privateca.v1.ICaPool|null} [caPool] UpdateCaPoolRequest caPool
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCaPoolRequest updateMask
                             * @property {string|null} [requestId] UpdateCaPoolRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UpdateCaPoolRequest.
                             * @implements IUpdateCaPoolRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest=} [properties] Properties to set
                             */
                            function UpdateCaPoolRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCaPoolRequest caPool.
                             * @member {google.cloud.security.privateca.v1.ICaPool|null|undefined} caPool
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @instance
                             */
                            UpdateCaPoolRequest.prototype.caPool = null;
    
                            /**
                             * UpdateCaPoolRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @instance
                             */
                            UpdateCaPoolRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCaPoolRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @instance
                             */
                            UpdateCaPoolRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCaPoolRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UpdateCaPoolRequest} UpdateCaPoolRequest instance
                             */
                            UpdateCaPoolRequest.create = function create(properties) {
                                return new UpdateCaPoolRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCaPoolRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCaPoolRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest} message UpdateCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCaPoolRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.caPool != null && Object.hasOwnProperty.call(message, "caPool"))
                                    $root.google.cloud.security.privateca.v1.CaPool.encode(message.caPool, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCaPoolRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCaPoolRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCaPoolRequest} message UpdateCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCaPoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCaPoolRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UpdateCaPoolRequest} UpdateCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCaPoolRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UpdateCaPoolRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.caPool = $root.google.cloud.security.privateca.v1.CaPool.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCaPoolRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UpdateCaPoolRequest} UpdateCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCaPoolRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCaPoolRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCaPoolRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.caPool != null && message.hasOwnProperty("caPool")) {
                                    var error = $root.google.cloud.security.privateca.v1.CaPool.verify(message.caPool);
                                    if (error)
                                        return "caPool." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCaPoolRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UpdateCaPoolRequest} UpdateCaPoolRequest
                             */
                            UpdateCaPoolRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UpdateCaPoolRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UpdateCaPoolRequest();
                                if (object.caPool != null) {
                                    if (typeof object.caPool !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCaPoolRequest.caPool: object expected");
                                    message.caPool = $root.google.cloud.security.privateca.v1.CaPool.fromObject(object.caPool);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCaPoolRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCaPoolRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UpdateCaPoolRequest} message UpdateCaPoolRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCaPoolRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.caPool = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.caPool != null && message.hasOwnProperty("caPool"))
                                    object.caPool = $root.google.cloud.security.privateca.v1.CaPool.toObject(message.caPool, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCaPoolRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCaPoolRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCaPoolRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UpdateCaPoolRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCaPoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UpdateCaPoolRequest";
                            };
    
                            return UpdateCaPoolRequest;
                        })();
    
                        v1.DeleteCaPoolRequest = (function() {
    
                            /**
                             * Properties of a DeleteCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IDeleteCaPoolRequest
                             * @property {string|null} [name] DeleteCaPoolRequest name
                             * @property {string|null} [requestId] DeleteCaPoolRequest requestId
                             * @property {boolean|null} [ignoreDependentResources] DeleteCaPoolRequest ignoreDependentResources
                             */
    
                            /**
                             * Constructs a new DeleteCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a DeleteCaPoolRequest.
                             * @implements IDeleteCaPoolRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest=} [properties] Properties to set
                             */
                            function DeleteCaPoolRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DeleteCaPoolRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @instance
                             */
                            DeleteCaPoolRequest.prototype.name = "";
    
                            /**
                             * DeleteCaPoolRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @instance
                             */
                            DeleteCaPoolRequest.prototype.requestId = "";
    
                            /**
                             * DeleteCaPoolRequest ignoreDependentResources.
                             * @member {boolean} ignoreDependentResources
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @instance
                             */
                            DeleteCaPoolRequest.prototype.ignoreDependentResources = false;
    
                            /**
                             * Creates a new DeleteCaPoolRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.DeleteCaPoolRequest} DeleteCaPoolRequest instance
                             */
                            DeleteCaPoolRequest.create = function create(properties) {
                                return new DeleteCaPoolRequest(properties);
                            };
    
                            /**
                             * Encodes the specified DeleteCaPoolRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCaPoolRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest} message DeleteCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCaPoolRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                if (message.ignoreDependentResources != null && Object.hasOwnProperty.call(message, "ignoreDependentResources"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).bool(message.ignoreDependentResources);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DeleteCaPoolRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCaPoolRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCaPoolRequest} message DeleteCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCaPoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DeleteCaPoolRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.DeleteCaPoolRequest} DeleteCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCaPoolRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.DeleteCaPoolRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.ignoreDependentResources = reader.bool();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DeleteCaPoolRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.DeleteCaPoolRequest} DeleteCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCaPoolRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DeleteCaPoolRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DeleteCaPoolRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    if (typeof message.ignoreDependentResources !== "boolean")
                                        return "ignoreDependentResources: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a DeleteCaPoolRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.DeleteCaPoolRequest} DeleteCaPoolRequest
                             */
                            DeleteCaPoolRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.DeleteCaPoolRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.DeleteCaPoolRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                if (object.ignoreDependentResources != null)
                                    message.ignoreDependentResources = Boolean(object.ignoreDependentResources);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DeleteCaPoolRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.DeleteCaPoolRequest} message DeleteCaPoolRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DeleteCaPoolRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                    object.ignoreDependentResources = false;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                if (message.ignoreDependentResources != null && message.hasOwnProperty("ignoreDependentResources"))
                                    object.ignoreDependentResources = message.ignoreDependentResources;
                                return object;
                            };
    
                            /**
                             * Converts this DeleteCaPoolRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DeleteCaPoolRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DeleteCaPoolRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.DeleteCaPoolRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DeleteCaPoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.DeleteCaPoolRequest";
                            };
    
                            return DeleteCaPoolRequest;
                        })();
    
                        v1.FetchCaCertsRequest = (function() {
    
                            /**
                             * Properties of a FetchCaCertsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IFetchCaCertsRequest
                             * @property {string|null} [caPool] FetchCaCertsRequest caPool
                             * @property {string|null} [requestId] FetchCaCertsRequest requestId
                             */
    
                            /**
                             * Constructs a new FetchCaCertsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a FetchCaCertsRequest.
                             * @implements IFetchCaCertsRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest=} [properties] Properties to set
                             */
                            function FetchCaCertsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCaCertsRequest caPool.
                             * @member {string} caPool
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @instance
                             */
                            FetchCaCertsRequest.prototype.caPool = "";
    
                            /**
                             * FetchCaCertsRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @instance
                             */
                            FetchCaCertsRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new FetchCaCertsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsRequest} FetchCaCertsRequest instance
                             */
                            FetchCaCertsRequest.create = function create(properties) {
                                return new FetchCaCertsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCaCertsRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest} message FetchCaCertsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCaCertsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.caPool != null && Object.hasOwnProperty.call(message, "caPool"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.caPool);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCaCertsRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsRequest} message FetchCaCertsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCaCertsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCaCertsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsRequest} FetchCaCertsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCaCertsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.FetchCaCertsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.caPool = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCaCertsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsRequest} FetchCaCertsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCaCertsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCaCertsRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCaCertsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.caPool != null && message.hasOwnProperty("caPool"))
                                    if (!$util.isString(message.caPool))
                                        return "caPool: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FetchCaCertsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsRequest} FetchCaCertsRequest
                             */
                            FetchCaCertsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.FetchCaCertsRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.FetchCaCertsRequest();
                                if (object.caPool != null)
                                    message.caPool = String(object.caPool);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCaCertsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.FetchCaCertsRequest} message FetchCaCertsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCaCertsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.caPool = "";
                                    object.requestId = "";
                                }
                                if (message.caPool != null && message.hasOwnProperty("caPool"))
                                    object.caPool = message.caPool;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this FetchCaCertsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCaCertsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCaCertsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCaCertsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.FetchCaCertsRequest";
                            };
    
                            return FetchCaCertsRequest;
                        })();
    
                        v1.FetchCaCertsResponse = (function() {
    
                            /**
                             * Properties of a FetchCaCertsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IFetchCaCertsResponse
                             * @property {Array.<google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain>|null} [caCerts] FetchCaCertsResponse caCerts
                             */
    
                            /**
                             * Constructs a new FetchCaCertsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a FetchCaCertsResponse.
                             * @implements IFetchCaCertsResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsResponse=} [properties] Properties to set
                             */
                            function FetchCaCertsResponse(properties) {
                                this.caCerts = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCaCertsResponse caCerts.
                             * @member {Array.<google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain>} caCerts
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @instance
                             */
                            FetchCaCertsResponse.prototype.caCerts = $util.emptyArray;
    
                            /**
                             * Creates a new FetchCaCertsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse} FetchCaCertsResponse instance
                             */
                            FetchCaCertsResponse.create = function create(properties) {
                                return new FetchCaCertsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCaCertsResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsResponse} message FetchCaCertsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCaCertsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.caCerts != null && message.caCerts.length)
                                    for (var i = 0; i < message.caCerts.length; ++i)
                                        $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.encode(message.caCerts[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCaCertsResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IFetchCaCertsResponse} message FetchCaCertsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCaCertsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCaCertsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse} FetchCaCertsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCaCertsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.FetchCaCertsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.caCerts && message.caCerts.length))
                                                message.caCerts = [];
                                            message.caCerts.push($root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCaCertsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse} FetchCaCertsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCaCertsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCaCertsResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCaCertsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.caCerts != null && message.hasOwnProperty("caCerts")) {
                                    if (!Array.isArray(message.caCerts))
                                        return "caCerts: array expected";
                                    for (var i = 0; i < message.caCerts.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.verify(message.caCerts[i]);
                                        if (error)
                                            return "caCerts." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FetchCaCertsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse} FetchCaCertsResponse
                             */
                            FetchCaCertsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.FetchCaCertsResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.FetchCaCertsResponse();
                                if (object.caCerts) {
                                    if (!Array.isArray(object.caCerts))
                                        throw TypeError(".google.cloud.security.privateca.v1.FetchCaCertsResponse.caCerts: array expected");
                                    message.caCerts = [];
                                    for (var i = 0; i < object.caCerts.length; ++i) {
                                        if (typeof object.caCerts[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.FetchCaCertsResponse.caCerts: object expected");
                                        message.caCerts[i] = $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.fromObject(object.caCerts[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCaCertsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse} message FetchCaCertsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCaCertsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.caCerts = [];
                                if (message.caCerts && message.caCerts.length) {
                                    object.caCerts = [];
                                    for (var j = 0; j < message.caCerts.length; ++j)
                                        object.caCerts[j] = $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.toObject(message.caCerts[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this FetchCaCertsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCaCertsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCaCertsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCaCertsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.FetchCaCertsResponse";
                            };
    
                            FetchCaCertsResponse.CertChain = (function() {
    
                                /**
                                 * Properties of a CertChain.
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                                 * @interface ICertChain
                                 * @property {Array.<string>|null} [certificates] CertChain certificates
                                 */
    
                                /**
                                 * Constructs a new CertChain.
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse
                                 * @classdesc Represents a CertChain.
                                 * @implements ICertChain
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain=} [properties] Properties to set
                                 */
                                function CertChain(properties) {
                                    this.certificates = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CertChain certificates.
                                 * @member {Array.<string>} certificates
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @instance
                                 */
                                CertChain.prototype.certificates = $util.emptyArray;
    
                                /**
                                 * Creates a new CertChain instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain} CertChain instance
                                 */
                                CertChain.create = function create(properties) {
                                    return new CertChain(properties);
                                };
    
                                /**
                                 * Encodes the specified CertChain message. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain} message CertChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertChain.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.certificates != null && message.certificates.length)
                                        for (var i = 0; i < message.certificates.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.certificates[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CertChain message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse.ICertChain} message CertChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertChain.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CertChain message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain} CertChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertChain.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.certificates && message.certificates.length))
                                                    message.certificates = [];
                                                message.certificates.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CertChain message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain} CertChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertChain.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CertChain message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CertChain.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.certificates != null && message.hasOwnProperty("certificates")) {
                                        if (!Array.isArray(message.certificates))
                                            return "certificates: array expected";
                                        for (var i = 0; i < message.certificates.length; ++i)
                                            if (!$util.isString(message.certificates[i]))
                                                return "certificates: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a CertChain message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain} CertChain
                                 */
                                CertChain.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain();
                                    if (object.certificates) {
                                        if (!Array.isArray(object.certificates))
                                            throw TypeError(".google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain.certificates: array expected");
                                        message.certificates = [];
                                        for (var i = 0; i < object.certificates.length; ++i)
                                            message.certificates[i] = String(object.certificates[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CertChain message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain} message CertChain
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CertChain.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.certificates = [];
                                    if (message.certificates && message.certificates.length) {
                                        object.certificates = [];
                                        for (var j = 0; j < message.certificates.length; ++j)
                                            object.certificates[j] = message.certificates[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this CertChain to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CertChain.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CertChain
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CertChain.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1.FetchCaCertsResponse.CertChain";
                                };
    
                                return CertChain;
                            })();
    
                            return FetchCaCertsResponse;
                        })();
    
                        v1.GetCaPoolRequest = (function() {
    
                            /**
                             * Properties of a GetCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IGetCaPoolRequest
                             * @property {string|null} [name] GetCaPoolRequest name
                             */
    
                            /**
                             * Constructs a new GetCaPoolRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a GetCaPoolRequest.
                             * @implements IGetCaPoolRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest=} [properties] Properties to set
                             */
                            function GetCaPoolRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCaPoolRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @instance
                             */
                            GetCaPoolRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCaPoolRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.GetCaPoolRequest} GetCaPoolRequest instance
                             */
                            GetCaPoolRequest.create = function create(properties) {
                                return new GetCaPoolRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCaPoolRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.GetCaPoolRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest} message GetCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCaPoolRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCaPoolRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.GetCaPoolRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCaPoolRequest} message GetCaPoolRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCaPoolRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCaPoolRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.GetCaPoolRequest} GetCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCaPoolRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.GetCaPoolRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCaPoolRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.GetCaPoolRequest} GetCaPoolRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCaPoolRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCaPoolRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCaPoolRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCaPoolRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.GetCaPoolRequest} GetCaPoolRequest
                             */
                            GetCaPoolRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.GetCaPoolRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.GetCaPoolRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCaPoolRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.GetCaPoolRequest} message GetCaPoolRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCaPoolRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCaPoolRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCaPoolRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCaPoolRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.GetCaPoolRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCaPoolRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.GetCaPoolRequest";
                            };
    
                            return GetCaPoolRequest;
                        })();
    
                        v1.ListCaPoolsRequest = (function() {
    
                            /**
                             * Properties of a ListCaPoolsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCaPoolsRequest
                             * @property {string|null} [parent] ListCaPoolsRequest parent
                             * @property {number|null} [pageSize] ListCaPoolsRequest pageSize
                             * @property {string|null} [pageToken] ListCaPoolsRequest pageToken
                             * @property {string|null} [filter] ListCaPoolsRequest filter
                             * @property {string|null} [orderBy] ListCaPoolsRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCaPoolsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCaPoolsRequest.
                             * @implements IListCaPoolsRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest=} [properties] Properties to set
                             */
                            function ListCaPoolsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCaPoolsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             */
                            ListCaPoolsRequest.prototype.parent = "";
    
                            /**
                             * ListCaPoolsRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             */
                            ListCaPoolsRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCaPoolsRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             */
                            ListCaPoolsRequest.prototype.pageToken = "";
    
                            /**
                             * ListCaPoolsRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             */
                            ListCaPoolsRequest.prototype.filter = "";
    
                            /**
                             * ListCaPoolsRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             */
                            ListCaPoolsRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCaPoolsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsRequest} ListCaPoolsRequest instance
                             */
                            ListCaPoolsRequest.create = function create(properties) {
                                return new ListCaPoolsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCaPoolsRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCaPoolsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest} message ListCaPoolsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCaPoolsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCaPoolsRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCaPoolsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsRequest} message ListCaPoolsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCaPoolsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCaPoolsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsRequest} ListCaPoolsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCaPoolsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCaPoolsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCaPoolsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsRequest} ListCaPoolsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCaPoolsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCaPoolsRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCaPoolsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCaPoolsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsRequest} ListCaPoolsRequest
                             */
                            ListCaPoolsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCaPoolsRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCaPoolsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCaPoolsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCaPoolsRequest} message ListCaPoolsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCaPoolsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCaPoolsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCaPoolsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCaPoolsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCaPoolsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCaPoolsRequest";
                            };
    
                            return ListCaPoolsRequest;
                        })();
    
                        v1.ListCaPoolsResponse = (function() {
    
                            /**
                             * Properties of a ListCaPoolsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCaPoolsResponse
                             * @property {Array.<google.cloud.security.privateca.v1.ICaPool>|null} [caPools] ListCaPoolsResponse caPools
                             * @property {string|null} [nextPageToken] ListCaPoolsResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCaPoolsResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCaPoolsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCaPoolsResponse.
                             * @implements IListCaPoolsResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsResponse=} [properties] Properties to set
                             */
                            function ListCaPoolsResponse(properties) {
                                this.caPools = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCaPoolsResponse caPools.
                             * @member {Array.<google.cloud.security.privateca.v1.ICaPool>} caPools
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @instance
                             */
                            ListCaPoolsResponse.prototype.caPools = $util.emptyArray;
    
                            /**
                             * ListCaPoolsResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @instance
                             */
                            ListCaPoolsResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCaPoolsResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @instance
                             */
                            ListCaPoolsResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCaPoolsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsResponse} ListCaPoolsResponse instance
                             */
                            ListCaPoolsResponse.create = function create(properties) {
                                return new ListCaPoolsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCaPoolsResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCaPoolsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsResponse} message ListCaPoolsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCaPoolsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.caPools != null && message.caPools.length)
                                    for (var i = 0; i < message.caPools.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CaPool.encode(message.caPools[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCaPoolsResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCaPoolsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCaPoolsResponse} message ListCaPoolsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCaPoolsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCaPoolsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsResponse} ListCaPoolsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCaPoolsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCaPoolsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.caPools && message.caPools.length))
                                                message.caPools = [];
                                            message.caPools.push($root.google.cloud.security.privateca.v1.CaPool.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCaPoolsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsResponse} ListCaPoolsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCaPoolsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCaPoolsResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCaPoolsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.caPools != null && message.hasOwnProperty("caPools")) {
                                    if (!Array.isArray(message.caPools))
                                        return "caPools: array expected";
                                    for (var i = 0; i < message.caPools.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CaPool.verify(message.caPools[i]);
                                        if (error)
                                            return "caPools." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCaPoolsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCaPoolsResponse} ListCaPoolsResponse
                             */
                            ListCaPoolsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCaPoolsResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCaPoolsResponse();
                                if (object.caPools) {
                                    if (!Array.isArray(object.caPools))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCaPoolsResponse.caPools: array expected");
                                    message.caPools = [];
                                    for (var i = 0; i < object.caPools.length; ++i) {
                                        if (typeof object.caPools[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.ListCaPoolsResponse.caPools: object expected");
                                        message.caPools[i] = $root.google.cloud.security.privateca.v1.CaPool.fromObject(object.caPools[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCaPoolsResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCaPoolsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCaPoolsResponse} message ListCaPoolsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCaPoolsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.caPools = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.caPools && message.caPools.length) {
                                    object.caPools = [];
                                    for (var j = 0; j < message.caPools.length; ++j)
                                        object.caPools[j] = $root.google.cloud.security.privateca.v1.CaPool.toObject(message.caPools[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCaPoolsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCaPoolsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCaPoolsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCaPoolsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCaPoolsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCaPoolsResponse";
                            };
    
                            return ListCaPoolsResponse;
                        })();
    
                        v1.GetCertificateRevocationListRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IGetCertificateRevocationListRequest
                             * @property {string|null} [name] GetCertificateRevocationListRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a GetCertificateRevocationListRequest.
                             * @implements IGetCertificateRevocationListRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest=} [properties] Properties to set
                             */
                            function GetCertificateRevocationListRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateRevocationListRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @instance
                             */
                            GetCertificateRevocationListRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateRevocationListRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest instance
                             */
                            GetCertificateRevocationListRequest.create = function create(properties) {
                                return new GetCertificateRevocationListRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateRevocationListRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateRevocationListRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest} message GetCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRevocationListRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateRevocationListRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateRevocationListRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateRevocationListRequest} message GetCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRevocationListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateRevocationListRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRevocationListRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.GetCertificateRevocationListRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateRevocationListRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRevocationListRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateRevocationListRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateRevocationListRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateRevocationListRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             */
                            GetCertificateRevocationListRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.GetCertificateRevocationListRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.GetCertificateRevocationListRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateRevocationListRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.GetCertificateRevocationListRequest} message GetCertificateRevocationListRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateRevocationListRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateRevocationListRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateRevocationListRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateRevocationListRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.GetCertificateRevocationListRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateRevocationListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.GetCertificateRevocationListRequest";
                            };
    
                            return GetCertificateRevocationListRequest;
                        })();
    
                        v1.ListCertificateRevocationListsRequest = (function() {
    
                            /**
                             * Properties of a ListCertificateRevocationListsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateRevocationListsRequest
                             * @property {string|null} [parent] ListCertificateRevocationListsRequest parent
                             * @property {number|null} [pageSize] ListCertificateRevocationListsRequest pageSize
                             * @property {string|null} [pageToken] ListCertificateRevocationListsRequest pageToken
                             * @property {string|null} [filter] ListCertificateRevocationListsRequest filter
                             * @property {string|null} [orderBy] ListCertificateRevocationListsRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificateRevocationListsRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateRevocationListsRequest.
                             * @implements IListCertificateRevocationListsRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest=} [properties] Properties to set
                             */
                            function ListCertificateRevocationListsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateRevocationListsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.parent = "";
    
                            /**
                             * ListCertificateRevocationListsRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificateRevocationListsRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificateRevocationListsRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.filter = "";
    
                            /**
                             * ListCertificateRevocationListsRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificateRevocationListsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest instance
                             */
                            ListCertificateRevocationListsRequest.create = function create(properties) {
                                return new ListCertificateRevocationListsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateRevocationListsRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateRevocationListsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateRevocationListsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             */
                            ListCertificateRevocationListsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateRevocationListsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateRevocationListsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateRevocationListsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateRevocationListsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateRevocationListsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateRevocationListsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateRevocationListsRequest";
                            };
    
                            return ListCertificateRevocationListsRequest;
                        })();
    
                        v1.ListCertificateRevocationListsResponse = (function() {
    
                            /**
                             * Properties of a ListCertificateRevocationListsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateRevocationListsResponse
                             * @property {Array.<google.cloud.security.privateca.v1.ICertificateRevocationList>|null} [certificateRevocationLists] ListCertificateRevocationListsResponse certificateRevocationLists
                             * @property {string|null} [nextPageToken] ListCertificateRevocationListsResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificateRevocationListsResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificateRevocationListsResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateRevocationListsResponse.
                             * @implements IListCertificateRevocationListsResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsResponse=} [properties] Properties to set
                             */
                            function ListCertificateRevocationListsResponse(properties) {
                                this.certificateRevocationLists = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateRevocationListsResponse certificateRevocationLists.
                             * @member {Array.<google.cloud.security.privateca.v1.ICertificateRevocationList>} certificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.certificateRevocationLists = $util.emptyArray;
    
                            /**
                             * ListCertificateRevocationListsResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificateRevocationListsResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificateRevocationListsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse instance
                             */
                            ListCertificateRevocationListsResponse.create = function create(properties) {
                                return new ListCertificateRevocationListsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateRevocationLists != null && message.certificateRevocationLists.length)
                                    for (var i = 0; i < message.certificateRevocationLists.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CertificateRevocationList.encode(message.certificateRevocationLists[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificateRevocationLists && message.certificateRevocationLists.length))
                                                message.certificateRevocationLists = [];
                                            message.certificateRevocationLists.push($root.google.cloud.security.privateca.v1.CertificateRevocationList.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateRevocationListsResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateRevocationListsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateRevocationLists != null && message.hasOwnProperty("certificateRevocationLists")) {
                                    if (!Array.isArray(message.certificateRevocationLists))
                                        return "certificateRevocationLists: array expected";
                                    for (var i = 0; i < message.certificateRevocationLists.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateRevocationList.verify(message.certificateRevocationLists[i]);
                                        if (error)
                                            return "certificateRevocationLists." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateRevocationListsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             */
                            ListCertificateRevocationListsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse();
                                if (object.certificateRevocationLists) {
                                    if (!Array.isArray(object.certificateRevocationLists))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse.certificateRevocationLists: array expected");
                                    message.certificateRevocationLists = [];
                                    for (var i = 0; i < object.certificateRevocationLists.length; ++i) {
                                        if (typeof object.certificateRevocationLists[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse.certificateRevocationLists: object expected");
                                        message.certificateRevocationLists[i] = $root.google.cloud.security.privateca.v1.CertificateRevocationList.fromObject(object.certificateRevocationLists[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateRevocationListsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateRevocationListsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificateRevocationLists = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificateRevocationLists && message.certificateRevocationLists.length) {
                                    object.certificateRevocationLists = [];
                                    for (var j = 0; j < message.certificateRevocationLists.length; ++j)
                                        object.certificateRevocationLists[j] = $root.google.cloud.security.privateca.v1.CertificateRevocationList.toObject(message.certificateRevocationLists[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateRevocationListsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateRevocationListsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateRevocationListsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateRevocationListsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateRevocationListsResponse";
                            };
    
                            return ListCertificateRevocationListsResponse;
                        })();
    
                        v1.UpdateCertificateRevocationListRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUpdateCertificateRevocationListRequest
                             * @property {google.cloud.security.privateca.v1.ICertificateRevocationList|null} [certificateRevocationList] UpdateCertificateRevocationListRequest certificateRevocationList
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateRevocationListRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateRevocationListRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UpdateCertificateRevocationListRequest.
                             * @implements IUpdateCertificateRevocationListRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateRevocationListRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateRevocationListRequest certificateRevocationList.
                             * @member {google.cloud.security.privateca.v1.ICertificateRevocationList|null|undefined} certificateRevocationList
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.certificateRevocationList = null;
    
                            /**
                             * UpdateCertificateRevocationListRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateRevocationListRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateRevocationListRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest instance
                             */
                            UpdateCertificateRevocationListRequest.create = function create(properties) {
                                return new UpdateCertificateRevocationListRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRevocationListRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRevocationListRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateRevocationList != null && Object.hasOwnProperty.call(message, "certificateRevocationList"))
                                    $root.google.cloud.security.privateca.v1.CertificateRevocationList.encode(message.certificateRevocationList, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRevocationListRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRevocationListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateRevocationListRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRevocationListRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateRevocationList = $root.google.cloud.security.privateca.v1.CertificateRevocationList.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateRevocationListRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRevocationListRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateRevocationListRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateRevocationListRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateRevocationList != null && message.hasOwnProperty("certificateRevocationList")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateRevocationList.verify(message.certificateRevocationList);
                                    if (error)
                                        return "certificateRevocationList." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateRevocationListRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             */
                            UpdateCertificateRevocationListRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest();
                                if (object.certificateRevocationList != null) {
                                    if (typeof object.certificateRevocationList !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest.certificateRevocationList: object expected");
                                    message.certificateRevocationList = $root.google.cloud.security.privateca.v1.CertificateRevocationList.fromObject(object.certificateRevocationList);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateRevocationListRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateRevocationListRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificateRevocationList = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificateRevocationList != null && message.hasOwnProperty("certificateRevocationList"))
                                    object.certificateRevocationList = $root.google.cloud.security.privateca.v1.CertificateRevocationList.toObject(message.certificateRevocationList, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateRevocationListRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateRevocationListRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateRevocationListRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateRevocationListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UpdateCertificateRevocationListRequest";
                            };
    
                            return UpdateCertificateRevocationListRequest;
                        })();
    
                        v1.CreateCertificateTemplateRequest = (function() {
    
                            /**
                             * Properties of a CreateCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface ICreateCertificateTemplateRequest
                             * @property {string|null} [parent] CreateCertificateTemplateRequest parent
                             * @property {string|null} [certificateTemplateId] CreateCertificateTemplateRequest certificateTemplateId
                             * @property {google.cloud.security.privateca.v1.ICertificateTemplate|null} [certificateTemplate] CreateCertificateTemplateRequest certificateTemplate
                             * @property {string|null} [requestId] CreateCertificateTemplateRequest requestId
                             */
    
                            /**
                             * Constructs a new CreateCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a CreateCertificateTemplateRequest.
                             * @implements ICreateCertificateTemplateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest=} [properties] Properties to set
                             */
                            function CreateCertificateTemplateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCertificateTemplateRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @instance
                             */
                            CreateCertificateTemplateRequest.prototype.parent = "";
    
                            /**
                             * CreateCertificateTemplateRequest certificateTemplateId.
                             * @member {string} certificateTemplateId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @instance
                             */
                            CreateCertificateTemplateRequest.prototype.certificateTemplateId = "";
    
                            /**
                             * CreateCertificateTemplateRequest certificateTemplate.
                             * @member {google.cloud.security.privateca.v1.ICertificateTemplate|null|undefined} certificateTemplate
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @instance
                             */
                            CreateCertificateTemplateRequest.prototype.certificateTemplate = null;
    
                            /**
                             * CreateCertificateTemplateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @instance
                             */
                            CreateCertificateTemplateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new CreateCertificateTemplateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateTemplateRequest} CreateCertificateTemplateRequest instance
                             */
                            CreateCertificateTemplateRequest.create = function create(properties) {
                                return new CreateCertificateTemplateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCertificateTemplateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateTemplateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest} message CreateCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateTemplateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.certificateTemplateId != null && Object.hasOwnProperty.call(message, "certificateTemplateId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.certificateTemplateId);
                                if (message.certificateTemplate != null && Object.hasOwnProperty.call(message, "certificateTemplate"))
                                    $root.google.cloud.security.privateca.v1.CertificateTemplate.encode(message.certificateTemplate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCertificateTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.CreateCertificateTemplateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ICreateCertificateTemplateRequest} message CreateCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCertificateTemplateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateTemplateRequest} CreateCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateTemplateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.CreateCertificateTemplateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.certificateTemplateId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCertificateTemplateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateTemplateRequest} CreateCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCertificateTemplateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCertificateTemplateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.certificateTemplateId != null && message.hasOwnProperty("certificateTemplateId"))
                                    if (!$util.isString(message.certificateTemplateId))
                                        return "certificateTemplateId: string expected";
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateTemplate.verify(message.certificateTemplate);
                                    if (error)
                                        return "certificateTemplate." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCertificateTemplateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.CreateCertificateTemplateRequest} CreateCertificateTemplateRequest
                             */
                            CreateCertificateTemplateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.CreateCertificateTemplateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.CreateCertificateTemplateRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.certificateTemplateId != null)
                                    message.certificateTemplateId = String(object.certificateTemplateId);
                                if (object.certificateTemplate != null) {
                                    if (typeof object.certificateTemplate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.CreateCertificateTemplateRequest.certificateTemplate: object expected");
                                    message.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.fromObject(object.certificateTemplate);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCertificateTemplateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.CreateCertificateTemplateRequest} message CreateCertificateTemplateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCertificateTemplateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.certificateTemplateId = "";
                                    object.certificateTemplate = null;
                                    object.requestId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.certificateTemplateId != null && message.hasOwnProperty("certificateTemplateId"))
                                    object.certificateTemplateId = message.certificateTemplateId;
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate"))
                                    object.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.toObject(message.certificateTemplate, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCertificateTemplateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCertificateTemplateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCertificateTemplateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.CreateCertificateTemplateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCertificateTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.CreateCertificateTemplateRequest";
                            };
    
                            return CreateCertificateTemplateRequest;
                        })();
    
                        v1.DeleteCertificateTemplateRequest = (function() {
    
                            /**
                             * Properties of a DeleteCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IDeleteCertificateTemplateRequest
                             * @property {string|null} [name] DeleteCertificateTemplateRequest name
                             * @property {string|null} [requestId] DeleteCertificateTemplateRequest requestId
                             */
    
                            /**
                             * Constructs a new DeleteCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a DeleteCertificateTemplateRequest.
                             * @implements IDeleteCertificateTemplateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest=} [properties] Properties to set
                             */
                            function DeleteCertificateTemplateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DeleteCertificateTemplateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @instance
                             */
                            DeleteCertificateTemplateRequest.prototype.name = "";
    
                            /**
                             * DeleteCertificateTemplateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @instance
                             */
                            DeleteCertificateTemplateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new DeleteCertificateTemplateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest} DeleteCertificateTemplateRequest instance
                             */
                            DeleteCertificateTemplateRequest.create = function create(properties) {
                                return new DeleteCertificateTemplateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified DeleteCertificateTemplateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest} message DeleteCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCertificateTemplateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DeleteCertificateTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IDeleteCertificateTemplateRequest} message DeleteCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DeleteCertificateTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DeleteCertificateTemplateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest} DeleteCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCertificateTemplateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DeleteCertificateTemplateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest} DeleteCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DeleteCertificateTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DeleteCertificateTemplateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DeleteCertificateTemplateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DeleteCertificateTemplateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest} DeleteCertificateTemplateRequest
                             */
                            DeleteCertificateTemplateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DeleteCertificateTemplateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest} message DeleteCertificateTemplateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DeleteCertificateTemplateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this DeleteCertificateTemplateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DeleteCertificateTemplateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DeleteCertificateTemplateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DeleteCertificateTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.DeleteCertificateTemplateRequest";
                            };
    
                            return DeleteCertificateTemplateRequest;
                        })();
    
                        v1.GetCertificateTemplateRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IGetCertificateTemplateRequest
                             * @property {string|null} [name] GetCertificateTemplateRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a GetCertificateTemplateRequest.
                             * @implements IGetCertificateTemplateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest=} [properties] Properties to set
                             */
                            function GetCertificateTemplateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateTemplateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @instance
                             */
                            GetCertificateTemplateRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateTemplateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.GetCertificateTemplateRequest} GetCertificateTemplateRequest instance
                             */
                            GetCertificateTemplateRequest.create = function create(properties) {
                                return new GetCertificateTemplateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateTemplateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateTemplateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest} message GetCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateTemplateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.GetCertificateTemplateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IGetCertificateTemplateRequest} message GetCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateTemplateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.GetCertificateTemplateRequest} GetCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateTemplateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.GetCertificateTemplateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateTemplateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.GetCertificateTemplateRequest} GetCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateTemplateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateTemplateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateTemplateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.GetCertificateTemplateRequest} GetCertificateTemplateRequest
                             */
                            GetCertificateTemplateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.GetCertificateTemplateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.GetCertificateTemplateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateTemplateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.GetCertificateTemplateRequest} message GetCertificateTemplateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateTemplateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateTemplateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateTemplateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateTemplateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.GetCertificateTemplateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.GetCertificateTemplateRequest";
                            };
    
                            return GetCertificateTemplateRequest;
                        })();
    
                        v1.ListCertificateTemplatesRequest = (function() {
    
                            /**
                             * Properties of a ListCertificateTemplatesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateTemplatesRequest
                             * @property {string|null} [parent] ListCertificateTemplatesRequest parent
                             * @property {number|null} [pageSize] ListCertificateTemplatesRequest pageSize
                             * @property {string|null} [pageToken] ListCertificateTemplatesRequest pageToken
                             * @property {string|null} [filter] ListCertificateTemplatesRequest filter
                             * @property {string|null} [orderBy] ListCertificateTemplatesRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificateTemplatesRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateTemplatesRequest.
                             * @implements IListCertificateTemplatesRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest=} [properties] Properties to set
                             */
                            function ListCertificateTemplatesRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateTemplatesRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             */
                            ListCertificateTemplatesRequest.prototype.parent = "";
    
                            /**
                             * ListCertificateTemplatesRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             */
                            ListCertificateTemplatesRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificateTemplatesRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             */
                            ListCertificateTemplatesRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificateTemplatesRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             */
                            ListCertificateTemplatesRequest.prototype.filter = "";
    
                            /**
                             * ListCertificateTemplatesRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             */
                            ListCertificateTemplatesRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificateTemplatesRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesRequest} ListCertificateTemplatesRequest instance
                             */
                            ListCertificateTemplatesRequest.create = function create(properties) {
                                return new ListCertificateTemplatesRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateTemplatesRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateTemplatesRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest} message ListCertificateTemplatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateTemplatesRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateTemplatesRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateTemplatesRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesRequest} message ListCertificateTemplatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateTemplatesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateTemplatesRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesRequest} ListCertificateTemplatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateTemplatesRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateTemplatesRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateTemplatesRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesRequest} ListCertificateTemplatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateTemplatesRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateTemplatesRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateTemplatesRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateTemplatesRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesRequest} ListCertificateTemplatesRequest
                             */
                            ListCertificateTemplatesRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateTemplatesRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateTemplatesRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateTemplatesRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateTemplatesRequest} message ListCertificateTemplatesRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateTemplatesRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateTemplatesRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateTemplatesRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateTemplatesRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateTemplatesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateTemplatesRequest";
                            };
    
                            return ListCertificateTemplatesRequest;
                        })();
    
                        v1.ListCertificateTemplatesResponse = (function() {
    
                            /**
                             * Properties of a ListCertificateTemplatesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IListCertificateTemplatesResponse
                             * @property {Array.<google.cloud.security.privateca.v1.ICertificateTemplate>|null} [certificateTemplates] ListCertificateTemplatesResponse certificateTemplates
                             * @property {string|null} [nextPageToken] ListCertificateTemplatesResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificateTemplatesResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificateTemplatesResponse.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents a ListCertificateTemplatesResponse.
                             * @implements IListCertificateTemplatesResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesResponse=} [properties] Properties to set
                             */
                            function ListCertificateTemplatesResponse(properties) {
                                this.certificateTemplates = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateTemplatesResponse certificateTemplates.
                             * @member {Array.<google.cloud.security.privateca.v1.ICertificateTemplate>} certificateTemplates
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @instance
                             */
                            ListCertificateTemplatesResponse.prototype.certificateTemplates = $util.emptyArray;
    
                            /**
                             * ListCertificateTemplatesResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @instance
                             */
                            ListCertificateTemplatesResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificateTemplatesResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @instance
                             */
                            ListCertificateTemplatesResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificateTemplatesResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} ListCertificateTemplatesResponse instance
                             */
                            ListCertificateTemplatesResponse.create = function create(properties) {
                                return new ListCertificateTemplatesResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateTemplatesResponse message. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateTemplatesResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesResponse} message ListCertificateTemplatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateTemplatesResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateTemplates != null && message.certificateTemplates.length)
                                    for (var i = 0; i < message.certificateTemplates.length; ++i)
                                        $root.google.cloud.security.privateca.v1.CertificateTemplate.encode(message.certificateTemplates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateTemplatesResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.ListCertificateTemplatesResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.IListCertificateTemplatesResponse} message ListCertificateTemplatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateTemplatesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateTemplatesResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} ListCertificateTemplatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateTemplatesResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.ListCertificateTemplatesResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificateTemplates && message.certificateTemplates.length))
                                                message.certificateTemplates = [];
                                            message.certificateTemplates.push($root.google.cloud.security.privateca.v1.CertificateTemplate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateTemplatesResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} ListCertificateTemplatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateTemplatesResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateTemplatesResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateTemplatesResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateTemplates != null && message.hasOwnProperty("certificateTemplates")) {
                                    if (!Array.isArray(message.certificateTemplates))
                                        return "certificateTemplates: array expected";
                                    for (var i = 0; i < message.certificateTemplates.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1.CertificateTemplate.verify(message.certificateTemplates[i]);
                                        if (error)
                                            return "certificateTemplates." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateTemplatesResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} ListCertificateTemplatesResponse
                             */
                            ListCertificateTemplatesResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.ListCertificateTemplatesResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.ListCertificateTemplatesResponse();
                                if (object.certificateTemplates) {
                                    if (!Array.isArray(object.certificateTemplates))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateTemplatesResponse.certificateTemplates: array expected");
                                    message.certificateTemplates = [];
                                    for (var i = 0; i < object.certificateTemplates.length; ++i) {
                                        if (typeof object.certificateTemplates[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1.ListCertificateTemplatesResponse.certificateTemplates: object expected");
                                        message.certificateTemplates[i] = $root.google.cloud.security.privateca.v1.CertificateTemplate.fromObject(object.certificateTemplates[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1.ListCertificateTemplatesResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateTemplatesResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1.ListCertificateTemplatesResponse} message ListCertificateTemplatesResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateTemplatesResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificateTemplates = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificateTemplates && message.certificateTemplates.length) {
                                    object.certificateTemplates = [];
                                    for (var j = 0; j < message.certificateTemplates.length; ++j)
                                        object.certificateTemplates[j] = $root.google.cloud.security.privateca.v1.CertificateTemplate.toObject(message.certificateTemplates[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateTemplatesResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateTemplatesResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateTemplatesResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.ListCertificateTemplatesResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateTemplatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.ListCertificateTemplatesResponse";
                            };
    
                            return ListCertificateTemplatesResponse;
                        })();
    
                        v1.UpdateCertificateTemplateRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IUpdateCertificateTemplateRequest
                             * @property {google.cloud.security.privateca.v1.ICertificateTemplate|null} [certificateTemplate] UpdateCertificateTemplateRequest certificateTemplate
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateTemplateRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateTemplateRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateTemplateRequest.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an UpdateCertificateTemplateRequest.
                             * @implements IUpdateCertificateTemplateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateTemplateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateTemplateRequest certificateTemplate.
                             * @member {google.cloud.security.privateca.v1.ICertificateTemplate|null|undefined} certificateTemplate
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @instance
                             */
                            UpdateCertificateTemplateRequest.prototype.certificateTemplate = null;
    
                            /**
                             * UpdateCertificateTemplateRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @instance
                             */
                            UpdateCertificateTemplateRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateTemplateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @instance
                             */
                            UpdateCertificateTemplateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateTemplateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest} UpdateCertificateTemplateRequest instance
                             */
                            UpdateCertificateTemplateRequest.create = function create(properties) {
                                return new UpdateCertificateTemplateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateTemplateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest} message UpdateCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateTemplateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateTemplate != null && Object.hasOwnProperty.call(message, "certificateTemplate"))
                                    $root.google.cloud.security.privateca.v1.CertificateTemplate.encode(message.certificateTemplate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.IUpdateCertificateTemplateRequest} message UpdateCertificateTemplateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateTemplateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest} UpdateCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateTemplateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateTemplateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest} UpdateCertificateTemplateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateTemplateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateTemplateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate")) {
                                    var error = $root.google.cloud.security.privateca.v1.CertificateTemplate.verify(message.certificateTemplate);
                                    if (error)
                                        return "certificateTemplate." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateTemplateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest} UpdateCertificateTemplateRequest
                             */
                            UpdateCertificateTemplateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest();
                                if (object.certificateTemplate != null) {
                                    if (typeof object.certificateTemplate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest.certificateTemplate: object expected");
                                    message.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.fromObject(object.certificateTemplate);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateTemplateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest} message UpdateCertificateTemplateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateTemplateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificateTemplate = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificateTemplate != null && message.hasOwnProperty("certificateTemplate"))
                                    object.certificateTemplate = $root.google.cloud.security.privateca.v1.CertificateTemplate.toObject(message.certificateTemplate, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateTemplateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateTemplateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateTemplateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.UpdateCertificateTemplateRequest";
                            };
    
                            return UpdateCertificateTemplateRequest;
                        })();
    
                        v1.OperationMetadata = (function() {
    
                            /**
                             * Properties of an OperationMetadata.
                             * @memberof google.cloud.security.privateca.v1
                             * @interface IOperationMetadata
                             * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                             * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                             * @property {string|null} [target] OperationMetadata target
                             * @property {string|null} [verb] OperationMetadata verb
                             * @property {string|null} [statusMessage] OperationMetadata statusMessage
                             * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                             * @property {string|null} [apiVersion] OperationMetadata apiVersion
                             */
    
                            /**
                             * Constructs a new OperationMetadata.
                             * @memberof google.cloud.security.privateca.v1
                             * @classdesc Represents an OperationMetadata.
                             * @implements IOperationMetadata
                             * @constructor
                             * @param {google.cloud.security.privateca.v1.IOperationMetadata=} [properties] Properties to set
                             */
                            function OperationMetadata(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OperationMetadata createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.createTime = null;
    
                            /**
                             * OperationMetadata endTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} endTime
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.endTime = null;
    
                            /**
                             * OperationMetadata target.
                             * @member {string} target
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.target = "";
    
                            /**
                             * OperationMetadata verb.
                             * @member {string} verb
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.verb = "";
    
                            /**
                             * OperationMetadata statusMessage.
                             * @member {string} statusMessage
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.statusMessage = "";
    
                            /**
                             * OperationMetadata requestedCancellation.
                             * @member {boolean} requestedCancellation
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.requestedCancellation = false;
    
                            /**
                             * OperationMetadata apiVersion.
                             * @member {string} apiVersion
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.apiVersion = "";
    
                            /**
                             * Creates a new OperationMetadata instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1.IOperationMetadata=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1.OperationMetadata} OperationMetadata instance
                             */
                            OperationMetadata.create = function create(properties) {
                                return new OperationMetadata(properties);
                            };
    
                            /**
                             * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.security.privateca.v1.OperationMetadata.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperationMetadata.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                    $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                                if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                                if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                                if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                                if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1.OperationMetadata.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OperationMetadata message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1.OperationMetadata} OperationMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperationMetadata.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1.OperationMetadata();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.target = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.verb = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.statusMessage = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.requestedCancellation = reader.bool();
                                            break;
                                        }
                                    case 7: {
                                            message.apiVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1.OperationMetadata} OperationMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OperationMetadata message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OperationMetadata.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                    if (error)
                                        return "endTime." + error;
                                }
                                if (message.target != null && message.hasOwnProperty("target"))
                                    if (!$util.isString(message.target))
                                        return "target: string expected";
                                if (message.verb != null && message.hasOwnProperty("verb"))
                                    if (!$util.isString(message.verb))
                                        return "verb: string expected";
                                if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                    if (!$util.isString(message.statusMessage))
                                        return "statusMessage: string expected";
                                if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                    if (typeof message.requestedCancellation !== "boolean")
                                        return "requestedCancellation: boolean expected";
                                if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                    if (!$util.isString(message.apiVersion))
                                        return "apiVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1.OperationMetadata} OperationMetadata
                             */
                            OperationMetadata.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1.OperationMetadata)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1.OperationMetadata();
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.OperationMetadata.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.endTime != null) {
                                    if (typeof object.endTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1.OperationMetadata.endTime: object expected");
                                    message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                                }
                                if (object.target != null)
                                    message.target = String(object.target);
                                if (object.verb != null)
                                    message.verb = String(object.verb);
                                if (object.statusMessage != null)
                                    message.statusMessage = String(object.statusMessage);
                                if (object.requestedCancellation != null)
                                    message.requestedCancellation = Boolean(object.requestedCancellation);
                                if (object.apiVersion != null)
                                    message.apiVersion = String(object.apiVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1.OperationMetadata} message OperationMetadata
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OperationMetadata.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.createTime = null;
                                    object.endTime = null;
                                    object.target = "";
                                    object.verb = "";
                                    object.statusMessage = "";
                                    object.requestedCancellation = false;
                                    object.apiVersion = "";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.endTime != null && message.hasOwnProperty("endTime"))
                                    object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                                if (message.target != null && message.hasOwnProperty("target"))
                                    object.target = message.target;
                                if (message.verb != null && message.hasOwnProperty("verb"))
                                    object.verb = message.verb;
                                if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                    object.statusMessage = message.statusMessage;
                                if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                    object.requestedCancellation = message.requestedCancellation;
                                if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                    object.apiVersion = message.apiVersion;
                                return object;
                            };
    
                            /**
                             * Converts this OperationMetadata to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OperationMetadata.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for OperationMetadata
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1.OperationMetadata
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1.OperationMetadata";
                            };
    
                            return OperationMetadata;
                        })();
    
                        return v1;
                    })();
    
                    privateca.v1beta1 = (function() {
    
                        /**
                         * Namespace v1beta1.
                         * @memberof google.cloud.security.privateca
                         * @namespace
                         */
                        var v1beta1 = {};
    
                        v1beta1.CertificateAuthority = (function() {
    
                            /**
                             * Properties of a CertificateAuthority.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICertificateAuthority
                             * @property {string|null} [name] CertificateAuthority name
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.Type|null} [type] CertificateAuthority type
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier|null} [tier] CertificateAuthority tier
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateConfig|null} [config] CertificateAuthority config
                             * @property {google.protobuf.IDuration|null} [lifetime] CertificateAuthority lifetime
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec|null} [keySpec] CertificateAuthority keySpec
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy|null} [certificatePolicy] CertificateAuthority certificatePolicy
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions|null} [issuingOptions] CertificateAuthority issuingOptions
                             * @property {google.cloud.security.privateca.v1beta1.ISubordinateConfig|null} [subordinateConfig] CertificateAuthority subordinateConfig
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.State|null} [state] CertificateAuthority state
                             * @property {Array.<string>|null} [pemCaCertificates] CertificateAuthority pemCaCertificates
                             * @property {Array.<google.cloud.security.privateca.v1beta1.ICertificateDescription>|null} [caCertificateDescriptions] CertificateAuthority caCertificateDescriptions
                             * @property {string|null} [gcsBucket] CertificateAuthority gcsBucket
                             * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls|null} [accessUrls] CertificateAuthority accessUrls
                             * @property {google.protobuf.ITimestamp|null} [createTime] CertificateAuthority createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] CertificateAuthority updateTime
                             * @property {google.protobuf.ITimestamp|null} [deleteTime] CertificateAuthority deleteTime
                             * @property {Object.<string,string>|null} [labels] CertificateAuthority labels
                             */
    
                            /**
                             * Constructs a new CertificateAuthority.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CertificateAuthority.
                             * @implements ICertificateAuthority
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateAuthority=} [properties] Properties to set
                             */
                            function CertificateAuthority(properties) {
                                this.pemCaCertificates = [];
                                this.caCertificateDescriptions = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateAuthority name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.name = "";
    
                            /**
                             * CertificateAuthority type.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.Type} type
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.type = 0;
    
                            /**
                             * CertificateAuthority tier.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier} tier
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.tier = 0;
    
                            /**
                             * CertificateAuthority config.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateConfig|null|undefined} config
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.config = null;
    
                            /**
                             * CertificateAuthority lifetime.
                             * @member {google.protobuf.IDuration|null|undefined} lifetime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.lifetime = null;
    
                            /**
                             * CertificateAuthority keySpec.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec|null|undefined} keySpec
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.keySpec = null;
    
                            /**
                             * CertificateAuthority certificatePolicy.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy|null|undefined} certificatePolicy
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.certificatePolicy = null;
    
                            /**
                             * CertificateAuthority issuingOptions.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions|null|undefined} issuingOptions
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.issuingOptions = null;
    
                            /**
                             * CertificateAuthority subordinateConfig.
                             * @member {google.cloud.security.privateca.v1beta1.ISubordinateConfig|null|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.subordinateConfig = null;
    
                            /**
                             * CertificateAuthority state.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.State} state
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.state = 0;
    
                            /**
                             * CertificateAuthority pemCaCertificates.
                             * @member {Array.<string>} pemCaCertificates
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.pemCaCertificates = $util.emptyArray;
    
                            /**
                             * CertificateAuthority caCertificateDescriptions.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.ICertificateDescription>} caCertificateDescriptions
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.caCertificateDescriptions = $util.emptyArray;
    
                            /**
                             * CertificateAuthority gcsBucket.
                             * @member {string} gcsBucket
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.gcsBucket = "";
    
                            /**
                             * CertificateAuthority accessUrls.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls|null|undefined} accessUrls
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.accessUrls = null;
    
                            /**
                             * CertificateAuthority createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.createTime = null;
    
                            /**
                             * CertificateAuthority updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.updateTime = null;
    
                            /**
                             * CertificateAuthority deleteTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.deleteTime = null;
    
                            /**
                             * CertificateAuthority labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             */
                            CertificateAuthority.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CertificateAuthority instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateAuthority=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority} CertificateAuthority instance
                             */
                            CertificateAuthority.create = function create(properties) {
                                return new CertificateAuthority(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateAuthority message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateAuthority} message CertificateAuthority message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateAuthority.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                                if (message.tier != null && Object.hasOwnProperty.call(message, "tier"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.tier);
                                if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateConfig.encode(message.config, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                    $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.keySpec != null && Object.hasOwnProperty.call(message, "keySpec"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.encode(message.keySpec, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.certificatePolicy != null && Object.hasOwnProperty.call(message, "certificatePolicy"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.encode(message.certificatePolicy, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.issuingOptions != null && Object.hasOwnProperty.call(message, "issuingOptions"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.encode(message.issuingOptions, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.pemCaCertificates != null && message.pemCaCertificates.length)
                                    for (var i = 0; i < message.pemCaCertificates.length; ++i)
                                        writer.uint32(/* id 9, wireType 2 =*/74).string(message.pemCaCertificates[i]);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 10, wireType 0 =*/80).int32(message.state);
                                if (message.caCertificateDescriptions != null && message.caCertificateDescriptions.length)
                                    for (var i = 0; i < message.caCertificateDescriptions.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.CertificateDescription.encode(message.caCertificateDescriptions[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                                if (message.gcsBucket != null && Object.hasOwnProperty.call(message, "gcsBucket"))
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.gcsBucket);
                                if (message.accessUrls != null && Object.hasOwnProperty.call(message, "accessUrls"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.encode(message.accessUrls, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                                if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                    $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 18, wireType 2 =*/146).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                if (message.subordinateConfig != null && Object.hasOwnProperty.call(message, "subordinateConfig"))
                                    $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.encode(message.subordinateConfig, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateAuthority message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateAuthority} message CertificateAuthority message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateAuthority.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateAuthority message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority} CertificateAuthority
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateAuthority.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.tier = reader.int32();
                                            break;
                                        }
                                    case 4: {
                                            message.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.keySpec = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 7: {
                                            message.certificatePolicy = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.issuingOptions = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 19: {
                                            message.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 9: {
                                            if (!(message.pemCaCertificates && message.pemCaCertificates.length))
                                                message.pemCaCertificates = [];
                                            message.pemCaCertificates.push(reader.string());
                                            break;
                                        }
                                    case 12: {
                                            if (!(message.caCertificateDescriptions && message.caCertificateDescriptions.length))
                                                message.caCertificateDescriptions = [];
                                            message.caCertificateDescriptions.push($root.google.cloud.security.privateca.v1beta1.CertificateDescription.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 13: {
                                            message.gcsBucket = reader.string();
                                            break;
                                        }
                                    case 14: {
                                            message.accessUrls = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 15: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 16: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 17: {
                                            message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 18: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateAuthority message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority} CertificateAuthority
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateAuthority.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateAuthority message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateAuthority.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    switch (message.tier) {
                                    default:
                                        return "tier: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.verify(message.config);
                                    if (error)
                                        return "config." + error;
                                }
                                if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                    var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                    if (error)
                                        return "lifetime." + error;
                                }
                                if (message.keySpec != null && message.hasOwnProperty("keySpec")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.verify(message.keySpec);
                                    if (error)
                                        return "keySpec." + error;
                                }
                                if (message.certificatePolicy != null && message.hasOwnProperty("certificatePolicy")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.verify(message.certificatePolicy);
                                    if (error)
                                        return "certificatePolicy." + error;
                                }
                                if (message.issuingOptions != null && message.hasOwnProperty("issuingOptions")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.verify(message.issuingOptions);
                                    if (error)
                                        return "issuingOptions." + error;
                                }
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.verify(message.subordinateConfig);
                                    if (error)
                                        return "subordinateConfig." + error;
                                }
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                                if (message.pemCaCertificates != null && message.hasOwnProperty("pemCaCertificates")) {
                                    if (!Array.isArray(message.pemCaCertificates))
                                        return "pemCaCertificates: array expected";
                                    for (var i = 0; i < message.pemCaCertificates.length; ++i)
                                        if (!$util.isString(message.pemCaCertificates[i]))
                                            return "pemCaCertificates: string[] expected";
                                }
                                if (message.caCertificateDescriptions != null && message.hasOwnProperty("caCertificateDescriptions")) {
                                    if (!Array.isArray(message.caCertificateDescriptions))
                                        return "caCertificateDescriptions: array expected";
                                    for (var i = 0; i < message.caCertificateDescriptions.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.verify(message.caCertificateDescriptions[i]);
                                        if (error)
                                            return "caCertificateDescriptions." + error;
                                    }
                                }
                                if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                    if (!$util.isString(message.gcsBucket))
                                        return "gcsBucket: string expected";
                                if (message.accessUrls != null && message.hasOwnProperty("accessUrls")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.verify(message.accessUrls);
                                    if (error)
                                        return "accessUrls." + error;
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                    if (error)
                                        return "deleteTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateAuthority message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority} CertificateAuthority
                             */
                            CertificateAuthority.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "SELF_SIGNED":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "SUBORDINATE":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                switch (object.tier) {
                                default:
                                    if (typeof object.tier === "number") {
                                        message.tier = object.tier;
                                        break;
                                    }
                                    break;
                                case "TIER_UNSPECIFIED":
                                case 0:
                                    message.tier = 0;
                                    break;
                                case "ENTERPRISE":
                                case 1:
                                    message.tier = 1;
                                    break;
                                case "DEVOPS":
                                case 2:
                                    message.tier = 2;
                                    break;
                                }
                                if (object.config != null) {
                                    if (typeof object.config !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.config: object expected");
                                    message.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.fromObject(object.config);
                                }
                                if (object.lifetime != null) {
                                    if (typeof object.lifetime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.lifetime: object expected");
                                    message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                }
                                if (object.keySpec != null) {
                                    if (typeof object.keySpec !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.keySpec: object expected");
                                    message.keySpec = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.fromObject(object.keySpec);
                                }
                                if (object.certificatePolicy != null) {
                                    if (typeof object.certificatePolicy !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.certificatePolicy: object expected");
                                    message.certificatePolicy = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.fromObject(object.certificatePolicy);
                                }
                                if (object.issuingOptions != null) {
                                    if (typeof object.issuingOptions !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.issuingOptions: object expected");
                                    message.issuingOptions = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.fromObject(object.issuingOptions);
                                }
                                if (object.subordinateConfig != null) {
                                    if (typeof object.subordinateConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.subordinateConfig: object expected");
                                    message.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.fromObject(object.subordinateConfig);
                                }
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "ENABLED":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "DISABLED":
                                case 2:
                                    message.state = 2;
                                    break;
                                case "PENDING_ACTIVATION":
                                case 3:
                                    message.state = 3;
                                    break;
                                case "PENDING_DELETION":
                                case 4:
                                    message.state = 4;
                                    break;
                                }
                                if (object.pemCaCertificates) {
                                    if (!Array.isArray(object.pemCaCertificates))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.pemCaCertificates: array expected");
                                    message.pemCaCertificates = [];
                                    for (var i = 0; i < object.pemCaCertificates.length; ++i)
                                        message.pemCaCertificates[i] = String(object.pemCaCertificates[i]);
                                }
                                if (object.caCertificateDescriptions) {
                                    if (!Array.isArray(object.caCertificateDescriptions))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.caCertificateDescriptions: array expected");
                                    message.caCertificateDescriptions = [];
                                    for (var i = 0; i < object.caCertificateDescriptions.length; ++i) {
                                        if (typeof object.caCertificateDescriptions[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.caCertificateDescriptions: object expected");
                                        message.caCertificateDescriptions[i] = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.fromObject(object.caCertificateDescriptions[i]);
                                    }
                                }
                                if (object.gcsBucket != null)
                                    message.gcsBucket = String(object.gcsBucket);
                                if (object.accessUrls != null) {
                                    if (typeof object.accessUrls !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.accessUrls: object expected");
                                    message.accessUrls = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.fromObject(object.accessUrls);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.deleteTime != null) {
                                    if (typeof object.deleteTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.deleteTime: object expected");
                                    message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateAuthority message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority} message CertificateAuthority
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateAuthority.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.pemCaCertificates = [];
                                    object.caCertificateDescriptions = [];
                                }
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.type = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                    object.tier = options.enums === String ? "TIER_UNSPECIFIED" : 0;
                                    object.config = null;
                                    object.lifetime = null;
                                    object.keySpec = null;
                                    object.certificatePolicy = null;
                                    object.issuingOptions = null;
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.gcsBucket = "";
                                    object.accessUrls = null;
                                    object.createTime = null;
                                    object.updateTime = null;
                                    object.deleteTime = null;
                                    object.subordinateConfig = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.Type[message.type] === undefined ? message.type : $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.Type[message.type] : message.type;
                                if (message.tier != null && message.hasOwnProperty("tier"))
                                    object.tier = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier[message.tier] === undefined ? message.tier : $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier[message.tier] : message.tier;
                                if (message.config != null && message.hasOwnProperty("config"))
                                    object.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.toObject(message.config, options);
                                if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                    object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                if (message.keySpec != null && message.hasOwnProperty("keySpec"))
                                    object.keySpec = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.toObject(message.keySpec, options);
                                if (message.certificatePolicy != null && message.hasOwnProperty("certificatePolicy"))
                                    object.certificatePolicy = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.toObject(message.certificatePolicy, options);
                                if (message.issuingOptions != null && message.hasOwnProperty("issuingOptions"))
                                    object.issuingOptions = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.toObject(message.issuingOptions, options);
                                if (message.pemCaCertificates && message.pemCaCertificates.length) {
                                    object.pemCaCertificates = [];
                                    for (var j = 0; j < message.pemCaCertificates.length; ++j)
                                        object.pemCaCertificates[j] = message.pemCaCertificates[j];
                                }
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.State[message.state] === undefined ? message.state : $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.State[message.state] : message.state;
                                if (message.caCertificateDescriptions && message.caCertificateDescriptions.length) {
                                    object.caCertificateDescriptions = [];
                                    for (var j = 0; j < message.caCertificateDescriptions.length; ++j)
                                        object.caCertificateDescriptions[j] = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.toObject(message.caCertificateDescriptions[j], options);
                                }
                                if (message.gcsBucket != null && message.hasOwnProperty("gcsBucket"))
                                    object.gcsBucket = message.gcsBucket;
                                if (message.accessUrls != null && message.hasOwnProperty("accessUrls"))
                                    object.accessUrls = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.toObject(message.accessUrls, options);
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                    object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig"))
                                    object.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.toObject(message.subordinateConfig, options);
                                return object;
                            };
    
                            /**
                             * Converts this CertificateAuthority to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateAuthority.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateAuthority
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateAuthority.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority";
                            };
    
                            CertificateAuthority.IssuingOptions = (function() {
    
                                /**
                                 * Properties of an IssuingOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @interface IIssuingOptions
                                 * @property {boolean|null} [includeCaCertUrl] IssuingOptions includeCaCertUrl
                                 * @property {boolean|null} [includeCrlAccessUrl] IssuingOptions includeCrlAccessUrl
                                 */
    
                                /**
                                 * Constructs a new IssuingOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @classdesc Represents an IssuingOptions.
                                 * @implements IIssuingOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions=} [properties] Properties to set
                                 */
                                function IssuingOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * IssuingOptions includeCaCertUrl.
                                 * @member {boolean} includeCaCertUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @instance
                                 */
                                IssuingOptions.prototype.includeCaCertUrl = false;
    
                                /**
                                 * IssuingOptions includeCrlAccessUrl.
                                 * @member {boolean} includeCrlAccessUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @instance
                                 */
                                IssuingOptions.prototype.includeCrlAccessUrl = false;
    
                                /**
                                 * Creates a new IssuingOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions} IssuingOptions instance
                                 */
                                IssuingOptions.create = function create(properties) {
                                    return new IssuingOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified IssuingOptions message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions} message IssuingOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                IssuingOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.includeCaCertUrl != null && Object.hasOwnProperty.call(message, "includeCaCertUrl"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.includeCaCertUrl);
                                    if (message.includeCrlAccessUrl != null && Object.hasOwnProperty.call(message, "includeCrlAccessUrl"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.includeCrlAccessUrl);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified IssuingOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IIssuingOptions} message IssuingOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                IssuingOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an IssuingOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions} IssuingOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                IssuingOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.includeCaCertUrl = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.includeCrlAccessUrl = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an IssuingOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions} IssuingOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                IssuingOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an IssuingOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                IssuingOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.includeCaCertUrl != null && message.hasOwnProperty("includeCaCertUrl"))
                                        if (typeof message.includeCaCertUrl !== "boolean")
                                            return "includeCaCertUrl: boolean expected";
                                    if (message.includeCrlAccessUrl != null && message.hasOwnProperty("includeCrlAccessUrl"))
                                        if (typeof message.includeCrlAccessUrl !== "boolean")
                                            return "includeCrlAccessUrl: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an IssuingOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions} IssuingOptions
                                 */
                                IssuingOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions();
                                    if (object.includeCaCertUrl != null)
                                        message.includeCaCertUrl = Boolean(object.includeCaCertUrl);
                                    if (object.includeCrlAccessUrl != null)
                                        message.includeCrlAccessUrl = Boolean(object.includeCrlAccessUrl);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an IssuingOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions} message IssuingOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                IssuingOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.includeCaCertUrl = false;
                                        object.includeCrlAccessUrl = false;
                                    }
                                    if (message.includeCaCertUrl != null && message.hasOwnProperty("includeCaCertUrl"))
                                        object.includeCaCertUrl = message.includeCaCertUrl;
                                    if (message.includeCrlAccessUrl != null && message.hasOwnProperty("includeCrlAccessUrl"))
                                        object.includeCrlAccessUrl = message.includeCrlAccessUrl;
                                    return object;
                                };
    
                                /**
                                 * Converts this IssuingOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                IssuingOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for IssuingOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                IssuingOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.IssuingOptions";
                                };
    
                                return IssuingOptions;
                            })();
    
                            CertificateAuthority.CertificateAuthorityPolicy = (function() {
    
                                /**
                                 * Properties of a CertificateAuthorityPolicy.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @interface ICertificateAuthorityPolicy
                                 * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList|null} [allowedConfigList] CertificateAuthorityPolicy allowedConfigList
                                 * @property {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper|null} [overwriteConfigValues] CertificateAuthorityPolicy overwriteConfigValues
                                 * @property {Array.<google.cloud.security.privateca.v1beta1.ISubject>|null} [allowedLocationsAndOrganizations] CertificateAuthorityPolicy allowedLocationsAndOrganizations
                                 * @property {Array.<string>|null} [allowedCommonNames] CertificateAuthorityPolicy allowedCommonNames
                                 * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames|null} [allowedSans] CertificateAuthorityPolicy allowedSans
                                 * @property {google.protobuf.IDuration|null} [maximumLifetime] CertificateAuthorityPolicy maximumLifetime
                                 * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes|null} [allowedIssuanceModes] CertificateAuthorityPolicy allowedIssuanceModes
                                 */
    
                                /**
                                 * Constructs a new CertificateAuthorityPolicy.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @classdesc Represents a CertificateAuthorityPolicy.
                                 * @implements ICertificateAuthorityPolicy
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy=} [properties] Properties to set
                                 */
                                function CertificateAuthorityPolicy(properties) {
                                    this.allowedLocationsAndOrganizations = [];
                                    this.allowedCommonNames = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CertificateAuthorityPolicy allowedConfigList.
                                 * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList|null|undefined} allowedConfigList
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.allowedConfigList = null;
    
                                /**
                                 * CertificateAuthorityPolicy overwriteConfigValues.
                                 * @member {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper|null|undefined} overwriteConfigValues
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.overwriteConfigValues = null;
    
                                /**
                                 * CertificateAuthorityPolicy allowedLocationsAndOrganizations.
                                 * @member {Array.<google.cloud.security.privateca.v1beta1.ISubject>} allowedLocationsAndOrganizations
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.allowedLocationsAndOrganizations = $util.emptyArray;
    
                                /**
                                 * CertificateAuthorityPolicy allowedCommonNames.
                                 * @member {Array.<string>} allowedCommonNames
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.allowedCommonNames = $util.emptyArray;
    
                                /**
                                 * CertificateAuthorityPolicy allowedSans.
                                 * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames|null|undefined} allowedSans
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.allowedSans = null;
    
                                /**
                                 * CertificateAuthorityPolicy maximumLifetime.
                                 * @member {google.protobuf.IDuration|null|undefined} maximumLifetime
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.maximumLifetime = null;
    
                                /**
                                 * CertificateAuthorityPolicy allowedIssuanceModes.
                                 * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes|null|undefined} allowedIssuanceModes
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                CertificateAuthorityPolicy.prototype.allowedIssuanceModes = null;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * CertificateAuthorityPolicy configPolicy.
                                 * @member {"allowedConfigList"|"overwriteConfigValues"|undefined} configPolicy
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 */
                                Object.defineProperty(CertificateAuthorityPolicy.prototype, "configPolicy", {
                                    get: $util.oneOfGetter($oneOfFields = ["allowedConfigList", "overwriteConfigValues"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new CertificateAuthorityPolicy instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy} CertificateAuthorityPolicy instance
                                 */
                                CertificateAuthorityPolicy.create = function create(properties) {
                                    return new CertificateAuthorityPolicy(properties);
                                };
    
                                /**
                                 * Encodes the specified CertificateAuthorityPolicy message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy} message CertificateAuthorityPolicy message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateAuthorityPolicy.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.allowedConfigList != null && Object.hasOwnProperty.call(message, "allowedConfigList"))
                                        $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.encode(message.allowedConfigList, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.overwriteConfigValues != null && Object.hasOwnProperty.call(message, "overwriteConfigValues"))
                                        $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.encode(message.overwriteConfigValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    if (message.allowedLocationsAndOrganizations != null && message.allowedLocationsAndOrganizations.length)
                                        for (var i = 0; i < message.allowedLocationsAndOrganizations.length; ++i)
                                            $root.google.cloud.security.privateca.v1beta1.Subject.encode(message.allowedLocationsAndOrganizations[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.allowedCommonNames != null && message.allowedCommonNames.length)
                                        for (var i = 0; i < message.allowedCommonNames.length; ++i)
                                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.allowedCommonNames[i]);
                                    if (message.allowedSans != null && Object.hasOwnProperty.call(message, "allowedSans"))
                                        $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.encode(message.allowedSans, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.maximumLifetime != null && Object.hasOwnProperty.call(message, "maximumLifetime"))
                                        $root.google.protobuf.Duration.encode(message.maximumLifetime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                    if (message.allowedIssuanceModes != null && Object.hasOwnProperty.call(message, "allowedIssuanceModes"))
                                        $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.encode(message.allowedIssuanceModes, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CertificateAuthorityPolicy message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.ICertificateAuthorityPolicy} message CertificateAuthorityPolicy message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateAuthorityPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CertificateAuthorityPolicy message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy} CertificateAuthorityPolicy
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateAuthorityPolicy.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.allowedConfigList = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.overwriteConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 3: {
                                                if (!(message.allowedLocationsAndOrganizations && message.allowedLocationsAndOrganizations.length))
                                                    message.allowedLocationsAndOrganizations = [];
                                                message.allowedLocationsAndOrganizations.push($root.google.cloud.security.privateca.v1beta1.Subject.decode(reader, reader.uint32()));
                                                break;
                                            }
                                        case 4: {
                                                if (!(message.allowedCommonNames && message.allowedCommonNames.length))
                                                    message.allowedCommonNames = [];
                                                message.allowedCommonNames.push(reader.string());
                                                break;
                                            }
                                        case 5: {
                                                message.allowedSans = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.maximumLifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 8: {
                                                message.allowedIssuanceModes = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CertificateAuthorityPolicy message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy} CertificateAuthorityPolicy
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateAuthorityPolicy.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CertificateAuthorityPolicy message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CertificateAuthorityPolicy.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.allowedConfigList != null && message.hasOwnProperty("allowedConfigList")) {
                                        properties.configPolicy = 1;
                                        {
                                            var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.verify(message.allowedConfigList);
                                            if (error)
                                                return "allowedConfigList." + error;
                                        }
                                    }
                                    if (message.overwriteConfigValues != null && message.hasOwnProperty("overwriteConfigValues")) {
                                        if (properties.configPolicy === 1)
                                            return "configPolicy: multiple values";
                                        properties.configPolicy = 1;
                                        {
                                            var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.verify(message.overwriteConfigValues);
                                            if (error)
                                                return "overwriteConfigValues." + error;
                                        }
                                    }
                                    if (message.allowedLocationsAndOrganizations != null && message.hasOwnProperty("allowedLocationsAndOrganizations")) {
                                        if (!Array.isArray(message.allowedLocationsAndOrganizations))
                                            return "allowedLocationsAndOrganizations: array expected";
                                        for (var i = 0; i < message.allowedLocationsAndOrganizations.length; ++i) {
                                            var error = $root.google.cloud.security.privateca.v1beta1.Subject.verify(message.allowedLocationsAndOrganizations[i]);
                                            if (error)
                                                return "allowedLocationsAndOrganizations." + error;
                                        }
                                    }
                                    if (message.allowedCommonNames != null && message.hasOwnProperty("allowedCommonNames")) {
                                        if (!Array.isArray(message.allowedCommonNames))
                                            return "allowedCommonNames: array expected";
                                        for (var i = 0; i < message.allowedCommonNames.length; ++i)
                                            if (!$util.isString(message.allowedCommonNames[i]))
                                                return "allowedCommonNames: string[] expected";
                                    }
                                    if (message.allowedSans != null && message.hasOwnProperty("allowedSans")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.verify(message.allowedSans);
                                        if (error)
                                            return "allowedSans." + error;
                                    }
                                    if (message.maximumLifetime != null && message.hasOwnProperty("maximumLifetime")) {
                                        var error = $root.google.protobuf.Duration.verify(message.maximumLifetime);
                                        if (error)
                                            return "maximumLifetime." + error;
                                    }
                                    if (message.allowedIssuanceModes != null && message.hasOwnProperty("allowedIssuanceModes")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.verify(message.allowedIssuanceModes);
                                        if (error)
                                            return "allowedIssuanceModes." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a CertificateAuthorityPolicy message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy} CertificateAuthorityPolicy
                                 */
                                CertificateAuthorityPolicy.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy();
                                    if (object.allowedConfigList != null) {
                                        if (typeof object.allowedConfigList !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedConfigList: object expected");
                                        message.allowedConfigList = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.fromObject(object.allowedConfigList);
                                    }
                                    if (object.overwriteConfigValues != null) {
                                        if (typeof object.overwriteConfigValues !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.overwriteConfigValues: object expected");
                                        message.overwriteConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.fromObject(object.overwriteConfigValues);
                                    }
                                    if (object.allowedLocationsAndOrganizations) {
                                        if (!Array.isArray(object.allowedLocationsAndOrganizations))
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedLocationsAndOrganizations: array expected");
                                        message.allowedLocationsAndOrganizations = [];
                                        for (var i = 0; i < object.allowedLocationsAndOrganizations.length; ++i) {
                                            if (typeof object.allowedLocationsAndOrganizations[i] !== "object")
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedLocationsAndOrganizations: object expected");
                                            message.allowedLocationsAndOrganizations[i] = $root.google.cloud.security.privateca.v1beta1.Subject.fromObject(object.allowedLocationsAndOrganizations[i]);
                                        }
                                    }
                                    if (object.allowedCommonNames) {
                                        if (!Array.isArray(object.allowedCommonNames))
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedCommonNames: array expected");
                                        message.allowedCommonNames = [];
                                        for (var i = 0; i < object.allowedCommonNames.length; ++i)
                                            message.allowedCommonNames[i] = String(object.allowedCommonNames[i]);
                                    }
                                    if (object.allowedSans != null) {
                                        if (typeof object.allowedSans !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedSans: object expected");
                                        message.allowedSans = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.fromObject(object.allowedSans);
                                    }
                                    if (object.maximumLifetime != null) {
                                        if (typeof object.maximumLifetime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.maximumLifetime: object expected");
                                        message.maximumLifetime = $root.google.protobuf.Duration.fromObject(object.maximumLifetime);
                                    }
                                    if (object.allowedIssuanceModes != null) {
                                        if (typeof object.allowedIssuanceModes !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.allowedIssuanceModes: object expected");
                                        message.allowedIssuanceModes = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.fromObject(object.allowedIssuanceModes);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CertificateAuthorityPolicy message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy} message CertificateAuthorityPolicy
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CertificateAuthorityPolicy.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults) {
                                        object.allowedLocationsAndOrganizations = [];
                                        object.allowedCommonNames = [];
                                    }
                                    if (options.defaults) {
                                        object.allowedSans = null;
                                        object.maximumLifetime = null;
                                        object.allowedIssuanceModes = null;
                                    }
                                    if (message.allowedConfigList != null && message.hasOwnProperty("allowedConfigList")) {
                                        object.allowedConfigList = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.toObject(message.allowedConfigList, options);
                                        if (options.oneofs)
                                            object.configPolicy = "allowedConfigList";
                                    }
                                    if (message.overwriteConfigValues != null && message.hasOwnProperty("overwriteConfigValues")) {
                                        object.overwriteConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.toObject(message.overwriteConfigValues, options);
                                        if (options.oneofs)
                                            object.configPolicy = "overwriteConfigValues";
                                    }
                                    if (message.allowedLocationsAndOrganizations && message.allowedLocationsAndOrganizations.length) {
                                        object.allowedLocationsAndOrganizations = [];
                                        for (var j = 0; j < message.allowedLocationsAndOrganizations.length; ++j)
                                            object.allowedLocationsAndOrganizations[j] = $root.google.cloud.security.privateca.v1beta1.Subject.toObject(message.allowedLocationsAndOrganizations[j], options);
                                    }
                                    if (message.allowedCommonNames && message.allowedCommonNames.length) {
                                        object.allowedCommonNames = [];
                                        for (var j = 0; j < message.allowedCommonNames.length; ++j)
                                            object.allowedCommonNames[j] = message.allowedCommonNames[j];
                                    }
                                    if (message.allowedSans != null && message.hasOwnProperty("allowedSans"))
                                        object.allowedSans = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.toObject(message.allowedSans, options);
                                    if (message.maximumLifetime != null && message.hasOwnProperty("maximumLifetime"))
                                        object.maximumLifetime = $root.google.protobuf.Duration.toObject(message.maximumLifetime, options);
                                    if (message.allowedIssuanceModes != null && message.hasOwnProperty("allowedIssuanceModes"))
                                        object.allowedIssuanceModes = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.toObject(message.allowedIssuanceModes, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this CertificateAuthorityPolicy to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CertificateAuthorityPolicy.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CertificateAuthorityPolicy
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CertificateAuthorityPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy";
                                };
    
                                CertificateAuthorityPolicy.AllowedConfigList = (function() {
    
                                    /**
                                     * Properties of an AllowedConfigList.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @interface IAllowedConfigList
                                     * @property {Array.<google.cloud.security.privateca.v1beta1.IReusableConfigWrapper>|null} [allowedConfigValues] AllowedConfigList allowedConfigValues
                                     */
    
                                    /**
                                     * Constructs a new AllowedConfigList.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @classdesc Represents an AllowedConfigList.
                                     * @implements IAllowedConfigList
                                     * @constructor
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList=} [properties] Properties to set
                                     */
                                    function AllowedConfigList(properties) {
                                        this.allowedConfigValues = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * AllowedConfigList allowedConfigValues.
                                     * @member {Array.<google.cloud.security.privateca.v1beta1.IReusableConfigWrapper>} allowedConfigValues
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @instance
                                     */
                                    AllowedConfigList.prototype.allowedConfigValues = $util.emptyArray;
    
                                    /**
                                     * Creates a new AllowedConfigList instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList=} [properties] Properties to set
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList} AllowedConfigList instance
                                     */
                                    AllowedConfigList.create = function create(properties) {
                                        return new AllowedConfigList(properties);
                                    };
    
                                    /**
                                     * Encodes the specified AllowedConfigList message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList} message AllowedConfigList message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedConfigList.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.allowedConfigValues != null && message.allowedConfigValues.length)
                                            for (var i = 0; i < message.allowedConfigValues.length; ++i)
                                                $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.encode(message.allowedConfigValues[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified AllowedConfigList message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedConfigList} message AllowedConfigList message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedConfigList.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes an AllowedConfigList message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList} AllowedConfigList
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedConfigList.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    if (!(message.allowedConfigValues && message.allowedConfigValues.length))
                                                        message.allowedConfigValues = [];
                                                    message.allowedConfigValues.push($root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.decode(reader, reader.uint32()));
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes an AllowedConfigList message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList} AllowedConfigList
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedConfigList.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies an AllowedConfigList message.
                                     * @function verify
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    AllowedConfigList.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.allowedConfigValues != null && message.hasOwnProperty("allowedConfigValues")) {
                                            if (!Array.isArray(message.allowedConfigValues))
                                                return "allowedConfigValues: array expected";
                                            for (var i = 0; i < message.allowedConfigValues.length; ++i) {
                                                var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.verify(message.allowedConfigValues[i]);
                                                if (error)
                                                    return "allowedConfigValues." + error;
                                            }
                                        }
                                        return null;
                                    };
    
                                    /**
                                     * Creates an AllowedConfigList message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList} AllowedConfigList
                                     */
                                    AllowedConfigList.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList)
                                            return object;
                                        var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList();
                                        if (object.allowedConfigValues) {
                                            if (!Array.isArray(object.allowedConfigValues))
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.allowedConfigValues: array expected");
                                            message.allowedConfigValues = [];
                                            for (var i = 0; i < object.allowedConfigValues.length; ++i) {
                                                if (typeof object.allowedConfigValues[i] !== "object")
                                                    throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList.allowedConfigValues: object expected");
                                                message.allowedConfigValues[i] = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.fromObject(object.allowedConfigValues[i]);
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from an AllowedConfigList message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList} message AllowedConfigList
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    AllowedConfigList.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults)
                                            object.allowedConfigValues = [];
                                        if (message.allowedConfigValues && message.allowedConfigValues.length) {
                                            object.allowedConfigValues = [];
                                            for (var j = 0; j < message.allowedConfigValues.length; ++j)
                                                object.allowedConfigValues[j] = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.toObject(message.allowedConfigValues[j], options);
                                        }
                                        return object;
                                    };
    
                                    /**
                                     * Converts this AllowedConfigList to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    AllowedConfigList.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for AllowedConfigList
                                     * @function getTypeUrl
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    AllowedConfigList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedConfigList";
                                    };
    
                                    return AllowedConfigList;
                                })();
    
                                CertificateAuthorityPolicy.AllowedSubjectAltNames = (function() {
    
                                    /**
                                     * Properties of an AllowedSubjectAltNames.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @interface IAllowedSubjectAltNames
                                     * @property {Array.<string>|null} [allowedDnsNames] AllowedSubjectAltNames allowedDnsNames
                                     * @property {Array.<string>|null} [allowedUris] AllowedSubjectAltNames allowedUris
                                     * @property {Array.<string>|null} [allowedEmailAddresses] AllowedSubjectAltNames allowedEmailAddresses
                                     * @property {Array.<string>|null} [allowedIps] AllowedSubjectAltNames allowedIps
                                     * @property {boolean|null} [allowGlobbingDnsWildcards] AllowedSubjectAltNames allowGlobbingDnsWildcards
                                     * @property {boolean|null} [allowCustomSans] AllowedSubjectAltNames allowCustomSans
                                     */
    
                                    /**
                                     * Constructs a new AllowedSubjectAltNames.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @classdesc Represents an AllowedSubjectAltNames.
                                     * @implements IAllowedSubjectAltNames
                                     * @constructor
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames=} [properties] Properties to set
                                     */
                                    function AllowedSubjectAltNames(properties) {
                                        this.allowedDnsNames = [];
                                        this.allowedUris = [];
                                        this.allowedEmailAddresses = [];
                                        this.allowedIps = [];
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * AllowedSubjectAltNames allowedDnsNames.
                                     * @member {Array.<string>} allowedDnsNames
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowedDnsNames = $util.emptyArray;
    
                                    /**
                                     * AllowedSubjectAltNames allowedUris.
                                     * @member {Array.<string>} allowedUris
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowedUris = $util.emptyArray;
    
                                    /**
                                     * AllowedSubjectAltNames allowedEmailAddresses.
                                     * @member {Array.<string>} allowedEmailAddresses
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowedEmailAddresses = $util.emptyArray;
    
                                    /**
                                     * AllowedSubjectAltNames allowedIps.
                                     * @member {Array.<string>} allowedIps
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowedIps = $util.emptyArray;
    
                                    /**
                                     * AllowedSubjectAltNames allowGlobbingDnsWildcards.
                                     * @member {boolean} allowGlobbingDnsWildcards
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowGlobbingDnsWildcards = false;
    
                                    /**
                                     * AllowedSubjectAltNames allowCustomSans.
                                     * @member {boolean} allowCustomSans
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     */
                                    AllowedSubjectAltNames.prototype.allowCustomSans = false;
    
                                    /**
                                     * Creates a new AllowedSubjectAltNames instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames=} [properties] Properties to set
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames} AllowedSubjectAltNames instance
                                     */
                                    AllowedSubjectAltNames.create = function create(properties) {
                                        return new AllowedSubjectAltNames(properties);
                                    };
    
                                    /**
                                     * Encodes the specified AllowedSubjectAltNames message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames} message AllowedSubjectAltNames message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedSubjectAltNames.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.allowedDnsNames != null && message.allowedDnsNames.length)
                                            for (var i = 0; i < message.allowedDnsNames.length; ++i)
                                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.allowedDnsNames[i]);
                                        if (message.allowedUris != null && message.allowedUris.length)
                                            for (var i = 0; i < message.allowedUris.length; ++i)
                                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.allowedUris[i]);
                                        if (message.allowedEmailAddresses != null && message.allowedEmailAddresses.length)
                                            for (var i = 0; i < message.allowedEmailAddresses.length; ++i)
                                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.allowedEmailAddresses[i]);
                                        if (message.allowedIps != null && message.allowedIps.length)
                                            for (var i = 0; i < message.allowedIps.length; ++i)
                                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.allowedIps[i]);
                                        if (message.allowGlobbingDnsWildcards != null && Object.hasOwnProperty.call(message, "allowGlobbingDnsWildcards"))
                                            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.allowGlobbingDnsWildcards);
                                        if (message.allowCustomSans != null && Object.hasOwnProperty.call(message, "allowCustomSans"))
                                            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.allowCustomSans);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified AllowedSubjectAltNames message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IAllowedSubjectAltNames} message AllowedSubjectAltNames message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    AllowedSubjectAltNames.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes an AllowedSubjectAltNames message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames} AllowedSubjectAltNames
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedSubjectAltNames.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    if (!(message.allowedDnsNames && message.allowedDnsNames.length))
                                                        message.allowedDnsNames = [];
                                                    message.allowedDnsNames.push(reader.string());
                                                    break;
                                                }
                                            case 2: {
                                                    if (!(message.allowedUris && message.allowedUris.length))
                                                        message.allowedUris = [];
                                                    message.allowedUris.push(reader.string());
                                                    break;
                                                }
                                            case 3: {
                                                    if (!(message.allowedEmailAddresses && message.allowedEmailAddresses.length))
                                                        message.allowedEmailAddresses = [];
                                                    message.allowedEmailAddresses.push(reader.string());
                                                    break;
                                                }
                                            case 4: {
                                                    if (!(message.allowedIps && message.allowedIps.length))
                                                        message.allowedIps = [];
                                                    message.allowedIps.push(reader.string());
                                                    break;
                                                }
                                            case 5: {
                                                    message.allowGlobbingDnsWildcards = reader.bool();
                                                    break;
                                                }
                                            case 6: {
                                                    message.allowCustomSans = reader.bool();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes an AllowedSubjectAltNames message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames} AllowedSubjectAltNames
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    AllowedSubjectAltNames.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies an AllowedSubjectAltNames message.
                                     * @function verify
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    AllowedSubjectAltNames.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.allowedDnsNames != null && message.hasOwnProperty("allowedDnsNames")) {
                                            if (!Array.isArray(message.allowedDnsNames))
                                                return "allowedDnsNames: array expected";
                                            for (var i = 0; i < message.allowedDnsNames.length; ++i)
                                                if (!$util.isString(message.allowedDnsNames[i]))
                                                    return "allowedDnsNames: string[] expected";
                                        }
                                        if (message.allowedUris != null && message.hasOwnProperty("allowedUris")) {
                                            if (!Array.isArray(message.allowedUris))
                                                return "allowedUris: array expected";
                                            for (var i = 0; i < message.allowedUris.length; ++i)
                                                if (!$util.isString(message.allowedUris[i]))
                                                    return "allowedUris: string[] expected";
                                        }
                                        if (message.allowedEmailAddresses != null && message.hasOwnProperty("allowedEmailAddresses")) {
                                            if (!Array.isArray(message.allowedEmailAddresses))
                                                return "allowedEmailAddresses: array expected";
                                            for (var i = 0; i < message.allowedEmailAddresses.length; ++i)
                                                if (!$util.isString(message.allowedEmailAddresses[i]))
                                                    return "allowedEmailAddresses: string[] expected";
                                        }
                                        if (message.allowedIps != null && message.hasOwnProperty("allowedIps")) {
                                            if (!Array.isArray(message.allowedIps))
                                                return "allowedIps: array expected";
                                            for (var i = 0; i < message.allowedIps.length; ++i)
                                                if (!$util.isString(message.allowedIps[i]))
                                                    return "allowedIps: string[] expected";
                                        }
                                        if (message.allowGlobbingDnsWildcards != null && message.hasOwnProperty("allowGlobbingDnsWildcards"))
                                            if (typeof message.allowGlobbingDnsWildcards !== "boolean")
                                                return "allowGlobbingDnsWildcards: boolean expected";
                                        if (message.allowCustomSans != null && message.hasOwnProperty("allowCustomSans"))
                                            if (typeof message.allowCustomSans !== "boolean")
                                                return "allowCustomSans: boolean expected";
                                        return null;
                                    };
    
                                    /**
                                     * Creates an AllowedSubjectAltNames message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames} AllowedSubjectAltNames
                                     */
                                    AllowedSubjectAltNames.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames)
                                            return object;
                                        var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames();
                                        if (object.allowedDnsNames) {
                                            if (!Array.isArray(object.allowedDnsNames))
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allowedDnsNames: array expected");
                                            message.allowedDnsNames = [];
                                            for (var i = 0; i < object.allowedDnsNames.length; ++i)
                                                message.allowedDnsNames[i] = String(object.allowedDnsNames[i]);
                                        }
                                        if (object.allowedUris) {
                                            if (!Array.isArray(object.allowedUris))
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allowedUris: array expected");
                                            message.allowedUris = [];
                                            for (var i = 0; i < object.allowedUris.length; ++i)
                                                message.allowedUris[i] = String(object.allowedUris[i]);
                                        }
                                        if (object.allowedEmailAddresses) {
                                            if (!Array.isArray(object.allowedEmailAddresses))
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allowedEmailAddresses: array expected");
                                            message.allowedEmailAddresses = [];
                                            for (var i = 0; i < object.allowedEmailAddresses.length; ++i)
                                                message.allowedEmailAddresses[i] = String(object.allowedEmailAddresses[i]);
                                        }
                                        if (object.allowedIps) {
                                            if (!Array.isArray(object.allowedIps))
                                                throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames.allowedIps: array expected");
                                            message.allowedIps = [];
                                            for (var i = 0; i < object.allowedIps.length; ++i)
                                                message.allowedIps[i] = String(object.allowedIps[i]);
                                        }
                                        if (object.allowGlobbingDnsWildcards != null)
                                            message.allowGlobbingDnsWildcards = Boolean(object.allowGlobbingDnsWildcards);
                                        if (object.allowCustomSans != null)
                                            message.allowCustomSans = Boolean(object.allowCustomSans);
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from an AllowedSubjectAltNames message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames} message AllowedSubjectAltNames
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    AllowedSubjectAltNames.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.arrays || options.defaults) {
                                            object.allowedDnsNames = [];
                                            object.allowedUris = [];
                                            object.allowedEmailAddresses = [];
                                            object.allowedIps = [];
                                        }
                                        if (options.defaults) {
                                            object.allowGlobbingDnsWildcards = false;
                                            object.allowCustomSans = false;
                                        }
                                        if (message.allowedDnsNames && message.allowedDnsNames.length) {
                                            object.allowedDnsNames = [];
                                            for (var j = 0; j < message.allowedDnsNames.length; ++j)
                                                object.allowedDnsNames[j] = message.allowedDnsNames[j];
                                        }
                                        if (message.allowedUris && message.allowedUris.length) {
                                            object.allowedUris = [];
                                            for (var j = 0; j < message.allowedUris.length; ++j)
                                                object.allowedUris[j] = message.allowedUris[j];
                                        }
                                        if (message.allowedEmailAddresses && message.allowedEmailAddresses.length) {
                                            object.allowedEmailAddresses = [];
                                            for (var j = 0; j < message.allowedEmailAddresses.length; ++j)
                                                object.allowedEmailAddresses[j] = message.allowedEmailAddresses[j];
                                        }
                                        if (message.allowedIps && message.allowedIps.length) {
                                            object.allowedIps = [];
                                            for (var j = 0; j < message.allowedIps.length; ++j)
                                                object.allowedIps[j] = message.allowedIps[j];
                                        }
                                        if (message.allowGlobbingDnsWildcards != null && message.hasOwnProperty("allowGlobbingDnsWildcards"))
                                            object.allowGlobbingDnsWildcards = message.allowGlobbingDnsWildcards;
                                        if (message.allowCustomSans != null && message.hasOwnProperty("allowCustomSans"))
                                            object.allowCustomSans = message.allowCustomSans;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this AllowedSubjectAltNames to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    AllowedSubjectAltNames.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for AllowedSubjectAltNames
                                     * @function getTypeUrl
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    AllowedSubjectAltNames.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.AllowedSubjectAltNames";
                                    };
    
                                    return AllowedSubjectAltNames;
                                })();
    
                                CertificateAuthorityPolicy.IssuanceModes = (function() {
    
                                    /**
                                     * Properties of an IssuanceModes.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @interface IIssuanceModes
                                     * @property {boolean|null} [allowCsrBasedIssuance] IssuanceModes allowCsrBasedIssuance
                                     * @property {boolean|null} [allowConfigBasedIssuance] IssuanceModes allowConfigBasedIssuance
                                     */
    
                                    /**
                                     * Constructs a new IssuanceModes.
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy
                                     * @classdesc Represents an IssuanceModes.
                                     * @implements IIssuanceModes
                                     * @constructor
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes=} [properties] Properties to set
                                     */
                                    function IssuanceModes(properties) {
                                        if (properties)
                                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                                if (properties[keys[i]] != null)
                                                    this[keys[i]] = properties[keys[i]];
                                    }
    
                                    /**
                                     * IssuanceModes allowCsrBasedIssuance.
                                     * @member {boolean} allowCsrBasedIssuance
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @instance
                                     */
                                    IssuanceModes.prototype.allowCsrBasedIssuance = false;
    
                                    /**
                                     * IssuanceModes allowConfigBasedIssuance.
                                     * @member {boolean} allowConfigBasedIssuance
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @instance
                                     */
                                    IssuanceModes.prototype.allowConfigBasedIssuance = false;
    
                                    /**
                                     * Creates a new IssuanceModes instance using the specified properties.
                                     * @function create
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes=} [properties] Properties to set
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes} IssuanceModes instance
                                     */
                                    IssuanceModes.create = function create(properties) {
                                        return new IssuanceModes(properties);
                                    };
    
                                    /**
                                     * Encodes the specified IssuanceModes message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.verify|verify} messages.
                                     * @function encode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes} message IssuanceModes message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    IssuanceModes.encode = function encode(message, writer) {
                                        if (!writer)
                                            writer = $Writer.create();
                                        if (message.allowCsrBasedIssuance != null && Object.hasOwnProperty.call(message, "allowCsrBasedIssuance"))
                                            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.allowCsrBasedIssuance);
                                        if (message.allowConfigBasedIssuance != null && Object.hasOwnProperty.call(message, "allowConfigBasedIssuance"))
                                            writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowConfigBasedIssuance);
                                        return writer;
                                    };
    
                                    /**
                                     * Encodes the specified IssuanceModes message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes.verify|verify} messages.
                                     * @function encodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IIssuanceModes} message IssuanceModes message or plain object to encode
                                     * @param {$protobuf.Writer} [writer] Writer to encode to
                                     * @returns {$protobuf.Writer} Writer
                                     */
                                    IssuanceModes.encodeDelimited = function encodeDelimited(message, writer) {
                                        return this.encode(message, writer).ldelim();
                                    };
    
                                    /**
                                     * Decodes an IssuanceModes message from the specified reader or buffer.
                                     * @function decode
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @param {number} [length] Message length if known beforehand
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes} IssuanceModes
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    IssuanceModes.decode = function decode(reader, length) {
                                        if (!(reader instanceof $Reader))
                                            reader = $Reader.create(reader);
                                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes();
                                        while (reader.pos < end) {
                                            var tag = reader.uint32();
                                            switch (tag >>> 3) {
                                            case 1: {
                                                    message.allowCsrBasedIssuance = reader.bool();
                                                    break;
                                                }
                                            case 2: {
                                                    message.allowConfigBasedIssuance = reader.bool();
                                                    break;
                                                }
                                            default:
                                                reader.skipType(tag & 7);
                                                break;
                                            }
                                        }
                                        return message;
                                    };
    
                                    /**
                                     * Decodes an IssuanceModes message from the specified reader or buffer, length delimited.
                                     * @function decodeDelimited
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes} IssuanceModes
                                     * @throws {Error} If the payload is not a reader or valid buffer
                                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                     */
                                    IssuanceModes.decodeDelimited = function decodeDelimited(reader) {
                                        if (!(reader instanceof $Reader))
                                            reader = new $Reader(reader);
                                        return this.decode(reader, reader.uint32());
                                    };
    
                                    /**
                                     * Verifies an IssuanceModes message.
                                     * @function verify
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {Object.<string,*>} message Plain object to verify
                                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                     */
                                    IssuanceModes.verify = function verify(message) {
                                        if (typeof message !== "object" || message === null)
                                            return "object expected";
                                        if (message.allowCsrBasedIssuance != null && message.hasOwnProperty("allowCsrBasedIssuance"))
                                            if (typeof message.allowCsrBasedIssuance !== "boolean")
                                                return "allowCsrBasedIssuance: boolean expected";
                                        if (message.allowConfigBasedIssuance != null && message.hasOwnProperty("allowConfigBasedIssuance"))
                                            if (typeof message.allowConfigBasedIssuance !== "boolean")
                                                return "allowConfigBasedIssuance: boolean expected";
                                        return null;
                                    };
    
                                    /**
                                     * Creates an IssuanceModes message from a plain object. Also converts values to their respective internal types.
                                     * @function fromObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {Object.<string,*>} object Plain object
                                     * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes} IssuanceModes
                                     */
                                    IssuanceModes.fromObject = function fromObject(object) {
                                        if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes)
                                            return object;
                                        var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes();
                                        if (object.allowCsrBasedIssuance != null)
                                            message.allowCsrBasedIssuance = Boolean(object.allowCsrBasedIssuance);
                                        if (object.allowConfigBasedIssuance != null)
                                            message.allowConfigBasedIssuance = Boolean(object.allowConfigBasedIssuance);
                                        return message;
                                    };
    
                                    /**
                                     * Creates a plain object from an IssuanceModes message. Also converts values to other types if specified.
                                     * @function toObject
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes} message IssuanceModes
                                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                                     * @returns {Object.<string,*>} Plain object
                                     */
                                    IssuanceModes.toObject = function toObject(message, options) {
                                        if (!options)
                                            options = {};
                                        var object = {};
                                        if (options.defaults) {
                                            object.allowCsrBasedIssuance = false;
                                            object.allowConfigBasedIssuance = false;
                                        }
                                        if (message.allowCsrBasedIssuance != null && message.hasOwnProperty("allowCsrBasedIssuance"))
                                            object.allowCsrBasedIssuance = message.allowCsrBasedIssuance;
                                        if (message.allowConfigBasedIssuance != null && message.hasOwnProperty("allowConfigBasedIssuance"))
                                            object.allowConfigBasedIssuance = message.allowConfigBasedIssuance;
                                        return object;
                                    };
    
                                    /**
                                     * Converts this IssuanceModes to JSON.
                                     * @function toJSON
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @instance
                                     * @returns {Object.<string,*>} JSON object
                                     */
                                    IssuanceModes.prototype.toJSON = function toJSON() {
                                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                    };
    
                                    /**
                                     * Gets the default type url for IssuanceModes
                                     * @function getTypeUrl
                                     * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes
                                     * @static
                                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                     * @returns {string} The default type url
                                     */
                                    IssuanceModes.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                        if (typeUrlPrefix === undefined) {
                                            typeUrlPrefix = "type.googleapis.com";
                                        }
                                        return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.CertificateAuthorityPolicy.IssuanceModes";
                                    };
    
                                    return IssuanceModes;
                                })();
    
                                return CertificateAuthorityPolicy;
                            })();
    
                            CertificateAuthority.AccessUrls = (function() {
    
                                /**
                                 * Properties of an AccessUrls.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @interface IAccessUrls
                                 * @property {string|null} [caCertificateAccessUrl] AccessUrls caCertificateAccessUrl
                                 * @property {string|null} [crlAccessUrl] AccessUrls crlAccessUrl
                                 */
    
                                /**
                                 * Constructs a new AccessUrls.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @classdesc Represents an AccessUrls.
                                 * @implements IAccessUrls
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls=} [properties] Properties to set
                                 */
                                function AccessUrls(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * AccessUrls caCertificateAccessUrl.
                                 * @member {string} caCertificateAccessUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @instance
                                 */
                                AccessUrls.prototype.caCertificateAccessUrl = "";
    
                                /**
                                 * AccessUrls crlAccessUrl.
                                 * @member {string} crlAccessUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @instance
                                 */
                                AccessUrls.prototype.crlAccessUrl = "";
    
                                /**
                                 * Creates a new AccessUrls instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls} AccessUrls instance
                                 */
                                AccessUrls.create = function create(properties) {
                                    return new AccessUrls(properties);
                                };
    
                                /**
                                 * Encodes the specified AccessUrls message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls} message AccessUrls message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AccessUrls.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.caCertificateAccessUrl != null && Object.hasOwnProperty.call(message, "caCertificateAccessUrl"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.caCertificateAccessUrl);
                                    if (message.crlAccessUrl != null && Object.hasOwnProperty.call(message, "crlAccessUrl"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.crlAccessUrl);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified AccessUrls message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IAccessUrls} message AccessUrls message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                AccessUrls.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an AccessUrls message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls} AccessUrls
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AccessUrls.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.caCertificateAccessUrl = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.crlAccessUrl = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an AccessUrls message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls} AccessUrls
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                AccessUrls.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an AccessUrls message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                AccessUrls.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.caCertificateAccessUrl != null && message.hasOwnProperty("caCertificateAccessUrl"))
                                        if (!$util.isString(message.caCertificateAccessUrl))
                                            return "caCertificateAccessUrl: string expected";
                                    if (message.crlAccessUrl != null && message.hasOwnProperty("crlAccessUrl"))
                                        if (!$util.isString(message.crlAccessUrl))
                                            return "crlAccessUrl: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an AccessUrls message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls} AccessUrls
                                 */
                                AccessUrls.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls();
                                    if (object.caCertificateAccessUrl != null)
                                        message.caCertificateAccessUrl = String(object.caCertificateAccessUrl);
                                    if (object.crlAccessUrl != null)
                                        message.crlAccessUrl = String(object.crlAccessUrl);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an AccessUrls message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls} message AccessUrls
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                AccessUrls.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.caCertificateAccessUrl = "";
                                        object.crlAccessUrl = "";
                                    }
                                    if (message.caCertificateAccessUrl != null && message.hasOwnProperty("caCertificateAccessUrl"))
                                        object.caCertificateAccessUrl = message.caCertificateAccessUrl;
                                    if (message.crlAccessUrl != null && message.hasOwnProperty("crlAccessUrl"))
                                        object.crlAccessUrl = message.crlAccessUrl;
                                    return object;
                                };
    
                                /**
                                 * Converts this AccessUrls to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                AccessUrls.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for AccessUrls
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                AccessUrls.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.AccessUrls";
                                };
    
                                return AccessUrls;
                            })();
    
                            CertificateAuthority.KeyVersionSpec = (function() {
    
                                /**
                                 * Properties of a KeyVersionSpec.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @interface IKeyVersionSpec
                                 * @property {string|null} [cloudKmsKeyVersion] KeyVersionSpec cloudKmsKeyVersion
                                 * @property {google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm|null} [algorithm] KeyVersionSpec algorithm
                                 */
    
                                /**
                                 * Constructs a new KeyVersionSpec.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority
                                 * @classdesc Represents a KeyVersionSpec.
                                 * @implements IKeyVersionSpec
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec=} [properties] Properties to set
                                 */
                                function KeyVersionSpec(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyVersionSpec cloudKmsKeyVersion.
                                 * @member {string|null|undefined} cloudKmsKeyVersion
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                KeyVersionSpec.prototype.cloudKmsKeyVersion = null;
    
                                /**
                                 * KeyVersionSpec algorithm.
                                 * @member {google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm|null|undefined} algorithm
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                KeyVersionSpec.prototype.algorithm = null;
    
                                // OneOf field names bound to virtual getters and setters
                                var $oneOfFields;
    
                                /**
                                 * KeyVersionSpec KeyVersion.
                                 * @member {"cloudKmsKeyVersion"|"algorithm"|undefined} KeyVersion
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 */
                                Object.defineProperty(KeyVersionSpec.prototype, "KeyVersion", {
                                    get: $util.oneOfGetter($oneOfFields = ["cloudKmsKeyVersion", "algorithm"]),
                                    set: $util.oneOfSetter($oneOfFields)
                                });
    
                                /**
                                 * Creates a new KeyVersionSpec instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec instance
                                 */
                                KeyVersionSpec.create = function create(properties) {
                                    return new KeyVersionSpec(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyVersionSpec message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec} message KeyVersionSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyVersionSpec.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.cloudKmsKeyVersion != null && Object.hasOwnProperty.call(message, "cloudKmsKeyVersion"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.cloudKmsKeyVersion);
                                    if (message.algorithm != null && Object.hasOwnProperty.call(message, "algorithm"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.algorithm);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyVersionSpec message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.IKeyVersionSpec} message KeyVersionSpec message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyVersionSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyVersionSpec message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyVersionSpec.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.cloudKmsKeyVersion = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.algorithm = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyVersionSpec message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyVersionSpec.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyVersionSpec message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyVersionSpec.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    var properties = {};
                                    if (message.cloudKmsKeyVersion != null && message.hasOwnProperty("cloudKmsKeyVersion")) {
                                        properties.KeyVersion = 1;
                                        if (!$util.isString(message.cloudKmsKeyVersion))
                                            return "cloudKmsKeyVersion: string expected";
                                    }
                                    if (message.algorithm != null && message.hasOwnProperty("algorithm")) {
                                        if (properties.KeyVersion === 1)
                                            return "KeyVersion: multiple values";
                                        properties.KeyVersion = 1;
                                        switch (message.algorithm) {
                                        default:
                                            return "algorithm: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 6:
                                        case 7:
                                        case 8:
                                        case 4:
                                        case 5:
                                            break;
                                        }
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyVersionSpec message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec} KeyVersionSpec
                                 */
                                KeyVersionSpec.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec();
                                    if (object.cloudKmsKeyVersion != null)
                                        message.cloudKmsKeyVersion = String(object.cloudKmsKeyVersion);
                                    switch (object.algorithm) {
                                    default:
                                        if (typeof object.algorithm === "number") {
                                            message.algorithm = object.algorithm;
                                            break;
                                        }
                                        break;
                                    case "SIGN_HASH_ALGORITHM_UNSPECIFIED":
                                    case 0:
                                        message.algorithm = 0;
                                        break;
                                    case "RSA_PSS_2048_SHA256":
                                    case 1:
                                        message.algorithm = 1;
                                        break;
                                    case "RSA_PSS_3072_SHA256":
                                    case 2:
                                        message.algorithm = 2;
                                        break;
                                    case "RSA_PSS_4096_SHA256":
                                    case 3:
                                        message.algorithm = 3;
                                        break;
                                    case "RSA_PKCS1_2048_SHA256":
                                    case 6:
                                        message.algorithm = 6;
                                        break;
                                    case "RSA_PKCS1_3072_SHA256":
                                    case 7:
                                        message.algorithm = 7;
                                        break;
                                    case "RSA_PKCS1_4096_SHA256":
                                    case 8:
                                        message.algorithm = 8;
                                        break;
                                    case "EC_P256_SHA256":
                                    case 4:
                                        message.algorithm = 4;
                                        break;
                                    case "EC_P384_SHA384":
                                    case 5:
                                        message.algorithm = 5;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyVersionSpec message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec} message KeyVersionSpec
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyVersionSpec.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (message.cloudKmsKeyVersion != null && message.hasOwnProperty("cloudKmsKeyVersion")) {
                                        object.cloudKmsKeyVersion = message.cloudKmsKeyVersion;
                                        if (options.oneofs)
                                            object.KeyVersion = "cloudKmsKeyVersion";
                                    }
                                    if (message.algorithm != null && message.hasOwnProperty("algorithm")) {
                                        object.algorithm = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm[message.algorithm] === undefined ? message.algorithm : $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm[message.algorithm] : message.algorithm;
                                        if (options.oneofs)
                                            object.KeyVersion = "algorithm";
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyVersionSpec to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyVersionSpec.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyVersionSpec
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyVersionSpec.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateAuthority.KeyVersionSpec";
                                };
    
                                return KeyVersionSpec;
                            })();
    
                            /**
                             * Type enum.
                             * @name google.cloud.security.privateca.v1beta1.CertificateAuthority.Type
                             * @enum {number}
                             * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                             * @property {number} SELF_SIGNED=1 SELF_SIGNED value
                             * @property {number} SUBORDINATE=2 SUBORDINATE value
                             */
                            CertificateAuthority.Type = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SELF_SIGNED"] = 1;
                                values[valuesById[2] = "SUBORDINATE"] = 2;
                                return values;
                            })();
    
                            /**
                             * Tier enum.
                             * @name google.cloud.security.privateca.v1beta1.CertificateAuthority.Tier
                             * @enum {number}
                             * @property {number} TIER_UNSPECIFIED=0 TIER_UNSPECIFIED value
                             * @property {number} ENTERPRISE=1 ENTERPRISE value
                             * @property {number} DEVOPS=2 DEVOPS value
                             */
                            CertificateAuthority.Tier = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "TIER_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ENTERPRISE"] = 1;
                                values[valuesById[2] = "DEVOPS"] = 2;
                                return values;
                            })();
    
                            /**
                             * State enum.
                             * @name google.cloud.security.privateca.v1beta1.CertificateAuthority.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} ENABLED=1 ENABLED value
                             * @property {number} DISABLED=2 DISABLED value
                             * @property {number} PENDING_ACTIVATION=3 PENDING_ACTIVATION value
                             * @property {number} PENDING_DELETION=4 PENDING_DELETION value
                             */
                            CertificateAuthority.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ENABLED"] = 1;
                                values[valuesById[2] = "DISABLED"] = 2;
                                values[valuesById[3] = "PENDING_ACTIVATION"] = 3;
                                values[valuesById[4] = "PENDING_DELETION"] = 4;
                                return values;
                            })();
    
                            /**
                             * SignHashAlgorithm enum.
                             * @name google.cloud.security.privateca.v1beta1.CertificateAuthority.SignHashAlgorithm
                             * @enum {number}
                             * @property {number} SIGN_HASH_ALGORITHM_UNSPECIFIED=0 SIGN_HASH_ALGORITHM_UNSPECIFIED value
                             * @property {number} RSA_PSS_2048_SHA256=1 RSA_PSS_2048_SHA256 value
                             * @property {number} RSA_PSS_3072_SHA256=2 RSA_PSS_3072_SHA256 value
                             * @property {number} RSA_PSS_4096_SHA256=3 RSA_PSS_4096_SHA256 value
                             * @property {number} RSA_PKCS1_2048_SHA256=6 RSA_PKCS1_2048_SHA256 value
                             * @property {number} RSA_PKCS1_3072_SHA256=7 RSA_PKCS1_3072_SHA256 value
                             * @property {number} RSA_PKCS1_4096_SHA256=8 RSA_PKCS1_4096_SHA256 value
                             * @property {number} EC_P256_SHA256=4 EC_P256_SHA256 value
                             * @property {number} EC_P384_SHA384=5 EC_P384_SHA384 value
                             */
                            CertificateAuthority.SignHashAlgorithm = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SIGN_HASH_ALGORITHM_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "RSA_PSS_2048_SHA256"] = 1;
                                values[valuesById[2] = "RSA_PSS_3072_SHA256"] = 2;
                                values[valuesById[3] = "RSA_PSS_4096_SHA256"] = 3;
                                values[valuesById[6] = "RSA_PKCS1_2048_SHA256"] = 6;
                                values[valuesById[7] = "RSA_PKCS1_3072_SHA256"] = 7;
                                values[valuesById[8] = "RSA_PKCS1_4096_SHA256"] = 8;
                                values[valuesById[4] = "EC_P256_SHA256"] = 4;
                                values[valuesById[5] = "EC_P384_SHA384"] = 5;
                                return values;
                            })();
    
                            return CertificateAuthority;
                        })();
    
                        v1beta1.CertificateRevocationList = (function() {
    
                            /**
                             * Properties of a CertificateRevocationList.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICertificateRevocationList
                             * @property {string|null} [name] CertificateRevocationList name
                             * @property {number|Long|null} [sequenceNumber] CertificateRevocationList sequenceNumber
                             * @property {Array.<google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate>|null} [revokedCertificates] CertificateRevocationList revokedCertificates
                             * @property {string|null} [pemCrl] CertificateRevocationList pemCrl
                             * @property {string|null} [accessUrl] CertificateRevocationList accessUrl
                             * @property {google.cloud.security.privateca.v1beta1.CertificateRevocationList.State|null} [state] CertificateRevocationList state
                             * @property {google.protobuf.ITimestamp|null} [createTime] CertificateRevocationList createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] CertificateRevocationList updateTime
                             * @property {Object.<string,string>|null} [labels] CertificateRevocationList labels
                             */
    
                            /**
                             * Constructs a new CertificateRevocationList.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CertificateRevocationList.
                             * @implements ICertificateRevocationList
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateRevocationList=} [properties] Properties to set
                             */
                            function CertificateRevocationList(properties) {
                                this.revokedCertificates = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateRevocationList name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.name = "";
    
                            /**
                             * CertificateRevocationList sequenceNumber.
                             * @member {number|Long} sequenceNumber
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.sequenceNumber = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * CertificateRevocationList revokedCertificates.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate>} revokedCertificates
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.revokedCertificates = $util.emptyArray;
    
                            /**
                             * CertificateRevocationList pemCrl.
                             * @member {string} pemCrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.pemCrl = "";
    
                            /**
                             * CertificateRevocationList accessUrl.
                             * @member {string} accessUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.accessUrl = "";
    
                            /**
                             * CertificateRevocationList state.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateRevocationList.State} state
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.state = 0;
    
                            /**
                             * CertificateRevocationList createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.createTime = null;
    
                            /**
                             * CertificateRevocationList updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.updateTime = null;
    
                            /**
                             * CertificateRevocationList labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             */
                            CertificateRevocationList.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new CertificateRevocationList instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateRevocationList=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList} CertificateRevocationList instance
                             */
                            CertificateRevocationList.create = function create(properties) {
                                return new CertificateRevocationList(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateRevocationList message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateRevocationList.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateRevocationList} message CertificateRevocationList message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateRevocationList.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.sequenceNumber != null && Object.hasOwnProperty.call(message, "sequenceNumber"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.sequenceNumber);
                                if (message.revokedCertificates != null && message.revokedCertificates.length)
                                    for (var i = 0; i < message.revokedCertificates.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.encode(message.revokedCertificates[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.pemCrl != null && Object.hasOwnProperty.call(message, "pemCrl"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.pemCrl);
                                if (message.accessUrl != null && Object.hasOwnProperty.call(message, "accessUrl"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.accessUrl);
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 9, wireType 2 =*/74).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateRevocationList message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateRevocationList.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateRevocationList} message CertificateRevocationList message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateRevocationList.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateRevocationList message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList} CertificateRevocationList
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateRevocationList.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.sequenceNumber = reader.int64();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.revokedCertificates && message.revokedCertificates.length))
                                                message.revokedCertificates = [];
                                            message.revokedCertificates.push($root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            message.pemCrl = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.accessUrl = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 7: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 9: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateRevocationList message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList} CertificateRevocationList
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateRevocationList.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateRevocationList message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateRevocationList.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.sequenceNumber != null && message.hasOwnProperty("sequenceNumber"))
                                    if (!$util.isInteger(message.sequenceNumber) && !(message.sequenceNumber && $util.isInteger(message.sequenceNumber.low) && $util.isInteger(message.sequenceNumber.high)))
                                        return "sequenceNumber: integer|Long expected";
                                if (message.revokedCertificates != null && message.hasOwnProperty("revokedCertificates")) {
                                    if (!Array.isArray(message.revokedCertificates))
                                        return "revokedCertificates: array expected";
                                    for (var i = 0; i < message.revokedCertificates.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.verify(message.revokedCertificates[i]);
                                        if (error)
                                            return "revokedCertificates." + error;
                                    }
                                }
                                if (message.pemCrl != null && message.hasOwnProperty("pemCrl"))
                                    if (!$util.isString(message.pemCrl))
                                        return "pemCrl: string expected";
                                if (message.accessUrl != null && message.hasOwnProperty("accessUrl"))
                                    if (!$util.isString(message.accessUrl))
                                        return "accessUrl: string expected";
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateRevocationList message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList} CertificateRevocationList
                             */
                            CertificateRevocationList.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.sequenceNumber != null)
                                    if ($util.Long)
                                        (message.sequenceNumber = $util.Long.fromValue(object.sequenceNumber)).unsigned = false;
                                    else if (typeof object.sequenceNumber === "string")
                                        message.sequenceNumber = parseInt(object.sequenceNumber, 10);
                                    else if (typeof object.sequenceNumber === "number")
                                        message.sequenceNumber = object.sequenceNumber;
                                    else if (typeof object.sequenceNumber === "object")
                                        message.sequenceNumber = new $util.LongBits(object.sequenceNumber.low >>> 0, object.sequenceNumber.high >>> 0).toNumber();
                                if (object.revokedCertificates) {
                                    if (!Array.isArray(object.revokedCertificates))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateRevocationList.revokedCertificates: array expected");
                                    message.revokedCertificates = [];
                                    for (var i = 0; i < object.revokedCertificates.length; ++i) {
                                        if (typeof object.revokedCertificates[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateRevocationList.revokedCertificates: object expected");
                                        message.revokedCertificates[i] = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.fromObject(object.revokedCertificates[i]);
                                    }
                                }
                                if (object.pemCrl != null)
                                    message.pemCrl = String(object.pemCrl);
                                if (object.accessUrl != null)
                                    message.accessUrl = String(object.accessUrl);
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "ACTIVE":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "SUPERSEDED":
                                case 2:
                                    message.state = 2;
                                    break;
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateRevocationList.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateRevocationList.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateRevocationList.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateRevocationList message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList} message CertificateRevocationList
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateRevocationList.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.revokedCertificates = [];
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.sequenceNumber = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.sequenceNumber = options.longs === String ? "0" : 0;
                                    object.pemCrl = "";
                                    object.accessUrl = "";
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.createTime = null;
                                    object.updateTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.sequenceNumber != null && message.hasOwnProperty("sequenceNumber"))
                                    if (typeof message.sequenceNumber === "number")
                                        object.sequenceNumber = options.longs === String ? String(message.sequenceNumber) : message.sequenceNumber;
                                    else
                                        object.sequenceNumber = options.longs === String ? $util.Long.prototype.toString.call(message.sequenceNumber) : options.longs === Number ? new $util.LongBits(message.sequenceNumber.low >>> 0, message.sequenceNumber.high >>> 0).toNumber() : message.sequenceNumber;
                                if (message.revokedCertificates && message.revokedCertificates.length) {
                                    object.revokedCertificates = [];
                                    for (var j = 0; j < message.revokedCertificates.length; ++j)
                                        object.revokedCertificates[j] = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.toObject(message.revokedCertificates[j], options);
                                }
                                if (message.pemCrl != null && message.hasOwnProperty("pemCrl"))
                                    object.pemCrl = message.pemCrl;
                                if (message.accessUrl != null && message.hasOwnProperty("accessUrl"))
                                    object.accessUrl = message.accessUrl;
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.State[message.state] === undefined ? message.state : $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.State[message.state] : message.state;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this CertificateRevocationList to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateRevocationList.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateRevocationList
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateRevocationList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateRevocationList";
                            };
    
                            CertificateRevocationList.RevokedCertificate = (function() {
    
                                /**
                                 * Properties of a RevokedCertificate.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                                 * @interface IRevokedCertificate
                                 * @property {string|null} [certificate] RevokedCertificate certificate
                                 * @property {string|null} [hexSerialNumber] RevokedCertificate hexSerialNumber
                                 * @property {google.cloud.security.privateca.v1beta1.RevocationReason|null} [revocationReason] RevokedCertificate revocationReason
                                 */
    
                                /**
                                 * Constructs a new RevokedCertificate.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList
                                 * @classdesc Represents a RevokedCertificate.
                                 * @implements IRevokedCertificate
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate=} [properties] Properties to set
                                 */
                                function RevokedCertificate(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * RevokedCertificate certificate.
                                 * @member {string} certificate
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.certificate = "";
    
                                /**
                                 * RevokedCertificate hexSerialNumber.
                                 * @member {string} hexSerialNumber
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.hexSerialNumber = "";
    
                                /**
                                 * RevokedCertificate revocationReason.
                                 * @member {google.cloud.security.privateca.v1beta1.RevocationReason} revocationReason
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 */
                                RevokedCertificate.prototype.revocationReason = 0;
    
                                /**
                                 * Creates a new RevokedCertificate instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate} RevokedCertificate instance
                                 */
                                RevokedCertificate.create = function create(properties) {
                                    return new RevokedCertificate(properties);
                                };
    
                                /**
                                 * Encodes the specified RevokedCertificate message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate} message RevokedCertificate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevokedCertificate.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.certificate);
                                    if (message.hexSerialNumber != null && Object.hasOwnProperty.call(message, "hexSerialNumber"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.hexSerialNumber);
                                    if (message.revocationReason != null && Object.hasOwnProperty.call(message, "revocationReason"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.revocationReason);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified RevokedCertificate message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList.IRevokedCertificate} message RevokedCertificate message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevokedCertificate.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a RevokedCertificate message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevokedCertificate.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.certificate = reader.string();
                                                break;
                                            }
                                        case 2: {
                                                message.hexSerialNumber = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.revocationReason = reader.int32();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a RevokedCertificate message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevokedCertificate.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a RevokedCertificate message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                RevokedCertificate.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.certificate != null && message.hasOwnProperty("certificate"))
                                        if (!$util.isString(message.certificate))
                                            return "certificate: string expected";
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        if (!$util.isString(message.hexSerialNumber))
                                            return "hexSerialNumber: string expected";
                                    if (message.revocationReason != null && message.hasOwnProperty("revocationReason"))
                                        switch (message.revocationReason) {
                                        default:
                                            return "revocationReason: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                        case 8:
                                            break;
                                        }
                                    return null;
                                };
    
                                /**
                                 * Creates a RevokedCertificate message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate} RevokedCertificate
                                 */
                                RevokedCertificate.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate();
                                    if (object.certificate != null)
                                        message.certificate = String(object.certificate);
                                    if (object.hexSerialNumber != null)
                                        message.hexSerialNumber = String(object.hexSerialNumber);
                                    switch (object.revocationReason) {
                                    default:
                                        if (typeof object.revocationReason === "number") {
                                            message.revocationReason = object.revocationReason;
                                            break;
                                        }
                                        break;
                                    case "REVOCATION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.revocationReason = 0;
                                        break;
                                    case "KEY_COMPROMISE":
                                    case 1:
                                        message.revocationReason = 1;
                                        break;
                                    case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                    case 2:
                                        message.revocationReason = 2;
                                        break;
                                    case "AFFILIATION_CHANGED":
                                    case 3:
                                        message.revocationReason = 3;
                                        break;
                                    case "SUPERSEDED":
                                    case 4:
                                        message.revocationReason = 4;
                                        break;
                                    case "CESSATION_OF_OPERATION":
                                    case 5:
                                        message.revocationReason = 5;
                                        break;
                                    case "CERTIFICATE_HOLD":
                                    case 6:
                                        message.revocationReason = 6;
                                        break;
                                    case "PRIVILEGE_WITHDRAWN":
                                    case 7:
                                        message.revocationReason = 7;
                                        break;
                                    case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                    case 8:
                                        message.revocationReason = 8;
                                        break;
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a RevokedCertificate message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate} message RevokedCertificate
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                RevokedCertificate.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.certificate = "";
                                        object.hexSerialNumber = "";
                                        object.revocationReason = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                    }
                                    if (message.certificate != null && message.hasOwnProperty("certificate"))
                                        object.certificate = message.certificate;
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        object.hexSerialNumber = message.hexSerialNumber;
                                    if (message.revocationReason != null && message.hasOwnProperty("revocationReason"))
                                        object.revocationReason = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.revocationReason] === undefined ? message.revocationReason : $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.revocationReason] : message.revocationReason;
                                    return object;
                                };
    
                                /**
                                 * Converts this RevokedCertificate to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                RevokedCertificate.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for RevokedCertificate
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                RevokedCertificate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateRevocationList.RevokedCertificate";
                                };
    
                                return RevokedCertificate;
                            })();
    
                            /**
                             * State enum.
                             * @name google.cloud.security.privateca.v1beta1.CertificateRevocationList.State
                             * @enum {number}
                             * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                             * @property {number} ACTIVE=1 ACTIVE value
                             * @property {number} SUPERSEDED=2 SUPERSEDED value
                             */
                            CertificateRevocationList.State = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "ACTIVE"] = 1;
                                values[valuesById[2] = "SUPERSEDED"] = 2;
                                return values;
                            })();
    
                            return CertificateRevocationList;
                        })();
    
                        v1beta1.Certificate = (function() {
    
                            /**
                             * Properties of a Certificate.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICertificate
                             * @property {string|null} [name] Certificate name
                             * @property {string|null} [pemCsr] Certificate pemCsr
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateConfig|null} [config] Certificate config
                             * @property {google.protobuf.IDuration|null} [lifetime] Certificate lifetime
                             * @property {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails|null} [revocationDetails] Certificate revocationDetails
                             * @property {string|null} [pemCertificate] Certificate pemCertificate
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateDescription|null} [certificateDescription] Certificate certificateDescription
                             * @property {Array.<string>|null} [pemCertificateChain] Certificate pemCertificateChain
                             * @property {google.protobuf.ITimestamp|null} [createTime] Certificate createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] Certificate updateTime
                             * @property {Object.<string,string>|null} [labels] Certificate labels
                             */
    
                            /**
                             * Constructs a new Certificate.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a Certificate.
                             * @implements ICertificate
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICertificate=} [properties] Properties to set
                             */
                            function Certificate(properties) {
                                this.pemCertificateChain = [];
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Certificate name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.name = "";
    
                            /**
                             * Certificate pemCsr.
                             * @member {string|null|undefined} pemCsr
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCsr = null;
    
                            /**
                             * Certificate config.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateConfig|null|undefined} config
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.config = null;
    
                            /**
                             * Certificate lifetime.
                             * @member {google.protobuf.IDuration|null|undefined} lifetime
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.lifetime = null;
    
                            /**
                             * Certificate revocationDetails.
                             * @member {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails|null|undefined} revocationDetails
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.revocationDetails = null;
    
                            /**
                             * Certificate pemCertificate.
                             * @member {string} pemCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCertificate = "";
    
                            /**
                             * Certificate certificateDescription.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateDescription|null|undefined} certificateDescription
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.certificateDescription = null;
    
                            /**
                             * Certificate pemCertificateChain.
                             * @member {Array.<string>} pemCertificateChain
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.pemCertificateChain = $util.emptyArray;
    
                            /**
                             * Certificate createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.createTime = null;
    
                            /**
                             * Certificate updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.updateTime = null;
    
                            /**
                             * Certificate labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Certificate.prototype.labels = $util.emptyObject;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * Certificate certificateConfig.
                             * @member {"pemCsr"|"config"|undefined} certificateConfig
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             */
                            Object.defineProperty(Certificate.prototype, "certificateConfig", {
                                get: $util.oneOfGetter($oneOfFields = ["pemCsr", "config"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new Certificate instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificate=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.Certificate} Certificate instance
                             */
                            Certificate.create = function create(properties) {
                                return new Certificate(properties);
                            };
    
                            /**
                             * Encodes the specified Certificate message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Certificate.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificate} message Certificate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Certificate.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.pemCsr != null && Object.hasOwnProperty.call(message, "pemCsr"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.pemCsr);
                                if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateConfig.encode(message.config, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                    $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.revocationDetails != null && Object.hasOwnProperty.call(message, "revocationDetails"))
                                    $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.encode(message.revocationDetails, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.pemCertificate != null && Object.hasOwnProperty.call(message, "pemCertificate"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.pemCertificate);
                                if (message.certificateDescription != null && Object.hasOwnProperty.call(message, "certificateDescription"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateDescription.encode(message.certificateDescription, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.pemCertificateChain != null && message.pemCertificateChain.length)
                                    for (var i = 0; i < message.pemCertificateChain.length; ++i)
                                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.pemCertificateChain[i]);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 11, wireType 2 =*/90).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Certificate message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Certificate.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificate} message Certificate message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Certificate.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Certificate message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.Certificate} Certificate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Certificate.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.Certificate(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemCsr = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.revocationDetails = $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            message.pemCertificate = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.certificateDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 8: {
                                            if (!(message.pemCertificateChain && message.pemCertificateChain.length))
                                                message.pemCertificateChain = [];
                                            message.pemCertificateChain.push(reader.string());
                                            break;
                                        }
                                    case 9: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 10: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 11: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Certificate message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.Certificate} Certificate
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Certificate.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Certificate message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Certificate.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr")) {
                                    properties.certificateConfig = 1;
                                    if (!$util.isString(message.pemCsr))
                                        return "pemCsr: string expected";
                                }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    if (properties.certificateConfig === 1)
                                        return "certificateConfig: multiple values";
                                    properties.certificateConfig = 1;
                                    {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.verify(message.config);
                                        if (error)
                                            return "config." + error;
                                    }
                                }
                                if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                    var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                    if (error)
                                        return "lifetime." + error;
                                }
                                if (message.revocationDetails != null && message.hasOwnProperty("revocationDetails")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.verify(message.revocationDetails);
                                    if (error)
                                        return "revocationDetails." + error;
                                }
                                if (message.pemCertificate != null && message.hasOwnProperty("pemCertificate"))
                                    if (!$util.isString(message.pemCertificate))
                                        return "pemCertificate: string expected";
                                if (message.certificateDescription != null && message.hasOwnProperty("certificateDescription")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.verify(message.certificateDescription);
                                    if (error)
                                        return "certificateDescription." + error;
                                }
                                if (message.pemCertificateChain != null && message.hasOwnProperty("pemCertificateChain")) {
                                    if (!Array.isArray(message.pemCertificateChain))
                                        return "pemCertificateChain: array expected";
                                    for (var i = 0; i < message.pemCertificateChain.length; ++i)
                                        if (!$util.isString(message.pemCertificateChain[i]))
                                            return "pemCertificateChain: string[] expected";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Certificate message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.Certificate} Certificate
                             */
                            Certificate.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.Certificate)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.Certificate();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.pemCsr != null)
                                    message.pemCsr = String(object.pemCsr);
                                if (object.config != null) {
                                    if (typeof object.config !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.config: object expected");
                                    message.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.fromObject(object.config);
                                }
                                if (object.lifetime != null) {
                                    if (typeof object.lifetime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.lifetime: object expected");
                                    message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                }
                                if (object.revocationDetails != null) {
                                    if (typeof object.revocationDetails !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.revocationDetails: object expected");
                                    message.revocationDetails = $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.fromObject(object.revocationDetails);
                                }
                                if (object.pemCertificate != null)
                                    message.pemCertificate = String(object.pemCertificate);
                                if (object.certificateDescription != null) {
                                    if (typeof object.certificateDescription !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.certificateDescription: object expected");
                                    message.certificateDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.fromObject(object.certificateDescription);
                                }
                                if (object.pemCertificateChain) {
                                    if (!Array.isArray(object.pemCertificateChain))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.pemCertificateChain: array expected");
                                    message.pemCertificateChain = [];
                                    for (var i = 0; i < object.pemCertificateChain.length; ++i)
                                        message.pemCertificateChain[i] = String(object.pemCertificateChain[i]);
                                }
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Certificate message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.Certificate} message Certificate
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Certificate.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.pemCertificateChain = [];
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.lifetime = null;
                                    object.revocationDetails = null;
                                    object.pemCertificate = "";
                                    object.certificateDescription = null;
                                    object.createTime = null;
                                    object.updateTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr")) {
                                    object.pemCsr = message.pemCsr;
                                    if (options.oneofs)
                                        object.certificateConfig = "pemCsr";
                                }
                                if (message.config != null && message.hasOwnProperty("config")) {
                                    object.config = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.toObject(message.config, options);
                                    if (options.oneofs)
                                        object.certificateConfig = "config";
                                }
                                if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                    object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                if (message.revocationDetails != null && message.hasOwnProperty("revocationDetails"))
                                    object.revocationDetails = $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.toObject(message.revocationDetails, options);
                                if (message.pemCertificate != null && message.hasOwnProperty("pemCertificate"))
                                    object.pemCertificate = message.pemCertificate;
                                if (message.certificateDescription != null && message.hasOwnProperty("certificateDescription"))
                                    object.certificateDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.toObject(message.certificateDescription, options);
                                if (message.pemCertificateChain && message.pemCertificateChain.length) {
                                    object.pemCertificateChain = [];
                                    for (var j = 0; j < message.pemCertificateChain.length; ++j)
                                        object.pemCertificateChain[j] = message.pemCertificateChain[j];
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Certificate to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Certificate.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Certificate
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.Certificate
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Certificate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.Certificate";
                            };
    
                            Certificate.RevocationDetails = (function() {
    
                                /**
                                 * Properties of a RevocationDetails.
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate
                                 * @interface IRevocationDetails
                                 * @property {google.cloud.security.privateca.v1beta1.RevocationReason|null} [revocationState] RevocationDetails revocationState
                                 * @property {google.protobuf.ITimestamp|null} [revocationTime] RevocationDetails revocationTime
                                 */
    
                                /**
                                 * Constructs a new RevocationDetails.
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate
                                 * @classdesc Represents a RevocationDetails.
                                 * @implements IRevocationDetails
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails=} [properties] Properties to set
                                 */
                                function RevocationDetails(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * RevocationDetails revocationState.
                                 * @member {google.cloud.security.privateca.v1beta1.RevocationReason} revocationState
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @instance
                                 */
                                RevocationDetails.prototype.revocationState = 0;
    
                                /**
                                 * RevocationDetails revocationTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} revocationTime
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @instance
                                 */
                                RevocationDetails.prototype.revocationTime = null;
    
                                /**
                                 * Creates a new RevocationDetails instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails} RevocationDetails instance
                                 */
                                RevocationDetails.create = function create(properties) {
                                    return new RevocationDetails(properties);
                                };
    
                                /**
                                 * Encodes the specified RevocationDetails message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails} message RevocationDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevocationDetails.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.revocationState != null && Object.hasOwnProperty.call(message, "revocationState"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.revocationState);
                                    if (message.revocationTime != null && Object.hasOwnProperty.call(message, "revocationTime"))
                                        $root.google.protobuf.Timestamp.encode(message.revocationTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified RevocationDetails message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.Certificate.IRevocationDetails} message RevocationDetails message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                RevocationDetails.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a RevocationDetails message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails} RevocationDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevocationDetails.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.revocationState = reader.int32();
                                                break;
                                            }
                                        case 2: {
                                                message.revocationTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a RevocationDetails message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails} RevocationDetails
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                RevocationDetails.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a RevocationDetails message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                RevocationDetails.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.revocationState != null && message.hasOwnProperty("revocationState"))
                                        switch (message.revocationState) {
                                        default:
                                            return "revocationState: enum value expected";
                                        case 0:
                                        case 1:
                                        case 2:
                                        case 3:
                                        case 4:
                                        case 5:
                                        case 6:
                                        case 7:
                                        case 8:
                                            break;
                                        }
                                    if (message.revocationTime != null && message.hasOwnProperty("revocationTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.revocationTime);
                                        if (error)
                                            return "revocationTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a RevocationDetails message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails} RevocationDetails
                                 */
                                RevocationDetails.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails();
                                    switch (object.revocationState) {
                                    default:
                                        if (typeof object.revocationState === "number") {
                                            message.revocationState = object.revocationState;
                                            break;
                                        }
                                        break;
                                    case "REVOCATION_REASON_UNSPECIFIED":
                                    case 0:
                                        message.revocationState = 0;
                                        break;
                                    case "KEY_COMPROMISE":
                                    case 1:
                                        message.revocationState = 1;
                                        break;
                                    case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                    case 2:
                                        message.revocationState = 2;
                                        break;
                                    case "AFFILIATION_CHANGED":
                                    case 3:
                                        message.revocationState = 3;
                                        break;
                                    case "SUPERSEDED":
                                    case 4:
                                        message.revocationState = 4;
                                        break;
                                    case "CESSATION_OF_OPERATION":
                                    case 5:
                                        message.revocationState = 5;
                                        break;
                                    case "CERTIFICATE_HOLD":
                                    case 6:
                                        message.revocationState = 6;
                                        break;
                                    case "PRIVILEGE_WITHDRAWN":
                                    case 7:
                                        message.revocationState = 7;
                                        break;
                                    case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                    case 8:
                                        message.revocationState = 8;
                                        break;
                                    }
                                    if (object.revocationTime != null) {
                                        if (typeof object.revocationTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails.revocationTime: object expected");
                                        message.revocationTime = $root.google.protobuf.Timestamp.fromObject(object.revocationTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a RevocationDetails message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails} message RevocationDetails
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                RevocationDetails.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.revocationState = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                        object.revocationTime = null;
                                    }
                                    if (message.revocationState != null && message.hasOwnProperty("revocationState"))
                                        object.revocationState = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.revocationState] === undefined ? message.revocationState : $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.revocationState] : message.revocationState;
                                    if (message.revocationTime != null && message.hasOwnProperty("revocationTime"))
                                        object.revocationTime = $root.google.protobuf.Timestamp.toObject(message.revocationTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this RevocationDetails to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                RevocationDetails.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for RevocationDetails
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                RevocationDetails.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.Certificate.RevocationDetails";
                                };
    
                                return RevocationDetails;
                            })();
    
                            return Certificate;
                        })();
    
                        v1beta1.ReusableConfig = (function() {
    
                            /**
                             * Properties of a ReusableConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IReusableConfig
                             * @property {string|null} [name] ReusableConfig name
                             * @property {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null} [values] ReusableConfig values
                             * @property {string|null} [description] ReusableConfig description
                             * @property {google.protobuf.ITimestamp|null} [createTime] ReusableConfig createTime
                             * @property {google.protobuf.ITimestamp|null} [updateTime] ReusableConfig updateTime
                             * @property {Object.<string,string>|null} [labels] ReusableConfig labels
                             */
    
                            /**
                             * Constructs a new ReusableConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ReusableConfig.
                             * @implements IReusableConfig
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfig=} [properties] Properties to set
                             */
                            function ReusableConfig(properties) {
                                this.labels = {};
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReusableConfig name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.name = "";
    
                            /**
                             * ReusableConfig values.
                             * @member {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null|undefined} values
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.values = null;
    
                            /**
                             * ReusableConfig description.
                             * @member {string} description
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.description = "";
    
                            /**
                             * ReusableConfig createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.createTime = null;
    
                            /**
                             * ReusableConfig updateTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.updateTime = null;
    
                            /**
                             * ReusableConfig labels.
                             * @member {Object.<string,string>} labels
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             */
                            ReusableConfig.prototype.labels = $util.emptyObject;
    
                            /**
                             * Creates a new ReusableConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfig=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfig} ReusableConfig instance
                             */
                            ReusableConfig.create = function create(properties) {
                                return new ReusableConfig(properties);
                            };
    
                            /**
                             * Encodes the specified ReusableConfig message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfig} message ReusableConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.values != null && Object.hasOwnProperty.call(message, "values"))
                                    $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                    $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                    for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                        writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReusableConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfig} message ReusableConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReusableConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfig} ReusableConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfig(), key, value;
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.values = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.description = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            if (message.labels === $util.emptyObject)
                                                message.labels = {};
                                            var end2 = reader.uint32() + reader.pos;
                                            key = "";
                                            value = "";
                                            while (reader.pos < end2) {
                                                var tag2 = reader.uint32();
                                                switch (tag2 >>> 3) {
                                                case 1:
                                                    key = reader.string();
                                                    break;
                                                case 2:
                                                    value = reader.string();
                                                    break;
                                                default:
                                                    reader.skipType(tag2 & 7);
                                                    break;
                                                }
                                            }
                                            message.labels[key] = value;
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReusableConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfig} ReusableConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReusableConfig message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReusableConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.values != null && message.hasOwnProperty("values")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.verify(message.values);
                                    if (error)
                                        return "values." + error;
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                    if (error)
                                        return "updateTime." + error;
                                }
                                if (message.labels != null && message.hasOwnProperty("labels")) {
                                    if (!$util.isObject(message.labels))
                                        return "labels: object expected";
                                    var key = Object.keys(message.labels);
                                    for (var i = 0; i < key.length; ++i)
                                        if (!$util.isString(message.labels[key[i]]))
                                            return "labels: string{k:string} expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReusableConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfig} ReusableConfig
                             */
                            ReusableConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ReusableConfig)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfig();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.values != null) {
                                    if (typeof object.values !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfig.values: object expected");
                                    message.values = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.fromObject(object.values);
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfig.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.updateTime != null) {
                                    if (typeof object.updateTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfig.updateTime: object expected");
                                    message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                                }
                                if (object.labels) {
                                    if (typeof object.labels !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfig.labels: object expected");
                                    message.labels = {};
                                    for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                        message.labels[keys[i]] = String(object.labels[keys[i]]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReusableConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ReusableConfig} message ReusableConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReusableConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.objects || options.defaults)
                                    object.labels = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.values = null;
                                    object.description = "";
                                    object.createTime = null;
                                    object.updateTime = null;
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.values != null && message.hasOwnProperty("values"))
                                    object.values = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.toObject(message.values, options);
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                    object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                                var keys2;
                                if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                    object.labels = {};
                                    for (var j = 0; j < keys2.length; ++j)
                                        object.labels[keys2[j]] = message.labels[keys2[j]];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReusableConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReusableConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReusableConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReusableConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ReusableConfig";
                            };
    
                            return ReusableConfig;
                        })();
    
                        v1beta1.ReusableConfigValues = (function() {
    
                            /**
                             * Properties of a ReusableConfigValues.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IReusableConfigValues
                             * @property {google.cloud.security.privateca.v1beta1.IKeyUsage|null} [keyUsage] ReusableConfigValues keyUsage
                             * @property {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions|null} [caOptions] ReusableConfigValues caOptions
                             * @property {Array.<google.cloud.security.privateca.v1beta1.IObjectId>|null} [policyIds] ReusableConfigValues policyIds
                             * @property {Array.<string>|null} [aiaOcspServers] ReusableConfigValues aiaOcspServers
                             * @property {Array.<google.cloud.security.privateca.v1beta1.IX509Extension>|null} [additionalExtensions] ReusableConfigValues additionalExtensions
                             */
    
                            /**
                             * Constructs a new ReusableConfigValues.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ReusableConfigValues.
                             * @implements IReusableConfigValues
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigValues=} [properties] Properties to set
                             */
                            function ReusableConfigValues(properties) {
                                this.policyIds = [];
                                this.aiaOcspServers = [];
                                this.additionalExtensions = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReusableConfigValues keyUsage.
                             * @member {google.cloud.security.privateca.v1beta1.IKeyUsage|null|undefined} keyUsage
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             */
                            ReusableConfigValues.prototype.keyUsage = null;
    
                            /**
                             * ReusableConfigValues caOptions.
                             * @member {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions|null|undefined} caOptions
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             */
                            ReusableConfigValues.prototype.caOptions = null;
    
                            /**
                             * ReusableConfigValues policyIds.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.IObjectId>} policyIds
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             */
                            ReusableConfigValues.prototype.policyIds = $util.emptyArray;
    
                            /**
                             * ReusableConfigValues aiaOcspServers.
                             * @member {Array.<string>} aiaOcspServers
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             */
                            ReusableConfigValues.prototype.aiaOcspServers = $util.emptyArray;
    
                            /**
                             * ReusableConfigValues additionalExtensions.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.IX509Extension>} additionalExtensions
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             */
                            ReusableConfigValues.prototype.additionalExtensions = $util.emptyArray;
    
                            /**
                             * Creates a new ReusableConfigValues instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigValues=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues} ReusableConfigValues instance
                             */
                            ReusableConfigValues.create = function create(properties) {
                                return new ReusableConfigValues(properties);
                            };
    
                            /**
                             * Encodes the specified ReusableConfigValues message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigValues.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigValues} message ReusableConfigValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfigValues.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.keyUsage != null && Object.hasOwnProperty.call(message, "keyUsage"))
                                    $root.google.cloud.security.privateca.v1beta1.KeyUsage.encode(message.keyUsage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.caOptions != null && Object.hasOwnProperty.call(message, "caOptions"))
                                    $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.encode(message.caOptions, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.policyIds != null && message.policyIds.length)
                                    for (var i = 0; i < message.policyIds.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.ObjectId.encode(message.policyIds[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.aiaOcspServers != null && message.aiaOcspServers.length)
                                    for (var i = 0; i < message.aiaOcspServers.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.aiaOcspServers[i]);
                                if (message.additionalExtensions != null && message.additionalExtensions.length)
                                    for (var i = 0; i < message.additionalExtensions.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.X509Extension.encode(message.additionalExtensions[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReusableConfigValues message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigValues.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigValues} message ReusableConfigValues message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfigValues.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReusableConfigValues message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues} ReusableConfigValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfigValues.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.keyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.caOptions = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.policyIds && message.policyIds.length))
                                                message.policyIds = [];
                                            message.policyIds.push($root.google.cloud.security.privateca.v1beta1.ObjectId.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.aiaOcspServers && message.aiaOcspServers.length))
                                                message.aiaOcspServers = [];
                                            message.aiaOcspServers.push(reader.string());
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.additionalExtensions && message.additionalExtensions.length))
                                                message.additionalExtensions = [];
                                            message.additionalExtensions.push($root.google.cloud.security.privateca.v1beta1.X509Extension.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReusableConfigValues message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues} ReusableConfigValues
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfigValues.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReusableConfigValues message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReusableConfigValues.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.keyUsage != null && message.hasOwnProperty("keyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.KeyUsage.verify(message.keyUsage);
                                    if (error)
                                        return "keyUsage." + error;
                                }
                                if (message.caOptions != null && message.hasOwnProperty("caOptions")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.verify(message.caOptions);
                                    if (error)
                                        return "caOptions." + error;
                                }
                                if (message.policyIds != null && message.hasOwnProperty("policyIds")) {
                                    if (!Array.isArray(message.policyIds))
                                        return "policyIds: array expected";
                                    for (var i = 0; i < message.policyIds.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.ObjectId.verify(message.policyIds[i]);
                                        if (error)
                                            return "policyIds." + error;
                                    }
                                }
                                if (message.aiaOcspServers != null && message.hasOwnProperty("aiaOcspServers")) {
                                    if (!Array.isArray(message.aiaOcspServers))
                                        return "aiaOcspServers: array expected";
                                    for (var i = 0; i < message.aiaOcspServers.length; ++i)
                                        if (!$util.isString(message.aiaOcspServers[i]))
                                            return "aiaOcspServers: string[] expected";
                                }
                                if (message.additionalExtensions != null && message.hasOwnProperty("additionalExtensions")) {
                                    if (!Array.isArray(message.additionalExtensions))
                                        return "additionalExtensions: array expected";
                                    for (var i = 0; i < message.additionalExtensions.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.X509Extension.verify(message.additionalExtensions[i]);
                                        if (error)
                                            return "additionalExtensions." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReusableConfigValues message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues} ReusableConfigValues
                             */
                            ReusableConfigValues.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues();
                                if (object.keyUsage != null) {
                                    if (typeof object.keyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.keyUsage: object expected");
                                    message.keyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.fromObject(object.keyUsage);
                                }
                                if (object.caOptions != null) {
                                    if (typeof object.caOptions !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.caOptions: object expected");
                                    message.caOptions = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.fromObject(object.caOptions);
                                }
                                if (object.policyIds) {
                                    if (!Array.isArray(object.policyIds))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.policyIds: array expected");
                                    message.policyIds = [];
                                    for (var i = 0; i < object.policyIds.length; ++i) {
                                        if (typeof object.policyIds[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.policyIds: object expected");
                                        message.policyIds[i] = $root.google.cloud.security.privateca.v1beta1.ObjectId.fromObject(object.policyIds[i]);
                                    }
                                }
                                if (object.aiaOcspServers) {
                                    if (!Array.isArray(object.aiaOcspServers))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.aiaOcspServers: array expected");
                                    message.aiaOcspServers = [];
                                    for (var i = 0; i < object.aiaOcspServers.length; ++i)
                                        message.aiaOcspServers[i] = String(object.aiaOcspServers[i]);
                                }
                                if (object.additionalExtensions) {
                                    if (!Array.isArray(object.additionalExtensions))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.additionalExtensions: array expected");
                                    message.additionalExtensions = [];
                                    for (var i = 0; i < object.additionalExtensions.length; ++i) {
                                        if (typeof object.additionalExtensions[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.additionalExtensions: object expected");
                                        message.additionalExtensions[i] = $root.google.cloud.security.privateca.v1beta1.X509Extension.fromObject(object.additionalExtensions[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReusableConfigValues message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues} message ReusableConfigValues
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReusableConfigValues.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.policyIds = [];
                                    object.aiaOcspServers = [];
                                    object.additionalExtensions = [];
                                }
                                if (options.defaults) {
                                    object.keyUsage = null;
                                    object.caOptions = null;
                                }
                                if (message.keyUsage != null && message.hasOwnProperty("keyUsage"))
                                    object.keyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.toObject(message.keyUsage, options);
                                if (message.caOptions != null && message.hasOwnProperty("caOptions"))
                                    object.caOptions = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.toObject(message.caOptions, options);
                                if (message.policyIds && message.policyIds.length) {
                                    object.policyIds = [];
                                    for (var j = 0; j < message.policyIds.length; ++j)
                                        object.policyIds[j] = $root.google.cloud.security.privateca.v1beta1.ObjectId.toObject(message.policyIds[j], options);
                                }
                                if (message.aiaOcspServers && message.aiaOcspServers.length) {
                                    object.aiaOcspServers = [];
                                    for (var j = 0; j < message.aiaOcspServers.length; ++j)
                                        object.aiaOcspServers[j] = message.aiaOcspServers[j];
                                }
                                if (message.additionalExtensions && message.additionalExtensions.length) {
                                    object.additionalExtensions = [];
                                    for (var j = 0; j < message.additionalExtensions.length; ++j)
                                        object.additionalExtensions[j] = $root.google.cloud.security.privateca.v1beta1.X509Extension.toObject(message.additionalExtensions[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReusableConfigValues to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReusableConfigValues.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReusableConfigValues
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReusableConfigValues.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ReusableConfigValues";
                            };
    
                            ReusableConfigValues.CaOptions = (function() {
    
                                /**
                                 * Properties of a CaOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                                 * @interface ICaOptions
                                 * @property {google.protobuf.IBoolValue|null} [isCa] CaOptions isCa
                                 * @property {google.protobuf.IInt32Value|null} [maxIssuerPathLength] CaOptions maxIssuerPathLength
                                 */
    
                                /**
                                 * Constructs a new CaOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues
                                 * @classdesc Represents a CaOptions.
                                 * @implements ICaOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions=} [properties] Properties to set
                                 */
                                function CaOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CaOptions isCa.
                                 * @member {google.protobuf.IBoolValue|null|undefined} isCa
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @instance
                                 */
                                CaOptions.prototype.isCa = null;
    
                                /**
                                 * CaOptions maxIssuerPathLength.
                                 * @member {google.protobuf.IInt32Value|null|undefined} maxIssuerPathLength
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @instance
                                 */
                                CaOptions.prototype.maxIssuerPathLength = null;
    
                                /**
                                 * Creates a new CaOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions} CaOptions instance
                                 */
                                CaOptions.create = function create(properties) {
                                    return new CaOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified CaOptions message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions} message CaOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CaOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.isCa != null && Object.hasOwnProperty.call(message, "isCa"))
                                        $root.google.protobuf.BoolValue.encode(message.isCa, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.maxIssuerPathLength != null && Object.hasOwnProperty.call(message, "maxIssuerPathLength"))
                                        $root.google.protobuf.Int32Value.encode(message.maxIssuerPathLength, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CaOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues.ICaOptions} message CaOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CaOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CaOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions} CaOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CaOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.isCa = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.maxIssuerPathLength = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CaOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions} CaOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CaOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CaOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CaOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.isCa != null && message.hasOwnProperty("isCa")) {
                                        var error = $root.google.protobuf.BoolValue.verify(message.isCa);
                                        if (error)
                                            return "isCa." + error;
                                    }
                                    if (message.maxIssuerPathLength != null && message.hasOwnProperty("maxIssuerPathLength")) {
                                        var error = $root.google.protobuf.Int32Value.verify(message.maxIssuerPathLength);
                                        if (error)
                                            return "maxIssuerPathLength." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a CaOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions} CaOptions
                                 */
                                CaOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions();
                                    if (object.isCa != null) {
                                        if (typeof object.isCa !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.isCa: object expected");
                                        message.isCa = $root.google.protobuf.BoolValue.fromObject(object.isCa);
                                    }
                                    if (object.maxIssuerPathLength != null) {
                                        if (typeof object.maxIssuerPathLength !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions.maxIssuerPathLength: object expected");
                                        message.maxIssuerPathLength = $root.google.protobuf.Int32Value.fromObject(object.maxIssuerPathLength);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CaOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions} message CaOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CaOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.isCa = null;
                                        object.maxIssuerPathLength = null;
                                    }
                                    if (message.isCa != null && message.hasOwnProperty("isCa"))
                                        object.isCa = $root.google.protobuf.BoolValue.toObject(message.isCa, options);
                                    if (message.maxIssuerPathLength != null && message.hasOwnProperty("maxIssuerPathLength"))
                                        object.maxIssuerPathLength = $root.google.protobuf.Int32Value.toObject(message.maxIssuerPathLength, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this CaOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CaOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CaOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CaOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ReusableConfigValues.CaOptions";
                                };
    
                                return CaOptions;
                            })();
    
                            return ReusableConfigValues;
                        })();
    
                        v1beta1.ReusableConfigWrapper = (function() {
    
                            /**
                             * Properties of a ReusableConfigWrapper.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IReusableConfigWrapper
                             * @property {string|null} [reusableConfig] ReusableConfigWrapper reusableConfig
                             * @property {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null} [reusableConfigValues] ReusableConfigWrapper reusableConfigValues
                             */
    
                            /**
                             * Constructs a new ReusableConfigWrapper.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ReusableConfigWrapper.
                             * @implements IReusableConfigWrapper
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper=} [properties] Properties to set
                             */
                            function ReusableConfigWrapper(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ReusableConfigWrapper reusableConfig.
                             * @member {string|null|undefined} reusableConfig
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @instance
                             */
                            ReusableConfigWrapper.prototype.reusableConfig = null;
    
                            /**
                             * ReusableConfigWrapper reusableConfigValues.
                             * @member {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null|undefined} reusableConfigValues
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @instance
                             */
                            ReusableConfigWrapper.prototype.reusableConfigValues = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * ReusableConfigWrapper configValues.
                             * @member {"reusableConfig"|"reusableConfigValues"|undefined} configValues
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @instance
                             */
                            Object.defineProperty(ReusableConfigWrapper.prototype, "configValues", {
                                get: $util.oneOfGetter($oneOfFields = ["reusableConfig", "reusableConfigValues"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new ReusableConfigWrapper instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigWrapper} ReusableConfigWrapper instance
                             */
                            ReusableConfigWrapper.create = function create(properties) {
                                return new ReusableConfigWrapper(properties);
                            };
    
                            /**
                             * Encodes the specified ReusableConfigWrapper message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper} message ReusableConfigWrapper message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfigWrapper.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.reusableConfig != null && Object.hasOwnProperty.call(message, "reusableConfig"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.reusableConfig);
                                if (message.reusableConfigValues != null && Object.hasOwnProperty.call(message, "reusableConfigValues"))
                                    $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.encode(message.reusableConfigValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ReusableConfigWrapper message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper} message ReusableConfigWrapper message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ReusableConfigWrapper.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ReusableConfigWrapper message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigWrapper} ReusableConfigWrapper
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfigWrapper.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.reusableConfig = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.reusableConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ReusableConfigWrapper message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigWrapper} ReusableConfigWrapper
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ReusableConfigWrapper.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ReusableConfigWrapper message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ReusableConfigWrapper.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.reusableConfig != null && message.hasOwnProperty("reusableConfig")) {
                                    properties.configValues = 1;
                                    if (!$util.isString(message.reusableConfig))
                                        return "reusableConfig: string expected";
                                }
                                if (message.reusableConfigValues != null && message.hasOwnProperty("reusableConfigValues")) {
                                    if (properties.configValues === 1)
                                        return "configValues: multiple values";
                                    properties.configValues = 1;
                                    {
                                        var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.verify(message.reusableConfigValues);
                                        if (error)
                                            return "reusableConfigValues." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ReusableConfigWrapper message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ReusableConfigWrapper} ReusableConfigWrapper
                             */
                            ReusableConfigWrapper.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper();
                                if (object.reusableConfig != null)
                                    message.reusableConfig = String(object.reusableConfig);
                                if (object.reusableConfigValues != null) {
                                    if (typeof object.reusableConfigValues !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.reusableConfigValues: object expected");
                                    message.reusableConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.fromObject(object.reusableConfigValues);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ReusableConfigWrapper message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ReusableConfigWrapper} message ReusableConfigWrapper
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ReusableConfigWrapper.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.reusableConfig != null && message.hasOwnProperty("reusableConfig")) {
                                    object.reusableConfig = message.reusableConfig;
                                    if (options.oneofs)
                                        object.configValues = "reusableConfig";
                                }
                                if (message.reusableConfigValues != null && message.hasOwnProperty("reusableConfigValues")) {
                                    object.reusableConfigValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.toObject(message.reusableConfigValues, options);
                                    if (options.oneofs)
                                        object.configValues = "reusableConfigValues";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ReusableConfigWrapper to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ReusableConfigWrapper.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ReusableConfigWrapper
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ReusableConfigWrapper
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ReusableConfigWrapper.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ReusableConfigWrapper";
                            };
    
                            return ReusableConfigWrapper;
                        })();
    
                        v1beta1.SubordinateConfig = (function() {
    
                            /**
                             * Properties of a SubordinateConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ISubordinateConfig
                             * @property {string|null} [certificateAuthority] SubordinateConfig certificateAuthority
                             * @property {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain|null} [pemIssuerChain] SubordinateConfig pemIssuerChain
                             */
    
                            /**
                             * Constructs a new SubordinateConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a SubordinateConfig.
                             * @implements ISubordinateConfig
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ISubordinateConfig=} [properties] Properties to set
                             */
                            function SubordinateConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SubordinateConfig certificateAuthority.
                             * @member {string|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @instance
                             */
                            SubordinateConfig.prototype.certificateAuthority = null;
    
                            /**
                             * SubordinateConfig pemIssuerChain.
                             * @member {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain|null|undefined} pemIssuerChain
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @instance
                             */
                            SubordinateConfig.prototype.pemIssuerChain = null;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * SubordinateConfig subordinateConfig.
                             * @member {"certificateAuthority"|"pemIssuerChain"|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @instance
                             */
                            Object.defineProperty(SubordinateConfig.prototype, "subordinateConfig", {
                                get: $util.oneOfGetter($oneOfFields = ["certificateAuthority", "pemIssuerChain"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new SubordinateConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubordinateConfig=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig} SubordinateConfig instance
                             */
                            SubordinateConfig.create = function create(properties) {
                                return new SubordinateConfig(properties);
                            };
    
                            /**
                             * Encodes the specified SubordinateConfig message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubordinateConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubordinateConfig} message SubordinateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubordinateConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.certificateAuthority);
                                if (message.pemIssuerChain != null && Object.hasOwnProperty.call(message, "pemIssuerChain"))
                                    $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.encode(message.pemIssuerChain, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SubordinateConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubordinateConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubordinateConfig} message SubordinateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubordinateConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SubordinateConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig} SubordinateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubordinateConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.SubordinateConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateAuthority = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemIssuerChain = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SubordinateConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig} SubordinateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubordinateConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SubordinateConfig message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SubordinateConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    properties.subordinateConfig = 1;
                                    if (!$util.isString(message.certificateAuthority))
                                        return "certificateAuthority: string expected";
                                }
                                if (message.pemIssuerChain != null && message.hasOwnProperty("pemIssuerChain")) {
                                    if (properties.subordinateConfig === 1)
                                        return "subordinateConfig: multiple values";
                                    properties.subordinateConfig = 1;
                                    {
                                        var error = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.verify(message.pemIssuerChain);
                                        if (error)
                                            return "pemIssuerChain." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SubordinateConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig} SubordinateConfig
                             */
                            SubordinateConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.SubordinateConfig)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.SubordinateConfig();
                                if (object.certificateAuthority != null)
                                    message.certificateAuthority = String(object.certificateAuthority);
                                if (object.pemIssuerChain != null) {
                                    if (typeof object.pemIssuerChain !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubordinateConfig.pemIssuerChain: object expected");
                                    message.pemIssuerChain = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.fromObject(object.pemIssuerChain);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SubordinateConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig} message SubordinateConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SubordinateConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    object.certificateAuthority = message.certificateAuthority;
                                    if (options.oneofs)
                                        object.subordinateConfig = "certificateAuthority";
                                }
                                if (message.pemIssuerChain != null && message.hasOwnProperty("pemIssuerChain")) {
                                    object.pemIssuerChain = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.toObject(message.pemIssuerChain, options);
                                    if (options.oneofs)
                                        object.subordinateConfig = "pemIssuerChain";
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SubordinateConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SubordinateConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SubordinateConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SubordinateConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.SubordinateConfig";
                            };
    
                            SubordinateConfig.SubordinateConfigChain = (function() {
    
                                /**
                                 * Properties of a SubordinateConfigChain.
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                                 * @interface ISubordinateConfigChain
                                 * @property {Array.<string>|null} [pemCertificates] SubordinateConfigChain pemCertificates
                                 */
    
                                /**
                                 * Constructs a new SubordinateConfigChain.
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig
                                 * @classdesc Represents a SubordinateConfigChain.
                                 * @implements ISubordinateConfigChain
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain=} [properties] Properties to set
                                 */
                                function SubordinateConfigChain(properties) {
                                    this.pemCertificates = [];
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubordinateConfigChain pemCertificates.
                                 * @member {Array.<string>} pemCertificates
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @instance
                                 */
                                SubordinateConfigChain.prototype.pemCertificates = $util.emptyArray;
    
                                /**
                                 * Creates a new SubordinateConfigChain instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain instance
                                 */
                                SubordinateConfigChain.create = function create(properties) {
                                    return new SubordinateConfigChain(properties);
                                };
    
                                /**
                                 * Encodes the specified SubordinateConfigChain message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain} message SubordinateConfigChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubordinateConfigChain.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.pemCertificates != null && message.pemCertificates.length)
                                        for (var i = 0; i < message.pemCertificates.length; ++i)
                                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.pemCertificates[i]);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubordinateConfigChain message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig.ISubordinateConfigChain} message SubordinateConfigChain message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubordinateConfigChain.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubordinateConfigChain message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubordinateConfigChain.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                if (!(message.pemCertificates && message.pemCertificates.length))
                                                    message.pemCertificates = [];
                                                message.pemCertificates.push(reader.string());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubordinateConfigChain message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubordinateConfigChain.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubordinateConfigChain message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubordinateConfigChain.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.pemCertificates != null && message.hasOwnProperty("pemCertificates")) {
                                        if (!Array.isArray(message.pemCertificates))
                                            return "pemCertificates: array expected";
                                        for (var i = 0; i < message.pemCertificates.length; ++i)
                                            if (!$util.isString(message.pemCertificates[i]))
                                                return "pemCertificates: string[] expected";
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubordinateConfigChain message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain} SubordinateConfigChain
                                 */
                                SubordinateConfigChain.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain();
                                    if (object.pemCertificates) {
                                        if (!Array.isArray(object.pemCertificates))
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain.pemCertificates: array expected");
                                        message.pemCertificates = [];
                                        for (var i = 0; i < object.pemCertificates.length; ++i)
                                            message.pemCertificates[i] = String(object.pemCertificates[i]);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubordinateConfigChain message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain} message SubordinateConfigChain
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubordinateConfigChain.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.arrays || options.defaults)
                                        object.pemCertificates = [];
                                    if (message.pemCertificates && message.pemCertificates.length) {
                                        object.pemCertificates = [];
                                        for (var j = 0; j < message.pemCertificates.length; ++j)
                                            object.pemCertificates[j] = message.pemCertificates[j];
                                    }
                                    return object;
                                };
    
                                /**
                                 * Converts this SubordinateConfigChain to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubordinateConfigChain.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubordinateConfigChain
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubordinateConfigChain.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.SubordinateConfig.SubordinateConfigChain";
                                };
    
                                return SubordinateConfigChain;
                            })();
    
                            return SubordinateConfig;
                        })();
    
                        v1beta1.PublicKey = (function() {
    
                            /**
                             * Properties of a PublicKey.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IPublicKey
                             * @property {google.cloud.security.privateca.v1beta1.PublicKey.KeyType|null} [type] PublicKey type
                             * @property {Uint8Array|null} [key] PublicKey key
                             */
    
                            /**
                             * Constructs a new PublicKey.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a PublicKey.
                             * @implements IPublicKey
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IPublicKey=} [properties] Properties to set
                             */
                            function PublicKey(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PublicKey type.
                             * @member {google.cloud.security.privateca.v1beta1.PublicKey.KeyType} type
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @instance
                             */
                            PublicKey.prototype.type = 0;
    
                            /**
                             * PublicKey key.
                             * @member {Uint8Array} key
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @instance
                             */
                            PublicKey.prototype.key = $util.newBuffer([]);
    
                            /**
                             * Creates a new PublicKey instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IPublicKey=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.PublicKey} PublicKey instance
                             */
                            PublicKey.create = function create(properties) {
                                return new PublicKey(properties);
                            };
    
                            /**
                             * Encodes the specified PublicKey message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.PublicKey.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IPublicKey} message PublicKey message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PublicKey.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);
                                if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.key);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PublicKey message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.PublicKey.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IPublicKey} message PublicKey message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PublicKey.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PublicKey message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.PublicKey} PublicKey
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PublicKey.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.PublicKey();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.type = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.key = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PublicKey message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.PublicKey} PublicKey
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PublicKey.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PublicKey message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PublicKey.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type"))
                                    switch (message.type) {
                                    default:
                                        return "type: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                if (message.key != null && message.hasOwnProperty("key"))
                                    if (!(message.key && typeof message.key.length === "number" || $util.isString(message.key)))
                                        return "key: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates a PublicKey message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.PublicKey} PublicKey
                             */
                            PublicKey.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.PublicKey)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.PublicKey();
                                switch (object.type) {
                                default:
                                    if (typeof object.type === "number") {
                                        message.type = object.type;
                                        break;
                                    }
                                    break;
                                case "KEY_TYPE_UNSPECIFIED":
                                case 0:
                                    message.type = 0;
                                    break;
                                case "PEM_RSA_KEY":
                                case 1:
                                    message.type = 1;
                                    break;
                                case "PEM_EC_KEY":
                                case 2:
                                    message.type = 2;
                                    break;
                                }
                                if (object.key != null)
                                    if (typeof object.key === "string")
                                        $util.base64.decode(object.key, message.key = $util.newBuffer($util.base64.length(object.key)), 0);
                                    else if (object.key.length >= 0)
                                        message.key = object.key;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PublicKey message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.PublicKey} message PublicKey
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PublicKey.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = options.enums === String ? "KEY_TYPE_UNSPECIFIED" : 0;
                                    if (options.bytes === String)
                                        object.key = "";
                                    else {
                                        object.key = [];
                                        if (options.bytes !== Array)
                                            object.key = $util.newBuffer(object.key);
                                    }
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.PublicKey.KeyType[message.type] === undefined ? message.type : $root.google.cloud.security.privateca.v1beta1.PublicKey.KeyType[message.type] : message.type;
                                if (message.key != null && message.hasOwnProperty("key"))
                                    object.key = options.bytes === String ? $util.base64.encode(message.key, 0, message.key.length) : options.bytes === Array ? Array.prototype.slice.call(message.key) : message.key;
                                return object;
                            };
    
                            /**
                             * Converts this PublicKey to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PublicKey.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for PublicKey
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.PublicKey
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            PublicKey.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.PublicKey";
                            };
    
                            /**
                             * KeyType enum.
                             * @name google.cloud.security.privateca.v1beta1.PublicKey.KeyType
                             * @enum {number}
                             * @property {number} KEY_TYPE_UNSPECIFIED=0 KEY_TYPE_UNSPECIFIED value
                             * @property {number} PEM_RSA_KEY=1 PEM_RSA_KEY value
                             * @property {number} PEM_EC_KEY=2 PEM_EC_KEY value
                             */
                            PublicKey.KeyType = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "KEY_TYPE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "PEM_RSA_KEY"] = 1;
                                values[valuesById[2] = "PEM_EC_KEY"] = 2;
                                return values;
                            })();
    
                            return PublicKey;
                        })();
    
                        v1beta1.CertificateConfig = (function() {
    
                            /**
                             * Properties of a CertificateConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICertificateConfig
                             * @property {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig|null} [subjectConfig] CertificateConfig subjectConfig
                             * @property {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper|null} [reusableConfig] CertificateConfig reusableConfig
                             * @property {google.cloud.security.privateca.v1beta1.IPublicKey|null} [publicKey] CertificateConfig publicKey
                             */
    
                            /**
                             * Constructs a new CertificateConfig.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CertificateConfig.
                             * @implements ICertificateConfig
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateConfig=} [properties] Properties to set
                             */
                            function CertificateConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateConfig subjectConfig.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig|null|undefined} subjectConfig
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.subjectConfig = null;
    
                            /**
                             * CertificateConfig reusableConfig.
                             * @member {google.cloud.security.privateca.v1beta1.IReusableConfigWrapper|null|undefined} reusableConfig
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.reusableConfig = null;
    
                            /**
                             * CertificateConfig publicKey.
                             * @member {google.cloud.security.privateca.v1beta1.IPublicKey|null|undefined} publicKey
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @instance
                             */
                            CertificateConfig.prototype.publicKey = null;
    
                            /**
                             * Creates a new CertificateConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateConfig=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig} CertificateConfig instance
                             */
                            CertificateConfig.create = function create(properties) {
                                return new CertificateConfig(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateConfig message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateConfig} message CertificateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectConfig != null && Object.hasOwnProperty.call(message, "subjectConfig"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.encode(message.subjectConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.reusableConfig != null && Object.hasOwnProperty.call(message, "reusableConfig"))
                                    $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.encode(message.reusableConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.publicKey != null && Object.hasOwnProperty.call(message, "publicKey"))
                                    $root.google.cloud.security.privateca.v1beta1.PublicKey.encode(message.publicKey, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateConfig} message CertificateConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig} CertificateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectConfig = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.reusableConfig = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig} CertificateConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateConfig message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectConfig != null && message.hasOwnProperty("subjectConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.verify(message.subjectConfig);
                                    if (error)
                                        return "subjectConfig." + error;
                                }
                                if (message.reusableConfig != null && message.hasOwnProperty("reusableConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.verify(message.reusableConfig);
                                    if (error)
                                        return "reusableConfig." + error;
                                }
                                if (message.publicKey != null && message.hasOwnProperty("publicKey")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.PublicKey.verify(message.publicKey);
                                    if (error)
                                        return "publicKey." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig} CertificateConfig
                             */
                            CertificateConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateConfig)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CertificateConfig();
                                if (object.subjectConfig != null) {
                                    if (typeof object.subjectConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateConfig.subjectConfig: object expected");
                                    message.subjectConfig = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.fromObject(object.subjectConfig);
                                }
                                if (object.reusableConfig != null) {
                                    if (typeof object.reusableConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateConfig.reusableConfig: object expected");
                                    message.reusableConfig = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.fromObject(object.reusableConfig);
                                }
                                if (object.publicKey != null) {
                                    if (typeof object.publicKey !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateConfig.publicKey: object expected");
                                    message.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.fromObject(object.publicKey);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CertificateConfig} message CertificateConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.subjectConfig = null;
                                    object.reusableConfig = null;
                                    object.publicKey = null;
                                }
                                if (message.subjectConfig != null && message.hasOwnProperty("subjectConfig"))
                                    object.subjectConfig = $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.toObject(message.subjectConfig, options);
                                if (message.reusableConfig != null && message.hasOwnProperty("reusableConfig"))
                                    object.reusableConfig = $root.google.cloud.security.privateca.v1beta1.ReusableConfigWrapper.toObject(message.reusableConfig, options);
                                if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                    object.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.toObject(message.publicKey, options);
                                return object;
                            };
    
                            /**
                             * Converts this CertificateConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateConfig";
                            };
    
                            CertificateConfig.SubjectConfig = (function() {
    
                                /**
                                 * Properties of a SubjectConfig.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                                 * @interface ISubjectConfig
                                 * @property {google.cloud.security.privateca.v1beta1.ISubject|null} [subject] SubjectConfig subject
                                 * @property {string|null} [commonName] SubjectConfig commonName
                                 * @property {google.cloud.security.privateca.v1beta1.ISubjectAltNames|null} [subjectAltName] SubjectConfig subjectAltName
                                 */
    
                                /**
                                 * Constructs a new SubjectConfig.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig
                                 * @classdesc Represents a SubjectConfig.
                                 * @implements ISubjectConfig
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig=} [properties] Properties to set
                                 */
                                function SubjectConfig(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubjectConfig subject.
                                 * @member {google.cloud.security.privateca.v1beta1.ISubject|null|undefined} subject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @instance
                                 */
                                SubjectConfig.prototype.subject = null;
    
                                /**
                                 * SubjectConfig commonName.
                                 * @member {string} commonName
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @instance
                                 */
                                SubjectConfig.prototype.commonName = "";
    
                                /**
                                 * SubjectConfig subjectAltName.
                                 * @member {google.cloud.security.privateca.v1beta1.ISubjectAltNames|null|undefined} subjectAltName
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @instance
                                 */
                                SubjectConfig.prototype.subjectAltName = null;
    
                                /**
                                 * Creates a new SubjectConfig instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig} SubjectConfig instance
                                 */
                                SubjectConfig.create = function create(properties) {
                                    return new SubjectConfig(properties);
                                };
    
                                /**
                                 * Encodes the specified SubjectConfig message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig} message SubjectConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectConfig.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.subject != null && Object.hasOwnProperty.call(message, "subject"))
                                        $root.google.cloud.security.privateca.v1beta1.Subject.encode(message.subject, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.commonName != null && Object.hasOwnProperty.call(message, "commonName"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.commonName);
                                    if (message.subjectAltName != null && Object.hasOwnProperty.call(message, "subjectAltName"))
                                        $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.encode(message.subjectAltName, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubjectConfig message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateConfig.ISubjectConfig} message SubjectConfig message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubjectConfig message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig} SubjectConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectConfig.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.subject = $root.google.cloud.security.privateca.v1beta1.Subject.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.commonName = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubjectConfig message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig} SubjectConfig
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectConfig.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubjectConfig message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubjectConfig.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.subject != null && message.hasOwnProperty("subject")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.Subject.verify(message.subject);
                                        if (error)
                                            return "subject." + error;
                                    }
                                    if (message.commonName != null && message.hasOwnProperty("commonName"))
                                        if (!$util.isString(message.commonName))
                                            return "commonName: string expected";
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.verify(message.subjectAltName);
                                        if (error)
                                            return "subjectAltName." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubjectConfig message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig} SubjectConfig
                                 */
                                SubjectConfig.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig();
                                    if (object.subject != null) {
                                        if (typeof object.subject !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.subject: object expected");
                                        message.subject = $root.google.cloud.security.privateca.v1beta1.Subject.fromObject(object.subject);
                                    }
                                    if (object.commonName != null)
                                        message.commonName = String(object.commonName);
                                    if (object.subjectAltName != null) {
                                        if (typeof object.subjectAltName !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig.subjectAltName: object expected");
                                        message.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.fromObject(object.subjectAltName);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubjectConfig message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig} message SubjectConfig
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubjectConfig.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.subject = null;
                                        object.commonName = "";
                                        object.subjectAltName = null;
                                    }
                                    if (message.subject != null && message.hasOwnProperty("subject"))
                                        object.subject = $root.google.cloud.security.privateca.v1beta1.Subject.toObject(message.subject, options);
                                    if (message.commonName != null && message.hasOwnProperty("commonName"))
                                        object.commonName = message.commonName;
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName"))
                                        object.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.toObject(message.subjectAltName, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this SubjectConfig to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubjectConfig.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubjectConfig
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubjectConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateConfig.SubjectConfig";
                                };
    
                                return SubjectConfig;
                            })();
    
                            return CertificateConfig;
                        })();
    
                        v1beta1.CertificateDescription = (function() {
    
                            /**
                             * Properties of a CertificateDescription.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICertificateDescription
                             * @property {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription|null} [subjectDescription] CertificateDescription subjectDescription
                             * @property {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null} [configValues] CertificateDescription configValues
                             * @property {google.cloud.security.privateca.v1beta1.IPublicKey|null} [publicKey] CertificateDescription publicKey
                             * @property {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId|null} [subjectKeyId] CertificateDescription subjectKeyId
                             * @property {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId|null} [authorityKeyId] CertificateDescription authorityKeyId
                             * @property {Array.<string>|null} [crlDistributionPoints] CertificateDescription crlDistributionPoints
                             * @property {Array.<string>|null} [aiaIssuingCertificateUrls] CertificateDescription aiaIssuingCertificateUrls
                             * @property {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint|null} [certFingerprint] CertificateDescription certFingerprint
                             */
    
                            /**
                             * Constructs a new CertificateDescription.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CertificateDescription.
                             * @implements ICertificateDescription
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateDescription=} [properties] Properties to set
                             */
                            function CertificateDescription(properties) {
                                this.crlDistributionPoints = [];
                                this.aiaIssuingCertificateUrls = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CertificateDescription subjectDescription.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription|null|undefined} subjectDescription
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.subjectDescription = null;
    
                            /**
                             * CertificateDescription configValues.
                             * @member {google.cloud.security.privateca.v1beta1.IReusableConfigValues|null|undefined} configValues
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.configValues = null;
    
                            /**
                             * CertificateDescription publicKey.
                             * @member {google.cloud.security.privateca.v1beta1.IPublicKey|null|undefined} publicKey
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.publicKey = null;
    
                            /**
                             * CertificateDescription subjectKeyId.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId|null|undefined} subjectKeyId
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.subjectKeyId = null;
    
                            /**
                             * CertificateDescription authorityKeyId.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId|null|undefined} authorityKeyId
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.authorityKeyId = null;
    
                            /**
                             * CertificateDescription crlDistributionPoints.
                             * @member {Array.<string>} crlDistributionPoints
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.crlDistributionPoints = $util.emptyArray;
    
                            /**
                             * CertificateDescription aiaIssuingCertificateUrls.
                             * @member {Array.<string>} aiaIssuingCertificateUrls
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.aiaIssuingCertificateUrls = $util.emptyArray;
    
                            /**
                             * CertificateDescription certFingerprint.
                             * @member {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint|null|undefined} certFingerprint
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             */
                            CertificateDescription.prototype.certFingerprint = null;
    
                            /**
                             * Creates a new CertificateDescription instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateDescription=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription} CertificateDescription instance
                             */
                            CertificateDescription.create = function create(properties) {
                                return new CertificateDescription(properties);
                            };
    
                            /**
                             * Encodes the specified CertificateDescription message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateDescription} message CertificateDescription message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateDescription.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.subjectDescription != null && Object.hasOwnProperty.call(message, "subjectDescription"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.encode(message.subjectDescription, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.configValues != null && Object.hasOwnProperty.call(message, "configValues"))
                                    $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.encode(message.configValues, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.publicKey != null && Object.hasOwnProperty.call(message, "publicKey"))
                                    $root.google.cloud.security.privateca.v1beta1.PublicKey.encode(message.publicKey, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.subjectKeyId != null && Object.hasOwnProperty.call(message, "subjectKeyId"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.encode(message.subjectKeyId, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.authorityKeyId != null && Object.hasOwnProperty.call(message, "authorityKeyId"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.encode(message.authorityKeyId, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.crlDistributionPoints != null && message.crlDistributionPoints.length)
                                    for (var i = 0; i < message.crlDistributionPoints.length; ++i)
                                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.crlDistributionPoints[i]);
                                if (message.aiaIssuingCertificateUrls != null && message.aiaIssuingCertificateUrls.length)
                                    for (var i = 0; i < message.aiaIssuingCertificateUrls.length; ++i)
                                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.aiaIssuingCertificateUrls[i]);
                                if (message.certFingerprint != null && Object.hasOwnProperty.call(message, "certFingerprint"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.encode(message.certFingerprint, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CertificateDescription message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICertificateDescription} message CertificateDescription message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CertificateDescription.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CertificateDescription message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription} CertificateDescription
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateDescription.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.subjectDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.configValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.subjectKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 5: {
                                            message.authorityKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 6: {
                                            if (!(message.crlDistributionPoints && message.crlDistributionPoints.length))
                                                message.crlDistributionPoints = [];
                                            message.crlDistributionPoints.push(reader.string());
                                            break;
                                        }
                                    case 7: {
                                            if (!(message.aiaIssuingCertificateUrls && message.aiaIssuingCertificateUrls.length))
                                                message.aiaIssuingCertificateUrls = [];
                                            message.aiaIssuingCertificateUrls.push(reader.string());
                                            break;
                                        }
                                    case 8: {
                                            message.certFingerprint = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CertificateDescription message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription} CertificateDescription
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CertificateDescription.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CertificateDescription message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CertificateDescription.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.subjectDescription != null && message.hasOwnProperty("subjectDescription")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.verify(message.subjectDescription);
                                    if (error)
                                        return "subjectDescription." + error;
                                }
                                if (message.configValues != null && message.hasOwnProperty("configValues")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.verify(message.configValues);
                                    if (error)
                                        return "configValues." + error;
                                }
                                if (message.publicKey != null && message.hasOwnProperty("publicKey")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.PublicKey.verify(message.publicKey);
                                    if (error)
                                        return "publicKey." + error;
                                }
                                if (message.subjectKeyId != null && message.hasOwnProperty("subjectKeyId")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.verify(message.subjectKeyId);
                                    if (error)
                                        return "subjectKeyId." + error;
                                }
                                if (message.authorityKeyId != null && message.hasOwnProperty("authorityKeyId")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.verify(message.authorityKeyId);
                                    if (error)
                                        return "authorityKeyId." + error;
                                }
                                if (message.crlDistributionPoints != null && message.hasOwnProperty("crlDistributionPoints")) {
                                    if (!Array.isArray(message.crlDistributionPoints))
                                        return "crlDistributionPoints: array expected";
                                    for (var i = 0; i < message.crlDistributionPoints.length; ++i)
                                        if (!$util.isString(message.crlDistributionPoints[i]))
                                            return "crlDistributionPoints: string[] expected";
                                }
                                if (message.aiaIssuingCertificateUrls != null && message.hasOwnProperty("aiaIssuingCertificateUrls")) {
                                    if (!Array.isArray(message.aiaIssuingCertificateUrls))
                                        return "aiaIssuingCertificateUrls: array expected";
                                    for (var i = 0; i < message.aiaIssuingCertificateUrls.length; ++i)
                                        if (!$util.isString(message.aiaIssuingCertificateUrls[i]))
                                            return "aiaIssuingCertificateUrls: string[] expected";
                                }
                                if (message.certFingerprint != null && message.hasOwnProperty("certFingerprint")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.verify(message.certFingerprint);
                                    if (error)
                                        return "certFingerprint." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a CertificateDescription message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription} CertificateDescription
                             */
                            CertificateDescription.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateDescription)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription();
                                if (object.subjectDescription != null) {
                                    if (typeof object.subjectDescription !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.subjectDescription: object expected");
                                    message.subjectDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.fromObject(object.subjectDescription);
                                }
                                if (object.configValues != null) {
                                    if (typeof object.configValues !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.configValues: object expected");
                                    message.configValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.fromObject(object.configValues);
                                }
                                if (object.publicKey != null) {
                                    if (typeof object.publicKey !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.publicKey: object expected");
                                    message.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.fromObject(object.publicKey);
                                }
                                if (object.subjectKeyId != null) {
                                    if (typeof object.subjectKeyId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.subjectKeyId: object expected");
                                    message.subjectKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.fromObject(object.subjectKeyId);
                                }
                                if (object.authorityKeyId != null) {
                                    if (typeof object.authorityKeyId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.authorityKeyId: object expected");
                                    message.authorityKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.fromObject(object.authorityKeyId);
                                }
                                if (object.crlDistributionPoints) {
                                    if (!Array.isArray(object.crlDistributionPoints))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.crlDistributionPoints: array expected");
                                    message.crlDistributionPoints = [];
                                    for (var i = 0; i < object.crlDistributionPoints.length; ++i)
                                        message.crlDistributionPoints[i] = String(object.crlDistributionPoints[i]);
                                }
                                if (object.aiaIssuingCertificateUrls) {
                                    if (!Array.isArray(object.aiaIssuingCertificateUrls))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.aiaIssuingCertificateUrls: array expected");
                                    message.aiaIssuingCertificateUrls = [];
                                    for (var i = 0; i < object.aiaIssuingCertificateUrls.length; ++i)
                                        message.aiaIssuingCertificateUrls[i] = String(object.aiaIssuingCertificateUrls[i]);
                                }
                                if (object.certFingerprint != null) {
                                    if (typeof object.certFingerprint !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.certFingerprint: object expected");
                                    message.certFingerprint = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.fromObject(object.certFingerprint);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CertificateDescription message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CertificateDescription} message CertificateDescription
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CertificateDescription.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.crlDistributionPoints = [];
                                    object.aiaIssuingCertificateUrls = [];
                                }
                                if (options.defaults) {
                                    object.subjectDescription = null;
                                    object.configValues = null;
                                    object.publicKey = null;
                                    object.subjectKeyId = null;
                                    object.authorityKeyId = null;
                                    object.certFingerprint = null;
                                }
                                if (message.subjectDescription != null && message.hasOwnProperty("subjectDescription"))
                                    object.subjectDescription = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.toObject(message.subjectDescription, options);
                                if (message.configValues != null && message.hasOwnProperty("configValues"))
                                    object.configValues = $root.google.cloud.security.privateca.v1beta1.ReusableConfigValues.toObject(message.configValues, options);
                                if (message.publicKey != null && message.hasOwnProperty("publicKey"))
                                    object.publicKey = $root.google.cloud.security.privateca.v1beta1.PublicKey.toObject(message.publicKey, options);
                                if (message.subjectKeyId != null && message.hasOwnProperty("subjectKeyId"))
                                    object.subjectKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.toObject(message.subjectKeyId, options);
                                if (message.authorityKeyId != null && message.hasOwnProperty("authorityKeyId"))
                                    object.authorityKeyId = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.toObject(message.authorityKeyId, options);
                                if (message.crlDistributionPoints && message.crlDistributionPoints.length) {
                                    object.crlDistributionPoints = [];
                                    for (var j = 0; j < message.crlDistributionPoints.length; ++j)
                                        object.crlDistributionPoints[j] = message.crlDistributionPoints[j];
                                }
                                if (message.aiaIssuingCertificateUrls && message.aiaIssuingCertificateUrls.length) {
                                    object.aiaIssuingCertificateUrls = [];
                                    for (var j = 0; j < message.aiaIssuingCertificateUrls.length; ++j)
                                        object.aiaIssuingCertificateUrls[j] = message.aiaIssuingCertificateUrls[j];
                                }
                                if (message.certFingerprint != null && message.hasOwnProperty("certFingerprint"))
                                    object.certFingerprint = $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.toObject(message.certFingerprint, options);
                                return object;
                            };
    
                            /**
                             * Converts this CertificateDescription to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CertificateDescription.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CertificateDescription
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CertificateDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateDescription";
                            };
    
                            CertificateDescription.SubjectDescription = (function() {
    
                                /**
                                 * Properties of a SubjectDescription.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @interface ISubjectDescription
                                 * @property {google.cloud.security.privateca.v1beta1.ISubject|null} [subject] SubjectDescription subject
                                 * @property {string|null} [commonName] SubjectDescription commonName
                                 * @property {google.cloud.security.privateca.v1beta1.ISubjectAltNames|null} [subjectAltName] SubjectDescription subjectAltName
                                 * @property {string|null} [hexSerialNumber] SubjectDescription hexSerialNumber
                                 * @property {google.protobuf.IDuration|null} [lifetime] SubjectDescription lifetime
                                 * @property {google.protobuf.ITimestamp|null} [notBeforeTime] SubjectDescription notBeforeTime
                                 * @property {google.protobuf.ITimestamp|null} [notAfterTime] SubjectDescription notAfterTime
                                 */
    
                                /**
                                 * Constructs a new SubjectDescription.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @classdesc Represents a SubjectDescription.
                                 * @implements ISubjectDescription
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription=} [properties] Properties to set
                                 */
                                function SubjectDescription(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * SubjectDescription subject.
                                 * @member {google.cloud.security.privateca.v1beta1.ISubject|null|undefined} subject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.subject = null;
    
                                /**
                                 * SubjectDescription commonName.
                                 * @member {string} commonName
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.commonName = "";
    
                                /**
                                 * SubjectDescription subjectAltName.
                                 * @member {google.cloud.security.privateca.v1beta1.ISubjectAltNames|null|undefined} subjectAltName
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.subjectAltName = null;
    
                                /**
                                 * SubjectDescription hexSerialNumber.
                                 * @member {string} hexSerialNumber
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.hexSerialNumber = "";
    
                                /**
                                 * SubjectDescription lifetime.
                                 * @member {google.protobuf.IDuration|null|undefined} lifetime
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.lifetime = null;
    
                                /**
                                 * SubjectDescription notBeforeTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} notBeforeTime
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.notBeforeTime = null;
    
                                /**
                                 * SubjectDescription notAfterTime.
                                 * @member {google.protobuf.ITimestamp|null|undefined} notAfterTime
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 */
                                SubjectDescription.prototype.notAfterTime = null;
    
                                /**
                                 * Creates a new SubjectDescription instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription} SubjectDescription instance
                                 */
                                SubjectDescription.create = function create(properties) {
                                    return new SubjectDescription(properties);
                                };
    
                                /**
                                 * Encodes the specified SubjectDescription message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription} message SubjectDescription message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectDescription.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.subject != null && Object.hasOwnProperty.call(message, "subject"))
                                        $root.google.cloud.security.privateca.v1beta1.Subject.encode(message.subject, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                    if (message.commonName != null && Object.hasOwnProperty.call(message, "commonName"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.commonName);
                                    if (message.subjectAltName != null && Object.hasOwnProperty.call(message, "subjectAltName"))
                                        $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.encode(message.subjectAltName, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                    if (message.hexSerialNumber != null && Object.hasOwnProperty.call(message, "hexSerialNumber"))
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.hexSerialNumber);
                                    if (message.lifetime != null && Object.hasOwnProperty.call(message, "lifetime"))
                                        $root.google.protobuf.Duration.encode(message.lifetime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                    if (message.notBeforeTime != null && Object.hasOwnProperty.call(message, "notBeforeTime"))
                                        $root.google.protobuf.Timestamp.encode(message.notBeforeTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                    if (message.notAfterTime != null && Object.hasOwnProperty.call(message, "notAfterTime"))
                                        $root.google.protobuf.Timestamp.encode(message.notAfterTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified SubjectDescription message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ISubjectDescription} message SubjectDescription message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                SubjectDescription.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a SubjectDescription message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription} SubjectDescription
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectDescription.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.subject = $root.google.cloud.security.privateca.v1beta1.Subject.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 2: {
                                                message.commonName = reader.string();
                                                break;
                                            }
                                        case 3: {
                                                message.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 4: {
                                                message.hexSerialNumber = reader.string();
                                                break;
                                            }
                                        case 5: {
                                                message.lifetime = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 6: {
                                                message.notBeforeTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        case 7: {
                                                message.notAfterTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a SubjectDescription message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription} SubjectDescription
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                SubjectDescription.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a SubjectDescription message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                SubjectDescription.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.subject != null && message.hasOwnProperty("subject")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.Subject.verify(message.subject);
                                        if (error)
                                            return "subject." + error;
                                    }
                                    if (message.commonName != null && message.hasOwnProperty("commonName"))
                                        if (!$util.isString(message.commonName))
                                            return "commonName: string expected";
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName")) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.verify(message.subjectAltName);
                                        if (error)
                                            return "subjectAltName." + error;
                                    }
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        if (!$util.isString(message.hexSerialNumber))
                                            return "hexSerialNumber: string expected";
                                    if (message.lifetime != null && message.hasOwnProperty("lifetime")) {
                                        var error = $root.google.protobuf.Duration.verify(message.lifetime);
                                        if (error)
                                            return "lifetime." + error;
                                    }
                                    if (message.notBeforeTime != null && message.hasOwnProperty("notBeforeTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.notBeforeTime);
                                        if (error)
                                            return "notBeforeTime." + error;
                                    }
                                    if (message.notAfterTime != null && message.hasOwnProperty("notAfterTime")) {
                                        var error = $root.google.protobuf.Timestamp.verify(message.notAfterTime);
                                        if (error)
                                            return "notAfterTime." + error;
                                    }
                                    return null;
                                };
    
                                /**
                                 * Creates a SubjectDescription message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription} SubjectDescription
                                 */
                                SubjectDescription.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription();
                                    if (object.subject != null) {
                                        if (typeof object.subject !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.subject: object expected");
                                        message.subject = $root.google.cloud.security.privateca.v1beta1.Subject.fromObject(object.subject);
                                    }
                                    if (object.commonName != null)
                                        message.commonName = String(object.commonName);
                                    if (object.subjectAltName != null) {
                                        if (typeof object.subjectAltName !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.subjectAltName: object expected");
                                        message.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.fromObject(object.subjectAltName);
                                    }
                                    if (object.hexSerialNumber != null)
                                        message.hexSerialNumber = String(object.hexSerialNumber);
                                    if (object.lifetime != null) {
                                        if (typeof object.lifetime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.lifetime: object expected");
                                        message.lifetime = $root.google.protobuf.Duration.fromObject(object.lifetime);
                                    }
                                    if (object.notBeforeTime != null) {
                                        if (typeof object.notBeforeTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.notBeforeTime: object expected");
                                        message.notBeforeTime = $root.google.protobuf.Timestamp.fromObject(object.notBeforeTime);
                                    }
                                    if (object.notAfterTime != null) {
                                        if (typeof object.notAfterTime !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription.notAfterTime: object expected");
                                        message.notAfterTime = $root.google.protobuf.Timestamp.fromObject(object.notAfterTime);
                                    }
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a SubjectDescription message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription} message SubjectDescription
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                SubjectDescription.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.subject = null;
                                        object.commonName = "";
                                        object.subjectAltName = null;
                                        object.hexSerialNumber = "";
                                        object.lifetime = null;
                                        object.notBeforeTime = null;
                                        object.notAfterTime = null;
                                    }
                                    if (message.subject != null && message.hasOwnProperty("subject"))
                                        object.subject = $root.google.cloud.security.privateca.v1beta1.Subject.toObject(message.subject, options);
                                    if (message.commonName != null && message.hasOwnProperty("commonName"))
                                        object.commonName = message.commonName;
                                    if (message.subjectAltName != null && message.hasOwnProperty("subjectAltName"))
                                        object.subjectAltName = $root.google.cloud.security.privateca.v1beta1.SubjectAltNames.toObject(message.subjectAltName, options);
                                    if (message.hexSerialNumber != null && message.hasOwnProperty("hexSerialNumber"))
                                        object.hexSerialNumber = message.hexSerialNumber;
                                    if (message.lifetime != null && message.hasOwnProperty("lifetime"))
                                        object.lifetime = $root.google.protobuf.Duration.toObject(message.lifetime, options);
                                    if (message.notBeforeTime != null && message.hasOwnProperty("notBeforeTime"))
                                        object.notBeforeTime = $root.google.protobuf.Timestamp.toObject(message.notBeforeTime, options);
                                    if (message.notAfterTime != null && message.hasOwnProperty("notAfterTime"))
                                        object.notAfterTime = $root.google.protobuf.Timestamp.toObject(message.notAfterTime, options);
                                    return object;
                                };
    
                                /**
                                 * Converts this SubjectDescription to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                SubjectDescription.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for SubjectDescription
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                SubjectDescription.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateDescription.SubjectDescription";
                                };
    
                                return SubjectDescription;
                            })();
    
                            CertificateDescription.KeyId = (function() {
    
                                /**
                                 * Properties of a KeyId.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @interface IKeyId
                                 * @property {string|null} [keyId] KeyId keyId
                                 */
    
                                /**
                                 * Constructs a new KeyId.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @classdesc Represents a KeyId.
                                 * @implements IKeyId
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId=} [properties] Properties to set
                                 */
                                function KeyId(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyId keyId.
                                 * @member {string} keyId
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @instance
                                 */
                                KeyId.prototype.keyId = "";
    
                                /**
                                 * Creates a new KeyId instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId} KeyId instance
                                 */
                                KeyId.create = function create(properties) {
                                    return new KeyId(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyId message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId} message KeyId message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyId.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.keyId != null && Object.hasOwnProperty.call(message, "keyId"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.keyId);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyId message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.IKeyId} message KeyId message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyId.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyId message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId} KeyId
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyId.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.keyId = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyId message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId} KeyId
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyId.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyId message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyId.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.keyId != null && message.hasOwnProperty("keyId"))
                                        if (!$util.isString(message.keyId))
                                            return "keyId: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyId message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId} KeyId
                                 */
                                KeyId.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId();
                                    if (object.keyId != null)
                                        message.keyId = String(object.keyId);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyId message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId} message KeyId
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyId.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.keyId = "";
                                    if (message.keyId != null && message.hasOwnProperty("keyId"))
                                        object.keyId = message.keyId;
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyId to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyId.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyId
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateDescription.KeyId";
                                };
    
                                return KeyId;
                            })();
    
                            CertificateDescription.CertificateFingerprint = (function() {
    
                                /**
                                 * Properties of a CertificateFingerprint.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @interface ICertificateFingerprint
                                 * @property {string|null} [sha256Hash] CertificateFingerprint sha256Hash
                                 */
    
                                /**
                                 * Constructs a new CertificateFingerprint.
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription
                                 * @classdesc Represents a CertificateFingerprint.
                                 * @implements ICertificateFingerprint
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint=} [properties] Properties to set
                                 */
                                function CertificateFingerprint(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * CertificateFingerprint sha256Hash.
                                 * @member {string} sha256Hash
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @instance
                                 */
                                CertificateFingerprint.prototype.sha256Hash = "";
    
                                /**
                                 * Creates a new CertificateFingerprint instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint} CertificateFingerprint instance
                                 */
                                CertificateFingerprint.create = function create(properties) {
                                    return new CertificateFingerprint(properties);
                                };
    
                                /**
                                 * Encodes the specified CertificateFingerprint message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint} message CertificateFingerprint message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateFingerprint.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.sha256Hash != null && Object.hasOwnProperty.call(message, "sha256Hash"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.sha256Hash);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified CertificateFingerprint message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.ICertificateFingerprint} message CertificateFingerprint message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                CertificateFingerprint.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a CertificateFingerprint message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateFingerprint.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.sha256Hash = reader.string();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a CertificateFingerprint message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                CertificateFingerprint.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a CertificateFingerprint message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                CertificateFingerprint.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                        if (!$util.isString(message.sha256Hash))
                                            return "sha256Hash: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a CertificateFingerprint message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint} CertificateFingerprint
                                 */
                                CertificateFingerprint.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint();
                                    if (object.sha256Hash != null)
                                        message.sha256Hash = String(object.sha256Hash);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a CertificateFingerprint message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint} message CertificateFingerprint
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                CertificateFingerprint.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults)
                                        object.sha256Hash = "";
                                    if (message.sha256Hash != null && message.hasOwnProperty("sha256Hash"))
                                        object.sha256Hash = message.sha256Hash;
                                    return object;
                                };
    
                                /**
                                 * Converts this CertificateFingerprint to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                CertificateFingerprint.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for CertificateFingerprint
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                CertificateFingerprint.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CertificateDescription.CertificateFingerprint";
                                };
    
                                return CertificateFingerprint;
                            })();
    
                            return CertificateDescription;
                        })();
    
                        v1beta1.ObjectId = (function() {
    
                            /**
                             * Properties of an ObjectId.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IObjectId
                             * @property {Array.<number>|null} [objectIdPath] ObjectId objectIdPath
                             */
    
                            /**
                             * Constructs a new ObjectId.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an ObjectId.
                             * @implements IObjectId
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IObjectId=} [properties] Properties to set
                             */
                            function ObjectId(properties) {
                                this.objectIdPath = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ObjectId objectIdPath.
                             * @member {Array.<number>} objectIdPath
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @instance
                             */
                            ObjectId.prototype.objectIdPath = $util.emptyArray;
    
                            /**
                             * Creates a new ObjectId instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IObjectId=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ObjectId} ObjectId instance
                             */
                            ObjectId.create = function create(properties) {
                                return new ObjectId(properties);
                            };
    
                            /**
                             * Encodes the specified ObjectId message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ObjectId.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IObjectId} message ObjectId message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ObjectId.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.objectIdPath != null && message.objectIdPath.length) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                    for (var i = 0; i < message.objectIdPath.length; ++i)
                                        writer.int32(message.objectIdPath[i]);
                                    writer.ldelim();
                                }
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ObjectId message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ObjectId.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IObjectId} message ObjectId message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ObjectId.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ObjectId message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ObjectId} ObjectId
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ObjectId.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ObjectId();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.objectIdPath && message.objectIdPath.length))
                                                message.objectIdPath = [];
                                            if ((tag & 7) === 2) {
                                                var end2 = reader.uint32() + reader.pos;
                                                while (reader.pos < end2)
                                                    message.objectIdPath.push(reader.int32());
                                            } else
                                                message.objectIdPath.push(reader.int32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ObjectId message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ObjectId} ObjectId
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ObjectId.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ObjectId message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ObjectId.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.objectIdPath != null && message.hasOwnProperty("objectIdPath")) {
                                    if (!Array.isArray(message.objectIdPath))
                                        return "objectIdPath: array expected";
                                    for (var i = 0; i < message.objectIdPath.length; ++i)
                                        if (!$util.isInteger(message.objectIdPath[i]))
                                            return "objectIdPath: integer[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ObjectId message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ObjectId} ObjectId
                             */
                            ObjectId.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ObjectId)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ObjectId();
                                if (object.objectIdPath) {
                                    if (!Array.isArray(object.objectIdPath))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ObjectId.objectIdPath: array expected");
                                    message.objectIdPath = [];
                                    for (var i = 0; i < object.objectIdPath.length; ++i)
                                        message.objectIdPath[i] = object.objectIdPath[i] | 0;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ObjectId message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ObjectId} message ObjectId
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ObjectId.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.objectIdPath = [];
                                if (message.objectIdPath && message.objectIdPath.length) {
                                    object.objectIdPath = [];
                                    for (var j = 0; j < message.objectIdPath.length; ++j)
                                        object.objectIdPath[j] = message.objectIdPath[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ObjectId to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ObjectId.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ObjectId
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ObjectId
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ObjectId.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ObjectId";
                            };
    
                            return ObjectId;
                        })();
    
                        v1beta1.X509Extension = (function() {
    
                            /**
                             * Properties of a X509Extension.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IX509Extension
                             * @property {google.cloud.security.privateca.v1beta1.IObjectId|null} [objectId] X509Extension objectId
                             * @property {boolean|null} [critical] X509Extension critical
                             * @property {Uint8Array|null} [value] X509Extension value
                             */
    
                            /**
                             * Constructs a new X509Extension.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a X509Extension.
                             * @implements IX509Extension
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IX509Extension=} [properties] Properties to set
                             */
                            function X509Extension(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * X509Extension objectId.
                             * @member {google.cloud.security.privateca.v1beta1.IObjectId|null|undefined} objectId
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.objectId = null;
    
                            /**
                             * X509Extension critical.
                             * @member {boolean} critical
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.critical = false;
    
                            /**
                             * X509Extension value.
                             * @member {Uint8Array} value
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @instance
                             */
                            X509Extension.prototype.value = $util.newBuffer([]);
    
                            /**
                             * Creates a new X509Extension instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IX509Extension=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.X509Extension} X509Extension instance
                             */
                            X509Extension.create = function create(properties) {
                                return new X509Extension(properties);
                            };
    
                            /**
                             * Encodes the specified X509Extension message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.X509Extension.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IX509Extension} message X509Extension message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Extension.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.objectId != null && Object.hasOwnProperty.call(message, "objectId"))
                                    $root.google.cloud.security.privateca.v1beta1.ObjectId.encode(message.objectId, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.critical != null && Object.hasOwnProperty.call(message, "critical"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.critical);
                                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.value);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified X509Extension message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.X509Extension.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IX509Extension} message X509Extension message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            X509Extension.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a X509Extension message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.X509Extension} X509Extension
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Extension.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.X509Extension();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.objectId = $root.google.cloud.security.privateca.v1beta1.ObjectId.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.critical = reader.bool();
                                            break;
                                        }
                                    case 3: {
                                            message.value = reader.bytes();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a X509Extension message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.X509Extension} X509Extension
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            X509Extension.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a X509Extension message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            X509Extension.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.objectId != null && message.hasOwnProperty("objectId")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.ObjectId.verify(message.objectId);
                                    if (error)
                                        return "objectId." + error;
                                }
                                if (message.critical != null && message.hasOwnProperty("critical"))
                                    if (typeof message.critical !== "boolean")
                                        return "critical: boolean expected";
                                if (message.value != null && message.hasOwnProperty("value"))
                                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                                        return "value: buffer expected";
                                return null;
                            };
    
                            /**
                             * Creates a X509Extension message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.X509Extension} X509Extension
                             */
                            X509Extension.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.X509Extension)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.X509Extension();
                                if (object.objectId != null) {
                                    if (typeof object.objectId !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.X509Extension.objectId: object expected");
                                    message.objectId = $root.google.cloud.security.privateca.v1beta1.ObjectId.fromObject(object.objectId);
                                }
                                if (object.critical != null)
                                    message.critical = Boolean(object.critical);
                                if (object.value != null)
                                    if (typeof object.value === "string")
                                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                                    else if (object.value.length >= 0)
                                        message.value = object.value;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a X509Extension message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.X509Extension} message X509Extension
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            X509Extension.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.objectId = null;
                                    object.critical = false;
                                    if (options.bytes === String)
                                        object.value = "";
                                    else {
                                        object.value = [];
                                        if (options.bytes !== Array)
                                            object.value = $util.newBuffer(object.value);
                                    }
                                }
                                if (message.objectId != null && message.hasOwnProperty("objectId"))
                                    object.objectId = $root.google.cloud.security.privateca.v1beta1.ObjectId.toObject(message.objectId, options);
                                if (message.critical != null && message.hasOwnProperty("critical"))
                                    object.critical = message.critical;
                                if (message.value != null && message.hasOwnProperty("value"))
                                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                                return object;
                            };
    
                            /**
                             * Converts this X509Extension to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            X509Extension.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for X509Extension
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.X509Extension
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            X509Extension.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.X509Extension";
                            };
    
                            return X509Extension;
                        })();
    
                        v1beta1.KeyUsage = (function() {
    
                            /**
                             * Properties of a KeyUsage.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IKeyUsage
                             * @property {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions|null} [baseKeyUsage] KeyUsage baseKeyUsage
                             * @property {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions|null} [extendedKeyUsage] KeyUsage extendedKeyUsage
                             * @property {Array.<google.cloud.security.privateca.v1beta1.IObjectId>|null} [unknownExtendedKeyUsages] KeyUsage unknownExtendedKeyUsages
                             */
    
                            /**
                             * Constructs a new KeyUsage.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a KeyUsage.
                             * @implements IKeyUsage
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IKeyUsage=} [properties] Properties to set
                             */
                            function KeyUsage(properties) {
                                this.unknownExtendedKeyUsages = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * KeyUsage baseKeyUsage.
                             * @member {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions|null|undefined} baseKeyUsage
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.baseKeyUsage = null;
    
                            /**
                             * KeyUsage extendedKeyUsage.
                             * @member {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions|null|undefined} extendedKeyUsage
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.extendedKeyUsage = null;
    
                            /**
                             * KeyUsage unknownExtendedKeyUsages.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.IObjectId>} unknownExtendedKeyUsages
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @instance
                             */
                            KeyUsage.prototype.unknownExtendedKeyUsages = $util.emptyArray;
    
                            /**
                             * Creates a new KeyUsage instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IKeyUsage=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.KeyUsage} KeyUsage instance
                             */
                            KeyUsage.create = function create(properties) {
                                return new KeyUsage(properties);
                            };
    
                            /**
                             * Encodes the specified KeyUsage message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IKeyUsage} message KeyUsage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            KeyUsage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.baseKeyUsage != null && Object.hasOwnProperty.call(message, "baseKeyUsage"))
                                    $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.encode(message.baseKeyUsage, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.extendedKeyUsage != null && Object.hasOwnProperty.call(message, "extendedKeyUsage"))
                                    $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.encode(message.extendedKeyUsage, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.unknownExtendedKeyUsages != null && message.unknownExtendedKeyUsages.length)
                                    for (var i = 0; i < message.unknownExtendedKeyUsages.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.ObjectId.encode(message.unknownExtendedKeyUsages[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified KeyUsage message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IKeyUsage} message KeyUsage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            KeyUsage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a KeyUsage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.KeyUsage} KeyUsage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            KeyUsage.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.baseKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.extendedKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unknownExtendedKeyUsages && message.unknownExtendedKeyUsages.length))
                                                message.unknownExtendedKeyUsages = [];
                                            message.unknownExtendedKeyUsages.push($root.google.cloud.security.privateca.v1beta1.ObjectId.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a KeyUsage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.KeyUsage} KeyUsage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            KeyUsage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a KeyUsage message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            KeyUsage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.baseKeyUsage != null && message.hasOwnProperty("baseKeyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.verify(message.baseKeyUsage);
                                    if (error)
                                        return "baseKeyUsage." + error;
                                }
                                if (message.extendedKeyUsage != null && message.hasOwnProperty("extendedKeyUsage")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.verify(message.extendedKeyUsage);
                                    if (error)
                                        return "extendedKeyUsage." + error;
                                }
                                if (message.unknownExtendedKeyUsages != null && message.hasOwnProperty("unknownExtendedKeyUsages")) {
                                    if (!Array.isArray(message.unknownExtendedKeyUsages))
                                        return "unknownExtendedKeyUsages: array expected";
                                    for (var i = 0; i < message.unknownExtendedKeyUsages.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.ObjectId.verify(message.unknownExtendedKeyUsages[i]);
                                        if (error)
                                            return "unknownExtendedKeyUsages." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a KeyUsage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.KeyUsage} KeyUsage
                             */
                            KeyUsage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.KeyUsage)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage();
                                if (object.baseKeyUsage != null) {
                                    if (typeof object.baseKeyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.KeyUsage.baseKeyUsage: object expected");
                                    message.baseKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.fromObject(object.baseKeyUsage);
                                }
                                if (object.extendedKeyUsage != null) {
                                    if (typeof object.extendedKeyUsage !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.KeyUsage.extendedKeyUsage: object expected");
                                    message.extendedKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.fromObject(object.extendedKeyUsage);
                                }
                                if (object.unknownExtendedKeyUsages) {
                                    if (!Array.isArray(object.unknownExtendedKeyUsages))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.KeyUsage.unknownExtendedKeyUsages: array expected");
                                    message.unknownExtendedKeyUsages = [];
                                    for (var i = 0; i < object.unknownExtendedKeyUsages.length; ++i) {
                                        if (typeof object.unknownExtendedKeyUsages[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.KeyUsage.unknownExtendedKeyUsages: object expected");
                                        message.unknownExtendedKeyUsages[i] = $root.google.cloud.security.privateca.v1beta1.ObjectId.fromObject(object.unknownExtendedKeyUsages[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a KeyUsage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.KeyUsage} message KeyUsage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            KeyUsage.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.unknownExtendedKeyUsages = [];
                                if (options.defaults) {
                                    object.baseKeyUsage = null;
                                    object.extendedKeyUsage = null;
                                }
                                if (message.baseKeyUsage != null && message.hasOwnProperty("baseKeyUsage"))
                                    object.baseKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.toObject(message.baseKeyUsage, options);
                                if (message.extendedKeyUsage != null && message.hasOwnProperty("extendedKeyUsage"))
                                    object.extendedKeyUsage = $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.toObject(message.extendedKeyUsage, options);
                                if (message.unknownExtendedKeyUsages && message.unknownExtendedKeyUsages.length) {
                                    object.unknownExtendedKeyUsages = [];
                                    for (var j = 0; j < message.unknownExtendedKeyUsages.length; ++j)
                                        object.unknownExtendedKeyUsages[j] = $root.google.cloud.security.privateca.v1beta1.ObjectId.toObject(message.unknownExtendedKeyUsages[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this KeyUsage to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            KeyUsage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for KeyUsage
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            KeyUsage.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.KeyUsage";
                            };
    
                            KeyUsage.KeyUsageOptions = (function() {
    
                                /**
                                 * Properties of a KeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                                 * @interface IKeyUsageOptions
                                 * @property {boolean|null} [digitalSignature] KeyUsageOptions digitalSignature
                                 * @property {boolean|null} [contentCommitment] KeyUsageOptions contentCommitment
                                 * @property {boolean|null} [keyEncipherment] KeyUsageOptions keyEncipherment
                                 * @property {boolean|null} [dataEncipherment] KeyUsageOptions dataEncipherment
                                 * @property {boolean|null} [keyAgreement] KeyUsageOptions keyAgreement
                                 * @property {boolean|null} [certSign] KeyUsageOptions certSign
                                 * @property {boolean|null} [crlSign] KeyUsageOptions crlSign
                                 * @property {boolean|null} [encipherOnly] KeyUsageOptions encipherOnly
                                 * @property {boolean|null} [decipherOnly] KeyUsageOptions decipherOnly
                                 */
    
                                /**
                                 * Constructs a new KeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                                 * @classdesc Represents a KeyUsageOptions.
                                 * @implements IKeyUsageOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions=} [properties] Properties to set
                                 */
                                function KeyUsageOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * KeyUsageOptions digitalSignature.
                                 * @member {boolean} digitalSignature
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.digitalSignature = false;
    
                                /**
                                 * KeyUsageOptions contentCommitment.
                                 * @member {boolean} contentCommitment
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.contentCommitment = false;
    
                                /**
                                 * KeyUsageOptions keyEncipherment.
                                 * @member {boolean} keyEncipherment
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.keyEncipherment = false;
    
                                /**
                                 * KeyUsageOptions dataEncipherment.
                                 * @member {boolean} dataEncipherment
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.dataEncipherment = false;
    
                                /**
                                 * KeyUsageOptions keyAgreement.
                                 * @member {boolean} keyAgreement
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.keyAgreement = false;
    
                                /**
                                 * KeyUsageOptions certSign.
                                 * @member {boolean} certSign
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.certSign = false;
    
                                /**
                                 * KeyUsageOptions crlSign.
                                 * @member {boolean} crlSign
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.crlSign = false;
    
                                /**
                                 * KeyUsageOptions encipherOnly.
                                 * @member {boolean} encipherOnly
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.encipherOnly = false;
    
                                /**
                                 * KeyUsageOptions decipherOnly.
                                 * @member {boolean} decipherOnly
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 */
                                KeyUsageOptions.prototype.decipherOnly = false;
    
                                /**
                                 * Creates a new KeyUsageOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions} KeyUsageOptions instance
                                 */
                                KeyUsageOptions.create = function create(properties) {
                                    return new KeyUsageOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified KeyUsageOptions message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions} message KeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyUsageOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.digitalSignature != null && Object.hasOwnProperty.call(message, "digitalSignature"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.digitalSignature);
                                    if (message.contentCommitment != null && Object.hasOwnProperty.call(message, "contentCommitment"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.contentCommitment);
                                    if (message.keyEncipherment != null && Object.hasOwnProperty.call(message, "keyEncipherment"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.keyEncipherment);
                                    if (message.dataEncipherment != null && Object.hasOwnProperty.call(message, "dataEncipherment"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.dataEncipherment);
                                    if (message.keyAgreement != null && Object.hasOwnProperty.call(message, "keyAgreement"))
                                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.keyAgreement);
                                    if (message.certSign != null && Object.hasOwnProperty.call(message, "certSign"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.certSign);
                                    if (message.crlSign != null && Object.hasOwnProperty.call(message, "crlSign"))
                                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.crlSign);
                                    if (message.encipherOnly != null && Object.hasOwnProperty.call(message, "encipherOnly"))
                                        writer.uint32(/* id 8, wireType 0 =*/64).bool(message.encipherOnly);
                                    if (message.decipherOnly != null && Object.hasOwnProperty.call(message, "decipherOnly"))
                                        writer.uint32(/* id 9, wireType 0 =*/72).bool(message.decipherOnly);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified KeyUsageOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IKeyUsageOptions} message KeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                KeyUsageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a KeyUsageOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyUsageOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.digitalSignature = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.contentCommitment = reader.bool();
                                                break;
                                            }
                                        case 3: {
                                                message.keyEncipherment = reader.bool();
                                                break;
                                            }
                                        case 4: {
                                                message.dataEncipherment = reader.bool();
                                                break;
                                            }
                                        case 5: {
                                                message.keyAgreement = reader.bool();
                                                break;
                                            }
                                        case 6: {
                                                message.certSign = reader.bool();
                                                break;
                                            }
                                        case 7: {
                                                message.crlSign = reader.bool();
                                                break;
                                            }
                                        case 8: {
                                                message.encipherOnly = reader.bool();
                                                break;
                                            }
                                        case 9: {
                                                message.decipherOnly = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a KeyUsageOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                KeyUsageOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a KeyUsageOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                KeyUsageOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.digitalSignature != null && message.hasOwnProperty("digitalSignature"))
                                        if (typeof message.digitalSignature !== "boolean")
                                            return "digitalSignature: boolean expected";
                                    if (message.contentCommitment != null && message.hasOwnProperty("contentCommitment"))
                                        if (typeof message.contentCommitment !== "boolean")
                                            return "contentCommitment: boolean expected";
                                    if (message.keyEncipherment != null && message.hasOwnProperty("keyEncipherment"))
                                        if (typeof message.keyEncipherment !== "boolean")
                                            return "keyEncipherment: boolean expected";
                                    if (message.dataEncipherment != null && message.hasOwnProperty("dataEncipherment"))
                                        if (typeof message.dataEncipherment !== "boolean")
                                            return "dataEncipherment: boolean expected";
                                    if (message.keyAgreement != null && message.hasOwnProperty("keyAgreement"))
                                        if (typeof message.keyAgreement !== "boolean")
                                            return "keyAgreement: boolean expected";
                                    if (message.certSign != null && message.hasOwnProperty("certSign"))
                                        if (typeof message.certSign !== "boolean")
                                            return "certSign: boolean expected";
                                    if (message.crlSign != null && message.hasOwnProperty("crlSign"))
                                        if (typeof message.crlSign !== "boolean")
                                            return "crlSign: boolean expected";
                                    if (message.encipherOnly != null && message.hasOwnProperty("encipherOnly"))
                                        if (typeof message.encipherOnly !== "boolean")
                                            return "encipherOnly: boolean expected";
                                    if (message.decipherOnly != null && message.hasOwnProperty("decipherOnly"))
                                        if (typeof message.decipherOnly !== "boolean")
                                            return "decipherOnly: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a KeyUsageOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions} KeyUsageOptions
                                 */
                                KeyUsageOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions();
                                    if (object.digitalSignature != null)
                                        message.digitalSignature = Boolean(object.digitalSignature);
                                    if (object.contentCommitment != null)
                                        message.contentCommitment = Boolean(object.contentCommitment);
                                    if (object.keyEncipherment != null)
                                        message.keyEncipherment = Boolean(object.keyEncipherment);
                                    if (object.dataEncipherment != null)
                                        message.dataEncipherment = Boolean(object.dataEncipherment);
                                    if (object.keyAgreement != null)
                                        message.keyAgreement = Boolean(object.keyAgreement);
                                    if (object.certSign != null)
                                        message.certSign = Boolean(object.certSign);
                                    if (object.crlSign != null)
                                        message.crlSign = Boolean(object.crlSign);
                                    if (object.encipherOnly != null)
                                        message.encipherOnly = Boolean(object.encipherOnly);
                                    if (object.decipherOnly != null)
                                        message.decipherOnly = Boolean(object.decipherOnly);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a KeyUsageOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions} message KeyUsageOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                KeyUsageOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.digitalSignature = false;
                                        object.contentCommitment = false;
                                        object.keyEncipherment = false;
                                        object.dataEncipherment = false;
                                        object.keyAgreement = false;
                                        object.certSign = false;
                                        object.crlSign = false;
                                        object.encipherOnly = false;
                                        object.decipherOnly = false;
                                    }
                                    if (message.digitalSignature != null && message.hasOwnProperty("digitalSignature"))
                                        object.digitalSignature = message.digitalSignature;
                                    if (message.contentCommitment != null && message.hasOwnProperty("contentCommitment"))
                                        object.contentCommitment = message.contentCommitment;
                                    if (message.keyEncipherment != null && message.hasOwnProperty("keyEncipherment"))
                                        object.keyEncipherment = message.keyEncipherment;
                                    if (message.dataEncipherment != null && message.hasOwnProperty("dataEncipherment"))
                                        object.dataEncipherment = message.dataEncipherment;
                                    if (message.keyAgreement != null && message.hasOwnProperty("keyAgreement"))
                                        object.keyAgreement = message.keyAgreement;
                                    if (message.certSign != null && message.hasOwnProperty("certSign"))
                                        object.certSign = message.certSign;
                                    if (message.crlSign != null && message.hasOwnProperty("crlSign"))
                                        object.crlSign = message.crlSign;
                                    if (message.encipherOnly != null && message.hasOwnProperty("encipherOnly"))
                                        object.encipherOnly = message.encipherOnly;
                                    if (message.decipherOnly != null && message.hasOwnProperty("decipherOnly"))
                                        object.decipherOnly = message.decipherOnly;
                                    return object;
                                };
    
                                /**
                                 * Converts this KeyUsageOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                KeyUsageOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for KeyUsageOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                KeyUsageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.KeyUsage.KeyUsageOptions";
                                };
    
                                return KeyUsageOptions;
                            })();
    
                            KeyUsage.ExtendedKeyUsageOptions = (function() {
    
                                /**
                                 * Properties of an ExtendedKeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                                 * @interface IExtendedKeyUsageOptions
                                 * @property {boolean|null} [serverAuth] ExtendedKeyUsageOptions serverAuth
                                 * @property {boolean|null} [clientAuth] ExtendedKeyUsageOptions clientAuth
                                 * @property {boolean|null} [codeSigning] ExtendedKeyUsageOptions codeSigning
                                 * @property {boolean|null} [emailProtection] ExtendedKeyUsageOptions emailProtection
                                 * @property {boolean|null} [timeStamping] ExtendedKeyUsageOptions timeStamping
                                 * @property {boolean|null} [ocspSigning] ExtendedKeyUsageOptions ocspSigning
                                 */
    
                                /**
                                 * Constructs a new ExtendedKeyUsageOptions.
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage
                                 * @classdesc Represents an ExtendedKeyUsageOptions.
                                 * @implements IExtendedKeyUsageOptions
                                 * @constructor
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions=} [properties] Properties to set
                                 */
                                function ExtendedKeyUsageOptions(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * ExtendedKeyUsageOptions serverAuth.
                                 * @member {boolean} serverAuth
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.serverAuth = false;
    
                                /**
                                 * ExtendedKeyUsageOptions clientAuth.
                                 * @member {boolean} clientAuth
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.clientAuth = false;
    
                                /**
                                 * ExtendedKeyUsageOptions codeSigning.
                                 * @member {boolean} codeSigning
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.codeSigning = false;
    
                                /**
                                 * ExtendedKeyUsageOptions emailProtection.
                                 * @member {boolean} emailProtection
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.emailProtection = false;
    
                                /**
                                 * ExtendedKeyUsageOptions timeStamping.
                                 * @member {boolean} timeStamping
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.timeStamping = false;
    
                                /**
                                 * ExtendedKeyUsageOptions ocspSigning.
                                 * @member {boolean} ocspSigning
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 */
                                ExtendedKeyUsageOptions.prototype.ocspSigning = false;
    
                                /**
                                 * Creates a new ExtendedKeyUsageOptions instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions=} [properties] Properties to set
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions instance
                                 */
                                ExtendedKeyUsageOptions.create = function create(properties) {
                                    return new ExtendedKeyUsageOptions(properties);
                                };
    
                                /**
                                 * Encodes the specified ExtendedKeyUsageOptions message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions} message ExtendedKeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtendedKeyUsageOptions.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.serverAuth != null && Object.hasOwnProperty.call(message, "serverAuth"))
                                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.serverAuth);
                                    if (message.clientAuth != null && Object.hasOwnProperty.call(message, "clientAuth"))
                                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clientAuth);
                                    if (message.codeSigning != null && Object.hasOwnProperty.call(message, "codeSigning"))
                                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.codeSigning);
                                    if (message.emailProtection != null && Object.hasOwnProperty.call(message, "emailProtection"))
                                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.emailProtection);
                                    if (message.timeStamping != null && Object.hasOwnProperty.call(message, "timeStamping"))
                                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.timeStamping);
                                    if (message.ocspSigning != null && Object.hasOwnProperty.call(message, "ocspSigning"))
                                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.ocspSigning);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified ExtendedKeyUsageOptions message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.IExtendedKeyUsageOptions} message ExtendedKeyUsageOptions message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                ExtendedKeyUsageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes an ExtendedKeyUsageOptions message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtendedKeyUsageOptions.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1: {
                                                message.serverAuth = reader.bool();
                                                break;
                                            }
                                        case 2: {
                                                message.clientAuth = reader.bool();
                                                break;
                                            }
                                        case 3: {
                                                message.codeSigning = reader.bool();
                                                break;
                                            }
                                        case 4: {
                                                message.emailProtection = reader.bool();
                                                break;
                                            }
                                        case 5: {
                                                message.timeStamping = reader.bool();
                                                break;
                                            }
                                        case 6: {
                                                message.ocspSigning = reader.bool();
                                                break;
                                            }
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes an ExtendedKeyUsageOptions message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                ExtendedKeyUsageOptions.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies an ExtendedKeyUsageOptions message.
                                 * @function verify
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                ExtendedKeyUsageOptions.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.serverAuth != null && message.hasOwnProperty("serverAuth"))
                                        if (typeof message.serverAuth !== "boolean")
                                            return "serverAuth: boolean expected";
                                    if (message.clientAuth != null && message.hasOwnProperty("clientAuth"))
                                        if (typeof message.clientAuth !== "boolean")
                                            return "clientAuth: boolean expected";
                                    if (message.codeSigning != null && message.hasOwnProperty("codeSigning"))
                                        if (typeof message.codeSigning !== "boolean")
                                            return "codeSigning: boolean expected";
                                    if (message.emailProtection != null && message.hasOwnProperty("emailProtection"))
                                        if (typeof message.emailProtection !== "boolean")
                                            return "emailProtection: boolean expected";
                                    if (message.timeStamping != null && message.hasOwnProperty("timeStamping"))
                                        if (typeof message.timeStamping !== "boolean")
                                            return "timeStamping: boolean expected";
                                    if (message.ocspSigning != null && message.hasOwnProperty("ocspSigning"))
                                        if (typeof message.ocspSigning !== "boolean")
                                            return "ocspSigning: boolean expected";
                                    return null;
                                };
    
                                /**
                                 * Creates an ExtendedKeyUsageOptions message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions} ExtendedKeyUsageOptions
                                 */
                                ExtendedKeyUsageOptions.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions)
                                        return object;
                                    var message = new $root.google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions();
                                    if (object.serverAuth != null)
                                        message.serverAuth = Boolean(object.serverAuth);
                                    if (object.clientAuth != null)
                                        message.clientAuth = Boolean(object.clientAuth);
                                    if (object.codeSigning != null)
                                        message.codeSigning = Boolean(object.codeSigning);
                                    if (object.emailProtection != null)
                                        message.emailProtection = Boolean(object.emailProtection);
                                    if (object.timeStamping != null)
                                        message.timeStamping = Boolean(object.timeStamping);
                                    if (object.ocspSigning != null)
                                        message.ocspSigning = Boolean(object.ocspSigning);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from an ExtendedKeyUsageOptions message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions} message ExtendedKeyUsageOptions
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                ExtendedKeyUsageOptions.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.serverAuth = false;
                                        object.clientAuth = false;
                                        object.codeSigning = false;
                                        object.emailProtection = false;
                                        object.timeStamping = false;
                                        object.ocspSigning = false;
                                    }
                                    if (message.serverAuth != null && message.hasOwnProperty("serverAuth"))
                                        object.serverAuth = message.serverAuth;
                                    if (message.clientAuth != null && message.hasOwnProperty("clientAuth"))
                                        object.clientAuth = message.clientAuth;
                                    if (message.codeSigning != null && message.hasOwnProperty("codeSigning"))
                                        object.codeSigning = message.codeSigning;
                                    if (message.emailProtection != null && message.hasOwnProperty("emailProtection"))
                                        object.emailProtection = message.emailProtection;
                                    if (message.timeStamping != null && message.hasOwnProperty("timeStamping"))
                                        object.timeStamping = message.timeStamping;
                                    if (message.ocspSigning != null && message.hasOwnProperty("ocspSigning"))
                                        object.ocspSigning = message.ocspSigning;
                                    return object;
                                };
    
                                /**
                                 * Converts this ExtendedKeyUsageOptions to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                ExtendedKeyUsageOptions.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                /**
                                 * Gets the default type url for ExtendedKeyUsageOptions
                                 * @function getTypeUrl
                                 * @memberof google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions
                                 * @static
                                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                                 * @returns {string} The default type url
                                 */
                                ExtendedKeyUsageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                    if (typeUrlPrefix === undefined) {
                                        typeUrlPrefix = "type.googleapis.com";
                                    }
                                    return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.KeyUsage.ExtendedKeyUsageOptions";
                                };
    
                                return ExtendedKeyUsageOptions;
                            })();
    
                            return KeyUsage;
                        })();
    
                        v1beta1.Subject = (function() {
    
                            /**
                             * Properties of a Subject.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ISubject
                             * @property {string|null} [countryCode] Subject countryCode
                             * @property {string|null} [organization] Subject organization
                             * @property {string|null} [organizationalUnit] Subject organizationalUnit
                             * @property {string|null} [locality] Subject locality
                             * @property {string|null} [province] Subject province
                             * @property {string|null} [streetAddress] Subject streetAddress
                             * @property {string|null} [postalCode] Subject postalCode
                             */
    
                            /**
                             * Constructs a new Subject.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a Subject.
                             * @implements ISubject
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ISubject=} [properties] Properties to set
                             */
                            function Subject(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Subject countryCode.
                             * @member {string} countryCode
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.countryCode = "";
    
                            /**
                             * Subject organization.
                             * @member {string} organization
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.organization = "";
    
                            /**
                             * Subject organizationalUnit.
                             * @member {string} organizationalUnit
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.organizationalUnit = "";
    
                            /**
                             * Subject locality.
                             * @member {string} locality
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.locality = "";
    
                            /**
                             * Subject province.
                             * @member {string} province
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.province = "";
    
                            /**
                             * Subject streetAddress.
                             * @member {string} streetAddress
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.streetAddress = "";
    
                            /**
                             * Subject postalCode.
                             * @member {string} postalCode
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             */
                            Subject.prototype.postalCode = "";
    
                            /**
                             * Creates a new Subject instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubject=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.Subject} Subject instance
                             */
                            Subject.create = function create(properties) {
                                return new Subject(properties);
                            };
    
                            /**
                             * Encodes the specified Subject message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Subject.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubject} message Subject message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Subject.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.countryCode != null && Object.hasOwnProperty.call(message, "countryCode"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.countryCode);
                                if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.organization);
                                if (message.organizationalUnit != null && Object.hasOwnProperty.call(message, "organizationalUnit"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.organizationalUnit);
                                if (message.locality != null && Object.hasOwnProperty.call(message, "locality"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.locality);
                                if (message.province != null && Object.hasOwnProperty.call(message, "province"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.province);
                                if (message.streetAddress != null && Object.hasOwnProperty.call(message, "streetAddress"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.streetAddress);
                                if (message.postalCode != null && Object.hasOwnProperty.call(message, "postalCode"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.postalCode);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Subject message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.Subject.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubject} message Subject message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Subject.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Subject message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.Subject} Subject
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Subject.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.Subject();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.countryCode = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.organization = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.organizationalUnit = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.locality = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.province = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.streetAddress = reader.string();
                                            break;
                                        }
                                    case 7: {
                                            message.postalCode = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Subject message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.Subject} Subject
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Subject.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Subject message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Subject.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                                    if (!$util.isString(message.countryCode))
                                        return "countryCode: string expected";
                                if (message.organization != null && message.hasOwnProperty("organization"))
                                    if (!$util.isString(message.organization))
                                        return "organization: string expected";
                                if (message.organizationalUnit != null && message.hasOwnProperty("organizationalUnit"))
                                    if (!$util.isString(message.organizationalUnit))
                                        return "organizationalUnit: string expected";
                                if (message.locality != null && message.hasOwnProperty("locality"))
                                    if (!$util.isString(message.locality))
                                        return "locality: string expected";
                                if (message.province != null && message.hasOwnProperty("province"))
                                    if (!$util.isString(message.province))
                                        return "province: string expected";
                                if (message.streetAddress != null && message.hasOwnProperty("streetAddress"))
                                    if (!$util.isString(message.streetAddress))
                                        return "streetAddress: string expected";
                                if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                                    if (!$util.isString(message.postalCode))
                                        return "postalCode: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a Subject message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.Subject} Subject
                             */
                            Subject.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.Subject)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.Subject();
                                if (object.countryCode != null)
                                    message.countryCode = String(object.countryCode);
                                if (object.organization != null)
                                    message.organization = String(object.organization);
                                if (object.organizationalUnit != null)
                                    message.organizationalUnit = String(object.organizationalUnit);
                                if (object.locality != null)
                                    message.locality = String(object.locality);
                                if (object.province != null)
                                    message.province = String(object.province);
                                if (object.streetAddress != null)
                                    message.streetAddress = String(object.streetAddress);
                                if (object.postalCode != null)
                                    message.postalCode = String(object.postalCode);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Subject message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.Subject} message Subject
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Subject.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.countryCode = "";
                                    object.organization = "";
                                    object.organizationalUnit = "";
                                    object.locality = "";
                                    object.province = "";
                                    object.streetAddress = "";
                                    object.postalCode = "";
                                }
                                if (message.countryCode != null && message.hasOwnProperty("countryCode"))
                                    object.countryCode = message.countryCode;
                                if (message.organization != null && message.hasOwnProperty("organization"))
                                    object.organization = message.organization;
                                if (message.organizationalUnit != null && message.hasOwnProperty("organizationalUnit"))
                                    object.organizationalUnit = message.organizationalUnit;
                                if (message.locality != null && message.hasOwnProperty("locality"))
                                    object.locality = message.locality;
                                if (message.province != null && message.hasOwnProperty("province"))
                                    object.province = message.province;
                                if (message.streetAddress != null && message.hasOwnProperty("streetAddress"))
                                    object.streetAddress = message.streetAddress;
                                if (message.postalCode != null && message.hasOwnProperty("postalCode"))
                                    object.postalCode = message.postalCode;
                                return object;
                            };
    
                            /**
                             * Converts this Subject to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Subject.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Subject
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.Subject
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Subject.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.Subject";
                            };
    
                            return Subject;
                        })();
    
                        v1beta1.SubjectAltNames = (function() {
    
                            /**
                             * Properties of a SubjectAltNames.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ISubjectAltNames
                             * @property {Array.<string>|null} [dnsNames] SubjectAltNames dnsNames
                             * @property {Array.<string>|null} [uris] SubjectAltNames uris
                             * @property {Array.<string>|null} [emailAddresses] SubjectAltNames emailAddresses
                             * @property {Array.<string>|null} [ipAddresses] SubjectAltNames ipAddresses
                             * @property {Array.<google.cloud.security.privateca.v1beta1.IX509Extension>|null} [customSans] SubjectAltNames customSans
                             */
    
                            /**
                             * Constructs a new SubjectAltNames.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a SubjectAltNames.
                             * @implements ISubjectAltNames
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ISubjectAltNames=} [properties] Properties to set
                             */
                            function SubjectAltNames(properties) {
                                this.dnsNames = [];
                                this.uris = [];
                                this.emailAddresses = [];
                                this.ipAddresses = [];
                                this.customSans = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SubjectAltNames dnsNames.
                             * @member {Array.<string>} dnsNames
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.dnsNames = $util.emptyArray;
    
                            /**
                             * SubjectAltNames uris.
                             * @member {Array.<string>} uris
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.uris = $util.emptyArray;
    
                            /**
                             * SubjectAltNames emailAddresses.
                             * @member {Array.<string>} emailAddresses
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.emailAddresses = $util.emptyArray;
    
                            /**
                             * SubjectAltNames ipAddresses.
                             * @member {Array.<string>} ipAddresses
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.ipAddresses = $util.emptyArray;
    
                            /**
                             * SubjectAltNames customSans.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.IX509Extension>} customSans
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             */
                            SubjectAltNames.prototype.customSans = $util.emptyArray;
    
                            /**
                             * Creates a new SubjectAltNames instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubjectAltNames=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.SubjectAltNames} SubjectAltNames instance
                             */
                            SubjectAltNames.create = function create(properties) {
                                return new SubjectAltNames(properties);
                            };
    
                            /**
                             * Encodes the specified SubjectAltNames message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubjectAltNames.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubjectAltNames} message SubjectAltNames message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubjectAltNames.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.dnsNames != null && message.dnsNames.length)
                                    for (var i = 0; i < message.dnsNames.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.dnsNames[i]);
                                if (message.uris != null && message.uris.length)
                                    for (var i = 0; i < message.uris.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.uris[i]);
                                if (message.emailAddresses != null && message.emailAddresses.length)
                                    for (var i = 0; i < message.emailAddresses.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.emailAddresses[i]);
                                if (message.ipAddresses != null && message.ipAddresses.length)
                                    for (var i = 0; i < message.ipAddresses.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.ipAddresses[i]);
                                if (message.customSans != null && message.customSans.length)
                                    for (var i = 0; i < message.customSans.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.X509Extension.encode(message.customSans[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SubjectAltNames message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.SubjectAltNames.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ISubjectAltNames} message SubjectAltNames message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SubjectAltNames.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SubjectAltNames message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.SubjectAltNames} SubjectAltNames
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubjectAltNames.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.SubjectAltNames();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.dnsNames && message.dnsNames.length))
                                                message.dnsNames = [];
                                            message.dnsNames.push(reader.string());
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.uris && message.uris.length))
                                                message.uris = [];
                                            message.uris.push(reader.string());
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.emailAddresses && message.emailAddresses.length))
                                                message.emailAddresses = [];
                                            message.emailAddresses.push(reader.string());
                                            break;
                                        }
                                    case 4: {
                                            if (!(message.ipAddresses && message.ipAddresses.length))
                                                message.ipAddresses = [];
                                            message.ipAddresses.push(reader.string());
                                            break;
                                        }
                                    case 5: {
                                            if (!(message.customSans && message.customSans.length))
                                                message.customSans = [];
                                            message.customSans.push($root.google.cloud.security.privateca.v1beta1.X509Extension.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SubjectAltNames message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.SubjectAltNames} SubjectAltNames
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SubjectAltNames.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SubjectAltNames message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SubjectAltNames.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.dnsNames != null && message.hasOwnProperty("dnsNames")) {
                                    if (!Array.isArray(message.dnsNames))
                                        return "dnsNames: array expected";
                                    for (var i = 0; i < message.dnsNames.length; ++i)
                                        if (!$util.isString(message.dnsNames[i]))
                                            return "dnsNames: string[] expected";
                                }
                                if (message.uris != null && message.hasOwnProperty("uris")) {
                                    if (!Array.isArray(message.uris))
                                        return "uris: array expected";
                                    for (var i = 0; i < message.uris.length; ++i)
                                        if (!$util.isString(message.uris[i]))
                                            return "uris: string[] expected";
                                }
                                if (message.emailAddresses != null && message.hasOwnProperty("emailAddresses")) {
                                    if (!Array.isArray(message.emailAddresses))
                                        return "emailAddresses: array expected";
                                    for (var i = 0; i < message.emailAddresses.length; ++i)
                                        if (!$util.isString(message.emailAddresses[i]))
                                            return "emailAddresses: string[] expected";
                                }
                                if (message.ipAddresses != null && message.hasOwnProperty("ipAddresses")) {
                                    if (!Array.isArray(message.ipAddresses))
                                        return "ipAddresses: array expected";
                                    for (var i = 0; i < message.ipAddresses.length; ++i)
                                        if (!$util.isString(message.ipAddresses[i]))
                                            return "ipAddresses: string[] expected";
                                }
                                if (message.customSans != null && message.hasOwnProperty("customSans")) {
                                    if (!Array.isArray(message.customSans))
                                        return "customSans: array expected";
                                    for (var i = 0; i < message.customSans.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.X509Extension.verify(message.customSans[i]);
                                        if (error)
                                            return "customSans." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SubjectAltNames message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.SubjectAltNames} SubjectAltNames
                             */
                            SubjectAltNames.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.SubjectAltNames)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.SubjectAltNames();
                                if (object.dnsNames) {
                                    if (!Array.isArray(object.dnsNames))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.dnsNames: array expected");
                                    message.dnsNames = [];
                                    for (var i = 0; i < object.dnsNames.length; ++i)
                                        message.dnsNames[i] = String(object.dnsNames[i]);
                                }
                                if (object.uris) {
                                    if (!Array.isArray(object.uris))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.uris: array expected");
                                    message.uris = [];
                                    for (var i = 0; i < object.uris.length; ++i)
                                        message.uris[i] = String(object.uris[i]);
                                }
                                if (object.emailAddresses) {
                                    if (!Array.isArray(object.emailAddresses))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.emailAddresses: array expected");
                                    message.emailAddresses = [];
                                    for (var i = 0; i < object.emailAddresses.length; ++i)
                                        message.emailAddresses[i] = String(object.emailAddresses[i]);
                                }
                                if (object.ipAddresses) {
                                    if (!Array.isArray(object.ipAddresses))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.ipAddresses: array expected");
                                    message.ipAddresses = [];
                                    for (var i = 0; i < object.ipAddresses.length; ++i)
                                        message.ipAddresses[i] = String(object.ipAddresses[i]);
                                }
                                if (object.customSans) {
                                    if (!Array.isArray(object.customSans))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.customSans: array expected");
                                    message.customSans = [];
                                    for (var i = 0; i < object.customSans.length; ++i) {
                                        if (typeof object.customSans[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.SubjectAltNames.customSans: object expected");
                                        message.customSans[i] = $root.google.cloud.security.privateca.v1beta1.X509Extension.fromObject(object.customSans[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SubjectAltNames message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.SubjectAltNames} message SubjectAltNames
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SubjectAltNames.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.dnsNames = [];
                                    object.uris = [];
                                    object.emailAddresses = [];
                                    object.ipAddresses = [];
                                    object.customSans = [];
                                }
                                if (message.dnsNames && message.dnsNames.length) {
                                    object.dnsNames = [];
                                    for (var j = 0; j < message.dnsNames.length; ++j)
                                        object.dnsNames[j] = message.dnsNames[j];
                                }
                                if (message.uris && message.uris.length) {
                                    object.uris = [];
                                    for (var j = 0; j < message.uris.length; ++j)
                                        object.uris[j] = message.uris[j];
                                }
                                if (message.emailAddresses && message.emailAddresses.length) {
                                    object.emailAddresses = [];
                                    for (var j = 0; j < message.emailAddresses.length; ++j)
                                        object.emailAddresses[j] = message.emailAddresses[j];
                                }
                                if (message.ipAddresses && message.ipAddresses.length) {
                                    object.ipAddresses = [];
                                    for (var j = 0; j < message.ipAddresses.length; ++j)
                                        object.ipAddresses[j] = message.ipAddresses[j];
                                }
                                if (message.customSans && message.customSans.length) {
                                    object.customSans = [];
                                    for (var j = 0; j < message.customSans.length; ++j)
                                        object.customSans[j] = $root.google.cloud.security.privateca.v1beta1.X509Extension.toObject(message.customSans[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SubjectAltNames to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SubjectAltNames.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for SubjectAltNames
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.SubjectAltNames
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            SubjectAltNames.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.SubjectAltNames";
                            };
    
                            return SubjectAltNames;
                        })();
    
                        /**
                         * RevocationReason enum.
                         * @name google.cloud.security.privateca.v1beta1.RevocationReason
                         * @enum {number}
                         * @property {number} REVOCATION_REASON_UNSPECIFIED=0 REVOCATION_REASON_UNSPECIFIED value
                         * @property {number} KEY_COMPROMISE=1 KEY_COMPROMISE value
                         * @property {number} CERTIFICATE_AUTHORITY_COMPROMISE=2 CERTIFICATE_AUTHORITY_COMPROMISE value
                         * @property {number} AFFILIATION_CHANGED=3 AFFILIATION_CHANGED value
                         * @property {number} SUPERSEDED=4 SUPERSEDED value
                         * @property {number} CESSATION_OF_OPERATION=5 CESSATION_OF_OPERATION value
                         * @property {number} CERTIFICATE_HOLD=6 CERTIFICATE_HOLD value
                         * @property {number} PRIVILEGE_WITHDRAWN=7 PRIVILEGE_WITHDRAWN value
                         * @property {number} ATTRIBUTE_AUTHORITY_COMPROMISE=8 ATTRIBUTE_AUTHORITY_COMPROMISE value
                         */
                        v1beta1.RevocationReason = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "REVOCATION_REASON_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "KEY_COMPROMISE"] = 1;
                            values[valuesById[2] = "CERTIFICATE_AUTHORITY_COMPROMISE"] = 2;
                            values[valuesById[3] = "AFFILIATION_CHANGED"] = 3;
                            values[valuesById[4] = "SUPERSEDED"] = 4;
                            values[valuesById[5] = "CESSATION_OF_OPERATION"] = 5;
                            values[valuesById[6] = "CERTIFICATE_HOLD"] = 6;
                            values[valuesById[7] = "PRIVILEGE_WITHDRAWN"] = 7;
                            values[valuesById[8] = "ATTRIBUTE_AUTHORITY_COMPROMISE"] = 8;
                            return values;
                        })();
    
                        v1beta1.CertificateAuthorityService = (function() {
    
                            /**
                             * Constructs a new CertificateAuthorityService service.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CertificateAuthorityService
                             * @extends $protobuf.rpc.Service
                             * @constructor
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             */
                            function CertificateAuthorityService(rpcImpl, requestDelimited, responseDelimited) {
                                $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                            }
    
                            (CertificateAuthorityService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = CertificateAuthorityService;
    
                            /**
                             * Creates new CertificateAuthorityService service using the specified rpc implementation.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @static
                             * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                             * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                             * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                             * @returns {CertificateAuthorityService} RPC service. Useful where requests and/or responses are streamed.
                             */
                            CertificateAuthorityService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                                return new this(rpcImpl, requestDelimited, responseDelimited);
                            };
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|createCertificate}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef CreateCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls CreateCertificate.
                             * @function createCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest} request CreateCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCertificate = function createCertificate(request, callback) {
                                return this.rpcCall(createCertificate, $root.google.cloud.security.privateca.v1beta1.CreateCertificateRequest, $root.google.cloud.security.privateca.v1beta1.Certificate, request, callback);
                            }, "name", { value: "CreateCertificate" });
    
                            /**
                             * Calls CreateCertificate.
                             * @function createCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest} request CreateCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|getCertificate}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef GetCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls GetCertificate.
                             * @function getCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest} request GetCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificate = function getCertificate(request, callback) {
                                return this.rpcCall(getCertificate, $root.google.cloud.security.privateca.v1beta1.GetCertificateRequest, $root.google.cloud.security.privateca.v1beta1.Certificate, request, callback);
                            }, "name", { value: "GetCertificate" });
    
                            /**
                             * Calls GetCertificate.
                             * @function getCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest} request GetCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|listCertificates}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ListCertificatesCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} [response] ListCertificatesResponse
                             */
    
                            /**
                             * Calls ListCertificates.
                             * @function listCertificates
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest} request ListCertificatesRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificatesCallback} callback Node-style callback called with the error, if any, and ListCertificatesResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificates = function listCertificates(request, callback) {
                                return this.rpcCall(listCertificates, $root.google.cloud.security.privateca.v1beta1.ListCertificatesRequest, $root.google.cloud.security.privateca.v1beta1.ListCertificatesResponse, request, callback);
                            }, "name", { value: "ListCertificates" });
    
                            /**
                             * Calls ListCertificates.
                             * @function listCertificates
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest} request ListCertificatesRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.ListCertificatesResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|revokeCertificate}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef RevokeCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls RevokeCertificate.
                             * @function revokeCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest} request RevokeCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RevokeCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.revokeCertificate = function revokeCertificate(request, callback) {
                                return this.rpcCall(revokeCertificate, $root.google.cloud.security.privateca.v1beta1.RevokeCertificateRequest, $root.google.cloud.security.privateca.v1beta1.Certificate, request, callback);
                            }, "name", { value: "RevokeCertificate" });
    
                            /**
                             * Calls RevokeCertificate.
                             * @function revokeCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest} request RevokeCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|updateCertificate}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef UpdateCertificateCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.Certificate} [response] Certificate
                             */
    
                            /**
                             * Calls UpdateCertificate.
                             * @function updateCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest} request UpdateCertificateRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateCallback} callback Node-style callback called with the error, if any, and Certificate
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificate = function updateCertificate(request, callback) {
                                return this.rpcCall(updateCertificate, $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRequest, $root.google.cloud.security.privateca.v1beta1.Certificate, request, callback);
                            }, "name", { value: "UpdateCertificate" });
    
                            /**
                             * Calls UpdateCertificate.
                             * @function updateCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest} request UpdateCertificateRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.Certificate>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|activateCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ActivateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls ActivateCertificateAuthority.
                             * @function activateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest} request ActivateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ActivateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.activateCertificateAuthority = function activateCertificateAuthority(request, callback) {
                                return this.rpcCall(activateCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "ActivateCertificateAuthority" });
    
                            /**
                             * Calls ActivateCertificateAuthority.
                             * @function activateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest} request ActivateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|createCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef CreateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls CreateCertificateAuthority.
                             * @function createCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest} request CreateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.CreateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.createCertificateAuthority = function createCertificateAuthority(request, callback) {
                                return this.rpcCall(createCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "CreateCertificateAuthority" });
    
                            /**
                             * Calls CreateCertificateAuthority.
                             * @function createCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest} request CreateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|disableCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef DisableCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls DisableCertificateAuthority.
                             * @function disableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest} request DisableCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.DisableCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.disableCertificateAuthority = function disableCertificateAuthority(request, callback) {
                                return this.rpcCall(disableCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "DisableCertificateAuthority" });
    
                            /**
                             * Calls DisableCertificateAuthority.
                             * @function disableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest} request DisableCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|enableCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef EnableCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls EnableCertificateAuthority.
                             * @function enableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest} request EnableCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.EnableCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.enableCertificateAuthority = function enableCertificateAuthority(request, callback) {
                                return this.rpcCall(enableCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "EnableCertificateAuthority" });
    
                            /**
                             * Calls EnableCertificateAuthority.
                             * @function enableCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest} request EnableCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|fetchCertificateAuthorityCsr}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef FetchCertificateAuthorityCsrCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} [response] FetchCertificateAuthorityCsrResponse
                             */
    
                            /**
                             * Calls FetchCertificateAuthorityCsr.
                             * @function fetchCertificateAuthorityCsr
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest} request FetchCertificateAuthorityCsrRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.FetchCertificateAuthorityCsrCallback} callback Node-style callback called with the error, if any, and FetchCertificateAuthorityCsrResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.fetchCertificateAuthorityCsr = function fetchCertificateAuthorityCsr(request, callback) {
                                return this.rpcCall(fetchCertificateAuthorityCsr, $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest, $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse, request, callback);
                            }, "name", { value: "FetchCertificateAuthorityCsr" });
    
                            /**
                             * Calls FetchCertificateAuthorityCsr.
                             * @function fetchCertificateAuthorityCsr
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest} request FetchCertificateAuthorityCsrRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|getCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef GetCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthority} [response] CertificateAuthority
                             */
    
                            /**
                             * Calls GetCertificateAuthority.
                             * @function getCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest} request GetCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and CertificateAuthority
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificateAuthority = function getCertificateAuthority(request, callback) {
                                return this.rpcCall(getCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest, $root.google.cloud.security.privateca.v1beta1.CertificateAuthority, request, callback);
                            }, "name", { value: "GetCertificateAuthority" });
    
                            /**
                             * Calls GetCertificateAuthority.
                             * @function getCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest} request GetCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.CertificateAuthority>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|listCertificateAuthorities}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ListCertificateAuthoritiesCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} [response] ListCertificateAuthoritiesResponse
                             */
    
                            /**
                             * Calls ListCertificateAuthorities.
                             * @function listCertificateAuthorities
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest} request ListCertificateAuthoritiesRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateAuthoritiesCallback} callback Node-style callback called with the error, if any, and ListCertificateAuthoritiesResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificateAuthorities = function listCertificateAuthorities(request, callback) {
                                return this.rpcCall(listCertificateAuthorities, $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest, $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse, request, callback);
                            }, "name", { value: "ListCertificateAuthorities" });
    
                            /**
                             * Calls ListCertificateAuthorities.
                             * @function listCertificateAuthorities
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest} request ListCertificateAuthoritiesRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|restoreCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef RestoreCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls RestoreCertificateAuthority.
                             * @function restoreCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest} request RestoreCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.RestoreCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.restoreCertificateAuthority = function restoreCertificateAuthority(request, callback) {
                                return this.rpcCall(restoreCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "RestoreCertificateAuthority" });
    
                            /**
                             * Calls RestoreCertificateAuthority.
                             * @function restoreCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest} request RestoreCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|scheduleDeleteCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ScheduleDeleteCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls ScheduleDeleteCertificateAuthority.
                             * @function scheduleDeleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest} request ScheduleDeleteCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ScheduleDeleteCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.scheduleDeleteCertificateAuthority = function scheduleDeleteCertificateAuthority(request, callback) {
                                return this.rpcCall(scheduleDeleteCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "ScheduleDeleteCertificateAuthority" });
    
                            /**
                             * Calls ScheduleDeleteCertificateAuthority.
                             * @function scheduleDeleteCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest} request ScheduleDeleteCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|updateCertificateAuthority}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef UpdateCertificateAuthorityCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCertificateAuthority.
                             * @function updateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest} request UpdateCertificateAuthorityRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateAuthorityCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificateAuthority = function updateCertificateAuthority(request, callback) {
                                return this.rpcCall(updateCertificateAuthority, $root.google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCertificateAuthority" });
    
                            /**
                             * Calls UpdateCertificateAuthority.
                             * @function updateCertificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest} request UpdateCertificateAuthorityRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|getCertificateRevocationList}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef GetCertificateRevocationListCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.CertificateRevocationList} [response] CertificateRevocationList
                             */
    
                            /**
                             * Calls GetCertificateRevocationList.
                             * @function getCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest} request GetCertificateRevocationListRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetCertificateRevocationListCallback} callback Node-style callback called with the error, if any, and CertificateRevocationList
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getCertificateRevocationList = function getCertificateRevocationList(request, callback) {
                                return this.rpcCall(getCertificateRevocationList, $root.google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest, $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList, request, callback);
                            }, "name", { value: "GetCertificateRevocationList" });
    
                            /**
                             * Calls GetCertificateRevocationList.
                             * @function getCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest} request GetCertificateRevocationListRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.CertificateRevocationList>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|listCertificateRevocationLists}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ListCertificateRevocationListsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} [response] ListCertificateRevocationListsResponse
                             */
    
                            /**
                             * Calls ListCertificateRevocationLists.
                             * @function listCertificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest} request ListCertificateRevocationListsRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListCertificateRevocationListsCallback} callback Node-style callback called with the error, if any, and ListCertificateRevocationListsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listCertificateRevocationLists = function listCertificateRevocationLists(request, callback) {
                                return this.rpcCall(listCertificateRevocationLists, $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest, $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse, request, callback);
                            }, "name", { value: "ListCertificateRevocationLists" });
    
                            /**
                             * Calls ListCertificateRevocationLists.
                             * @function listCertificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest} request ListCertificateRevocationListsRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|updateCertificateRevocationList}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef UpdateCertificateRevocationListCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.longrunning.Operation} [response] Operation
                             */
    
                            /**
                             * Calls UpdateCertificateRevocationList.
                             * @function updateCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest} request UpdateCertificateRevocationListRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.UpdateCertificateRevocationListCallback} callback Node-style callback called with the error, if any, and Operation
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.updateCertificateRevocationList = function updateCertificateRevocationList(request, callback) {
                                return this.rpcCall(updateCertificateRevocationList, $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest, $root.google.longrunning.Operation, request, callback);
                            }, "name", { value: "UpdateCertificateRevocationList" });
    
                            /**
                             * Calls UpdateCertificateRevocationList.
                             * @function updateCertificateRevocationList
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest} request UpdateCertificateRevocationListRequest message or plain object
                             * @returns {Promise<google.longrunning.Operation>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|getReusableConfig}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef GetReusableConfigCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.ReusableConfig} [response] ReusableConfig
                             */
    
                            /**
                             * Calls GetReusableConfig.
                             * @function getReusableConfig
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest} request GetReusableConfigRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.GetReusableConfigCallback} callback Node-style callback called with the error, if any, and ReusableConfig
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.getReusableConfig = function getReusableConfig(request, callback) {
                                return this.rpcCall(getReusableConfig, $root.google.cloud.security.privateca.v1beta1.GetReusableConfigRequest, $root.google.cloud.security.privateca.v1beta1.ReusableConfig, request, callback);
                            }, "name", { value: "GetReusableConfig" });
    
                            /**
                             * Calls GetReusableConfig.
                             * @function getReusableConfig
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest} request GetReusableConfigRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.ReusableConfig>} Promise
                             * @variation 2
                             */
    
                            /**
                             * Callback as used by {@link google.cloud.security.privateca.v1beta1.CertificateAuthorityService|listReusableConfigs}.
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @typedef ListReusableConfigsCallback
                             * @type {function}
                             * @param {Error|null} error Error, if any
                             * @param {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} [response] ListReusableConfigsResponse
                             */
    
                            /**
                             * Calls ListReusableConfigs.
                             * @function listReusableConfigs
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest} request ListReusableConfigsRequest message or plain object
                             * @param {google.cloud.security.privateca.v1beta1.CertificateAuthorityService.ListReusableConfigsCallback} callback Node-style callback called with the error, if any, and ListReusableConfigsResponse
                             * @returns {undefined}
                             * @variation 1
                             */
                            Object.defineProperty(CertificateAuthorityService.prototype.listReusableConfigs = function listReusableConfigs(request, callback) {
                                return this.rpcCall(listReusableConfigs, $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest, $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse, request, callback);
                            }, "name", { value: "ListReusableConfigs" });
    
                            /**
                             * Calls ListReusableConfigs.
                             * @function listReusableConfigs
                             * @memberof google.cloud.security.privateca.v1beta1.CertificateAuthorityService
                             * @instance
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest} request ListReusableConfigsRequest message or plain object
                             * @returns {Promise<google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse>} Promise
                             * @variation 2
                             */
    
                            return CertificateAuthorityService;
                        })();
    
                        v1beta1.CreateCertificateRequest = (function() {
    
                            /**
                             * Properties of a CreateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICreateCertificateRequest
                             * @property {string|null} [parent] CreateCertificateRequest parent
                             * @property {string|null} [certificateId] CreateCertificateRequest certificateId
                             * @property {google.cloud.security.privateca.v1beta1.ICertificate|null} [certificate] CreateCertificateRequest certificate
                             * @property {string|null} [requestId] CreateCertificateRequest requestId
                             */
    
                            /**
                             * Constructs a new CreateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CreateCertificateRequest.
                             * @implements ICreateCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest=} [properties] Properties to set
                             */
                            function CreateCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCertificateRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.parent = "";
    
                            /**
                             * CreateCertificateRequest certificateId.
                             * @member {string} certificateId
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.certificateId = "";
    
                            /**
                             * CreateCertificateRequest certificate.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificate|null|undefined} certificate
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.certificate = null;
    
                            /**
                             * CreateCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @instance
                             */
                            CreateCertificateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new CreateCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateRequest} CreateCertificateRequest instance
                             */
                            CreateCertificateRequest.create = function create(properties) {
                                return new CreateCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CreateCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest} message CreateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.certificateId != null && Object.hasOwnProperty.call(message, "certificateId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.certificateId);
                                if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                    $root.google.cloud.security.privateca.v1beta1.Certificate.encode(message.certificate, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CreateCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateRequest} message CreateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateRequest} CreateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CreateCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.certificateId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateRequest} CreateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.certificateId != null && message.hasOwnProperty("certificateId"))
                                    if (!$util.isString(message.certificateId))
                                        return "certificateId: string expected";
                                if (message.certificate != null && message.hasOwnProperty("certificate")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.Certificate.verify(message.certificate);
                                    if (error)
                                        return "certificate." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateRequest} CreateCertificateRequest
                             */
                            CreateCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CreateCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CreateCertificateRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.certificateId != null)
                                    message.certificateId = String(object.certificateId);
                                if (object.certificate != null) {
                                    if (typeof object.certificate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CreateCertificateRequest.certificate: object expected");
                                    message.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.fromObject(object.certificate);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CreateCertificateRequest} message CreateCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.certificateId = "";
                                    object.certificate = null;
                                    object.requestId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.certificateId != null && message.hasOwnProperty("certificateId"))
                                    object.certificateId = message.certificateId;
                                if (message.certificate != null && message.hasOwnProperty("certificate"))
                                    object.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.toObject(message.certificate, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CreateCertificateRequest";
                            };
    
                            return CreateCertificateRequest;
                        })();
    
                        v1beta1.GetCertificateRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IGetCertificateRequest
                             * @property {string|null} [name] GetCertificateRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a GetCertificateRequest.
                             * @implements IGetCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest=} [properties] Properties to set
                             */
                            function GetCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @instance
                             */
                            GetCertificateRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRequest} GetCertificateRequest instance
                             */
                            GetCertificateRequest.create = function create(properties) {
                                return new GetCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest} message GetCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRequest} message GetCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRequest} GetCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRequest} GetCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRequest} GetCertificateRequest
                             */
                            GetCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.GetCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.GetCertificateRequest} message GetCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.GetCertificateRequest";
                            };
    
                            return GetCertificateRequest;
                        })();
    
                        v1beta1.ListCertificatesRequest = (function() {
    
                            /**
                             * Properties of a ListCertificatesRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificatesRequest
                             * @property {string|null} [parent] ListCertificatesRequest parent
                             * @property {number|null} [pageSize] ListCertificatesRequest pageSize
                             * @property {string|null} [pageToken] ListCertificatesRequest pageToken
                             * @property {string|null} [filter] ListCertificatesRequest filter
                             * @property {string|null} [orderBy] ListCertificatesRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificatesRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificatesRequest.
                             * @implements IListCertificatesRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest=} [properties] Properties to set
                             */
                            function ListCertificatesRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificatesRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.parent = "";
    
                            /**
                             * ListCertificatesRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificatesRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificatesRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.filter = "";
    
                            /**
                             * ListCertificatesRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             */
                            ListCertificatesRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificatesRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesRequest} ListCertificatesRequest instance
                             */
                            ListCertificatesRequest.create = function create(properties) {
                                return new ListCertificatesRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificatesRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificatesRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest} message ListCertificatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificatesRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificatesRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesRequest} message ListCertificatesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificatesRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesRequest} ListCertificatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificatesRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificatesRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesRequest} ListCertificatesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificatesRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificatesRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificatesRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesRequest} ListCertificatesRequest
                             */
                            ListCertificatesRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificatesRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificatesRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificatesRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificatesRequest} message ListCertificatesRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificatesRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificatesRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificatesRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificatesRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificatesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificatesRequest";
                            };
    
                            return ListCertificatesRequest;
                        })();
    
                        v1beta1.ListCertificatesResponse = (function() {
    
                            /**
                             * Properties of a ListCertificatesResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificatesResponse
                             * @property {Array.<google.cloud.security.privateca.v1beta1.ICertificate>|null} [certificates] ListCertificatesResponse certificates
                             * @property {string|null} [nextPageToken] ListCertificatesResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificatesResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificatesResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificatesResponse.
                             * @implements IListCertificatesResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesResponse=} [properties] Properties to set
                             */
                            function ListCertificatesResponse(properties) {
                                this.certificates = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificatesResponse certificates.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.ICertificate>} certificates
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.certificates = $util.emptyArray;
    
                            /**
                             * ListCertificatesResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificatesResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @instance
                             */
                            ListCertificatesResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificatesResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} ListCertificatesResponse instance
                             */
                            ListCertificatesResponse.create = function create(properties) {
                                return new ListCertificatesResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificatesResponse message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificatesResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesResponse} message ListCertificatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificates != null && message.certificates.length)
                                    for (var i = 0; i < message.certificates.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.Certificate.encode(message.certificates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificatesResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificatesResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificatesResponse} message ListCertificatesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificatesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificatesResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} ListCertificatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificatesResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificates && message.certificates.length))
                                                message.certificates = [];
                                            message.certificates.push($root.google.cloud.security.privateca.v1beta1.Certificate.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificatesResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} ListCertificatesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificatesResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificatesResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificatesResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificates != null && message.hasOwnProperty("certificates")) {
                                    if (!Array.isArray(message.certificates))
                                        return "certificates: array expected";
                                    for (var i = 0; i < message.certificates.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.Certificate.verify(message.certificates[i]);
                                        if (error)
                                            return "certificates." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificatesResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} ListCertificatesResponse
                             */
                            ListCertificatesResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificatesResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificatesResponse();
                                if (object.certificates) {
                                    if (!Array.isArray(object.certificates))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificatesResponse.certificates: array expected");
                                    message.certificates = [];
                                    for (var i = 0; i < object.certificates.length; ++i) {
                                        if (typeof object.certificates[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificatesResponse.certificates: object expected");
                                        message.certificates[i] = $root.google.cloud.security.privateca.v1beta1.Certificate.fromObject(object.certificates[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificatesResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificatesResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificatesResponse} message ListCertificatesResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificatesResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificates = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificates && message.certificates.length) {
                                    object.certificates = [];
                                    for (var j = 0; j < message.certificates.length; ++j)
                                        object.certificates[j] = $root.google.cloud.security.privateca.v1beta1.Certificate.toObject(message.certificates[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificatesResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificatesResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificatesResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificatesResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificatesResponse";
                            };
    
                            return ListCertificatesResponse;
                        })();
    
                        v1beta1.RevokeCertificateRequest = (function() {
    
                            /**
                             * Properties of a RevokeCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IRevokeCertificateRequest
                             * @property {string|null} [name] RevokeCertificateRequest name
                             * @property {google.cloud.security.privateca.v1beta1.RevocationReason|null} [reason] RevokeCertificateRequest reason
                             * @property {string|null} [requestId] RevokeCertificateRequest requestId
                             */
    
                            /**
                             * Constructs a new RevokeCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a RevokeCertificateRequest.
                             * @implements IRevokeCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest=} [properties] Properties to set
                             */
                            function RevokeCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RevokeCertificateRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.name = "";
    
                            /**
                             * RevokeCertificateRequest reason.
                             * @member {google.cloud.security.privateca.v1beta1.RevocationReason} reason
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.reason = 0;
    
                            /**
                             * RevokeCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @instance
                             */
                            RevokeCertificateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new RevokeCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.RevokeCertificateRequest} RevokeCertificateRequest instance
                             */
                            RevokeCertificateRequest.create = function create(properties) {
                                return new RevokeCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified RevokeCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.RevokeCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest} message RevokeCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RevokeCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.reason != null && Object.hasOwnProperty.call(message, "reason"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.reason);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RevokeCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.RevokeCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRevokeCertificateRequest} message RevokeCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RevokeCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RevokeCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.RevokeCertificateRequest} RevokeCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RevokeCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.RevokeCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.reason = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RevokeCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.RevokeCertificateRequest} RevokeCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RevokeCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RevokeCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RevokeCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.reason != null && message.hasOwnProperty("reason"))
                                    switch (message.reason) {
                                    default:
                                        return "reason: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                        break;
                                    }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a RevokeCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.RevokeCertificateRequest} RevokeCertificateRequest
                             */
                            RevokeCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.RevokeCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.RevokeCertificateRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                switch (object.reason) {
                                default:
                                    if (typeof object.reason === "number") {
                                        message.reason = object.reason;
                                        break;
                                    }
                                    break;
                                case "REVOCATION_REASON_UNSPECIFIED":
                                case 0:
                                    message.reason = 0;
                                    break;
                                case "KEY_COMPROMISE":
                                case 1:
                                    message.reason = 1;
                                    break;
                                case "CERTIFICATE_AUTHORITY_COMPROMISE":
                                case 2:
                                    message.reason = 2;
                                    break;
                                case "AFFILIATION_CHANGED":
                                case 3:
                                    message.reason = 3;
                                    break;
                                case "SUPERSEDED":
                                case 4:
                                    message.reason = 4;
                                    break;
                                case "CESSATION_OF_OPERATION":
                                case 5:
                                    message.reason = 5;
                                    break;
                                case "CERTIFICATE_HOLD":
                                case 6:
                                    message.reason = 6;
                                    break;
                                case "PRIVILEGE_WITHDRAWN":
                                case 7:
                                    message.reason = 7;
                                    break;
                                case "ATTRIBUTE_AUTHORITY_COMPROMISE":
                                case 8:
                                    message.reason = 8;
                                    break;
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RevokeCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.RevokeCertificateRequest} message RevokeCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RevokeCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.reason = options.enums === String ? "REVOCATION_REASON_UNSPECIFIED" : 0;
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.reason != null && message.hasOwnProperty("reason"))
                                    object.reason = options.enums === String ? $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.reason] === undefined ? message.reason : $root.google.cloud.security.privateca.v1beta1.RevocationReason[message.reason] : message.reason;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this RevokeCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RevokeCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RevokeCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.RevokeCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RevokeCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.RevokeCertificateRequest";
                            };
    
                            return RevokeCertificateRequest;
                        })();
    
                        v1beta1.UpdateCertificateRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IUpdateCertificateRequest
                             * @property {google.cloud.security.privateca.v1beta1.ICertificate|null} [certificate] UpdateCertificateRequest certificate
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an UpdateCertificateRequest.
                             * @implements IUpdateCertificateRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateRequest certificate.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificate|null|undefined} certificate
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.certificate = null;
    
                            /**
                             * UpdateCertificateRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @instance
                             */
                            UpdateCertificateRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRequest} UpdateCertificateRequest instance
                             */
                            UpdateCertificateRequest.create = function create(properties) {
                                return new UpdateCertificateRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest} message UpdateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificate != null && Object.hasOwnProperty.call(message, "certificate"))
                                    $root.google.cloud.security.privateca.v1beta1.Certificate.encode(message.certificate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRequest} message UpdateCertificateRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRequest} UpdateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRequest} UpdateCertificateRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificate != null && message.hasOwnProperty("certificate")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.Certificate.verify(message.certificate);
                                    if (error)
                                        return "certificate." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRequest} UpdateCertificateRequest
                             */
                            UpdateCertificateRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRequest();
                                if (object.certificate != null) {
                                    if (typeof object.certificate !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateRequest.certificate: object expected");
                                    message.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.fromObject(object.certificate);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.UpdateCertificateRequest} message UpdateCertificateRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificate = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificate != null && message.hasOwnProperty("certificate"))
                                    object.certificate = $root.google.cloud.security.privateca.v1beta1.Certificate.toObject(message.certificate, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.UpdateCertificateRequest";
                            };
    
                            return UpdateCertificateRequest;
                        })();
    
                        v1beta1.ActivateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an ActivateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IActivateCertificateAuthorityRequest
                             * @property {string|null} [name] ActivateCertificateAuthorityRequest name
                             * @property {string|null} [pemCaCertificate] ActivateCertificateAuthorityRequest pemCaCertificate
                             * @property {google.cloud.security.privateca.v1beta1.ISubordinateConfig|null} [subordinateConfig] ActivateCertificateAuthorityRequest subordinateConfig
                             * @property {string|null} [requestId] ActivateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new ActivateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an ActivateCertificateAuthorityRequest.
                             * @implements IActivateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function ActivateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ActivateCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * ActivateCertificateAuthorityRequest pemCaCertificate.
                             * @member {string} pemCaCertificate
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.pemCaCertificate = "";
    
                            /**
                             * ActivateCertificateAuthorityRequest subordinateConfig.
                             * @member {google.cloud.security.privateca.v1beta1.ISubordinateConfig|null|undefined} subordinateConfig
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.subordinateConfig = null;
    
                            /**
                             * ActivateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @instance
                             */
                            ActivateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new ActivateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest instance
                             */
                            ActivateCertificateAuthorityRequest.create = function create(properties) {
                                return new ActivateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ActivateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ActivateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.pemCaCertificate != null && Object.hasOwnProperty.call(message, "pemCaCertificate"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.pemCaCertificate);
                                if (message.subordinateConfig != null && Object.hasOwnProperty.call(message, "subordinateConfig"))
                                    $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.encode(message.subordinateConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ActivateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ActivateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ActivateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ActivateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pemCaCertificate = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ActivateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ActivateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ActivateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ActivateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.pemCaCertificate != null && message.hasOwnProperty("pemCaCertificate"))
                                    if (!$util.isString(message.pemCaCertificate))
                                        return "pemCaCertificate: string expected";
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.verify(message.subordinateConfig);
                                    if (error)
                                        return "subordinateConfig." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an ActivateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest} ActivateCertificateAuthorityRequest
                             */
                            ActivateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.pemCaCertificate != null)
                                    message.pemCaCertificate = String(object.pemCaCertificate);
                                if (object.subordinateConfig != null) {
                                    if (typeof object.subordinateConfig !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest.subordinateConfig: object expected");
                                    message.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.fromObject(object.subordinateConfig);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ActivateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest} message ActivateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ActivateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.pemCaCertificate = "";
                                    object.subordinateConfig = null;
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.pemCaCertificate != null && message.hasOwnProperty("pemCaCertificate"))
                                    object.pemCaCertificate = message.pemCaCertificate;
                                if (message.subordinateConfig != null && message.hasOwnProperty("subordinateConfig"))
                                    object.subordinateConfig = $root.google.cloud.security.privateca.v1beta1.SubordinateConfig.toObject(message.subordinateConfig, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this ActivateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ActivateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ActivateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ActivateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ActivateCertificateAuthorityRequest";
                            };
    
                            return ActivateCertificateAuthorityRequest;
                        })();
    
                        v1beta1.CreateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a CreateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface ICreateCertificateAuthorityRequest
                             * @property {string|null} [parent] CreateCertificateAuthorityRequest parent
                             * @property {string|null} [certificateAuthorityId] CreateCertificateAuthorityRequest certificateAuthorityId
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateAuthority|null} [certificateAuthority] CreateCertificateAuthorityRequest certificateAuthority
                             * @property {string|null} [requestId] CreateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new CreateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a CreateCertificateAuthorityRequest.
                             * @implements ICreateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function CreateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * CreateCertificateAuthorityRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.parent = "";
    
                            /**
                             * CreateCertificateAuthorityRequest certificateAuthorityId.
                             * @member {string} certificateAuthorityId
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.certificateAuthorityId = "";
    
                            /**
                             * CreateCertificateAuthorityRequest certificateAuthority.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateAuthority|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.certificateAuthority = null;
    
                            /**
                             * CreateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @instance
                             */
                            CreateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new CreateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest instance
                             */
                            CreateCertificateAuthorityRequest.create = function create(properties) {
                                return new CreateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified CreateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.certificateAuthorityId != null && Object.hasOwnProperty.call(message, "certificateAuthorityId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.certificateAuthorityId);
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.encode(message.certificateAuthority, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified CreateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ICreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            CreateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a CreateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.certificateAuthorityId = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 4: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a CreateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            CreateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a CreateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            CreateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.certificateAuthorityId != null && message.hasOwnProperty("certificateAuthorityId"))
                                    if (!$util.isString(message.certificateAuthorityId))
                                        return "certificateAuthorityId: string expected";
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.verify(message.certificateAuthority);
                                    if (error)
                                        return "certificateAuthority." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a CreateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest} CreateCertificateAuthorityRequest
                             */
                            CreateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.certificateAuthorityId != null)
                                    message.certificateAuthorityId = String(object.certificateAuthorityId);
                                if (object.certificateAuthority != null) {
                                    if (typeof object.certificateAuthority !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest.certificateAuthority: object expected");
                                    message.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.fromObject(object.certificateAuthority);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a CreateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest} message CreateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            CreateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.certificateAuthorityId = "";
                                    object.certificateAuthority = null;
                                    object.requestId = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.certificateAuthorityId != null && message.hasOwnProperty("certificateAuthorityId"))
                                    object.certificateAuthorityId = message.certificateAuthorityId;
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority"))
                                    object.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.toObject(message.certificateAuthority, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this CreateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            CreateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for CreateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            CreateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.CreateCertificateAuthorityRequest";
                            };
    
                            return CreateCertificateAuthorityRequest;
                        })();
    
                        v1beta1.DisableCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a DisableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IDisableCertificateAuthorityRequest
                             * @property {string|null} [name] DisableCertificateAuthorityRequest name
                             * @property {string|null} [requestId] DisableCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new DisableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a DisableCertificateAuthorityRequest.
                             * @implements IDisableCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function DisableCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * DisableCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @instance
                             */
                            DisableCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * DisableCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @instance
                             */
                            DisableCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new DisableCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest instance
                             */
                            DisableCertificateAuthorityRequest.create = function create(properties) {
                                return new DisableCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified DisableCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DisableCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified DisableCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IDisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            DisableCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a DisableCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DisableCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a DisableCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            DisableCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a DisableCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            DisableCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a DisableCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest} DisableCertificateAuthorityRequest
                             */
                            DisableCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a DisableCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest} message DisableCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            DisableCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this DisableCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            DisableCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for DisableCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            DisableCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.DisableCertificateAuthorityRequest";
                            };
    
                            return DisableCertificateAuthorityRequest;
                        })();
    
                        v1beta1.EnableCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an EnableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IEnableCertificateAuthorityRequest
                             * @property {string|null} [name] EnableCertificateAuthorityRequest name
                             * @property {string|null} [requestId] EnableCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new EnableCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an EnableCertificateAuthorityRequest.
                             * @implements IEnableCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function EnableCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * EnableCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @instance
                             */
                            EnableCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * EnableCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @instance
                             */
                            EnableCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new EnableCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest instance
                             */
                            EnableCertificateAuthorityRequest.create = function create(properties) {
                                return new EnableCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified EnableCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EnableCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified EnableCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IEnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            EnableCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an EnableCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EnableCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an EnableCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            EnableCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an EnableCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            EnableCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an EnableCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest} EnableCertificateAuthorityRequest
                             */
                            EnableCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an EnableCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest} message EnableCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            EnableCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this EnableCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            EnableCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for EnableCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            EnableCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.EnableCertificateAuthorityRequest";
                            };
    
                            return EnableCertificateAuthorityRequest;
                        })();
    
                        v1beta1.FetchCertificateAuthorityCsrRequest = (function() {
    
                            /**
                             * Properties of a FetchCertificateAuthorityCsrRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IFetchCertificateAuthorityCsrRequest
                             * @property {string|null} [name] FetchCertificateAuthorityCsrRequest name
                             */
    
                            /**
                             * Constructs a new FetchCertificateAuthorityCsrRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a FetchCertificateAuthorityCsrRequest.
                             * @implements IFetchCertificateAuthorityCsrRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest=} [properties] Properties to set
                             */
                            function FetchCertificateAuthorityCsrRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCertificateAuthorityCsrRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @instance
                             */
                            FetchCertificateAuthorityCsrRequest.prototype.name = "";
    
                            /**
                             * Creates a new FetchCertificateAuthorityCsrRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest instance
                             */
                            FetchCertificateAuthorityCsrRequest.create = function create(properties) {
                                return new FetchCertificateAuthorityCsrRequest(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCertificateAuthorityCsrRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCertificateAuthorityCsrRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FetchCertificateAuthorityCsrRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest} FetchCertificateAuthorityCsrRequest
                             */
                            FetchCertificateAuthorityCsrRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCertificateAuthorityCsrRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest} message FetchCertificateAuthorityCsrRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCertificateAuthorityCsrRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this FetchCertificateAuthorityCsrRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCertificateAuthorityCsrRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCertificateAuthorityCsrRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCertificateAuthorityCsrRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrRequest";
                            };
    
                            return FetchCertificateAuthorityCsrRequest;
                        })();
    
                        v1beta1.FetchCertificateAuthorityCsrResponse = (function() {
    
                            /**
                             * Properties of a FetchCertificateAuthorityCsrResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IFetchCertificateAuthorityCsrResponse
                             * @property {string|null} [pemCsr] FetchCertificateAuthorityCsrResponse pemCsr
                             */
    
                            /**
                             * Constructs a new FetchCertificateAuthorityCsrResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a FetchCertificateAuthorityCsrResponse.
                             * @implements IFetchCertificateAuthorityCsrResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse=} [properties] Properties to set
                             */
                            function FetchCertificateAuthorityCsrResponse(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FetchCertificateAuthorityCsrResponse pemCsr.
                             * @member {string} pemCsr
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @instance
                             */
                            FetchCertificateAuthorityCsrResponse.prototype.pemCsr = "";
    
                            /**
                             * Creates a new FetchCertificateAuthorityCsrResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse instance
                             */
                            FetchCertificateAuthorityCsrResponse.create = function create(properties) {
                                return new FetchCertificateAuthorityCsrResponse(properties);
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrResponse message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.pemCsr != null && Object.hasOwnProperty.call(message, "pemCsr"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.pemCsr);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FetchCertificateAuthorityCsrResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IFetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FetchCertificateAuthorityCsrResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.pemCsr = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FetchCertificateAuthorityCsrResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FetchCertificateAuthorityCsrResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FetchCertificateAuthorityCsrResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FetchCertificateAuthorityCsrResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr"))
                                    if (!$util.isString(message.pemCsr))
                                        return "pemCsr: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FetchCertificateAuthorityCsrResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} FetchCertificateAuthorityCsrResponse
                             */
                            FetchCertificateAuthorityCsrResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse();
                                if (object.pemCsr != null)
                                    message.pemCsr = String(object.pemCsr);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FetchCertificateAuthorityCsrResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse} message FetchCertificateAuthorityCsrResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FetchCertificateAuthorityCsrResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.pemCsr = "";
                                if (message.pemCsr != null && message.hasOwnProperty("pemCsr"))
                                    object.pemCsr = message.pemCsr;
                                return object;
                            };
    
                            /**
                             * Converts this FetchCertificateAuthorityCsrResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FetchCertificateAuthorityCsrResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for FetchCertificateAuthorityCsrResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            FetchCertificateAuthorityCsrResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.FetchCertificateAuthorityCsrResponse";
                            };
    
                            return FetchCertificateAuthorityCsrResponse;
                        })();
    
                        v1beta1.GetCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IGetCertificateAuthorityRequest
                             * @property {string|null} [name] GetCertificateAuthorityRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a GetCertificateAuthorityRequest.
                             * @implements IGetCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function GetCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @instance
                             */
                            GetCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest instance
                             */
                            GetCertificateAuthorityRequest.create = function create(properties) {
                                return new GetCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest} message GetCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateAuthorityRequest} message GetCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest} GetCertificateAuthorityRequest
                             */
                            GetCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest} message GetCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.GetCertificateAuthorityRequest";
                            };
    
                            return GetCertificateAuthorityRequest;
                        })();
    
                        v1beta1.ListCertificateAuthoritiesRequest = (function() {
    
                            /**
                             * Properties of a ListCertificateAuthoritiesRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificateAuthoritiesRequest
                             * @property {string|null} [parent] ListCertificateAuthoritiesRequest parent
                             * @property {number|null} [pageSize] ListCertificateAuthoritiesRequest pageSize
                             * @property {string|null} [pageToken] ListCertificateAuthoritiesRequest pageToken
                             * @property {string|null} [filter] ListCertificateAuthoritiesRequest filter
                             * @property {string|null} [orderBy] ListCertificateAuthoritiesRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificateAuthoritiesRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificateAuthoritiesRequest.
                             * @implements IListCertificateAuthoritiesRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest=} [properties] Properties to set
                             */
                            function ListCertificateAuthoritiesRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateAuthoritiesRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.parent = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificateAuthoritiesRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.filter = "";
    
                            /**
                             * ListCertificateAuthoritiesRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             */
                            ListCertificateAuthoritiesRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificateAuthoritiesRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest instance
                             */
                            ListCertificateAuthoritiesRequest.create = function create(properties) {
                                return new ListCertificateAuthoritiesRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateAuthoritiesRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateAuthoritiesRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateAuthoritiesRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest} ListCertificateAuthoritiesRequest
                             */
                            ListCertificateAuthoritiesRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateAuthoritiesRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest} message ListCertificateAuthoritiesRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateAuthoritiesRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateAuthoritiesRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateAuthoritiesRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateAuthoritiesRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateAuthoritiesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesRequest";
                            };
    
                            return ListCertificateAuthoritiesRequest;
                        })();
    
                        v1beta1.ListCertificateAuthoritiesResponse = (function() {
    
                            /**
                             * Properties of a ListCertificateAuthoritiesResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificateAuthoritiesResponse
                             * @property {Array.<google.cloud.security.privateca.v1beta1.ICertificateAuthority>|null} [certificateAuthorities] ListCertificateAuthoritiesResponse certificateAuthorities
                             * @property {string|null} [nextPageToken] ListCertificateAuthoritiesResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificateAuthoritiesResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificateAuthoritiesResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificateAuthoritiesResponse.
                             * @implements IListCertificateAuthoritiesResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse=} [properties] Properties to set
                             */
                            function ListCertificateAuthoritiesResponse(properties) {
                                this.certificateAuthorities = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateAuthoritiesResponse certificateAuthorities.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.ICertificateAuthority>} certificateAuthorities
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.certificateAuthorities = $util.emptyArray;
    
                            /**
                             * ListCertificateAuthoritiesResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificateAuthoritiesResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @instance
                             */
                            ListCertificateAuthoritiesResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificateAuthoritiesResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse instance
                             */
                            ListCertificateAuthoritiesResponse.create = function create(properties) {
                                return new ListCertificateAuthoritiesResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesResponse message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthorities != null && message.certificateAuthorities.length)
                                    for (var i = 0; i < message.certificateAuthorities.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.encode(message.certificateAuthorities[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateAuthoritiesResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateAuthoritiesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificateAuthorities && message.certificateAuthorities.length))
                                                message.certificateAuthorities = [];
                                            message.certificateAuthorities.push($root.google.cloud.security.privateca.v1beta1.CertificateAuthority.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateAuthoritiesResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateAuthoritiesResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateAuthoritiesResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateAuthoritiesResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateAuthorities != null && message.hasOwnProperty("certificateAuthorities")) {
                                    if (!Array.isArray(message.certificateAuthorities))
                                        return "certificateAuthorities: array expected";
                                    for (var i = 0; i < message.certificateAuthorities.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.verify(message.certificateAuthorities[i]);
                                        if (error)
                                            return "certificateAuthorities." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateAuthoritiesResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} ListCertificateAuthoritiesResponse
                             */
                            ListCertificateAuthoritiesResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse();
                                if (object.certificateAuthorities) {
                                    if (!Array.isArray(object.certificateAuthorities))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.certificateAuthorities: array expected");
                                    message.certificateAuthorities = [];
                                    for (var i = 0; i < object.certificateAuthorities.length; ++i) {
                                        if (typeof object.certificateAuthorities[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.certificateAuthorities: object expected");
                                        message.certificateAuthorities[i] = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.fromObject(object.certificateAuthorities[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateAuthoritiesResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse} message ListCertificateAuthoritiesResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateAuthoritiesResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificateAuthorities = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificateAuthorities && message.certificateAuthorities.length) {
                                    object.certificateAuthorities = [];
                                    for (var j = 0; j < message.certificateAuthorities.length; ++j)
                                        object.certificateAuthorities[j] = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.toObject(message.certificateAuthorities[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateAuthoritiesResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateAuthoritiesResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateAuthoritiesResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateAuthoritiesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificateAuthoritiesResponse";
                            };
    
                            return ListCertificateAuthoritiesResponse;
                        })();
    
                        v1beta1.RestoreCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a RestoreCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IRestoreCertificateAuthorityRequest
                             * @property {string|null} [name] RestoreCertificateAuthorityRequest name
                             * @property {string|null} [requestId] RestoreCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new RestoreCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a RestoreCertificateAuthorityRequest.
                             * @implements IRestoreCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function RestoreCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * RestoreCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @instance
                             */
                            RestoreCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * RestoreCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @instance
                             */
                            RestoreCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new RestoreCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest} RestoreCertificateAuthorityRequest instance
                             */
                            RestoreCertificateAuthorityRequest.create = function create(properties) {
                                return new RestoreCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified RestoreCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest} message RestoreCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RestoreCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified RestoreCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IRestoreCertificateAuthorityRequest} message RestoreCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            RestoreCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a RestoreCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest} RestoreCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RestoreCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a RestoreCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest} RestoreCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            RestoreCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a RestoreCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            RestoreCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a RestoreCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest} RestoreCertificateAuthorityRequest
                             */
                            RestoreCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a RestoreCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest} message RestoreCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            RestoreCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this RestoreCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            RestoreCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for RestoreCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            RestoreCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.RestoreCertificateAuthorityRequest";
                            };
    
                            return RestoreCertificateAuthorityRequest;
                        })();
    
                        v1beta1.ScheduleDeleteCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of a ScheduleDeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IScheduleDeleteCertificateAuthorityRequest
                             * @property {string|null} [name] ScheduleDeleteCertificateAuthorityRequest name
                             * @property {string|null} [requestId] ScheduleDeleteCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new ScheduleDeleteCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ScheduleDeleteCertificateAuthorityRequest.
                             * @implements IScheduleDeleteCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function ScheduleDeleteCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ScheduleDeleteCertificateAuthorityRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @instance
                             */
                            ScheduleDeleteCertificateAuthorityRequest.prototype.name = "";
    
                            /**
                             * ScheduleDeleteCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @instance
                             */
                            ScheduleDeleteCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new ScheduleDeleteCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest} ScheduleDeleteCertificateAuthorityRequest instance
                             */
                            ScheduleDeleteCertificateAuthorityRequest.create = function create(properties) {
                                return new ScheduleDeleteCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ScheduleDeleteCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest} message ScheduleDeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ScheduleDeleteCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ScheduleDeleteCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IScheduleDeleteCertificateAuthorityRequest} message ScheduleDeleteCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ScheduleDeleteCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ScheduleDeleteCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest} ScheduleDeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ScheduleDeleteCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ScheduleDeleteCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest} ScheduleDeleteCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ScheduleDeleteCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ScheduleDeleteCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ScheduleDeleteCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ScheduleDeleteCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest} ScheduleDeleteCertificateAuthorityRequest
                             */
                            ScheduleDeleteCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ScheduleDeleteCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest} message ScheduleDeleteCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ScheduleDeleteCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.name = "";
                                    object.requestId = "";
                                }
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this ScheduleDeleteCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ScheduleDeleteCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ScheduleDeleteCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ScheduleDeleteCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ScheduleDeleteCertificateAuthorityRequest";
                            };
    
                            return ScheduleDeleteCertificateAuthorityRequest;
                        })();
    
                        v1beta1.UpdateCertificateAuthorityRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IUpdateCertificateAuthorityRequest
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateAuthority|null} [certificateAuthority] UpdateCertificateAuthorityRequest certificateAuthority
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateAuthorityRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateAuthorityRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateAuthorityRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an UpdateCertificateAuthorityRequest.
                             * @implements IUpdateCertificateAuthorityRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateAuthorityRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateAuthorityRequest certificateAuthority.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateAuthority|null|undefined} certificateAuthority
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.certificateAuthority = null;
    
                            /**
                             * UpdateCertificateAuthorityRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateAuthorityRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @instance
                             */
                            UpdateCertificateAuthorityRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateAuthorityRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest instance
                             */
                            UpdateCertificateAuthorityRequest.create = function create(properties) {
                                return new UpdateCertificateAuthorityRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateAuthorityRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateAuthorityRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateAuthority != null && Object.hasOwnProperty.call(message, "certificateAuthority"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.encode(message.certificateAuthority, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateAuthorityRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateAuthorityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateAuthorityRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateAuthorityRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateAuthorityRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateAuthorityRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateAuthorityRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateAuthorityRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.verify(message.certificateAuthority);
                                    if (error)
                                        return "certificateAuthority." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateAuthorityRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest} UpdateCertificateAuthorityRequest
                             */
                            UpdateCertificateAuthorityRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest();
                                if (object.certificateAuthority != null) {
                                    if (typeof object.certificateAuthority !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest.certificateAuthority: object expected");
                                    message.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.fromObject(object.certificateAuthority);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateAuthorityRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest} message UpdateCertificateAuthorityRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateAuthorityRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificateAuthority = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificateAuthority != null && message.hasOwnProperty("certificateAuthority"))
                                    object.certificateAuthority = $root.google.cloud.security.privateca.v1beta1.CertificateAuthority.toObject(message.certificateAuthority, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateAuthorityRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateAuthorityRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateAuthorityRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateAuthorityRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.UpdateCertificateAuthorityRequest";
                            };
    
                            return UpdateCertificateAuthorityRequest;
                        })();
    
                        v1beta1.GetCertificateRevocationListRequest = (function() {
    
                            /**
                             * Properties of a GetCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IGetCertificateRevocationListRequest
                             * @property {string|null} [name] GetCertificateRevocationListRequest name
                             */
    
                            /**
                             * Constructs a new GetCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a GetCertificateRevocationListRequest.
                             * @implements IGetCertificateRevocationListRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest=} [properties] Properties to set
                             */
                            function GetCertificateRevocationListRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetCertificateRevocationListRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @instance
                             */
                            GetCertificateRevocationListRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetCertificateRevocationListRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest instance
                             */
                            GetCertificateRevocationListRequest.create = function create(properties) {
                                return new GetCertificateRevocationListRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetCertificateRevocationListRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest} message GetCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRevocationListRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetCertificateRevocationListRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetCertificateRevocationListRequest} message GetCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetCertificateRevocationListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetCertificateRevocationListRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRevocationListRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetCertificateRevocationListRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetCertificateRevocationListRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetCertificateRevocationListRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetCertificateRevocationListRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetCertificateRevocationListRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest} GetCertificateRevocationListRequest
                             */
                            GetCertificateRevocationListRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetCertificateRevocationListRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest} message GetCertificateRevocationListRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetCertificateRevocationListRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetCertificateRevocationListRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetCertificateRevocationListRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetCertificateRevocationListRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetCertificateRevocationListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.GetCertificateRevocationListRequest";
                            };
    
                            return GetCertificateRevocationListRequest;
                        })();
    
                        v1beta1.ListCertificateRevocationListsRequest = (function() {
    
                            /**
                             * Properties of a ListCertificateRevocationListsRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificateRevocationListsRequest
                             * @property {string|null} [parent] ListCertificateRevocationListsRequest parent
                             * @property {number|null} [pageSize] ListCertificateRevocationListsRequest pageSize
                             * @property {string|null} [pageToken] ListCertificateRevocationListsRequest pageToken
                             * @property {string|null} [filter] ListCertificateRevocationListsRequest filter
                             * @property {string|null} [orderBy] ListCertificateRevocationListsRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListCertificateRevocationListsRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificateRevocationListsRequest.
                             * @implements IListCertificateRevocationListsRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest=} [properties] Properties to set
                             */
                            function ListCertificateRevocationListsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateRevocationListsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.parent = "";
    
                            /**
                             * ListCertificateRevocationListsRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.pageSize = 0;
    
                            /**
                             * ListCertificateRevocationListsRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.pageToken = "";
    
                            /**
                             * ListCertificateRevocationListsRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.filter = "";
    
                            /**
                             * ListCertificateRevocationListsRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             */
                            ListCertificateRevocationListsRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListCertificateRevocationListsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest instance
                             */
                            ListCertificateRevocationListsRequest.create = function create(properties) {
                                return new ListCertificateRevocationListsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateRevocationListsRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateRevocationListsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateRevocationListsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest} ListCertificateRevocationListsRequest
                             */
                            ListCertificateRevocationListsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateRevocationListsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest} message ListCertificateRevocationListsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateRevocationListsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateRevocationListsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateRevocationListsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateRevocationListsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateRevocationListsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsRequest";
                            };
    
                            return ListCertificateRevocationListsRequest;
                        })();
    
                        v1beta1.ListCertificateRevocationListsResponse = (function() {
    
                            /**
                             * Properties of a ListCertificateRevocationListsResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListCertificateRevocationListsResponse
                             * @property {Array.<google.cloud.security.privateca.v1beta1.ICertificateRevocationList>|null} [certificateRevocationLists] ListCertificateRevocationListsResponse certificateRevocationLists
                             * @property {string|null} [nextPageToken] ListCertificateRevocationListsResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListCertificateRevocationListsResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListCertificateRevocationListsResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListCertificateRevocationListsResponse.
                             * @implements IListCertificateRevocationListsResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse=} [properties] Properties to set
                             */
                            function ListCertificateRevocationListsResponse(properties) {
                                this.certificateRevocationLists = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListCertificateRevocationListsResponse certificateRevocationLists.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.ICertificateRevocationList>} certificateRevocationLists
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.certificateRevocationLists = $util.emptyArray;
    
                            /**
                             * ListCertificateRevocationListsResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListCertificateRevocationListsResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @instance
                             */
                            ListCertificateRevocationListsResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListCertificateRevocationListsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse instance
                             */
                            ListCertificateRevocationListsResponse.create = function create(properties) {
                                return new ListCertificateRevocationListsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsResponse message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateRevocationLists != null && message.certificateRevocationLists.length)
                                    for (var i = 0; i < message.certificateRevocationLists.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.encode(message.certificateRevocationLists[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListCertificateRevocationListsResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListCertificateRevocationListsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.certificateRevocationLists && message.certificateRevocationLists.length))
                                                message.certificateRevocationLists = [];
                                            message.certificateRevocationLists.push($root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListCertificateRevocationListsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListCertificateRevocationListsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListCertificateRevocationListsResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListCertificateRevocationListsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateRevocationLists != null && message.hasOwnProperty("certificateRevocationLists")) {
                                    if (!Array.isArray(message.certificateRevocationLists))
                                        return "certificateRevocationLists: array expected";
                                    for (var i = 0; i < message.certificateRevocationLists.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.verify(message.certificateRevocationLists[i]);
                                        if (error)
                                            return "certificateRevocationLists." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListCertificateRevocationListsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} ListCertificateRevocationListsResponse
                             */
                            ListCertificateRevocationListsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse();
                                if (object.certificateRevocationLists) {
                                    if (!Array.isArray(object.certificateRevocationLists))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.certificateRevocationLists: array expected");
                                    message.certificateRevocationLists = [];
                                    for (var i = 0; i < object.certificateRevocationLists.length; ++i) {
                                        if (typeof object.certificateRevocationLists[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.certificateRevocationLists: object expected");
                                        message.certificateRevocationLists[i] = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.fromObject(object.certificateRevocationLists[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListCertificateRevocationListsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse} message ListCertificateRevocationListsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListCertificateRevocationListsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.certificateRevocationLists = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.certificateRevocationLists && message.certificateRevocationLists.length) {
                                    object.certificateRevocationLists = [];
                                    for (var j = 0; j < message.certificateRevocationLists.length; ++j)
                                        object.certificateRevocationLists[j] = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.toObject(message.certificateRevocationLists[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListCertificateRevocationListsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListCertificateRevocationListsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListCertificateRevocationListsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListCertificateRevocationListsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListCertificateRevocationListsResponse";
                            };
    
                            return ListCertificateRevocationListsResponse;
                        })();
    
                        v1beta1.UpdateCertificateRevocationListRequest = (function() {
    
                            /**
                             * Properties of an UpdateCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IUpdateCertificateRevocationListRequest
                             * @property {google.cloud.security.privateca.v1beta1.ICertificateRevocationList|null} [certificateRevocationList] UpdateCertificateRevocationListRequest certificateRevocationList
                             * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateCertificateRevocationListRequest updateMask
                             * @property {string|null} [requestId] UpdateCertificateRevocationListRequest requestId
                             */
    
                            /**
                             * Constructs a new UpdateCertificateRevocationListRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an UpdateCertificateRevocationListRequest.
                             * @implements IUpdateCertificateRevocationListRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest=} [properties] Properties to set
                             */
                            function UpdateCertificateRevocationListRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * UpdateCertificateRevocationListRequest certificateRevocationList.
                             * @member {google.cloud.security.privateca.v1beta1.ICertificateRevocationList|null|undefined} certificateRevocationList
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.certificateRevocationList = null;
    
                            /**
                             * UpdateCertificateRevocationListRequest updateMask.
                             * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.updateMask = null;
    
                            /**
                             * UpdateCertificateRevocationListRequest requestId.
                             * @member {string} requestId
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @instance
                             */
                            UpdateCertificateRevocationListRequest.prototype.requestId = "";
    
                            /**
                             * Creates a new UpdateCertificateRevocationListRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest instance
                             */
                            UpdateCertificateRevocationListRequest.create = function create(properties) {
                                return new UpdateCertificateRevocationListRequest(properties);
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRevocationListRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRevocationListRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.certificateRevocationList != null && Object.hasOwnProperty.call(message, "certificateRevocationList"))
                                    $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.encode(message.certificateRevocationList, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                    $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified UpdateCertificateRevocationListRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IUpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            UpdateCertificateRevocationListRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an UpdateCertificateRevocationListRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRevocationListRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.certificateRevocationList = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.requestId = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an UpdateCertificateRevocationListRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            UpdateCertificateRevocationListRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an UpdateCertificateRevocationListRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            UpdateCertificateRevocationListRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.certificateRevocationList != null && message.hasOwnProperty("certificateRevocationList")) {
                                    var error = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.verify(message.certificateRevocationList);
                                    if (error)
                                        return "certificateRevocationList." + error;
                                }
                                if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                    var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                    if (error)
                                        return "updateMask." + error;
                                }
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    if (!$util.isString(message.requestId))
                                        return "requestId: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an UpdateCertificateRevocationListRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest} UpdateCertificateRevocationListRequest
                             */
                            UpdateCertificateRevocationListRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest();
                                if (object.certificateRevocationList != null) {
                                    if (typeof object.certificateRevocationList !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest.certificateRevocationList: object expected");
                                    message.certificateRevocationList = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.fromObject(object.certificateRevocationList);
                                }
                                if (object.updateMask != null) {
                                    if (typeof object.updateMask !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest.updateMask: object expected");
                                    message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                                }
                                if (object.requestId != null)
                                    message.requestId = String(object.requestId);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an UpdateCertificateRevocationListRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest} message UpdateCertificateRevocationListRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            UpdateCertificateRevocationListRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.certificateRevocationList = null;
                                    object.updateMask = null;
                                    object.requestId = "";
                                }
                                if (message.certificateRevocationList != null && message.hasOwnProperty("certificateRevocationList"))
                                    object.certificateRevocationList = $root.google.cloud.security.privateca.v1beta1.CertificateRevocationList.toObject(message.certificateRevocationList, options);
                                if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                    object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                                if (message.requestId != null && message.hasOwnProperty("requestId"))
                                    object.requestId = message.requestId;
                                return object;
                            };
    
                            /**
                             * Converts this UpdateCertificateRevocationListRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            UpdateCertificateRevocationListRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for UpdateCertificateRevocationListRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            UpdateCertificateRevocationListRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.UpdateCertificateRevocationListRequest";
                            };
    
                            return UpdateCertificateRevocationListRequest;
                        })();
    
                        v1beta1.GetReusableConfigRequest = (function() {
    
                            /**
                             * Properties of a GetReusableConfigRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IGetReusableConfigRequest
                             * @property {string|null} [name] GetReusableConfigRequest name
                             */
    
                            /**
                             * Constructs a new GetReusableConfigRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a GetReusableConfigRequest.
                             * @implements IGetReusableConfigRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest=} [properties] Properties to set
                             */
                            function GetReusableConfigRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GetReusableConfigRequest name.
                             * @member {string} name
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @instance
                             */
                            GetReusableConfigRequest.prototype.name = "";
    
                            /**
                             * Creates a new GetReusableConfigRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.GetReusableConfigRequest} GetReusableConfigRequest instance
                             */
                            GetReusableConfigRequest.create = function create(properties) {
                                return new GetReusableConfigRequest(properties);
                            };
    
                            /**
                             * Encodes the specified GetReusableConfigRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetReusableConfigRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest} message GetReusableConfigRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetReusableConfigRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GetReusableConfigRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.GetReusableConfigRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IGetReusableConfigRequest} message GetReusableConfigRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GetReusableConfigRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GetReusableConfigRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.GetReusableConfigRequest} GetReusableConfigRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetReusableConfigRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.GetReusableConfigRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.name = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GetReusableConfigRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.GetReusableConfigRequest} GetReusableConfigRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GetReusableConfigRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GetReusableConfigRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GetReusableConfigRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    if (!$util.isString(message.name))
                                        return "name: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GetReusableConfigRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.GetReusableConfigRequest} GetReusableConfigRequest
                             */
                            GetReusableConfigRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.GetReusableConfigRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.GetReusableConfigRequest();
                                if (object.name != null)
                                    message.name = String(object.name);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GetReusableConfigRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.GetReusableConfigRequest} message GetReusableConfigRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GetReusableConfigRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.name = "";
                                if (message.name != null && message.hasOwnProperty("name"))
                                    object.name = message.name;
                                return object;
                            };
    
                            /**
                             * Converts this GetReusableConfigRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GetReusableConfigRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GetReusableConfigRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.GetReusableConfigRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GetReusableConfigRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.GetReusableConfigRequest";
                            };
    
                            return GetReusableConfigRequest;
                        })();
    
                        v1beta1.ListReusableConfigsRequest = (function() {
    
                            /**
                             * Properties of a ListReusableConfigsRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListReusableConfigsRequest
                             * @property {string|null} [parent] ListReusableConfigsRequest parent
                             * @property {number|null} [pageSize] ListReusableConfigsRequest pageSize
                             * @property {string|null} [pageToken] ListReusableConfigsRequest pageToken
                             * @property {string|null} [filter] ListReusableConfigsRequest filter
                             * @property {string|null} [orderBy] ListReusableConfigsRequest orderBy
                             */
    
                            /**
                             * Constructs a new ListReusableConfigsRequest.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListReusableConfigsRequest.
                             * @implements IListReusableConfigsRequest
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest=} [properties] Properties to set
                             */
                            function ListReusableConfigsRequest(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListReusableConfigsRequest parent.
                             * @member {string} parent
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             */
                            ListReusableConfigsRequest.prototype.parent = "";
    
                            /**
                             * ListReusableConfigsRequest pageSize.
                             * @member {number} pageSize
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             */
                            ListReusableConfigsRequest.prototype.pageSize = 0;
    
                            /**
                             * ListReusableConfigsRequest pageToken.
                             * @member {string} pageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             */
                            ListReusableConfigsRequest.prototype.pageToken = "";
    
                            /**
                             * ListReusableConfigsRequest filter.
                             * @member {string} filter
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             */
                            ListReusableConfigsRequest.prototype.filter = "";
    
                            /**
                             * ListReusableConfigsRequest orderBy.
                             * @member {string} orderBy
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             */
                            ListReusableConfigsRequest.prototype.orderBy = "";
    
                            /**
                             * Creates a new ListReusableConfigsRequest instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest} ListReusableConfigsRequest instance
                             */
                            ListReusableConfigsRequest.create = function create(properties) {
                                return new ListReusableConfigsRequest(properties);
                            };
    
                            /**
                             * Encodes the specified ListReusableConfigsRequest message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest} message ListReusableConfigsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListReusableConfigsRequest.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                                if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                                if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                                if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                                if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListReusableConfigsRequest message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsRequest} message ListReusableConfigsRequest message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListReusableConfigsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListReusableConfigsRequest message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest} ListReusableConfigsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListReusableConfigsRequest.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.parent = reader.string();
                                            break;
                                        }
                                    case 2: {
                                            message.pageSize = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.pageToken = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.filter = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.orderBy = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListReusableConfigsRequest message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest} ListReusableConfigsRequest
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListReusableConfigsRequest.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListReusableConfigsRequest message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListReusableConfigsRequest.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    if (!$util.isString(message.parent))
                                        return "parent: string expected";
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    if (!$util.isInteger(message.pageSize))
                                        return "pageSize: integer expected";
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    if (!$util.isString(message.pageToken))
                                        return "pageToken: string expected";
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    if (!$util.isString(message.filter))
                                        return "filter: string expected";
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    if (!$util.isString(message.orderBy))
                                        return "orderBy: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ListReusableConfigsRequest message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest} ListReusableConfigsRequest
                             */
                            ListReusableConfigsRequest.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest();
                                if (object.parent != null)
                                    message.parent = String(object.parent);
                                if (object.pageSize != null)
                                    message.pageSize = object.pageSize | 0;
                                if (object.pageToken != null)
                                    message.pageToken = String(object.pageToken);
                                if (object.filter != null)
                                    message.filter = String(object.filter);
                                if (object.orderBy != null)
                                    message.orderBy = String(object.orderBy);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListReusableConfigsRequest message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest} message ListReusableConfigsRequest
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListReusableConfigsRequest.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.parent = "";
                                    object.pageSize = 0;
                                    object.pageToken = "";
                                    object.filter = "";
                                    object.orderBy = "";
                                }
                                if (message.parent != null && message.hasOwnProperty("parent"))
                                    object.parent = message.parent;
                                if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                    object.pageSize = message.pageSize;
                                if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                    object.pageToken = message.pageToken;
                                if (message.filter != null && message.hasOwnProperty("filter"))
                                    object.filter = message.filter;
                                if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                    object.orderBy = message.orderBy;
                                return object;
                            };
    
                            /**
                             * Converts this ListReusableConfigsRequest to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListReusableConfigsRequest.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListReusableConfigsRequest
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListReusableConfigsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListReusableConfigsRequest";
                            };
    
                            return ListReusableConfigsRequest;
                        })();
    
                        v1beta1.ListReusableConfigsResponse = (function() {
    
                            /**
                             * Properties of a ListReusableConfigsResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IListReusableConfigsResponse
                             * @property {Array.<google.cloud.security.privateca.v1beta1.IReusableConfig>|null} [reusableConfigs] ListReusableConfigsResponse reusableConfigs
                             * @property {string|null} [nextPageToken] ListReusableConfigsResponse nextPageToken
                             * @property {Array.<string>|null} [unreachable] ListReusableConfigsResponse unreachable
                             */
    
                            /**
                             * Constructs a new ListReusableConfigsResponse.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents a ListReusableConfigsResponse.
                             * @implements IListReusableConfigsResponse
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse=} [properties] Properties to set
                             */
                            function ListReusableConfigsResponse(properties) {
                                this.reusableConfigs = [];
                                this.unreachable = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ListReusableConfigsResponse reusableConfigs.
                             * @member {Array.<google.cloud.security.privateca.v1beta1.IReusableConfig>} reusableConfigs
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @instance
                             */
                            ListReusableConfigsResponse.prototype.reusableConfigs = $util.emptyArray;
    
                            /**
                             * ListReusableConfigsResponse nextPageToken.
                             * @member {string} nextPageToken
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @instance
                             */
                            ListReusableConfigsResponse.prototype.nextPageToken = "";
    
                            /**
                             * ListReusableConfigsResponse unreachable.
                             * @member {Array.<string>} unreachable
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @instance
                             */
                            ListReusableConfigsResponse.prototype.unreachable = $util.emptyArray;
    
                            /**
                             * Creates a new ListReusableConfigsResponse instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} ListReusableConfigsResponse instance
                             */
                            ListReusableConfigsResponse.create = function create(properties) {
                                return new ListReusableConfigsResponse(properties);
                            };
    
                            /**
                             * Encodes the specified ListReusableConfigsResponse message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse} message ListReusableConfigsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListReusableConfigsResponse.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.reusableConfigs != null && message.reusableConfigs.length)
                                    for (var i = 0; i < message.reusableConfigs.length; ++i)
                                        $root.google.cloud.security.privateca.v1beta1.ReusableConfig.encode(message.reusableConfigs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                                if (message.unreachable != null && message.unreachable.length)
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ListReusableConfigsResponse message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IListReusableConfigsResponse} message ListReusableConfigsResponse message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ListReusableConfigsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ListReusableConfigsResponse message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} ListReusableConfigsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListReusableConfigsResponse.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            if (!(message.reusableConfigs && message.reusableConfigs.length))
                                                message.reusableConfigs = [];
                                            message.reusableConfigs.push($root.google.cloud.security.privateca.v1beta1.ReusableConfig.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 2: {
                                            message.nextPageToken = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            if (!(message.unreachable && message.unreachable.length))
                                                message.unreachable = [];
                                            message.unreachable.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ListReusableConfigsResponse message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} ListReusableConfigsResponse
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ListReusableConfigsResponse.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ListReusableConfigsResponse message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ListReusableConfigsResponse.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.reusableConfigs != null && message.hasOwnProperty("reusableConfigs")) {
                                    if (!Array.isArray(message.reusableConfigs))
                                        return "reusableConfigs: array expected";
                                    for (var i = 0; i < message.reusableConfigs.length; ++i) {
                                        var error = $root.google.cloud.security.privateca.v1beta1.ReusableConfig.verify(message.reusableConfigs[i]);
                                        if (error)
                                            return "reusableConfigs." + error;
                                    }
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    if (!$util.isString(message.nextPageToken))
                                        return "nextPageToken: string expected";
                                if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                    if (!Array.isArray(message.unreachable))
                                        return "unreachable: array expected";
                                    for (var i = 0; i < message.unreachable.length; ++i)
                                        if (!$util.isString(message.unreachable[i]))
                                            return "unreachable: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ListReusableConfigsResponse message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} ListReusableConfigsResponse
                             */
                            ListReusableConfigsResponse.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse();
                                if (object.reusableConfigs) {
                                    if (!Array.isArray(object.reusableConfigs))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.reusableConfigs: array expected");
                                    message.reusableConfigs = [];
                                    for (var i = 0; i < object.reusableConfigs.length; ++i) {
                                        if (typeof object.reusableConfigs[i] !== "object")
                                            throw TypeError(".google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.reusableConfigs: object expected");
                                        message.reusableConfigs[i] = $root.google.cloud.security.privateca.v1beta1.ReusableConfig.fromObject(object.reusableConfigs[i]);
                                    }
                                }
                                if (object.nextPageToken != null)
                                    message.nextPageToken = String(object.nextPageToken);
                                if (object.unreachable) {
                                    if (!Array.isArray(object.unreachable))
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse.unreachable: array expected");
                                    message.unreachable = [];
                                    for (var i = 0; i < object.unreachable.length; ++i)
                                        message.unreachable[i] = String(object.unreachable[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ListReusableConfigsResponse message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse} message ListReusableConfigsResponse
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ListReusableConfigsResponse.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults) {
                                    object.reusableConfigs = [];
                                    object.unreachable = [];
                                }
                                if (options.defaults)
                                    object.nextPageToken = "";
                                if (message.reusableConfigs && message.reusableConfigs.length) {
                                    object.reusableConfigs = [];
                                    for (var j = 0; j < message.reusableConfigs.length; ++j)
                                        object.reusableConfigs[j] = $root.google.cloud.security.privateca.v1beta1.ReusableConfig.toObject(message.reusableConfigs[j], options);
                                }
                                if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                    object.nextPageToken = message.nextPageToken;
                                if (message.unreachable && message.unreachable.length) {
                                    object.unreachable = [];
                                    for (var j = 0; j < message.unreachable.length; ++j)
                                        object.unreachable[j] = message.unreachable[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this ListReusableConfigsResponse to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ListReusableConfigsResponse.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for ListReusableConfigsResponse
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            ListReusableConfigsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.ListReusableConfigsResponse";
                            };
    
                            return ListReusableConfigsResponse;
                        })();
    
                        v1beta1.OperationMetadata = (function() {
    
                            /**
                             * Properties of an OperationMetadata.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @interface IOperationMetadata
                             * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                             * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                             * @property {string|null} [target] OperationMetadata target
                             * @property {string|null} [verb] OperationMetadata verb
                             * @property {string|null} [statusMessage] OperationMetadata statusMessage
                             * @property {boolean|null} [requestedCancellation] OperationMetadata requestedCancellation
                             * @property {string|null} [apiVersion] OperationMetadata apiVersion
                             */
    
                            /**
                             * Constructs a new OperationMetadata.
                             * @memberof google.cloud.security.privateca.v1beta1
                             * @classdesc Represents an OperationMetadata.
                             * @implements IOperationMetadata
                             * @constructor
                             * @param {google.cloud.security.privateca.v1beta1.IOperationMetadata=} [properties] Properties to set
                             */
                            function OperationMetadata(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OperationMetadata createTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} createTime
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.createTime = null;
    
                            /**
                             * OperationMetadata endTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} endTime
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.endTime = null;
    
                            /**
                             * OperationMetadata target.
                             * @member {string} target
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.target = "";
    
                            /**
                             * OperationMetadata verb.
                             * @member {string} verb
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.verb = "";
    
                            /**
                             * OperationMetadata statusMessage.
                             * @member {string} statusMessage
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.statusMessage = "";
    
                            /**
                             * OperationMetadata requestedCancellation.
                             * @member {boolean} requestedCancellation
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.requestedCancellation = false;
    
                            /**
                             * OperationMetadata apiVersion.
                             * @member {string} apiVersion
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             */
                            OperationMetadata.prototype.apiVersion = "";
    
                            /**
                             * Creates a new OperationMetadata instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IOperationMetadata=} [properties] Properties to set
                             * @returns {google.cloud.security.privateca.v1beta1.OperationMetadata} OperationMetadata instance
                             */
                            OperationMetadata.create = function create(properties) {
                                return new OperationMetadata(properties);
                            };
    
                            /**
                             * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.security.privateca.v1beta1.OperationMetadata.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperationMetadata.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                    $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                    $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                                if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                                if (message.statusMessage != null && Object.hasOwnProperty.call(message, "statusMessage"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusMessage);
                                if (message.requestedCancellation != null && Object.hasOwnProperty.call(message, "requestedCancellation"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.requestedCancellation);
                                if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.security.privateca.v1beta1.OperationMetadata.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OperationMetadata message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.security.privateca.v1beta1.OperationMetadata} OperationMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperationMetadata.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.security.privateca.v1beta1.OperationMetadata();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 2: {
                                            message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    case 3: {
                                            message.target = reader.string();
                                            break;
                                        }
                                    case 4: {
                                            message.verb = reader.string();
                                            break;
                                        }
                                    case 5: {
                                            message.statusMessage = reader.string();
                                            break;
                                        }
                                    case 6: {
                                            message.requestedCancellation = reader.bool();
                                            break;
                                        }
                                    case 7: {
                                            message.apiVersion = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.security.privateca.v1beta1.OperationMetadata} OperationMetadata
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OperationMetadata message.
                             * @function verify
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OperationMetadata.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                    if (error)
                                        return "createTime." + error;
                                }
                                if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                    if (error)
                                        return "endTime." + error;
                                }
                                if (message.target != null && message.hasOwnProperty("target"))
                                    if (!$util.isString(message.target))
                                        return "target: string expected";
                                if (message.verb != null && message.hasOwnProperty("verb"))
                                    if (!$util.isString(message.verb))
                                        return "verb: string expected";
                                if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                    if (!$util.isString(message.statusMessage))
                                        return "statusMessage: string expected";
                                if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                    if (typeof message.requestedCancellation !== "boolean")
                                        return "requestedCancellation: boolean expected";
                                if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                    if (!$util.isString(message.apiVersion))
                                        return "apiVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.security.privateca.v1beta1.OperationMetadata} OperationMetadata
                             */
                            OperationMetadata.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.security.privateca.v1beta1.OperationMetadata)
                                    return object;
                                var message = new $root.google.cloud.security.privateca.v1beta1.OperationMetadata();
                                if (object.createTime != null) {
                                    if (typeof object.createTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.OperationMetadata.createTime: object expected");
                                    message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                                }
                                if (object.endTime != null) {
                                    if (typeof object.endTime !== "object")
                                        throw TypeError(".google.cloud.security.privateca.v1beta1.OperationMetadata.endTime: object expected");
                                    message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                                }
                                if (object.target != null)
                                    message.target = String(object.target);
                                if (object.verb != null)
                                    message.verb = String(object.verb);
                                if (object.statusMessage != null)
                                    message.statusMessage = String(object.statusMessage);
                                if (object.requestedCancellation != null)
                                    message.requestedCancellation = Boolean(object.requestedCancellation);
                                if (object.apiVersion != null)
                                    message.apiVersion = String(object.apiVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {google.cloud.security.privateca.v1beta1.OperationMetadata} message OperationMetadata
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OperationMetadata.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.createTime = null;
                                    object.endTime = null;
                                    object.target = "";
                                    object.verb = "";
                                    object.statusMessage = "";
                                    object.requestedCancellation = false;
                                    object.apiVersion = "";
                                }
                                if (message.createTime != null && message.hasOwnProperty("createTime"))
                                    object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                                if (message.endTime != null && message.hasOwnProperty("endTime"))
                                    object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                                if (message.target != null && message.hasOwnProperty("target"))
                                    object.target = message.target;
                                if (message.verb != null && message.hasOwnProperty("verb"))
                                    object.verb = message.verb;
                                if (message.statusMessage != null && message.hasOwnProperty("statusMessage"))
                                    object.statusMessage = message.statusMessage;
                                if (message.requestedCancellation != null && message.hasOwnProperty("requestedCancellation"))
                                    object.requestedCancellation = message.requestedCancellation;
                                if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                    object.apiVersion = message.apiVersion;
                                return object;
                            };
    
                            /**
                             * Converts this OperationMetadata to JSON.
                             * @function toJSON
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OperationMetadata.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for OperationMetadata
                             * @function getTypeUrl
                             * @memberof google.cloud.security.privateca.v1beta1.OperationMetadata
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            OperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.security.privateca.v1beta1.OperationMetadata";
                            };
    
                            return OperationMetadata;
                        })();
    
                        return v1beta1;
                    })();
    
                    return privateca;
                })();
    
                return security;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            api.CommonLanguageSettings = (function() {
    
                /**
                 * Properties of a CommonLanguageSettings.
                 * @memberof google.api
                 * @interface ICommonLanguageSettings
                 * @property {string|null} [referenceDocsUri] CommonLanguageSettings referenceDocsUri
                 * @property {Array.<google.api.ClientLibraryDestination>|null} [destinations] CommonLanguageSettings destinations
                 */
    
                /**
                 * Constructs a new CommonLanguageSettings.
                 * @memberof google.api
                 * @classdesc Represents a CommonLanguageSettings.
                 * @implements ICommonLanguageSettings
                 * @constructor
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 */
                function CommonLanguageSettings(properties) {
                    this.destinations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CommonLanguageSettings referenceDocsUri.
                 * @member {string} referenceDocsUri
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.referenceDocsUri = "";
    
                /**
                 * CommonLanguageSettings destinations.
                 * @member {Array.<google.api.ClientLibraryDestination>} destinations
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 */
                CommonLanguageSettings.prototype.destinations = $util.emptyArray;
    
                /**
                 * Creates a new CommonLanguageSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings=} [properties] Properties to set
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings instance
                 */
                CommonLanguageSettings.create = function create(properties) {
                    return new CommonLanguageSettings(properties);
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.referenceDocsUri != null && Object.hasOwnProperty.call(message, "referenceDocsUri"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.referenceDocsUri);
                    if (message.destinations != null && message.destinations.length) {
                        writer.uint32(/* id 2, wireType 2 =*/18).fork();
                        for (var i = 0; i < message.destinations.length; ++i)
                            writer.int32(message.destinations[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified CommonLanguageSettings message, length delimited. Does not implicitly {@link google.api.CommonLanguageSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.ICommonLanguageSettings} message CommonLanguageSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CommonLanguageSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CommonLanguageSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.referenceDocsUri = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.destinations && message.destinations.length))
                                    message.destinations = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.destinations.push(reader.int32());
                                } else
                                    message.destinations.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CommonLanguageSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CommonLanguageSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CommonLanguageSettings message.
                 * @function verify
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CommonLanguageSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        if (!$util.isString(message.referenceDocsUri))
                            return "referenceDocsUri: string expected";
                    if (message.destinations != null && message.hasOwnProperty("destinations")) {
                        if (!Array.isArray(message.destinations))
                            return "destinations: array expected";
                        for (var i = 0; i < message.destinations.length; ++i)
                            switch (message.destinations[i]) {
                            default:
                                return "destinations: enum value[] expected";
                            case 0:
                            case 10:
                            case 20:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a CommonLanguageSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CommonLanguageSettings} CommonLanguageSettings
                 */
                CommonLanguageSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CommonLanguageSettings)
                        return object;
                    var message = new $root.google.api.CommonLanguageSettings();
                    if (object.referenceDocsUri != null)
                        message.referenceDocsUri = String(object.referenceDocsUri);
                    if (object.destinations) {
                        if (!Array.isArray(object.destinations))
                            throw TypeError(".google.api.CommonLanguageSettings.destinations: array expected");
                        message.destinations = [];
                        for (var i = 0; i < object.destinations.length; ++i)
                            switch (object.destinations[i]) {
                            default:
                                if (typeof object.destinations[i] === "number") {
                                    message.destinations[i] = object.destinations[i];
                                    break;
                                }
                            case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
                            case 0:
                                message.destinations[i] = 0;
                                break;
                            case "GITHUB":
                            case 10:
                                message.destinations[i] = 10;
                                break;
                            case "PACKAGE_MANAGER":
                            case 20:
                                message.destinations[i] = 20;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CommonLanguageSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {google.api.CommonLanguageSettings} message CommonLanguageSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CommonLanguageSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.destinations = [];
                    if (options.defaults)
                        object.referenceDocsUri = "";
                    if (message.referenceDocsUri != null && message.hasOwnProperty("referenceDocsUri"))
                        object.referenceDocsUri = message.referenceDocsUri;
                    if (message.destinations && message.destinations.length) {
                        object.destinations = [];
                        for (var j = 0; j < message.destinations.length; ++j)
                            object.destinations[j] = options.enums === String ? $root.google.api.ClientLibraryDestination[message.destinations[j]] === undefined ? message.destinations[j] : $root.google.api.ClientLibraryDestination[message.destinations[j]] : message.destinations[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this CommonLanguageSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CommonLanguageSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CommonLanguageSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CommonLanguageSettings
                 * @function getTypeUrl
                 * @memberof google.api.CommonLanguageSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CommonLanguageSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CommonLanguageSettings";
                };
    
                return CommonLanguageSettings;
            })();
    
            api.ClientLibrarySettings = (function() {
    
                /**
                 * Properties of a ClientLibrarySettings.
                 * @memberof google.api
                 * @interface IClientLibrarySettings
                 * @property {string|null} [version] ClientLibrarySettings version
                 * @property {google.api.LaunchStage|null} [launchStage] ClientLibrarySettings launchStage
                 * @property {boolean|null} [restNumericEnums] ClientLibrarySettings restNumericEnums
                 * @property {google.api.IJavaSettings|null} [javaSettings] ClientLibrarySettings javaSettings
                 * @property {google.api.ICppSettings|null} [cppSettings] ClientLibrarySettings cppSettings
                 * @property {google.api.IPhpSettings|null} [phpSettings] ClientLibrarySettings phpSettings
                 * @property {google.api.IPythonSettings|null} [pythonSettings] ClientLibrarySettings pythonSettings
                 * @property {google.api.INodeSettings|null} [nodeSettings] ClientLibrarySettings nodeSettings
                 * @property {google.api.IDotnetSettings|null} [dotnetSettings] ClientLibrarySettings dotnetSettings
                 * @property {google.api.IRubySettings|null} [rubySettings] ClientLibrarySettings rubySettings
                 * @property {google.api.IGoSettings|null} [goSettings] ClientLibrarySettings goSettings
                 */
    
                /**
                 * Constructs a new ClientLibrarySettings.
                 * @memberof google.api
                 * @classdesc Represents a ClientLibrarySettings.
                 * @implements IClientLibrarySettings
                 * @constructor
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 */
                function ClientLibrarySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ClientLibrarySettings version.
                 * @member {string} version
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.version = "";
    
                /**
                 * ClientLibrarySettings launchStage.
                 * @member {google.api.LaunchStage} launchStage
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.launchStage = 0;
    
                /**
                 * ClientLibrarySettings restNumericEnums.
                 * @member {boolean} restNumericEnums
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.restNumericEnums = false;
    
                /**
                 * ClientLibrarySettings javaSettings.
                 * @member {google.api.IJavaSettings|null|undefined} javaSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.javaSettings = null;
    
                /**
                 * ClientLibrarySettings cppSettings.
                 * @member {google.api.ICppSettings|null|undefined} cppSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.cppSettings = null;
    
                /**
                 * ClientLibrarySettings phpSettings.
                 * @member {google.api.IPhpSettings|null|undefined} phpSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.phpSettings = null;
    
                /**
                 * ClientLibrarySettings pythonSettings.
                 * @member {google.api.IPythonSettings|null|undefined} pythonSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.pythonSettings = null;
    
                /**
                 * ClientLibrarySettings nodeSettings.
                 * @member {google.api.INodeSettings|null|undefined} nodeSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.nodeSettings = null;
    
                /**
                 * ClientLibrarySettings dotnetSettings.
                 * @member {google.api.IDotnetSettings|null|undefined} dotnetSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.dotnetSettings = null;
    
                /**
                 * ClientLibrarySettings rubySettings.
                 * @member {google.api.IRubySettings|null|undefined} rubySettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.rubySettings = null;
    
                /**
                 * ClientLibrarySettings goSettings.
                 * @member {google.api.IGoSettings|null|undefined} goSettings
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 */
                ClientLibrarySettings.prototype.goSettings = null;
    
                /**
                 * Creates a new ClientLibrarySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings=} [properties] Properties to set
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings instance
                 */
                ClientLibrarySettings.create = function create(properties) {
                    return new ClientLibrarySettings(properties);
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                    if (message.launchStage != null && Object.hasOwnProperty.call(message, "launchStage"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.launchStage);
                    if (message.restNumericEnums != null && Object.hasOwnProperty.call(message, "restNumericEnums"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.restNumericEnums);
                    if (message.javaSettings != null && Object.hasOwnProperty.call(message, "javaSettings"))
                        $root.google.api.JavaSettings.encode(message.javaSettings, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                    if (message.cppSettings != null && Object.hasOwnProperty.call(message, "cppSettings"))
                        $root.google.api.CppSettings.encode(message.cppSettings, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                    if (message.phpSettings != null && Object.hasOwnProperty.call(message, "phpSettings"))
                        $root.google.api.PhpSettings.encode(message.phpSettings, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                    if (message.pythonSettings != null && Object.hasOwnProperty.call(message, "pythonSettings"))
                        $root.google.api.PythonSettings.encode(message.pythonSettings, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                    if (message.nodeSettings != null && Object.hasOwnProperty.call(message, "nodeSettings"))
                        $root.google.api.NodeSettings.encode(message.nodeSettings, writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                    if (message.dotnetSettings != null && Object.hasOwnProperty.call(message, "dotnetSettings"))
                        $root.google.api.DotnetSettings.encode(message.dotnetSettings, writer.uint32(/* id 26, wireType 2 =*/210).fork()).ldelim();
                    if (message.rubySettings != null && Object.hasOwnProperty.call(message, "rubySettings"))
                        $root.google.api.RubySettings.encode(message.rubySettings, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                    if (message.goSettings != null && Object.hasOwnProperty.call(message, "goSettings"))
                        $root.google.api.GoSettings.encode(message.goSettings, writer.uint32(/* id 28, wireType 2 =*/226).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ClientLibrarySettings message, length delimited. Does not implicitly {@link google.api.ClientLibrarySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.IClientLibrarySettings} message ClientLibrarySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ClientLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ClientLibrarySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.version = reader.string();
                                break;
                            }
                        case 2: {
                                message.launchStage = reader.int32();
                                break;
                            }
                        case 3: {
                                message.restNumericEnums = reader.bool();
                                break;
                            }
                        case 21: {
                                message.javaSettings = $root.google.api.JavaSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 22: {
                                message.cppSettings = $root.google.api.CppSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 23: {
                                message.phpSettings = $root.google.api.PhpSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 24: {
                                message.pythonSettings = $root.google.api.PythonSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 25: {
                                message.nodeSettings = $root.google.api.NodeSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 26: {
                                message.dotnetSettings = $root.google.api.DotnetSettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 27: {
                                message.rubySettings = $root.google.api.RubySettings.decode(reader, reader.uint32());
                                break;
                            }
                        case 28: {
                                message.goSettings = $root.google.api.GoSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ClientLibrarySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ClientLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ClientLibrarySettings message.
                 * @function verify
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ClientLibrarySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.version != null && message.hasOwnProperty("version"))
                        if (!$util.isString(message.version))
                            return "version: string expected";
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        switch (message.launchStage) {
                        default:
                            return "launchStage: enum value expected";
                        case 0:
                        case 6:
                        case 7:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        }
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        if (typeof message.restNumericEnums !== "boolean")
                            return "restNumericEnums: boolean expected";
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings")) {
                        var error = $root.google.api.JavaSettings.verify(message.javaSettings);
                        if (error)
                            return "javaSettings." + error;
                    }
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings")) {
                        var error = $root.google.api.CppSettings.verify(message.cppSettings);
                        if (error)
                            return "cppSettings." + error;
                    }
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings")) {
                        var error = $root.google.api.PhpSettings.verify(message.phpSettings);
                        if (error)
                            return "phpSettings." + error;
                    }
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings")) {
                        var error = $root.google.api.PythonSettings.verify(message.pythonSettings);
                        if (error)
                            return "pythonSettings." + error;
                    }
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings")) {
                        var error = $root.google.api.NodeSettings.verify(message.nodeSettings);
                        if (error)
                            return "nodeSettings." + error;
                    }
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings")) {
                        var error = $root.google.api.DotnetSettings.verify(message.dotnetSettings);
                        if (error)
                            return "dotnetSettings." + error;
                    }
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings")) {
                        var error = $root.google.api.RubySettings.verify(message.rubySettings);
                        if (error)
                            return "rubySettings." + error;
                    }
                    if (message.goSettings != null && message.hasOwnProperty("goSettings")) {
                        var error = $root.google.api.GoSettings.verify(message.goSettings);
                        if (error)
                            return "goSettings." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ClientLibrarySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ClientLibrarySettings} ClientLibrarySettings
                 */
                ClientLibrarySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ClientLibrarySettings)
                        return object;
                    var message = new $root.google.api.ClientLibrarySettings();
                    if (object.version != null)
                        message.version = String(object.version);
                    switch (object.launchStage) {
                    default:
                        if (typeof object.launchStage === "number") {
                            message.launchStage = object.launchStage;
                            break;
                        }
                        break;
                    case "LAUNCH_STAGE_UNSPECIFIED":
                    case 0:
                        message.launchStage = 0;
                        break;
                    case "UNIMPLEMENTED":
                    case 6:
                        message.launchStage = 6;
                        break;
                    case "PRELAUNCH":
                    case 7:
                        message.launchStage = 7;
                        break;
                    case "EARLY_ACCESS":
                    case 1:
                        message.launchStage = 1;
                        break;
                    case "ALPHA":
                    case 2:
                        message.launchStage = 2;
                        break;
                    case "BETA":
                    case 3:
                        message.launchStage = 3;
                        break;
                    case "GA":
                    case 4:
                        message.launchStage = 4;
                        break;
                    case "DEPRECATED":
                    case 5:
                        message.launchStage = 5;
                        break;
                    }
                    if (object.restNumericEnums != null)
                        message.restNumericEnums = Boolean(object.restNumericEnums);
                    if (object.javaSettings != null) {
                        if (typeof object.javaSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.javaSettings: object expected");
                        message.javaSettings = $root.google.api.JavaSettings.fromObject(object.javaSettings);
                    }
                    if (object.cppSettings != null) {
                        if (typeof object.cppSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.cppSettings: object expected");
                        message.cppSettings = $root.google.api.CppSettings.fromObject(object.cppSettings);
                    }
                    if (object.phpSettings != null) {
                        if (typeof object.phpSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.phpSettings: object expected");
                        message.phpSettings = $root.google.api.PhpSettings.fromObject(object.phpSettings);
                    }
                    if (object.pythonSettings != null) {
                        if (typeof object.pythonSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.pythonSettings: object expected");
                        message.pythonSettings = $root.google.api.PythonSettings.fromObject(object.pythonSettings);
                    }
                    if (object.nodeSettings != null) {
                        if (typeof object.nodeSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.nodeSettings: object expected");
                        message.nodeSettings = $root.google.api.NodeSettings.fromObject(object.nodeSettings);
                    }
                    if (object.dotnetSettings != null) {
                        if (typeof object.dotnetSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.dotnetSettings: object expected");
                        message.dotnetSettings = $root.google.api.DotnetSettings.fromObject(object.dotnetSettings);
                    }
                    if (object.rubySettings != null) {
                        if (typeof object.rubySettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.rubySettings: object expected");
                        message.rubySettings = $root.google.api.RubySettings.fromObject(object.rubySettings);
                    }
                    if (object.goSettings != null) {
                        if (typeof object.goSettings !== "object")
                            throw TypeError(".google.api.ClientLibrarySettings.goSettings: object expected");
                        message.goSettings = $root.google.api.GoSettings.fromObject(object.goSettings);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ClientLibrarySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {google.api.ClientLibrarySettings} message ClientLibrarySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ClientLibrarySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.version = "";
                        object.launchStage = options.enums === String ? "LAUNCH_STAGE_UNSPECIFIED" : 0;
                        object.restNumericEnums = false;
                        object.javaSettings = null;
                        object.cppSettings = null;
                        object.phpSettings = null;
                        object.pythonSettings = null;
                        object.nodeSettings = null;
                        object.dotnetSettings = null;
                        object.rubySettings = null;
                        object.goSettings = null;
                    }
                    if (message.version != null && message.hasOwnProperty("version"))
                        object.version = message.version;
                    if (message.launchStage != null && message.hasOwnProperty("launchStage"))
                        object.launchStage = options.enums === String ? $root.google.api.LaunchStage[message.launchStage] === undefined ? message.launchStage : $root.google.api.LaunchStage[message.launchStage] : message.launchStage;
                    if (message.restNumericEnums != null && message.hasOwnProperty("restNumericEnums"))
                        object.restNumericEnums = message.restNumericEnums;
                    if (message.javaSettings != null && message.hasOwnProperty("javaSettings"))
                        object.javaSettings = $root.google.api.JavaSettings.toObject(message.javaSettings, options);
                    if (message.cppSettings != null && message.hasOwnProperty("cppSettings"))
                        object.cppSettings = $root.google.api.CppSettings.toObject(message.cppSettings, options);
                    if (message.phpSettings != null && message.hasOwnProperty("phpSettings"))
                        object.phpSettings = $root.google.api.PhpSettings.toObject(message.phpSettings, options);
                    if (message.pythonSettings != null && message.hasOwnProperty("pythonSettings"))
                        object.pythonSettings = $root.google.api.PythonSettings.toObject(message.pythonSettings, options);
                    if (message.nodeSettings != null && message.hasOwnProperty("nodeSettings"))
                        object.nodeSettings = $root.google.api.NodeSettings.toObject(message.nodeSettings, options);
                    if (message.dotnetSettings != null && message.hasOwnProperty("dotnetSettings"))
                        object.dotnetSettings = $root.google.api.DotnetSettings.toObject(message.dotnetSettings, options);
                    if (message.rubySettings != null && message.hasOwnProperty("rubySettings"))
                        object.rubySettings = $root.google.api.RubySettings.toObject(message.rubySettings, options);
                    if (message.goSettings != null && message.hasOwnProperty("goSettings"))
                        object.goSettings = $root.google.api.GoSettings.toObject(message.goSettings, options);
                    return object;
                };
    
                /**
                 * Converts this ClientLibrarySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.ClientLibrarySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ClientLibrarySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ClientLibrarySettings
                 * @function getTypeUrl
                 * @memberof google.api.ClientLibrarySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ClientLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ClientLibrarySettings";
                };
    
                return ClientLibrarySettings;
            })();
    
            api.Publishing = (function() {
    
                /**
                 * Properties of a Publishing.
                 * @memberof google.api
                 * @interface IPublishing
                 * @property {Array.<google.api.IMethodSettings>|null} [methodSettings] Publishing methodSettings
                 * @property {string|null} [newIssueUri] Publishing newIssueUri
                 * @property {string|null} [documentationUri] Publishing documentationUri
                 * @property {string|null} [apiShortName] Publishing apiShortName
                 * @property {string|null} [githubLabel] Publishing githubLabel
                 * @property {Array.<string>|null} [codeownerGithubTeams] Publishing codeownerGithubTeams
                 * @property {string|null} [docTagPrefix] Publishing docTagPrefix
                 * @property {google.api.ClientLibraryOrganization|null} [organization] Publishing organization
                 * @property {Array.<google.api.IClientLibrarySettings>|null} [librarySettings] Publishing librarySettings
                 */
    
                /**
                 * Constructs a new Publishing.
                 * @memberof google.api
                 * @classdesc Represents a Publishing.
                 * @implements IPublishing
                 * @constructor
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 */
                function Publishing(properties) {
                    this.methodSettings = [];
                    this.codeownerGithubTeams = [];
                    this.librarySettings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Publishing methodSettings.
                 * @member {Array.<google.api.IMethodSettings>} methodSettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.methodSettings = $util.emptyArray;
    
                /**
                 * Publishing newIssueUri.
                 * @member {string} newIssueUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.newIssueUri = "";
    
                /**
                 * Publishing documentationUri.
                 * @member {string} documentationUri
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.documentationUri = "";
    
                /**
                 * Publishing apiShortName.
                 * @member {string} apiShortName
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.apiShortName = "";
    
                /**
                 * Publishing githubLabel.
                 * @member {string} githubLabel
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.githubLabel = "";
    
                /**
                 * Publishing codeownerGithubTeams.
                 * @member {Array.<string>} codeownerGithubTeams
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.codeownerGithubTeams = $util.emptyArray;
    
                /**
                 * Publishing docTagPrefix.
                 * @member {string} docTagPrefix
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.docTagPrefix = "";
    
                /**
                 * Publishing organization.
                 * @member {google.api.ClientLibraryOrganization} organization
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.organization = 0;
    
                /**
                 * Publishing librarySettings.
                 * @member {Array.<google.api.IClientLibrarySettings>} librarySettings
                 * @memberof google.api.Publishing
                 * @instance
                 */
                Publishing.prototype.librarySettings = $util.emptyArray;
    
                /**
                 * Creates a new Publishing instance using the specified properties.
                 * @function create
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing=} [properties] Properties to set
                 * @returns {google.api.Publishing} Publishing instance
                 */
                Publishing.create = function create(properties) {
                    return new Publishing(properties);
                };
    
                /**
                 * Encodes the specified Publishing message. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.methodSettings != null && message.methodSettings.length)
                        for (var i = 0; i < message.methodSettings.length; ++i)
                            $root.google.api.MethodSettings.encode(message.methodSettings[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.newIssueUri != null && Object.hasOwnProperty.call(message, "newIssueUri"))
                        writer.uint32(/* id 101, wireType 2 =*/810).string(message.newIssueUri);
                    if (message.documentationUri != null && Object.hasOwnProperty.call(message, "documentationUri"))
                        writer.uint32(/* id 102, wireType 2 =*/818).string(message.documentationUri);
                    if (message.apiShortName != null && Object.hasOwnProperty.call(message, "apiShortName"))
                        writer.uint32(/* id 103, wireType 2 =*/826).string(message.apiShortName);
                    if (message.githubLabel != null && Object.hasOwnProperty.call(message, "githubLabel"))
                        writer.uint32(/* id 104, wireType 2 =*/834).string(message.githubLabel);
                    if (message.codeownerGithubTeams != null && message.codeownerGithubTeams.length)
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            writer.uint32(/* id 105, wireType 2 =*/842).string(message.codeownerGithubTeams[i]);
                    if (message.docTagPrefix != null && Object.hasOwnProperty.call(message, "docTagPrefix"))
                        writer.uint32(/* id 106, wireType 2 =*/850).string(message.docTagPrefix);
                    if (message.organization != null && Object.hasOwnProperty.call(message, "organization"))
                        writer.uint32(/* id 107, wireType 0 =*/856).int32(message.organization);
                    if (message.librarySettings != null && message.librarySettings.length)
                        for (var i = 0; i < message.librarySettings.length; ++i)
                            $root.google.api.ClientLibrarySettings.encode(message.librarySettings[i], writer.uint32(/* id 109, wireType 2 =*/874).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Publishing message, length delimited. Does not implicitly {@link google.api.Publishing.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.IPublishing} message Publishing message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Publishing.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Publishing();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.methodSettings && message.methodSettings.length))
                                    message.methodSettings = [];
                                message.methodSettings.push($root.google.api.MethodSettings.decode(reader, reader.uint32()));
                                break;
                            }
                        case 101: {
                                message.newIssueUri = reader.string();
                                break;
                            }
                        case 102: {
                                message.documentationUri = reader.string();
                                break;
                            }
                        case 103: {
                                message.apiShortName = reader.string();
                                break;
                            }
                        case 104: {
                                message.githubLabel = reader.string();
                                break;
                            }
                        case 105: {
                                if (!(message.codeownerGithubTeams && message.codeownerGithubTeams.length))
                                    message.codeownerGithubTeams = [];
                                message.codeownerGithubTeams.push(reader.string());
                                break;
                            }
                        case 106: {
                                message.docTagPrefix = reader.string();
                                break;
                            }
                        case 107: {
                                message.organization = reader.int32();
                                break;
                            }
                        case 109: {
                                if (!(message.librarySettings && message.librarySettings.length))
                                    message.librarySettings = [];
                                message.librarySettings.push($root.google.api.ClientLibrarySettings.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Publishing message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Publishing
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Publishing} Publishing
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Publishing.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Publishing message.
                 * @function verify
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Publishing.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.methodSettings != null && message.hasOwnProperty("methodSettings")) {
                        if (!Array.isArray(message.methodSettings))
                            return "methodSettings: array expected";
                        for (var i = 0; i < message.methodSettings.length; ++i) {
                            var error = $root.google.api.MethodSettings.verify(message.methodSettings[i]);
                            if (error)
                                return "methodSettings." + error;
                        }
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        if (!$util.isString(message.newIssueUri))
                            return "newIssueUri: string expected";
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        if (!$util.isString(message.documentationUri))
                            return "documentationUri: string expected";
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        if (!$util.isString(message.apiShortName))
                            return "apiShortName: string expected";
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        if (!$util.isString(message.githubLabel))
                            return "githubLabel: string expected";
                    if (message.codeownerGithubTeams != null && message.hasOwnProperty("codeownerGithubTeams")) {
                        if (!Array.isArray(message.codeownerGithubTeams))
                            return "codeownerGithubTeams: array expected";
                        for (var i = 0; i < message.codeownerGithubTeams.length; ++i)
                            if (!$util.isString(message.codeownerGithubTeams[i]))
                                return "codeownerGithubTeams: string[] expected";
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        if (!$util.isString(message.docTagPrefix))
                            return "docTagPrefix: string expected";
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        switch (message.organization) {
                        default:
                            return "organization: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                            break;
                        }
                    if (message.librarySettings != null && message.hasOwnProperty("librarySettings")) {
                        if (!Array.isArray(message.librarySettings))
                            return "librarySettings: array expected";
                        for (var i = 0; i < message.librarySettings.length; ++i) {
                            var error = $root.google.api.ClientLibrarySettings.verify(message.librarySettings[i]);
                            if (error)
                                return "librarySettings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Publishing message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Publishing} Publishing
                 */
                Publishing.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Publishing)
                        return object;
                    var message = new $root.google.api.Publishing();
                    if (object.methodSettings) {
                        if (!Array.isArray(object.methodSettings))
                            throw TypeError(".google.api.Publishing.methodSettings: array expected");
                        message.methodSettings = [];
                        for (var i = 0; i < object.methodSettings.length; ++i) {
                            if (typeof object.methodSettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.methodSettings: object expected");
                            message.methodSettings[i] = $root.google.api.MethodSettings.fromObject(object.methodSettings[i]);
                        }
                    }
                    if (object.newIssueUri != null)
                        message.newIssueUri = String(object.newIssueUri);
                    if (object.documentationUri != null)
                        message.documentationUri = String(object.documentationUri);
                    if (object.apiShortName != null)
                        message.apiShortName = String(object.apiShortName);
                    if (object.githubLabel != null)
                        message.githubLabel = String(object.githubLabel);
                    if (object.codeownerGithubTeams) {
                        if (!Array.isArray(object.codeownerGithubTeams))
                            throw TypeError(".google.api.Publishing.codeownerGithubTeams: array expected");
                        message.codeownerGithubTeams = [];
                        for (var i = 0; i < object.codeownerGithubTeams.length; ++i)
                            message.codeownerGithubTeams[i] = String(object.codeownerGithubTeams[i]);
                    }
                    if (object.docTagPrefix != null)
                        message.docTagPrefix = String(object.docTagPrefix);
                    switch (object.organization) {
                    default:
                        if (typeof object.organization === "number") {
                            message.organization = object.organization;
                            break;
                        }
                        break;
                    case "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED":
                    case 0:
                        message.organization = 0;
                        break;
                    case "CLOUD":
                    case 1:
                        message.organization = 1;
                        break;
                    case "ADS":
                    case 2:
                        message.organization = 2;
                        break;
                    case "PHOTOS":
                    case 3:
                        message.organization = 3;
                        break;
                    case "STREET_VIEW":
                    case 4:
                        message.organization = 4;
                        break;
                    }
                    if (object.librarySettings) {
                        if (!Array.isArray(object.librarySettings))
                            throw TypeError(".google.api.Publishing.librarySettings: array expected");
                        message.librarySettings = [];
                        for (var i = 0; i < object.librarySettings.length; ++i) {
                            if (typeof object.librarySettings[i] !== "object")
                                throw TypeError(".google.api.Publishing.librarySettings: object expected");
                            message.librarySettings[i] = $root.google.api.ClientLibrarySettings.fromObject(object.librarySettings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Publishing message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Publishing
                 * @static
                 * @param {google.api.Publishing} message Publishing
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Publishing.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.methodSettings = [];
                        object.codeownerGithubTeams = [];
                        object.librarySettings = [];
                    }
                    if (options.defaults) {
                        object.newIssueUri = "";
                        object.documentationUri = "";
                        object.apiShortName = "";
                        object.githubLabel = "";
                        object.docTagPrefix = "";
                        object.organization = options.enums === String ? "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED" : 0;
                    }
                    if (message.methodSettings && message.methodSettings.length) {
                        object.methodSettings = [];
                        for (var j = 0; j < message.methodSettings.length; ++j)
                            object.methodSettings[j] = $root.google.api.MethodSettings.toObject(message.methodSettings[j], options);
                    }
                    if (message.newIssueUri != null && message.hasOwnProperty("newIssueUri"))
                        object.newIssueUri = message.newIssueUri;
                    if (message.documentationUri != null && message.hasOwnProperty("documentationUri"))
                        object.documentationUri = message.documentationUri;
                    if (message.apiShortName != null && message.hasOwnProperty("apiShortName"))
                        object.apiShortName = message.apiShortName;
                    if (message.githubLabel != null && message.hasOwnProperty("githubLabel"))
                        object.githubLabel = message.githubLabel;
                    if (message.codeownerGithubTeams && message.codeownerGithubTeams.length) {
                        object.codeownerGithubTeams = [];
                        for (var j = 0; j < message.codeownerGithubTeams.length; ++j)
                            object.codeownerGithubTeams[j] = message.codeownerGithubTeams[j];
                    }
                    if (message.docTagPrefix != null && message.hasOwnProperty("docTagPrefix"))
                        object.docTagPrefix = message.docTagPrefix;
                    if (message.organization != null && message.hasOwnProperty("organization"))
                        object.organization = options.enums === String ? $root.google.api.ClientLibraryOrganization[message.organization] === undefined ? message.organization : $root.google.api.ClientLibraryOrganization[message.organization] : message.organization;
                    if (message.librarySettings && message.librarySettings.length) {
                        object.librarySettings = [];
                        for (var j = 0; j < message.librarySettings.length; ++j)
                            object.librarySettings[j] = $root.google.api.ClientLibrarySettings.toObject(message.librarySettings[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Publishing to JSON.
                 * @function toJSON
                 * @memberof google.api.Publishing
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Publishing.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Publishing
                 * @function getTypeUrl
                 * @memberof google.api.Publishing
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Publishing.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Publishing";
                };
    
                return Publishing;
            })();
    
            api.JavaSettings = (function() {
    
                /**
                 * Properties of a JavaSettings.
                 * @memberof google.api
                 * @interface IJavaSettings
                 * @property {string|null} [libraryPackage] JavaSettings libraryPackage
                 * @property {Object.<string,string>|null} [serviceClassNames] JavaSettings serviceClassNames
                 * @property {google.api.ICommonLanguageSettings|null} [common] JavaSettings common
                 */
    
                /**
                 * Constructs a new JavaSettings.
                 * @memberof google.api
                 * @classdesc Represents a JavaSettings.
                 * @implements IJavaSettings
                 * @constructor
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 */
                function JavaSettings(properties) {
                    this.serviceClassNames = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * JavaSettings libraryPackage.
                 * @member {string} libraryPackage
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.libraryPackage = "";
    
                /**
                 * JavaSettings serviceClassNames.
                 * @member {Object.<string,string>} serviceClassNames
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.serviceClassNames = $util.emptyObject;
    
                /**
                 * JavaSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.JavaSettings
                 * @instance
                 */
                JavaSettings.prototype.common = null;
    
                /**
                 * Creates a new JavaSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings=} [properties] Properties to set
                 * @returns {google.api.JavaSettings} JavaSettings instance
                 */
                JavaSettings.create = function create(properties) {
                    return new JavaSettings(properties);
                };
    
                /**
                 * Encodes the specified JavaSettings message. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.libraryPackage != null && Object.hasOwnProperty.call(message, "libraryPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.libraryPackage);
                    if (message.serviceClassNames != null && Object.hasOwnProperty.call(message, "serviceClassNames"))
                        for (var keys = Object.keys(message.serviceClassNames), i = 0; i < keys.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.serviceClassNames[keys[i]]).ldelim();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified JavaSettings message, length delimited. Does not implicitly {@link google.api.JavaSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.IJavaSettings} message JavaSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                JavaSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.JavaSettings(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.libraryPackage = reader.string();
                                break;
                            }
                        case 2: {
                                if (message.serviceClassNames === $util.emptyObject)
                                    message.serviceClassNames = {};
                                var end2 = reader.uint32() + reader.pos;
                                key = "";
                                value = "";
                                while (reader.pos < end2) {
                                    var tag2 = reader.uint32();
                                    switch (tag2 >>> 3) {
                                    case 1:
                                        key = reader.string();
                                        break;
                                    case 2:
                                        value = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag2 & 7);
                                        break;
                                    }
                                }
                                message.serviceClassNames[key] = value;
                                break;
                            }
                        case 3: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a JavaSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.JavaSettings} JavaSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                JavaSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a JavaSettings message.
                 * @function verify
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                JavaSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        if (!$util.isString(message.libraryPackage))
                            return "libraryPackage: string expected";
                    if (message.serviceClassNames != null && message.hasOwnProperty("serviceClassNames")) {
                        if (!$util.isObject(message.serviceClassNames))
                            return "serviceClassNames: object expected";
                        var key = Object.keys(message.serviceClassNames);
                        for (var i = 0; i < key.length; ++i)
                            if (!$util.isString(message.serviceClassNames[key[i]]))
                                return "serviceClassNames: string{k:string} expected";
                    }
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a JavaSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.JavaSettings} JavaSettings
                 */
                JavaSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.JavaSettings)
                        return object;
                    var message = new $root.google.api.JavaSettings();
                    if (object.libraryPackage != null)
                        message.libraryPackage = String(object.libraryPackage);
                    if (object.serviceClassNames) {
                        if (typeof object.serviceClassNames !== "object")
                            throw TypeError(".google.api.JavaSettings.serviceClassNames: object expected");
                        message.serviceClassNames = {};
                        for (var keys = Object.keys(object.serviceClassNames), i = 0; i < keys.length; ++i)
                            message.serviceClassNames[keys[i]] = String(object.serviceClassNames[keys[i]]);
                    }
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.JavaSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a JavaSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {google.api.JavaSettings} message JavaSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                JavaSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.serviceClassNames = {};
                    if (options.defaults) {
                        object.libraryPackage = "";
                        object.common = null;
                    }
                    if (message.libraryPackage != null && message.hasOwnProperty("libraryPackage"))
                        object.libraryPackage = message.libraryPackage;
                    var keys2;
                    if (message.serviceClassNames && (keys2 = Object.keys(message.serviceClassNames)).length) {
                        object.serviceClassNames = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.serviceClassNames[keys2[j]] = message.serviceClassNames[keys2[j]];
                    }
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this JavaSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.JavaSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                JavaSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for JavaSettings
                 * @function getTypeUrl
                 * @memberof google.api.JavaSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                JavaSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.JavaSettings";
                };
    
                return JavaSettings;
            })();
    
            api.CppSettings = (function() {
    
                /**
                 * Properties of a CppSettings.
                 * @memberof google.api
                 * @interface ICppSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] CppSettings common
                 */
    
                /**
                 * Constructs a new CppSettings.
                 * @memberof google.api
                 * @classdesc Represents a CppSettings.
                 * @implements ICppSettings
                 * @constructor
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 */
                function CppSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CppSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.CppSettings
                 * @instance
                 */
                CppSettings.prototype.common = null;
    
                /**
                 * Creates a new CppSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings=} [properties] Properties to set
                 * @returns {google.api.CppSettings} CppSettings instance
                 */
                CppSettings.create = function create(properties) {
                    return new CppSettings(properties);
                };
    
                /**
                 * Encodes the specified CppSettings message. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified CppSettings message, length delimited. Does not implicitly {@link google.api.CppSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.ICppSettings} message CppSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CppSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CppSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CppSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CppSettings} CppSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CppSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CppSettings message.
                 * @function verify
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CppSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a CppSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CppSettings} CppSettings
                 */
                CppSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CppSettings)
                        return object;
                    var message = new $root.google.api.CppSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.CppSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a CppSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {google.api.CppSettings} message CppSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CppSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this CppSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.CppSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CppSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CppSettings
                 * @function getTypeUrl
                 * @memberof google.api.CppSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CppSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CppSettings";
                };
    
                return CppSettings;
            })();
    
            api.PhpSettings = (function() {
    
                /**
                 * Properties of a PhpSettings.
                 * @memberof google.api
                 * @interface IPhpSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PhpSettings common
                 */
    
                /**
                 * Constructs a new PhpSettings.
                 * @memberof google.api
                 * @classdesc Represents a PhpSettings.
                 * @implements IPhpSettings
                 * @constructor
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 */
                function PhpSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PhpSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PhpSettings
                 * @instance
                 */
                PhpSettings.prototype.common = null;
    
                /**
                 * Creates a new PhpSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings=} [properties] Properties to set
                 * @returns {google.api.PhpSettings} PhpSettings instance
                 */
                PhpSettings.create = function create(properties) {
                    return new PhpSettings(properties);
                };
    
                /**
                 * Encodes the specified PhpSettings message. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PhpSettings message, length delimited. Does not implicitly {@link google.api.PhpSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.IPhpSettings} message PhpSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PhpSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PhpSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PhpSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PhpSettings} PhpSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PhpSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PhpSettings message.
                 * @function verify
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PhpSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PhpSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PhpSettings} PhpSettings
                 */
                PhpSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PhpSettings)
                        return object;
                    var message = new $root.google.api.PhpSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PhpSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PhpSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {google.api.PhpSettings} message PhpSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PhpSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PhpSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PhpSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PhpSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PhpSettings
                 * @function getTypeUrl
                 * @memberof google.api.PhpSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PhpSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PhpSettings";
                };
    
                return PhpSettings;
            })();
    
            api.PythonSettings = (function() {
    
                /**
                 * Properties of a PythonSettings.
                 * @memberof google.api
                 * @interface IPythonSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] PythonSettings common
                 */
    
                /**
                 * Constructs a new PythonSettings.
                 * @memberof google.api
                 * @classdesc Represents a PythonSettings.
                 * @implements IPythonSettings
                 * @constructor
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 */
                function PythonSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * PythonSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.PythonSettings
                 * @instance
                 */
                PythonSettings.prototype.common = null;
    
                /**
                 * Creates a new PythonSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings=} [properties] Properties to set
                 * @returns {google.api.PythonSettings} PythonSettings instance
                 */
                PythonSettings.create = function create(properties) {
                    return new PythonSettings(properties);
                };
    
                /**
                 * Encodes the specified PythonSettings message. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified PythonSettings message, length delimited. Does not implicitly {@link google.api.PythonSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.IPythonSettings} message PythonSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                PythonSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.PythonSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a PythonSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.PythonSettings} PythonSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                PythonSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a PythonSettings message.
                 * @function verify
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                PythonSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a PythonSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.PythonSettings} PythonSettings
                 */
                PythonSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.PythonSettings)
                        return object;
                    var message = new $root.google.api.PythonSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.PythonSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a PythonSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {google.api.PythonSettings} message PythonSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                PythonSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this PythonSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.PythonSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                PythonSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for PythonSettings
                 * @function getTypeUrl
                 * @memberof google.api.PythonSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                PythonSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.PythonSettings";
                };
    
                return PythonSettings;
            })();
    
            api.NodeSettings = (function() {
    
                /**
                 * Properties of a NodeSettings.
                 * @memberof google.api
                 * @interface INodeSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] NodeSettings common
                 */
    
                /**
                 * Constructs a new NodeSettings.
                 * @memberof google.api
                 * @classdesc Represents a NodeSettings.
                 * @implements INodeSettings
                 * @constructor
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 */
                function NodeSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * NodeSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.NodeSettings
                 * @instance
                 */
                NodeSettings.prototype.common = null;
    
                /**
                 * Creates a new NodeSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings=} [properties] Properties to set
                 * @returns {google.api.NodeSettings} NodeSettings instance
                 */
                NodeSettings.create = function create(properties) {
                    return new NodeSettings(properties);
                };
    
                /**
                 * Encodes the specified NodeSettings message. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified NodeSettings message, length delimited. Does not implicitly {@link google.api.NodeSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.INodeSettings} message NodeSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                NodeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.NodeSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a NodeSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.NodeSettings} NodeSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                NodeSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a NodeSettings message.
                 * @function verify
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                NodeSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a NodeSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.NodeSettings} NodeSettings
                 */
                NodeSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.NodeSettings)
                        return object;
                    var message = new $root.google.api.NodeSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.NodeSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a NodeSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {google.api.NodeSettings} message NodeSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                NodeSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this NodeSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.NodeSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                NodeSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for NodeSettings
                 * @function getTypeUrl
                 * @memberof google.api.NodeSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                NodeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.NodeSettings";
                };
    
                return NodeSettings;
            })();
    
            api.DotnetSettings = (function() {
    
                /**
                 * Properties of a DotnetSettings.
                 * @memberof google.api
                 * @interface IDotnetSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] DotnetSettings common
                 */
    
                /**
                 * Constructs a new DotnetSettings.
                 * @memberof google.api
                 * @classdesc Represents a DotnetSettings.
                 * @implements IDotnetSettings
                 * @constructor
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 */
                function DotnetSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DotnetSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.DotnetSettings
                 * @instance
                 */
                DotnetSettings.prototype.common = null;
    
                /**
                 * Creates a new DotnetSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings=} [properties] Properties to set
                 * @returns {google.api.DotnetSettings} DotnetSettings instance
                 */
                DotnetSettings.create = function create(properties) {
                    return new DotnetSettings(properties);
                };
    
                /**
                 * Encodes the specified DotnetSettings message. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified DotnetSettings message, length delimited. Does not implicitly {@link google.api.DotnetSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.IDotnetSettings} message DotnetSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DotnetSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.DotnetSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DotnetSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DotnetSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DotnetSettings message.
                 * @function verify
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DotnetSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a DotnetSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.DotnetSettings} DotnetSettings
                 */
                DotnetSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.DotnetSettings)
                        return object;
                    var message = new $root.google.api.DotnetSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.DotnetSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DotnetSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {google.api.DotnetSettings} message DotnetSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DotnetSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this DotnetSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.DotnetSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DotnetSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DotnetSettings
                 * @function getTypeUrl
                 * @memberof google.api.DotnetSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DotnetSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.DotnetSettings";
                };
    
                return DotnetSettings;
            })();
    
            api.RubySettings = (function() {
    
                /**
                 * Properties of a RubySettings.
                 * @memberof google.api
                 * @interface IRubySettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] RubySettings common
                 */
    
                /**
                 * Constructs a new RubySettings.
                 * @memberof google.api
                 * @classdesc Represents a RubySettings.
                 * @implements IRubySettings
                 * @constructor
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 */
                function RubySettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * RubySettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.RubySettings
                 * @instance
                 */
                RubySettings.prototype.common = null;
    
                /**
                 * Creates a new RubySettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings=} [properties] Properties to set
                 * @returns {google.api.RubySettings} RubySettings instance
                 */
                RubySettings.create = function create(properties) {
                    return new RubySettings(properties);
                };
    
                /**
                 * Encodes the specified RubySettings message. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified RubySettings message, length delimited. Does not implicitly {@link google.api.RubySettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.IRubySettings} message RubySettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                RubySettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.RubySettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a RubySettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.RubySettings} RubySettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                RubySettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a RubySettings message.
                 * @function verify
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                RubySettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a RubySettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.RubySettings} RubySettings
                 */
                RubySettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.RubySettings)
                        return object;
                    var message = new $root.google.api.RubySettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.RubySettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a RubySettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {google.api.RubySettings} message RubySettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                RubySettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this RubySettings to JSON.
                 * @function toJSON
                 * @memberof google.api.RubySettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                RubySettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for RubySettings
                 * @function getTypeUrl
                 * @memberof google.api.RubySettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                RubySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.RubySettings";
                };
    
                return RubySettings;
            })();
    
            api.GoSettings = (function() {
    
                /**
                 * Properties of a GoSettings.
                 * @memberof google.api
                 * @interface IGoSettings
                 * @property {google.api.ICommonLanguageSettings|null} [common] GoSettings common
                 */
    
                /**
                 * Constructs a new GoSettings.
                 * @memberof google.api
                 * @classdesc Represents a GoSettings.
                 * @implements IGoSettings
                 * @constructor
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 */
                function GoSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GoSettings common.
                 * @member {google.api.ICommonLanguageSettings|null|undefined} common
                 * @memberof google.api.GoSettings
                 * @instance
                 */
                GoSettings.prototype.common = null;
    
                /**
                 * Creates a new GoSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings=} [properties] Properties to set
                 * @returns {google.api.GoSettings} GoSettings instance
                 */
                GoSettings.create = function create(properties) {
                    return new GoSettings(properties);
                };
    
                /**
                 * Encodes the specified GoSettings message. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.common != null && Object.hasOwnProperty.call(message, "common"))
                        $root.google.api.CommonLanguageSettings.encode(message.common, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GoSettings message, length delimited. Does not implicitly {@link google.api.GoSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.IGoSettings} message GoSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.GoSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.common = $root.google.api.CommonLanguageSettings.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GoSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.GoSettings} GoSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GoSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GoSettings message.
                 * @function verify
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GoSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.common != null && message.hasOwnProperty("common")) {
                        var error = $root.google.api.CommonLanguageSettings.verify(message.common);
                        if (error)
                            return "common." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a GoSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.GoSettings} GoSettings
                 */
                GoSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.GoSettings)
                        return object;
                    var message = new $root.google.api.GoSettings();
                    if (object.common != null) {
                        if (typeof object.common !== "object")
                            throw TypeError(".google.api.GoSettings.common: object expected");
                        message.common = $root.google.api.CommonLanguageSettings.fromObject(object.common);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GoSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {google.api.GoSettings} message GoSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GoSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.common = null;
                    if (message.common != null && message.hasOwnProperty("common"))
                        object.common = $root.google.api.CommonLanguageSettings.toObject(message.common, options);
                    return object;
                };
    
                /**
                 * Converts this GoSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.GoSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GoSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GoSettings
                 * @function getTypeUrl
                 * @memberof google.api.GoSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.GoSettings";
                };
    
                return GoSettings;
            })();
    
            api.MethodSettings = (function() {
    
                /**
                 * Properties of a MethodSettings.
                 * @memberof google.api
                 * @interface IMethodSettings
                 * @property {string|null} [selector] MethodSettings selector
                 * @property {google.api.MethodSettings.ILongRunning|null} [longRunning] MethodSettings longRunning
                 */
    
                /**
                 * Constructs a new MethodSettings.
                 * @memberof google.api
                 * @classdesc Represents a MethodSettings.
                 * @implements IMethodSettings
                 * @constructor
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 */
                function MethodSettings(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodSettings selector.
                 * @member {string} selector
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.selector = "";
    
                /**
                 * MethodSettings longRunning.
                 * @member {google.api.MethodSettings.ILongRunning|null|undefined} longRunning
                 * @memberof google.api.MethodSettings
                 * @instance
                 */
                MethodSettings.prototype.longRunning = null;
    
                /**
                 * Creates a new MethodSettings instance using the specified properties.
                 * @function create
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings=} [properties] Properties to set
                 * @returns {google.api.MethodSettings} MethodSettings instance
                 */
                MethodSettings.create = function create(properties) {
                    return new MethodSettings(properties);
                };
    
                /**
                 * Encodes the specified MethodSettings message. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.longRunning != null && Object.hasOwnProperty.call(message, "longRunning"))
                        $root.google.api.MethodSettings.LongRunning.encode(message.longRunning, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodSettings message, length delimited. Does not implicitly {@link google.api.MethodSettings.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.IMethodSettings} message MethodSettings message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodSettings.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.longRunning = $root.google.api.MethodSettings.LongRunning.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodSettings message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.MethodSettings} MethodSettings
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodSettings.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodSettings message.
                 * @function verify
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodSettings.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.longRunning != null && message.hasOwnProperty("longRunning")) {
                        var error = $root.google.api.MethodSettings.LongRunning.verify(message.longRunning);
                        if (error)
                            return "longRunning." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodSettings message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.MethodSettings} MethodSettings
                 */
                MethodSettings.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.MethodSettings)
                        return object;
                    var message = new $root.google.api.MethodSettings();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.longRunning != null) {
                        if (typeof object.longRunning !== "object")
                            throw TypeError(".google.api.MethodSettings.longRunning: object expected");
                        message.longRunning = $root.google.api.MethodSettings.LongRunning.fromObject(object.longRunning);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodSettings message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {google.api.MethodSettings} message MethodSettings
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodSettings.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.selector = "";
                        object.longRunning = null;
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.longRunning != null && message.hasOwnProperty("longRunning"))
                        object.longRunning = $root.google.api.MethodSettings.LongRunning.toObject(message.longRunning, options);
                    return object;
                };
    
                /**
                 * Converts this MethodSettings to JSON.
                 * @function toJSON
                 * @memberof google.api.MethodSettings
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodSettings.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodSettings
                 * @function getTypeUrl
                 * @memberof google.api.MethodSettings
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.MethodSettings";
                };
    
                MethodSettings.LongRunning = (function() {
    
                    /**
                     * Properties of a LongRunning.
                     * @memberof google.api.MethodSettings
                     * @interface ILongRunning
                     * @property {google.protobuf.IDuration|null} [initialPollDelay] LongRunning initialPollDelay
                     * @property {number|null} [pollDelayMultiplier] LongRunning pollDelayMultiplier
                     * @property {google.protobuf.IDuration|null} [maxPollDelay] LongRunning maxPollDelay
                     * @property {google.protobuf.IDuration|null} [totalPollTimeout] LongRunning totalPollTimeout
                     */
    
                    /**
                     * Constructs a new LongRunning.
                     * @memberof google.api.MethodSettings
                     * @classdesc Represents a LongRunning.
                     * @implements ILongRunning
                     * @constructor
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     */
                    function LongRunning(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * LongRunning initialPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} initialPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.initialPollDelay = null;
    
                    /**
                     * LongRunning pollDelayMultiplier.
                     * @member {number} pollDelayMultiplier
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.pollDelayMultiplier = 0;
    
                    /**
                     * LongRunning maxPollDelay.
                     * @member {google.protobuf.IDuration|null|undefined} maxPollDelay
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.maxPollDelay = null;
    
                    /**
                     * LongRunning totalPollTimeout.
                     * @member {google.protobuf.IDuration|null|undefined} totalPollTimeout
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     */
                    LongRunning.prototype.totalPollTimeout = null;
    
                    /**
                     * Creates a new LongRunning instance using the specified properties.
                     * @function create
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning=} [properties] Properties to set
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning instance
                     */
                    LongRunning.create = function create(properties) {
                        return new LongRunning(properties);
                    };
    
                    /**
                     * Encodes the specified LongRunning message. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.initialPollDelay != null && Object.hasOwnProperty.call(message, "initialPollDelay"))
                            $root.google.protobuf.Duration.encode(message.initialPollDelay, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.pollDelayMultiplier != null && Object.hasOwnProperty.call(message, "pollDelayMultiplier"))
                            writer.uint32(/* id 2, wireType 5 =*/21).float(message.pollDelayMultiplier);
                        if (message.maxPollDelay != null && Object.hasOwnProperty.call(message, "maxPollDelay"))
                            $root.google.protobuf.Duration.encode(message.maxPollDelay, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.totalPollTimeout != null && Object.hasOwnProperty.call(message, "totalPollTimeout"))
                            $root.google.protobuf.Duration.encode(message.totalPollTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified LongRunning message, length delimited. Does not implicitly {@link google.api.MethodSettings.LongRunning.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.ILongRunning} message LongRunning message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    LongRunning.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.MethodSettings.LongRunning();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.initialPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.pollDelayMultiplier = reader.float();
                                    break;
                                }
                            case 3: {
                                    message.maxPollDelay = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.totalPollTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a LongRunning message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    LongRunning.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a LongRunning message.
                     * @function verify
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    LongRunning.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.initialPollDelay);
                            if (error)
                                return "initialPollDelay." + error;
                        }
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            if (typeof message.pollDelayMultiplier !== "number")
                                return "pollDelayMultiplier: number expected";
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay")) {
                            var error = $root.google.protobuf.Duration.verify(message.maxPollDelay);
                            if (error)
                                return "maxPollDelay." + error;
                        }
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout")) {
                            var error = $root.google.protobuf.Duration.verify(message.totalPollTimeout);
                            if (error)
                                return "totalPollTimeout." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates a LongRunning message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.api.MethodSettings.LongRunning} LongRunning
                     */
                    LongRunning.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.api.MethodSettings.LongRunning)
                            return object;
                        var message = new $root.google.api.MethodSettings.LongRunning();
                        if (object.initialPollDelay != null) {
                            if (typeof object.initialPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.initialPollDelay: object expected");
                            message.initialPollDelay = $root.google.protobuf.Duration.fromObject(object.initialPollDelay);
                        }
                        if (object.pollDelayMultiplier != null)
                            message.pollDelayMultiplier = Number(object.pollDelayMultiplier);
                        if (object.maxPollDelay != null) {
                            if (typeof object.maxPollDelay !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.maxPollDelay: object expected");
                            message.maxPollDelay = $root.google.protobuf.Duration.fromObject(object.maxPollDelay);
                        }
                        if (object.totalPollTimeout != null) {
                            if (typeof object.totalPollTimeout !== "object")
                                throw TypeError(".google.api.MethodSettings.LongRunning.totalPollTimeout: object expected");
                            message.totalPollTimeout = $root.google.protobuf.Duration.fromObject(object.totalPollTimeout);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a LongRunning message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {google.api.MethodSettings.LongRunning} message LongRunning
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    LongRunning.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.initialPollDelay = null;
                            object.pollDelayMultiplier = 0;
                            object.maxPollDelay = null;
                            object.totalPollTimeout = null;
                        }
                        if (message.initialPollDelay != null && message.hasOwnProperty("initialPollDelay"))
                            object.initialPollDelay = $root.google.protobuf.Duration.toObject(message.initialPollDelay, options);
                        if (message.pollDelayMultiplier != null && message.hasOwnProperty("pollDelayMultiplier"))
                            object.pollDelayMultiplier = options.json && !isFinite(message.pollDelayMultiplier) ? String(message.pollDelayMultiplier) : message.pollDelayMultiplier;
                        if (message.maxPollDelay != null && message.hasOwnProperty("maxPollDelay"))
                            object.maxPollDelay = $root.google.protobuf.Duration.toObject(message.maxPollDelay, options);
                        if (message.totalPollTimeout != null && message.hasOwnProperty("totalPollTimeout"))
                            object.totalPollTimeout = $root.google.protobuf.Duration.toObject(message.totalPollTimeout, options);
                        return object;
                    };
    
                    /**
                     * Converts this LongRunning to JSON.
                     * @function toJSON
                     * @memberof google.api.MethodSettings.LongRunning
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    LongRunning.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for LongRunning
                     * @function getTypeUrl
                     * @memberof google.api.MethodSettings.LongRunning
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    LongRunning.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.api.MethodSettings.LongRunning";
                    };
    
                    return LongRunning;
                })();
    
                return MethodSettings;
            })();
    
            /**
             * ClientLibraryOrganization enum.
             * @name google.api.ClientLibraryOrganization
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED=0 CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED value
             * @property {number} CLOUD=1 CLOUD value
             * @property {number} ADS=2 ADS value
             * @property {number} PHOTOS=3 PHOTOS value
             * @property {number} STREET_VIEW=4 STREET_VIEW value
             */
            api.ClientLibraryOrganization = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_ORGANIZATION_UNSPECIFIED"] = 0;
                values[valuesById[1] = "CLOUD"] = 1;
                values[valuesById[2] = "ADS"] = 2;
                values[valuesById[3] = "PHOTOS"] = 3;
                values[valuesById[4] = "STREET_VIEW"] = 4;
                return values;
            })();
    
            /**
             * ClientLibraryDestination enum.
             * @name google.api.ClientLibraryDestination
             * @enum {number}
             * @property {number} CLIENT_LIBRARY_DESTINATION_UNSPECIFIED=0 CLIENT_LIBRARY_DESTINATION_UNSPECIFIED value
             * @property {number} GITHUB=10 GITHUB value
             * @property {number} PACKAGE_MANAGER=20 PACKAGE_MANAGER value
             */
            api.ClientLibraryDestination = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"] = 0;
                values[valuesById[10] = "GITHUB"] = 10;
                values[valuesById[20] = "PACKAGE_MANAGER"] = 20;
                return values;
            })();
    
            /**
             * LaunchStage enum.
             * @name google.api.LaunchStage
             * @enum {number}
             * @property {number} LAUNCH_STAGE_UNSPECIFIED=0 LAUNCH_STAGE_UNSPECIFIED value
             * @property {number} UNIMPLEMENTED=6 UNIMPLEMENTED value
             * @property {number} PRELAUNCH=7 PRELAUNCH value
             * @property {number} EARLY_ACCESS=1 EARLY_ACCESS value
             * @property {number} ALPHA=2 ALPHA value
             * @property {number} BETA=3 BETA value
             * @property {number} GA=4 GA value
             * @property {number} DEPRECATED=5 DEPRECATED value
             */
            api.LaunchStage = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "LAUNCH_STAGE_UNSPECIFIED"] = 0;
                values[valuesById[6] = "UNIMPLEMENTED"] = 6;
                values[valuesById[7] = "PRELAUNCH"] = 7;
                values[valuesById[1] = "EARLY_ACCESS"] = 1;
                values[valuesById[2] = "ALPHA"] = 2;
                values[valuesById[3] = "BETA"] = 3;
                values[valuesById[4] = "GA"] = 4;
                values[valuesById[5] = "DEPRECATED"] = 5;
                return values;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] MessageOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 11, wireType 0 =*/88).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 11: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {boolean|null} [debugRedact] FieldOptions debugRedact
                 * @property {google.protobuf.FieldOptions.OptionRetention|null} [retention] FieldOptions retention
                 * @property {google.protobuf.FieldOptions.OptionTargetType|null} [target] FieldOptions target
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions debugRedact.
                 * @member {boolean} debugRedact
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.debugRedact = false;
    
                /**
                 * FieldOptions retention.
                 * @member {google.protobuf.FieldOptions.OptionRetention} retention
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.retention = 0;
    
                /**
                 * FieldOptions target.
                 * @member {google.protobuf.FieldOptions.OptionTargetType} target
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.target = 0;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.debugRedact != null && Object.hasOwnProperty.call(message, "debugRedact"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.debugRedact);
                    if (message.retention != null && Object.hasOwnProperty.call(message, "retention"))
                        writer.uint32(/* id 17, wireType 0 =*/136).int32(message.retention);
                    if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                        writer.uint32(/* id 18, wireType 0 =*/144).int32(message.target);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 16: {
                                message.debugRedact = reader.bool();
                                break;
                            }
                        case 17: {
                                message.retention = reader.int32();
                                break;
                            }
                        case 18: {
                                message.target = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        if (typeof message.debugRedact !== "boolean")
                            return "debugRedact: boolean expected";
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        switch (message.retention) {
                        default:
                            return "retention: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.target != null && message.hasOwnProperty("target"))
                        switch (message.target) {
                        default:
                            return "target: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.debugRedact != null)
                        message.debugRedact = Boolean(object.debugRedact);
                    switch (object.retention) {
                    default:
                        if (typeof object.retention === "number") {
                            message.retention = object.retention;
                            break;
                        }
                        break;
                    case "RETENTION_UNKNOWN":
                    case 0:
                        message.retention = 0;
                        break;
                    case "RETENTION_RUNTIME":
                    case 1:
                        message.retention = 1;
                        break;
                    case "RETENTION_SOURCE":
                    case 2:
                        message.retention = 2;
                        break;
                    }
                    switch (object.target) {
                    default:
                        if (typeof object.target === "number") {
                            message.target = object.target;
                            break;
                        }
                        break;
                    case "TARGET_TYPE_UNKNOWN":
                    case 0:
                        message.target = 0;
                        break;
                    case "TARGET_TYPE_FILE":
                    case 1:
                        message.target = 1;
                        break;
                    case "TARGET_TYPE_EXTENSION_RANGE":
                    case 2:
                        message.target = 2;
                        break;
                    case "TARGET_TYPE_MESSAGE":
                    case 3:
                        message.target = 3;
                        break;
                    case "TARGET_TYPE_FIELD":
                    case 4:
                        message.target = 4;
                        break;
                    case "TARGET_TYPE_ONEOF":
                    case 5:
                        message.target = 5;
                        break;
                    case "TARGET_TYPE_ENUM":
                    case 6:
                        message.target = 6;
                        break;
                    case "TARGET_TYPE_ENUM_ENTRY":
                    case 7:
                        message.target = 7;
                        break;
                    case "TARGET_TYPE_SERVICE":
                    case 8:
                        message.target = 8;
                        break;
                    case "TARGET_TYPE_METHOD":
                    case 9:
                        message.target = 9;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object.debugRedact = false;
                        object.retention = options.enums === String ? "RETENTION_UNKNOWN" : 0;
                        object.target = options.enums === String ? "TARGET_TYPE_UNKNOWN" : 0;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.debugRedact != null && message.hasOwnProperty("debugRedact"))
                        object.debugRedact = message.debugRedact;
                    if (message.retention != null && message.hasOwnProperty("retention"))
                        object.retention = options.enums === String ? $root.google.protobuf.FieldOptions.OptionRetention[message.retention] === undefined ? message.retention : $root.google.protobuf.FieldOptions.OptionRetention[message.retention] : message.retention;
                    if (message.target != null && message.hasOwnProperty("target"))
                        object.target = options.enums === String ? $root.google.protobuf.FieldOptions.OptionTargetType[message.target] === undefined ? message.target : $root.google.protobuf.FieldOptions.OptionTargetType[message.target] : message.target;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                /**
                 * OptionRetention enum.
                 * @name google.protobuf.FieldOptions.OptionRetention
                 * @enum {number}
                 * @property {number} RETENTION_UNKNOWN=0 RETENTION_UNKNOWN value
                 * @property {number} RETENTION_RUNTIME=1 RETENTION_RUNTIME value
                 * @property {number} RETENTION_SOURCE=2 RETENTION_SOURCE value
                 */
                FieldOptions.OptionRetention = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "RETENTION_UNKNOWN"] = 0;
                    values[valuesById[1] = "RETENTION_RUNTIME"] = 1;
                    values[valuesById[2] = "RETENTION_SOURCE"] = 2;
                    return values;
                })();
    
                /**
                 * OptionTargetType enum.
                 * @name google.protobuf.FieldOptions.OptionTargetType
                 * @enum {number}
                 * @property {number} TARGET_TYPE_UNKNOWN=0 TARGET_TYPE_UNKNOWN value
                 * @property {number} TARGET_TYPE_FILE=1 TARGET_TYPE_FILE value
                 * @property {number} TARGET_TYPE_EXTENSION_RANGE=2 TARGET_TYPE_EXTENSION_RANGE value
                 * @property {number} TARGET_TYPE_MESSAGE=3 TARGET_TYPE_MESSAGE value
                 * @property {number} TARGET_TYPE_FIELD=4 TARGET_TYPE_FIELD value
                 * @property {number} TARGET_TYPE_ONEOF=5 TARGET_TYPE_ONEOF value
                 * @property {number} TARGET_TYPE_ENUM=6 TARGET_TYPE_ENUM value
                 * @property {number} TARGET_TYPE_ENUM_ENTRY=7 TARGET_TYPE_ENUM_ENTRY value
                 * @property {number} TARGET_TYPE_SERVICE=8 TARGET_TYPE_SERVICE value
                 * @property {number} TARGET_TYPE_METHOD=9 TARGET_TYPE_METHOD value
                 */
                FieldOptions.OptionTargetType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "TARGET_TYPE_UNKNOWN"] = 0;
                    values[valuesById[1] = "TARGET_TYPE_FILE"] = 1;
                    values[valuesById[2] = "TARGET_TYPE_EXTENSION_RANGE"] = 2;
                    values[valuesById[3] = "TARGET_TYPE_MESSAGE"] = 3;
                    values[valuesById[4] = "TARGET_TYPE_FIELD"] = 4;
                    values[valuesById[5] = "TARGET_TYPE_ONEOF"] = 5;
                    values[valuesById[6] = "TARGET_TYPE_ENUM"] = 6;
                    values[valuesById[7] = "TARGET_TYPE_ENUM_ENTRY"] = 7;
                    values[valuesById[8] = "TARGET_TYPE_SERVICE"] = 8;
                    values[valuesById[9] = "TARGET_TYPE_METHOD"] = 9;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {boolean|null} [deprecatedLegacyJsonFieldConflicts] EnumOptions deprecatedLegacyJsonFieldConflicts
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions deprecatedLegacyJsonFieldConflicts.
                 * @member {boolean} deprecatedLegacyJsonFieldConflicts
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecatedLegacyJsonFieldConflicts = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.deprecatedLegacyJsonFieldConflicts != null && Object.hasOwnProperty.call(message, "deprecatedLegacyJsonFieldConflicts"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.deprecatedLegacyJsonFieldConflicts);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 6: {
                                message.deprecatedLegacyJsonFieldConflicts = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        if (typeof message.deprecatedLegacyJsonFieldConflicts !== "boolean")
                            return "deprecatedLegacyJsonFieldConflicts: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.deprecatedLegacyJsonFieldConflicts != null)
                        message.deprecatedLegacyJsonFieldConflicts = Boolean(object.deprecatedLegacyJsonFieldConflicts);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                        object.deprecatedLegacyJsonFieldConflicts = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.deprecatedLegacyJsonFieldConflicts != null && message.hasOwnProperty("deprecatedLegacyJsonFieldConflicts"))
                        object.deprecatedLegacyJsonFieldConflicts = message.deprecatedLegacyJsonFieldConflicts;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            protobuf.DoubleValue = (function() {
    
                /**
                 * Properties of a DoubleValue.
                 * @memberof google.protobuf
                 * @interface IDoubleValue
                 * @property {number|null} [value] DoubleValue value
                 */
    
                /**
                 * Constructs a new DoubleValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a DoubleValue.
                 * @implements IDoubleValue
                 * @constructor
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 */
                function DoubleValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DoubleValue value.
                 * @member {number} value
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 */
                DoubleValue.prototype.value = 0;
    
                /**
                 * Creates a new DoubleValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
                 * @returns {google.protobuf.DoubleValue} DoubleValue instance
                 */
                DoubleValue.create = function create(properties) {
                    return new DoubleValue(properties);
                };
    
                /**
                 * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.double();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DoubleValue message.
                 * @function verify
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DoubleValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DoubleValue} DoubleValue
                 */
                DoubleValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DoubleValue)
                        return object;
                    var message = new $root.google.protobuf.DoubleValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {google.protobuf.DoubleValue} message DoubleValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DoubleValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this DoubleValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DoubleValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DoubleValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DoubleValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.DoubleValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DoubleValue";
                };
    
                return DoubleValue;
            })();
    
            protobuf.FloatValue = (function() {
    
                /**
                 * Properties of a FloatValue.
                 * @memberof google.protobuf
                 * @interface IFloatValue
                 * @property {number|null} [value] FloatValue value
                 */
    
                /**
                 * Constructs a new FloatValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a FloatValue.
                 * @implements IFloatValue
                 * @constructor
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 */
                function FloatValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FloatValue value.
                 * @member {number} value
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 */
                FloatValue.prototype.value = 0;
    
                /**
                 * Creates a new FloatValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue=} [properties] Properties to set
                 * @returns {google.protobuf.FloatValue} FloatValue instance
                 */
                FloatValue.create = function create(properties) {
                    return new FloatValue(properties);
                };
    
                /**
                 * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.float();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FloatValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FloatValue} FloatValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FloatValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FloatValue message.
                 * @function verify
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FloatValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "number")
                            return "value: number expected";
                    return null;
                };
    
                /**
                 * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FloatValue} FloatValue
                 */
                FloatValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FloatValue)
                        return object;
                    var message = new $root.google.protobuf.FloatValue();
                    if (object.value != null)
                        message.value = Number(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {google.protobuf.FloatValue} message FloatValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FloatValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this FloatValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FloatValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FloatValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FloatValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.FloatValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FloatValue";
                };
    
                return FloatValue;
            })();
    
            protobuf.Int64Value = (function() {
    
                /**
                 * Properties of an Int64Value.
                 * @memberof google.protobuf
                 * @interface IInt64Value
                 * @property {number|Long|null} [value] Int64Value value
                 */
    
                /**
                 * Constructs a new Int64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int64Value.
                 * @implements IInt64Value
                 * @constructor
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 */
                function Int64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 */
                Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Creates a new Int64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int64Value} Int64Value instance
                 */
                Int64Value.create = function create(properties) {
                    return new Int64Value(properties);
                };
    
                /**
                 * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int64Value} Int64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int64Value message.
                 * @function verify
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int64Value} Int64Value
                 */
                Int64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int64Value)
                        return object;
                    var message = new $root.google.protobuf.Int64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {google.protobuf.Int64Value} message Int64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                    return object;
                };
    
                /**
                 * Converts this Int64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int64Value";
                };
    
                return Int64Value;
            })();
    
            protobuf.UInt64Value = (function() {
    
                /**
                 * Properties of a UInt64Value.
                 * @memberof google.protobuf
                 * @interface IUInt64Value
                 * @property {number|Long|null} [value] UInt64Value value
                 */
    
                /**
                 * Constructs a new UInt64Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt64Value.
                 * @implements IUInt64Value
                 * @constructor
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 */
                function UInt64Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt64Value value.
                 * @member {number|Long} value
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 */
                UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * Creates a new UInt64Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt64Value} UInt64Value instance
                 */
                UInt64Value.create = function create(properties) {
                    return new UInt64Value(properties);
                };
    
                /**
                 * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint64();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt64Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt64Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                            return "value: integer|Long expected";
                    return null;
                };
    
                /**
                 * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt64Value} UInt64Value
                 */
                UInt64Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt64Value)
                        return object;
                    var message = new $root.google.protobuf.UInt64Value();
                    if (object.value != null)
                        if ($util.Long)
                            (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                        else if (typeof object.value === "string")
                            message.value = parseInt(object.value, 10);
                        else if (typeof object.value === "number")
                            message.value = object.value;
                        else if (typeof object.value === "object")
                            message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {google.protobuf.UInt64Value} message UInt64Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt64Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.value = options.longs === String ? "0" : 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value === "number")
                            object.value = options.longs === String ? String(message.value) : message.value;
                        else
                            object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt64Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt64Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt64Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt64Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt64Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt64Value";
                };
    
                return UInt64Value;
            })();
    
            protobuf.Int32Value = (function() {
    
                /**
                 * Properties of an Int32Value.
                 * @memberof google.protobuf
                 * @interface IInt32Value
                 * @property {number|null} [value] Int32Value value
                 */
    
                /**
                 * Constructs a new Int32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents an Int32Value.
                 * @implements IInt32Value
                 * @constructor
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 */
                function Int32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Int32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 */
                Int32Value.prototype.value = 0;
    
                /**
                 * Creates a new Int32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.Int32Value} Int32Value instance
                 */
                Int32Value.create = function create(properties) {
                    return new Int32Value(properties);
                };
    
                /**
                 * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Int32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Int32Value} Int32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Int32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Int32Value message.
                 * @function verify
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Int32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Int32Value} Int32Value
                 */
                Int32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Int32Value)
                        return object;
                    var message = new $root.google.protobuf.Int32Value();
                    if (object.value != null)
                        message.value = object.value | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {google.protobuf.Int32Value} message Int32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Int32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this Int32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Int32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Int32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Int32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.Int32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Int32Value";
                };
    
                return Int32Value;
            })();
    
            protobuf.UInt32Value = (function() {
    
                /**
                 * Properties of a UInt32Value.
                 * @memberof google.protobuf
                 * @interface IUInt32Value
                 * @property {number|null} [value] UInt32Value value
                 */
    
                /**
                 * Constructs a new UInt32Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a UInt32Value.
                 * @implements IUInt32Value
                 * @constructor
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 */
                function UInt32Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UInt32Value value.
                 * @member {number} value
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 */
                UInt32Value.prototype.value = 0;
    
                /**
                 * Creates a new UInt32Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
                 * @returns {google.protobuf.UInt32Value} UInt32Value instance
                 */
                UInt32Value.create = function create(properties) {
                    return new UInt32Value(properties);
                };
    
                /**
                 * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.uint32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a UInt32Value message.
                 * @function verify
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UInt32Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isInteger(message.value))
                            return "value: integer expected";
                    return null;
                };
    
                /**
                 * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UInt32Value} UInt32Value
                 */
                UInt32Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UInt32Value)
                        return object;
                    var message = new $root.google.protobuf.UInt32Value();
                    if (object.value != null)
                        message.value = object.value >>> 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {google.protobuf.UInt32Value} message UInt32Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UInt32Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = 0;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this UInt32Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UInt32Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UInt32Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UInt32Value
                 * @function getTypeUrl
                 * @memberof google.protobuf.UInt32Value
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UInt32Value";
                };
    
                return UInt32Value;
            })();
    
            protobuf.BoolValue = (function() {
    
                /**
                 * Properties of a BoolValue.
                 * @memberof google.protobuf
                 * @interface IBoolValue
                 * @property {boolean|null} [value] BoolValue value
                 */
    
                /**
                 * Constructs a new BoolValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BoolValue.
                 * @implements IBoolValue
                 * @constructor
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 */
                function BoolValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BoolValue value.
                 * @member {boolean} value
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 */
                BoolValue.prototype.value = false;
    
                /**
                 * Creates a new BoolValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue=} [properties] Properties to set
                 * @returns {google.protobuf.BoolValue} BoolValue instance
                 */
                BoolValue.create = function create(properties) {
                    return new BoolValue(properties);
                };
    
                /**
                 * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BoolValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BoolValue} BoolValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BoolValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BoolValue message.
                 * @function verify
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BoolValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (typeof message.value !== "boolean")
                            return "value: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BoolValue} BoolValue
                 */
                BoolValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BoolValue)
                        return object;
                    var message = new $root.google.protobuf.BoolValue();
                    if (object.value != null)
                        message.value = Boolean(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {google.protobuf.BoolValue} message BoolValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BoolValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = false;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this BoolValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BoolValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BoolValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BoolValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BoolValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BoolValue";
                };
    
                return BoolValue;
            })();
    
            protobuf.StringValue = (function() {
    
                /**
                 * Properties of a StringValue.
                 * @memberof google.protobuf
                 * @interface IStringValue
                 * @property {string|null} [value] StringValue value
                 */
    
                /**
                 * Constructs a new StringValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a StringValue.
                 * @implements IStringValue
                 * @constructor
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 */
                function StringValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * StringValue value.
                 * @member {string} value
                 * @memberof google.protobuf.StringValue
                 * @instance
                 */
                StringValue.prototype.value = "";
    
                /**
                 * Creates a new StringValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue=} [properties] Properties to set
                 * @returns {google.protobuf.StringValue} StringValue instance
                 */
                StringValue.create = function create(properties) {
                    return new StringValue(properties);
                };
    
                /**
                 * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a StringValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.StringValue} StringValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                StringValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a StringValue message.
                 * @function verify
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                StringValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!$util.isString(message.value))
                            return "value: string expected";
                    return null;
                };
    
                /**
                 * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.StringValue} StringValue
                 */
                StringValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.StringValue)
                        return object;
                    var message = new $root.google.protobuf.StringValue();
                    if (object.value != null)
                        message.value = String(object.value);
                    return message;
                };
    
                /**
                 * Creates a plain object from a StringValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {google.protobuf.StringValue} message StringValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                StringValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.value = "";
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = message.value;
                    return object;
                };
    
                /**
                 * Converts this StringValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.StringValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                StringValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for StringValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.StringValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.StringValue";
                };
    
                return StringValue;
            })();
    
            protobuf.BytesValue = (function() {
    
                /**
                 * Properties of a BytesValue.
                 * @memberof google.protobuf
                 * @interface IBytesValue
                 * @property {Uint8Array|null} [value] BytesValue value
                 */
    
                /**
                 * Constructs a new BytesValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a BytesValue.
                 * @implements IBytesValue
                 * @constructor
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 */
                function BytesValue(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * BytesValue value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 */
                BytesValue.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new BytesValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue=} [properties] Properties to set
                 * @returns {google.protobuf.BytesValue} BytesValue instance
                 */
                BytesValue.create = function create(properties) {
                    return new BytesValue(properties);
                };
    
                /**
                 * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a BytesValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.BytesValue} BytesValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                BytesValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a BytesValue message.
                 * @function verify
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                BytesValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.BytesValue} BytesValue
                 */
                BytesValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.BytesValue)
                        return object;
                    var message = new $root.google.protobuf.BytesValue();
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {google.protobuf.BytesValue} message BytesValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                BytesValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this BytesValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.BytesValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                BytesValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for BytesValue
                 * @function getTypeUrl
                 * @memberof google.protobuf.BytesValue
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.BytesValue";
                };
    
                return BytesValue;
            })();
    
            return protobuf;
        })();
    
        google.type = (function() {
    
            /**
             * Namespace type.
             * @memberof google
             * @namespace
             */
            var type = {};
    
            type.Expr = (function() {
    
                /**
                 * Properties of an Expr.
                 * @memberof google.type
                 * @interface IExpr
                 * @property {string|null} [expression] Expr expression
                 * @property {string|null} [title] Expr title
                 * @property {string|null} [description] Expr description
                 * @property {string|null} [location] Expr location
                 */
    
                /**
                 * Constructs a new Expr.
                 * @memberof google.type
                 * @classdesc Represents an Expr.
                 * @implements IExpr
                 * @constructor
                 * @param {google.type.IExpr=} [properties] Properties to set
                 */
                function Expr(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Expr expression.
                 * @member {string} expression
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.expression = "";
    
                /**
                 * Expr title.
                 * @member {string} title
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.title = "";
    
                /**
                 * Expr description.
                 * @member {string} description
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.description = "";
    
                /**
                 * Expr location.
                 * @member {string} location
                 * @memberof google.type.Expr
                 * @instance
                 */
                Expr.prototype.location = "";
    
                /**
                 * Creates a new Expr instance using the specified properties.
                 * @function create
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr=} [properties] Properties to set
                 * @returns {google.type.Expr} Expr instance
                 */
                Expr.create = function create(properties) {
                    return new Expr(properties);
                };
    
                /**
                 * Encodes the specified Expr message. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encode
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.expression != null && Object.hasOwnProperty.call(message, "expression"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.expression);
                    if (message.title != null && Object.hasOwnProperty.call(message, "title"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.title);
                    if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                    if (message.location != null && Object.hasOwnProperty.call(message, "location"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.location);
                    return writer;
                };
    
                /**
                 * Encodes the specified Expr message, length delimited. Does not implicitly {@link google.type.Expr.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.IExpr} message Expr message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Expr.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.type.Expr();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.expression = reader.string();
                                break;
                            }
                        case 2: {
                                message.title = reader.string();
                                break;
                            }
                        case 3: {
                                message.description = reader.string();
                                break;
                            }
                        case 4: {
                                message.location = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Expr message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.type.Expr
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.type.Expr} Expr
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Expr.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Expr message.
                 * @function verify
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Expr.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        if (!$util.isString(message.expression))
                            return "expression: string expected";
                    if (message.title != null && message.hasOwnProperty("title"))
                        if (!$util.isString(message.title))
                            return "title: string expected";
                    if (message.description != null && message.hasOwnProperty("description"))
                        if (!$util.isString(message.description))
                            return "description: string expected";
                    if (message.location != null && message.hasOwnProperty("location"))
                        if (!$util.isString(message.location))
                            return "location: string expected";
                    return null;
                };
    
                /**
                 * Creates an Expr message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.type.Expr} Expr
                 */
                Expr.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.type.Expr)
                        return object;
                    var message = new $root.google.type.Expr();
                    if (object.expression != null)
                        message.expression = String(object.expression);
                    if (object.title != null)
                        message.title = String(object.title);
                    if (object.description != null)
                        message.description = String(object.description);
                    if (object.location != null)
                        message.location = String(object.location);
                    return message;
                };
    
                /**
                 * Creates a plain object from an Expr message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.type.Expr
                 * @static
                 * @param {google.type.Expr} message Expr
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Expr.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.expression = "";
                        object.title = "";
                        object.description = "";
                        object.location = "";
                    }
                    if (message.expression != null && message.hasOwnProperty("expression"))
                        object.expression = message.expression;
                    if (message.title != null && message.hasOwnProperty("title"))
                        object.title = message.title;
                    if (message.description != null && message.hasOwnProperty("description"))
                        object.description = message.description;
                    if (message.location != null && message.hasOwnProperty("location"))
                        object.location = message.location;
                    return object;
                };
    
                /**
                 * Converts this Expr to JSON.
                 * @function toJSON
                 * @memberof google.type.Expr
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Expr.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Expr
                 * @function getTypeUrl
                 * @memberof google.type.Expr
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Expr.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.type.Expr";
                };
    
                return Expr;
            })();
    
            return type;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
