{
  "schema": "1.0",
  "comment": "This file maps proto services/RPCs to the corresponding library clients/methods",
  "language": "typescript",
  "protoPackage": "google.cloud.dataproc.v1",
  "libraryPackage": "@google-cloud/dataproc",
  "services": {
    "AutoscalingPolicyService": {
      "clients": {
        "grpc": {
          "libraryClient": "AutoscalingPolicyServiceClient",
          "rpcs": {
            "CreateAutoscalingPolicy": {
              "methods": [
                "createAutoscalingPolicy"
              ]
            },
            "UpdateAutoscalingPolicy": {
              "methods": [
                "updateAutoscalingPolicy"
              ]
            },
            "GetAutoscalingPolicy": {
              "methods": [
                "getAutoscalingPolicy"
              ]
            },
            "DeleteAutoscalingPolicy": {
              "methods": [
                "deleteAutoscalingPolicy"
              ]
            },
            "ListAutoscalingPolicies": {
              "methods": [
                "listAutoscalingPolicies",
                "listAutoscalingPoliciesStream",
                "listAutoscalingPoliciesAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "AutoscalingPolicyServiceClient",
          "rpcs": {
            "CreateAutoscalingPolicy": {
              "methods": [
                "createAutoscalingPolicy"
              ]
            },
            "UpdateAutoscalingPolicy": {
              "methods": [
                "updateAutoscalingPolicy"
              ]
            },
            "GetAutoscalingPolicy": {
              "methods": [
                "getAutoscalingPolicy"
              ]
            },
            "DeleteAutoscalingPolicy": {
              "methods": [
                "deleteAutoscalingPolicy"
              ]
            },
            "ListAutoscalingPolicies": {
              "methods": [
                "listAutoscalingPolicies",
                "listAutoscalingPoliciesStream",
                "listAutoscalingPoliciesAsync"
              ]
            }
          }
        }
      }
    },
    "BatchController": {
      "clients": {
        "grpc": {
          "libraryClient": "BatchControllerClient",
          "rpcs": {
            "GetBatch": {
              "methods": [
                "getBatch"
              ]
            },
            "DeleteBatch": {
              "methods": [
                "deleteBatch"
              ]
            },
            "CreateBatch": {
              "methods": [
                "createBatch"
              ]
            },
            "ListBatches": {
              "methods": [
                "listBatches",
                "listBatchesStream",
                "listBatchesAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "BatchControllerClient",
          "rpcs": {
            "GetBatch": {
              "methods": [
                "getBatch"
              ]
            },
            "DeleteBatch": {
              "methods": [
                "deleteBatch"
              ]
            },
            "CreateBatch": {
              "methods": [
                "createBatch"
              ]
            },
            "ListBatches": {
              "methods": [
                "listBatches",
                "listBatchesStream",
                "listBatchesAsync"
              ]
            }
          }
        }
      }
    },
    "ClusterController": {
      "clients": {
        "grpc": {
          "libraryClient": "ClusterControllerClient",
          "rpcs": {
            "GetCluster": {
              "methods": [
                "getCluster"
              ]
            },
            "CreateCluster": {
              "methods": [
                "createCluster"
              ]
            },
            "UpdateCluster": {
              "methods": [
                "updateCluster"
              ]
            },
            "StopCluster": {
              "methods": [
                "stopCluster"
              ]
            },
            "StartCluster": {
              "methods": [
                "startCluster"
              ]
            },
            "DeleteCluster": {
              "methods": [
                "deleteCluster"
              ]
            },
            "DiagnoseCluster": {
              "methods": [
                "diagnoseCluster"
              ]
            },
            "ListClusters": {
              "methods": [
                "listClusters",
                "listClustersStream",
                "listClustersAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "ClusterControllerClient",
          "rpcs": {
            "GetCluster": {
              "methods": [
                "getCluster"
              ]
            },
            "CreateCluster": {
              "methods": [
                "createCluster"
              ]
            },
            "UpdateCluster": {
              "methods": [
                "updateCluster"
              ]
            },
            "StopCluster": {
              "methods": [
                "stopCluster"
              ]
            },
            "StartCluster": {
              "methods": [
                "startCluster"
              ]
            },
            "DeleteCluster": {
              "methods": [
                "deleteCluster"
              ]
            },
            "DiagnoseCluster": {
              "methods": [
                "diagnoseCluster"
              ]
            },
            "ListClusters": {
              "methods": [
                "listClusters",
                "listClustersStream",
                "listClustersAsync"
              ]
            }
          }
        }
      }
    },
    "JobController": {
      "clients": {
        "grpc": {
          "libraryClient": "JobControllerClient",
          "rpcs": {
            "SubmitJob": {
              "methods": [
                "submitJob"
              ]
            },
            "GetJob": {
              "methods": [
                "getJob"
              ]
            },
            "UpdateJob": {
              "methods": [
                "updateJob"
              ]
            },
            "CancelJob": {
              "methods": [
                "cancelJob"
              ]
            },
            "DeleteJob": {
              "methods": [
                "deleteJob"
              ]
            },
            "SubmitJobAsOperation": {
              "methods": [
                "submitJobAsOperation"
              ]
            },
            "ListJobs": {
              "methods": [
                "listJobs",
                "listJobsStream",
                "listJobsAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "JobControllerClient",
          "rpcs": {
            "SubmitJob": {
              "methods": [
                "submitJob"
              ]
            },
            "GetJob": {
              "methods": [
                "getJob"
              ]
            },
            "UpdateJob": {
              "methods": [
                "updateJob"
              ]
            },
            "CancelJob": {
              "methods": [
                "cancelJob"
              ]
            },
            "DeleteJob": {
              "methods": [
                "deleteJob"
              ]
            },
            "SubmitJobAsOperation": {
              "methods": [
                "submitJobAsOperation"
              ]
            },
            "ListJobs": {
              "methods": [
                "listJobs",
                "listJobsStream",
                "listJobsAsync"
              ]
            }
          }
        }
      }
    },
    "NodeGroupController": {
      "clients": {
        "grpc": {
          "libraryClient": "NodeGroupControllerClient",
          "rpcs": {
            "GetNodeGroup": {
              "methods": [
                "getNodeGroup"
              ]
            },
            "CreateNodeGroup": {
              "methods": [
                "createNodeGroup"
              ]
            },
            "ResizeNodeGroup": {
              "methods": [
                "resizeNodeGroup"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "NodeGroupControllerClient",
          "rpcs": {
            "GetNodeGroup": {
              "methods": [
                "getNodeGroup"
              ]
            },
            "CreateNodeGroup": {
              "methods": [
                "createNodeGroup"
              ]
            },
            "ResizeNodeGroup": {
              "methods": [
                "resizeNodeGroup"
              ]
            }
          }
        }
      }
    },
    "WorkflowTemplateService": {
      "clients": {
        "grpc": {
          "libraryClient": "WorkflowTemplateServiceClient",
          "rpcs": {
            "CreateWorkflowTemplate": {
              "methods": [
                "createWorkflowTemplate"
              ]
            },
            "GetWorkflowTemplate": {
              "methods": [
                "getWorkflowTemplate"
              ]
            },
            "UpdateWorkflowTemplate": {
              "methods": [
                "updateWorkflowTemplate"
              ]
            },
            "DeleteWorkflowTemplate": {
              "methods": [
                "deleteWorkflowTemplate"
              ]
            },
            "InstantiateWorkflowTemplate": {
              "methods": [
                "instantiateWorkflowTemplate"
              ]
            },
            "InstantiateInlineWorkflowTemplate": {
              "methods": [
                "instantiateInlineWorkflowTemplate"
              ]
            },
            "ListWorkflowTemplates": {
              "methods": [
                "listWorkflowTemplates",
                "listWorkflowTemplatesStream",
                "listWorkflowTemplatesAsync"
              ]
            }
          }
        },
        "grpc-fallback": {
          "libraryClient": "WorkflowTemplateServiceClient",
          "rpcs": {
            "CreateWorkflowTemplate": {
              "methods": [
                "createWorkflowTemplate"
              ]
            },
            "GetWorkflowTemplate": {
              "methods": [
                "getWorkflowTemplate"
              ]
            },
            "UpdateWorkflowTemplate": {
              "methods": [
                "updateWorkflowTemplate"
              ]
            },
            "DeleteWorkflowTemplate": {
              "methods": [
                "deleteWorkflowTemplate"
              ]
            },
            "InstantiateWorkflowTemplate": {
              "methods": [
                "instantiateWorkflowTemplate"
              ]
            },
            "InstantiateInlineWorkflowTemplate": {
              "methods": [
                "instantiateInlineWorkflowTemplate"
              ]
            },
            "ListWorkflowTemplates": {
              "methods": [
                "listWorkflowTemplates",
                "listWorkflowTemplatesStream",
                "listWorkflowTemplatesAsync"
              ]
            }
          }
        }
      }
    }
  }
}
