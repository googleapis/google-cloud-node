// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax/build/src/protobuf").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_dataproc_protos || ($protobuf.roots._google_cloud_dataproc_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.dataproc = (function() {
    
                /**
                 * Namespace dataproc.
                 * @memberof google.cloud
                 * @namespace
                 */
                var dataproc = {};
    
                dataproc.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.dataproc
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.AutoscalingPolicyService = (function() {
    
                        /**
                         * Constructs a new AutoscalingPolicyService service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AutoscalingPolicyService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function AutoscalingPolicyService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (AutoscalingPolicyService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = AutoscalingPolicyService;
    
                        /**
                         * Creates new AutoscalingPolicyService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {AutoscalingPolicyService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        AutoscalingPolicyService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.AutoscalingPolicyService|createAutoscalingPolicy}.
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @typedef CreateAutoscalingPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicy} [response] AutoscalingPolicy
                         */
    
                        /**
                         * Calls CreateAutoscalingPolicy.
                         * @function createAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest} request CreateAutoscalingPolicyRequest message or plain object
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicyService.CreateAutoscalingPolicyCallback} callback Node-style callback called with the error, if any, and AutoscalingPolicy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AutoscalingPolicyService.prototype.createAutoscalingPolicy = function createAutoscalingPolicy(request, callback) {
                            return this.rpcCall(createAutoscalingPolicy, $root.google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest, $root.google.cloud.dataproc.v1.AutoscalingPolicy, request, callback);
                        }, "name", { value: "CreateAutoscalingPolicy" });
    
                        /**
                         * Calls CreateAutoscalingPolicy.
                         * @function createAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest} request CreateAutoscalingPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.AutoscalingPolicy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.AutoscalingPolicyService|updateAutoscalingPolicy}.
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @typedef UpdateAutoscalingPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicy} [response] AutoscalingPolicy
                         */
    
                        /**
                         * Calls UpdateAutoscalingPolicy.
                         * @function updateAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest} request UpdateAutoscalingPolicyRequest message or plain object
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicyService.UpdateAutoscalingPolicyCallback} callback Node-style callback called with the error, if any, and AutoscalingPolicy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AutoscalingPolicyService.prototype.updateAutoscalingPolicy = function updateAutoscalingPolicy(request, callback) {
                            return this.rpcCall(updateAutoscalingPolicy, $root.google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest, $root.google.cloud.dataproc.v1.AutoscalingPolicy, request, callback);
                        }, "name", { value: "UpdateAutoscalingPolicy" });
    
                        /**
                         * Calls UpdateAutoscalingPolicy.
                         * @function updateAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest} request UpdateAutoscalingPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.AutoscalingPolicy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.AutoscalingPolicyService|getAutoscalingPolicy}.
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @typedef GetAutoscalingPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicy} [response] AutoscalingPolicy
                         */
    
                        /**
                         * Calls GetAutoscalingPolicy.
                         * @function getAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest} request GetAutoscalingPolicyRequest message or plain object
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicyService.GetAutoscalingPolicyCallback} callback Node-style callback called with the error, if any, and AutoscalingPolicy
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AutoscalingPolicyService.prototype.getAutoscalingPolicy = function getAutoscalingPolicy(request, callback) {
                            return this.rpcCall(getAutoscalingPolicy, $root.google.cloud.dataproc.v1.GetAutoscalingPolicyRequest, $root.google.cloud.dataproc.v1.AutoscalingPolicy, request, callback);
                        }, "name", { value: "GetAutoscalingPolicy" });
    
                        /**
                         * Calls GetAutoscalingPolicy.
                         * @function getAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest} request GetAutoscalingPolicyRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.AutoscalingPolicy>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.AutoscalingPolicyService|listAutoscalingPolicies}.
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @typedef ListAutoscalingPoliciesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} [response] ListAutoscalingPoliciesResponse
                         */
    
                        /**
                         * Calls ListAutoscalingPolicies.
                         * @function listAutoscalingPolicies
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest} request ListAutoscalingPoliciesRequest message or plain object
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicyService.ListAutoscalingPoliciesCallback} callback Node-style callback called with the error, if any, and ListAutoscalingPoliciesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AutoscalingPolicyService.prototype.listAutoscalingPolicies = function listAutoscalingPolicies(request, callback) {
                            return this.rpcCall(listAutoscalingPolicies, $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest, $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse, request, callback);
                        }, "name", { value: "ListAutoscalingPolicies" });
    
                        /**
                         * Calls ListAutoscalingPolicies.
                         * @function listAutoscalingPolicies
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest} request ListAutoscalingPoliciesRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.AutoscalingPolicyService|deleteAutoscalingPolicy}.
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @typedef DeleteAutoscalingPolicyCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteAutoscalingPolicy.
                         * @function deleteAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest} request DeleteAutoscalingPolicyRequest message or plain object
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicyService.DeleteAutoscalingPolicyCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(AutoscalingPolicyService.prototype.deleteAutoscalingPolicy = function deleteAutoscalingPolicy(request, callback) {
                            return this.rpcCall(deleteAutoscalingPolicy, $root.google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteAutoscalingPolicy" });
    
                        /**
                         * Calls DeleteAutoscalingPolicy.
                         * @function deleteAutoscalingPolicy
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicyService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest} request DeleteAutoscalingPolicyRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return AutoscalingPolicyService;
                    })();
    
                    v1.AutoscalingPolicy = (function() {
    
                        /**
                         * Properties of an AutoscalingPolicy.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IAutoscalingPolicy
                         * @property {string|null} [id] AutoscalingPolicy id
                         * @property {string|null} [name] AutoscalingPolicy name
                         * @property {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm|null} [basicAlgorithm] AutoscalingPolicy basicAlgorithm
                         * @property {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig|null} [workerConfig] AutoscalingPolicy workerConfig
                         * @property {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig|null} [secondaryWorkerConfig] AutoscalingPolicy secondaryWorkerConfig
                         * @property {Object.<string,string>|null} [labels] AutoscalingPolicy labels
                         */
    
                        /**
                         * Constructs a new AutoscalingPolicy.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AutoscalingPolicy.
                         * @implements IAutoscalingPolicy
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IAutoscalingPolicy=} [properties] Properties to set
                         */
                        function AutoscalingPolicy(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AutoscalingPolicy id.
                         * @member {string} id
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.id = "";
    
                        /**
                         * AutoscalingPolicy name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.name = "";
    
                        /**
                         * AutoscalingPolicy basicAlgorithm.
                         * @member {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm|null|undefined} basicAlgorithm
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.basicAlgorithm = null;
    
                        /**
                         * AutoscalingPolicy workerConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig|null|undefined} workerConfig
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.workerConfig = null;
    
                        /**
                         * AutoscalingPolicy secondaryWorkerConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig|null|undefined} secondaryWorkerConfig
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.secondaryWorkerConfig = null;
    
                        /**
                         * AutoscalingPolicy labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        AutoscalingPolicy.prototype.labels = $util.emptyObject;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * AutoscalingPolicy algorithm.
                         * @member {"basicAlgorithm"|undefined} algorithm
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         */
                        Object.defineProperty(AutoscalingPolicy.prototype, "algorithm", {
                            get: $util.oneOfGetter($oneOfFields = ["basicAlgorithm"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new AutoscalingPolicy instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingPolicy=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.AutoscalingPolicy} AutoscalingPolicy instance
                         */
                        AutoscalingPolicy.create = function create(properties) {
                            return new AutoscalingPolicy(properties);
                        };
    
                        /**
                         * Encodes the specified AutoscalingPolicy message. Does not implicitly {@link google.cloud.dataproc.v1.AutoscalingPolicy.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingPolicy} message AutoscalingPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoscalingPolicy.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.id);
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);
                            if (message.basicAlgorithm != null && Object.hasOwnProperty.call(message, "basicAlgorithm"))
                                $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.encode(message.basicAlgorithm, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.workerConfig != null && Object.hasOwnProperty.call(message, "workerConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.encode(message.workerConfig, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.secondaryWorkerConfig != null && Object.hasOwnProperty.call(message, "secondaryWorkerConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.encode(message.secondaryWorkerConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AutoscalingPolicy message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.AutoscalingPolicy.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingPolicy} message AutoscalingPolicy message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoscalingPolicy.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AutoscalingPolicy message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.AutoscalingPolicy} AutoscalingPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoscalingPolicy.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.AutoscalingPolicy(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.basicAlgorithm = $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AutoscalingPolicy message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.AutoscalingPolicy} AutoscalingPolicy
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoscalingPolicy.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AutoscalingPolicy message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AutoscalingPolicy.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.basicAlgorithm != null && message.hasOwnProperty("basicAlgorithm")) {
                                properties.algorithm = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.verify(message.basicAlgorithm);
                                    if (error)
                                        return "basicAlgorithm." + error;
                                }
                            }
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.verify(message.workerConfig);
                                if (error)
                                    return "workerConfig." + error;
                            }
                            if (message.secondaryWorkerConfig != null && message.hasOwnProperty("secondaryWorkerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.verify(message.secondaryWorkerConfig);
                                if (error)
                                    return "secondaryWorkerConfig." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AutoscalingPolicy message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.AutoscalingPolicy} AutoscalingPolicy
                         */
                        AutoscalingPolicy.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.AutoscalingPolicy)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.AutoscalingPolicy();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.basicAlgorithm != null) {
                                if (typeof object.basicAlgorithm !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AutoscalingPolicy.basicAlgorithm: object expected");
                                message.basicAlgorithm = $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.fromObject(object.basicAlgorithm);
                            }
                            if (object.workerConfig != null) {
                                if (typeof object.workerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AutoscalingPolicy.workerConfig: object expected");
                                message.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.fromObject(object.workerConfig);
                            }
                            if (object.secondaryWorkerConfig != null) {
                                if (typeof object.secondaryWorkerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AutoscalingPolicy.secondaryWorkerConfig: object expected");
                                message.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.fromObject(object.secondaryWorkerConfig);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AutoscalingPolicy.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AutoscalingPolicy message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {google.cloud.dataproc.v1.AutoscalingPolicy} message AutoscalingPolicy
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AutoscalingPolicy.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.id = "";
                                object.name = "";
                                object.workerConfig = null;
                                object.secondaryWorkerConfig = null;
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.basicAlgorithm != null && message.hasOwnProperty("basicAlgorithm")) {
                                object.basicAlgorithm = $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.toObject(message.basicAlgorithm, options);
                                if (options.oneofs)
                                    object.algorithm = "basicAlgorithm";
                            }
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig"))
                                object.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.toObject(message.workerConfig, options);
                            if (message.secondaryWorkerConfig != null && message.hasOwnProperty("secondaryWorkerConfig"))
                                object.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.toObject(message.secondaryWorkerConfig, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this AutoscalingPolicy to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AutoscalingPolicy.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AutoscalingPolicy
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.AutoscalingPolicy
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AutoscalingPolicy.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.AutoscalingPolicy";
                        };
    
                        return AutoscalingPolicy;
                    })();
    
                    v1.BasicAutoscalingAlgorithm = (function() {
    
                        /**
                         * Properties of a BasicAutoscalingAlgorithm.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IBasicAutoscalingAlgorithm
                         * @property {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig|null} [yarnConfig] BasicAutoscalingAlgorithm yarnConfig
                         * @property {google.protobuf.IDuration|null} [cooldownPeriod] BasicAutoscalingAlgorithm cooldownPeriod
                         */
    
                        /**
                         * Constructs a new BasicAutoscalingAlgorithm.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a BasicAutoscalingAlgorithm.
                         * @implements IBasicAutoscalingAlgorithm
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm=} [properties] Properties to set
                         */
                        function BasicAutoscalingAlgorithm(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BasicAutoscalingAlgorithm yarnConfig.
                         * @member {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig|null|undefined} yarnConfig
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @instance
                         */
                        BasicAutoscalingAlgorithm.prototype.yarnConfig = null;
    
                        /**
                         * BasicAutoscalingAlgorithm cooldownPeriod.
                         * @member {google.protobuf.IDuration|null|undefined} cooldownPeriod
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @instance
                         */
                        BasicAutoscalingAlgorithm.prototype.cooldownPeriod = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * BasicAutoscalingAlgorithm config.
                         * @member {"yarnConfig"|undefined} config
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @instance
                         */
                        Object.defineProperty(BasicAutoscalingAlgorithm.prototype, "config", {
                            get: $util.oneOfGetter($oneOfFields = ["yarnConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new BasicAutoscalingAlgorithm instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.BasicAutoscalingAlgorithm} BasicAutoscalingAlgorithm instance
                         */
                        BasicAutoscalingAlgorithm.create = function create(properties) {
                            return new BasicAutoscalingAlgorithm(properties);
                        };
    
                        /**
                         * Encodes the specified BasicAutoscalingAlgorithm message. Does not implicitly {@link google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm} message BasicAutoscalingAlgorithm message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BasicAutoscalingAlgorithm.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.yarnConfig != null && Object.hasOwnProperty.call(message, "yarnConfig"))
                                $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.encode(message.yarnConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.cooldownPeriod != null && Object.hasOwnProperty.call(message, "cooldownPeriod"))
                                $root.google.protobuf.Duration.encode(message.cooldownPeriod, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BasicAutoscalingAlgorithm message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicAutoscalingAlgorithm} message BasicAutoscalingAlgorithm message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BasicAutoscalingAlgorithm.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BasicAutoscalingAlgorithm message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.BasicAutoscalingAlgorithm} BasicAutoscalingAlgorithm
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BasicAutoscalingAlgorithm.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.yarnConfig = $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.cooldownPeriod = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BasicAutoscalingAlgorithm message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.BasicAutoscalingAlgorithm} BasicAutoscalingAlgorithm
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BasicAutoscalingAlgorithm.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BasicAutoscalingAlgorithm message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BasicAutoscalingAlgorithm.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.yarnConfig != null && message.hasOwnProperty("yarnConfig")) {
                                properties.config = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.verify(message.yarnConfig);
                                    if (error)
                                        return "yarnConfig." + error;
                                }
                            }
                            if (message.cooldownPeriod != null && message.hasOwnProperty("cooldownPeriod")) {
                                var error = $root.google.protobuf.Duration.verify(message.cooldownPeriod);
                                if (error)
                                    return "cooldownPeriod." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BasicAutoscalingAlgorithm message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.BasicAutoscalingAlgorithm} BasicAutoscalingAlgorithm
                         */
                        BasicAutoscalingAlgorithm.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.BasicAutoscalingAlgorithm();
                            if (object.yarnConfig != null) {
                                if (typeof object.yarnConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.yarnConfig: object expected");
                                message.yarnConfig = $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.fromObject(object.yarnConfig);
                            }
                            if (object.cooldownPeriod != null) {
                                if (typeof object.cooldownPeriod !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BasicAutoscalingAlgorithm.cooldownPeriod: object expected");
                                message.cooldownPeriod = $root.google.protobuf.Duration.fromObject(object.cooldownPeriod);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BasicAutoscalingAlgorithm message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {google.cloud.dataproc.v1.BasicAutoscalingAlgorithm} message BasicAutoscalingAlgorithm
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BasicAutoscalingAlgorithm.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.cooldownPeriod = null;
                            if (message.yarnConfig != null && message.hasOwnProperty("yarnConfig")) {
                                object.yarnConfig = $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.toObject(message.yarnConfig, options);
                                if (options.oneofs)
                                    object.config = "yarnConfig";
                            }
                            if (message.cooldownPeriod != null && message.hasOwnProperty("cooldownPeriod"))
                                object.cooldownPeriod = $root.google.protobuf.Duration.toObject(message.cooldownPeriod, options);
                            return object;
                        };
    
                        /**
                         * Converts this BasicAutoscalingAlgorithm to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BasicAutoscalingAlgorithm.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BasicAutoscalingAlgorithm
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.BasicAutoscalingAlgorithm
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BasicAutoscalingAlgorithm.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.BasicAutoscalingAlgorithm";
                        };
    
                        return BasicAutoscalingAlgorithm;
                    })();
    
                    v1.BasicYarnAutoscalingConfig = (function() {
    
                        /**
                         * Properties of a BasicYarnAutoscalingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IBasicYarnAutoscalingConfig
                         * @property {google.protobuf.IDuration|null} [gracefulDecommissionTimeout] BasicYarnAutoscalingConfig gracefulDecommissionTimeout
                         * @property {number|null} [scaleUpFactor] BasicYarnAutoscalingConfig scaleUpFactor
                         * @property {number|null} [scaleDownFactor] BasicYarnAutoscalingConfig scaleDownFactor
                         * @property {number|null} [scaleUpMinWorkerFraction] BasicYarnAutoscalingConfig scaleUpMinWorkerFraction
                         * @property {number|null} [scaleDownMinWorkerFraction] BasicYarnAutoscalingConfig scaleDownMinWorkerFraction
                         */
    
                        /**
                         * Constructs a new BasicYarnAutoscalingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a BasicYarnAutoscalingConfig.
                         * @implements IBasicYarnAutoscalingConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig=} [properties] Properties to set
                         */
                        function BasicYarnAutoscalingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BasicYarnAutoscalingConfig gracefulDecommissionTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} gracefulDecommissionTimeout
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         */
                        BasicYarnAutoscalingConfig.prototype.gracefulDecommissionTimeout = null;
    
                        /**
                         * BasicYarnAutoscalingConfig scaleUpFactor.
                         * @member {number} scaleUpFactor
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         */
                        BasicYarnAutoscalingConfig.prototype.scaleUpFactor = 0;
    
                        /**
                         * BasicYarnAutoscalingConfig scaleDownFactor.
                         * @member {number} scaleDownFactor
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         */
                        BasicYarnAutoscalingConfig.prototype.scaleDownFactor = 0;
    
                        /**
                         * BasicYarnAutoscalingConfig scaleUpMinWorkerFraction.
                         * @member {number} scaleUpMinWorkerFraction
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         */
                        BasicYarnAutoscalingConfig.prototype.scaleUpMinWorkerFraction = 0;
    
                        /**
                         * BasicYarnAutoscalingConfig scaleDownMinWorkerFraction.
                         * @member {number} scaleDownMinWorkerFraction
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         */
                        BasicYarnAutoscalingConfig.prototype.scaleDownMinWorkerFraction = 0;
    
                        /**
                         * Creates a new BasicYarnAutoscalingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.BasicYarnAutoscalingConfig} BasicYarnAutoscalingConfig instance
                         */
                        BasicYarnAutoscalingConfig.create = function create(properties) {
                            return new BasicYarnAutoscalingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified BasicYarnAutoscalingConfig message. Does not implicitly {@link google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig} message BasicYarnAutoscalingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BasicYarnAutoscalingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.scaleUpFactor != null && Object.hasOwnProperty.call(message, "scaleUpFactor"))
                                writer.uint32(/* id 1, wireType 1 =*/9).double(message.scaleUpFactor);
                            if (message.scaleDownFactor != null && Object.hasOwnProperty.call(message, "scaleDownFactor"))
                                writer.uint32(/* id 2, wireType 1 =*/17).double(message.scaleDownFactor);
                            if (message.scaleUpMinWorkerFraction != null && Object.hasOwnProperty.call(message, "scaleUpMinWorkerFraction"))
                                writer.uint32(/* id 3, wireType 1 =*/25).double(message.scaleUpMinWorkerFraction);
                            if (message.scaleDownMinWorkerFraction != null && Object.hasOwnProperty.call(message, "scaleDownMinWorkerFraction"))
                                writer.uint32(/* id 4, wireType 1 =*/33).double(message.scaleDownMinWorkerFraction);
                            if (message.gracefulDecommissionTimeout != null && Object.hasOwnProperty.call(message, "gracefulDecommissionTimeout"))
                                $root.google.protobuf.Duration.encode(message.gracefulDecommissionTimeout, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BasicYarnAutoscalingConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IBasicYarnAutoscalingConfig} message BasicYarnAutoscalingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BasicYarnAutoscalingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BasicYarnAutoscalingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.BasicYarnAutoscalingConfig} BasicYarnAutoscalingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BasicYarnAutoscalingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 5: {
                                        message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 1: {
                                        message.scaleUpFactor = reader.double();
                                        break;
                                    }
                                case 2: {
                                        message.scaleDownFactor = reader.double();
                                        break;
                                    }
                                case 3: {
                                        message.scaleUpMinWorkerFraction = reader.double();
                                        break;
                                    }
                                case 4: {
                                        message.scaleDownMinWorkerFraction = reader.double();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BasicYarnAutoscalingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.BasicYarnAutoscalingConfig} BasicYarnAutoscalingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BasicYarnAutoscalingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BasicYarnAutoscalingConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BasicYarnAutoscalingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.gracefulDecommissionTimeout);
                                if (error)
                                    return "gracefulDecommissionTimeout." + error;
                            }
                            if (message.scaleUpFactor != null && message.hasOwnProperty("scaleUpFactor"))
                                if (typeof message.scaleUpFactor !== "number")
                                    return "scaleUpFactor: number expected";
                            if (message.scaleDownFactor != null && message.hasOwnProperty("scaleDownFactor"))
                                if (typeof message.scaleDownFactor !== "number")
                                    return "scaleDownFactor: number expected";
                            if (message.scaleUpMinWorkerFraction != null && message.hasOwnProperty("scaleUpMinWorkerFraction"))
                                if (typeof message.scaleUpMinWorkerFraction !== "number")
                                    return "scaleUpMinWorkerFraction: number expected";
                            if (message.scaleDownMinWorkerFraction != null && message.hasOwnProperty("scaleDownMinWorkerFraction"))
                                if (typeof message.scaleDownMinWorkerFraction !== "number")
                                    return "scaleDownMinWorkerFraction: number expected";
                            return null;
                        };
    
                        /**
                         * Creates a BasicYarnAutoscalingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.BasicYarnAutoscalingConfig} BasicYarnAutoscalingConfig
                         */
                        BasicYarnAutoscalingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.BasicYarnAutoscalingConfig();
                            if (object.gracefulDecommissionTimeout != null) {
                                if (typeof object.gracefulDecommissionTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BasicYarnAutoscalingConfig.gracefulDecommissionTimeout: object expected");
                                message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.fromObject(object.gracefulDecommissionTimeout);
                            }
                            if (object.scaleUpFactor != null)
                                message.scaleUpFactor = Number(object.scaleUpFactor);
                            if (object.scaleDownFactor != null)
                                message.scaleDownFactor = Number(object.scaleDownFactor);
                            if (object.scaleUpMinWorkerFraction != null)
                                message.scaleUpMinWorkerFraction = Number(object.scaleUpMinWorkerFraction);
                            if (object.scaleDownMinWorkerFraction != null)
                                message.scaleDownMinWorkerFraction = Number(object.scaleDownMinWorkerFraction);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BasicYarnAutoscalingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.BasicYarnAutoscalingConfig} message BasicYarnAutoscalingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BasicYarnAutoscalingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.scaleUpFactor = 0;
                                object.scaleDownFactor = 0;
                                object.scaleUpMinWorkerFraction = 0;
                                object.scaleDownMinWorkerFraction = 0;
                                object.gracefulDecommissionTimeout = null;
                            }
                            if (message.scaleUpFactor != null && message.hasOwnProperty("scaleUpFactor"))
                                object.scaleUpFactor = options.json && !isFinite(message.scaleUpFactor) ? String(message.scaleUpFactor) : message.scaleUpFactor;
                            if (message.scaleDownFactor != null && message.hasOwnProperty("scaleDownFactor"))
                                object.scaleDownFactor = options.json && !isFinite(message.scaleDownFactor) ? String(message.scaleDownFactor) : message.scaleDownFactor;
                            if (message.scaleUpMinWorkerFraction != null && message.hasOwnProperty("scaleUpMinWorkerFraction"))
                                object.scaleUpMinWorkerFraction = options.json && !isFinite(message.scaleUpMinWorkerFraction) ? String(message.scaleUpMinWorkerFraction) : message.scaleUpMinWorkerFraction;
                            if (message.scaleDownMinWorkerFraction != null && message.hasOwnProperty("scaleDownMinWorkerFraction"))
                                object.scaleDownMinWorkerFraction = options.json && !isFinite(message.scaleDownMinWorkerFraction) ? String(message.scaleDownMinWorkerFraction) : message.scaleDownMinWorkerFraction;
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout"))
                                object.gracefulDecommissionTimeout = $root.google.protobuf.Duration.toObject(message.gracefulDecommissionTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this BasicYarnAutoscalingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BasicYarnAutoscalingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BasicYarnAutoscalingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.BasicYarnAutoscalingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BasicYarnAutoscalingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.BasicYarnAutoscalingConfig";
                        };
    
                        return BasicYarnAutoscalingConfig;
                    })();
    
                    v1.InstanceGroupAutoscalingPolicyConfig = (function() {
    
                        /**
                         * Properties of an InstanceGroupAutoscalingPolicyConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IInstanceGroupAutoscalingPolicyConfig
                         * @property {number|null} [minInstances] InstanceGroupAutoscalingPolicyConfig minInstances
                         * @property {number|null} [maxInstances] InstanceGroupAutoscalingPolicyConfig maxInstances
                         * @property {number|null} [weight] InstanceGroupAutoscalingPolicyConfig weight
                         */
    
                        /**
                         * Constructs a new InstanceGroupAutoscalingPolicyConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an InstanceGroupAutoscalingPolicyConfig.
                         * @implements IInstanceGroupAutoscalingPolicyConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig=} [properties] Properties to set
                         */
                        function InstanceGroupAutoscalingPolicyConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstanceGroupAutoscalingPolicyConfig minInstances.
                         * @member {number} minInstances
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @instance
                         */
                        InstanceGroupAutoscalingPolicyConfig.prototype.minInstances = 0;
    
                        /**
                         * InstanceGroupAutoscalingPolicyConfig maxInstances.
                         * @member {number} maxInstances
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @instance
                         */
                        InstanceGroupAutoscalingPolicyConfig.prototype.maxInstances = 0;
    
                        /**
                         * InstanceGroupAutoscalingPolicyConfig weight.
                         * @member {number} weight
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @instance
                         */
                        InstanceGroupAutoscalingPolicyConfig.prototype.weight = 0;
    
                        /**
                         * Creates a new InstanceGroupAutoscalingPolicyConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig} InstanceGroupAutoscalingPolicyConfig instance
                         */
                        InstanceGroupAutoscalingPolicyConfig.create = function create(properties) {
                            return new InstanceGroupAutoscalingPolicyConfig(properties);
                        };
    
                        /**
                         * Encodes the specified InstanceGroupAutoscalingPolicyConfig message. Does not implicitly {@link google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig} message InstanceGroupAutoscalingPolicyConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceGroupAutoscalingPolicyConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.minInstances != null && Object.hasOwnProperty.call(message, "minInstances"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.minInstances);
                            if (message.maxInstances != null && Object.hasOwnProperty.call(message, "maxInstances"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxInstances);
                            if (message.weight != null && Object.hasOwnProperty.call(message, "weight"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.weight);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstanceGroupAutoscalingPolicyConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupAutoscalingPolicyConfig} message InstanceGroupAutoscalingPolicyConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceGroupAutoscalingPolicyConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstanceGroupAutoscalingPolicyConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig} InstanceGroupAutoscalingPolicyConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceGroupAutoscalingPolicyConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.minInstances = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxInstances = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.weight = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstanceGroupAutoscalingPolicyConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig} InstanceGroupAutoscalingPolicyConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceGroupAutoscalingPolicyConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstanceGroupAutoscalingPolicyConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstanceGroupAutoscalingPolicyConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.minInstances != null && message.hasOwnProperty("minInstances"))
                                if (!$util.isInteger(message.minInstances))
                                    return "minInstances: integer expected";
                            if (message.maxInstances != null && message.hasOwnProperty("maxInstances"))
                                if (!$util.isInteger(message.maxInstances))
                                    return "maxInstances: integer expected";
                            if (message.weight != null && message.hasOwnProperty("weight"))
                                if (!$util.isInteger(message.weight))
                                    return "weight: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstanceGroupAutoscalingPolicyConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig} InstanceGroupAutoscalingPolicyConfig
                         */
                        InstanceGroupAutoscalingPolicyConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig();
                            if (object.minInstances != null)
                                message.minInstances = object.minInstances | 0;
                            if (object.maxInstances != null)
                                message.maxInstances = object.maxInstances | 0;
                            if (object.weight != null)
                                message.weight = object.weight | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstanceGroupAutoscalingPolicyConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig} message InstanceGroupAutoscalingPolicyConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstanceGroupAutoscalingPolicyConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.minInstances = 0;
                                object.maxInstances = 0;
                                object.weight = 0;
                            }
                            if (message.minInstances != null && message.hasOwnProperty("minInstances"))
                                object.minInstances = message.minInstances;
                            if (message.maxInstances != null && message.hasOwnProperty("maxInstances"))
                                object.maxInstances = message.maxInstances;
                            if (message.weight != null && message.hasOwnProperty("weight"))
                                object.weight = message.weight;
                            return object;
                        };
    
                        /**
                         * Converts this InstanceGroupAutoscalingPolicyConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstanceGroupAutoscalingPolicyConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InstanceGroupAutoscalingPolicyConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InstanceGroupAutoscalingPolicyConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.InstanceGroupAutoscalingPolicyConfig";
                        };
    
                        return InstanceGroupAutoscalingPolicyConfig;
                    })();
    
                    v1.CreateAutoscalingPolicyRequest = (function() {
    
                        /**
                         * Properties of a CreateAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICreateAutoscalingPolicyRequest
                         * @property {string|null} [parent] CreateAutoscalingPolicyRequest parent
                         * @property {google.cloud.dataproc.v1.IAutoscalingPolicy|null} [policy] CreateAutoscalingPolicyRequest policy
                         */
    
                        /**
                         * Constructs a new CreateAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CreateAutoscalingPolicyRequest.
                         * @implements ICreateAutoscalingPolicyRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest=} [properties] Properties to set
                         */
                        function CreateAutoscalingPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateAutoscalingPolicyRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @instance
                         */
                        CreateAutoscalingPolicyRequest.prototype.parent = "";
    
                        /**
                         * CreateAutoscalingPolicyRequest policy.
                         * @member {google.cloud.dataproc.v1.IAutoscalingPolicy|null|undefined} policy
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @instance
                         */
                        CreateAutoscalingPolicyRequest.prototype.policy = null;
    
                        /**
                         * Creates a new CreateAutoscalingPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest} CreateAutoscalingPolicyRequest instance
                         */
                        CreateAutoscalingPolicyRequest.create = function create(properties) {
                            return new CreateAutoscalingPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateAutoscalingPolicyRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest} message CreateAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAutoscalingPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.cloud.dataproc.v1.AutoscalingPolicy.encode(message.policy, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateAutoscalingPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateAutoscalingPolicyRequest} message CreateAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateAutoscalingPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateAutoscalingPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest} CreateAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAutoscalingPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateAutoscalingPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest} CreateAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateAutoscalingPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateAutoscalingPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateAutoscalingPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.cloud.dataproc.v1.AutoscalingPolicy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateAutoscalingPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest} CreateAutoscalingPolicyRequest
                         */
                        CreateAutoscalingPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest.policy: object expected");
                                message.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.fromObject(object.policy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateAutoscalingPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest} message CreateAutoscalingPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateAutoscalingPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.policy = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.toObject(message.policy, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateAutoscalingPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateAutoscalingPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateAutoscalingPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateAutoscalingPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CreateAutoscalingPolicyRequest";
                        };
    
                        return CreateAutoscalingPolicyRequest;
                    })();
    
                    v1.GetAutoscalingPolicyRequest = (function() {
    
                        /**
                         * Properties of a GetAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetAutoscalingPolicyRequest
                         * @property {string|null} [name] GetAutoscalingPolicyRequest name
                         */
    
                        /**
                         * Constructs a new GetAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetAutoscalingPolicyRequest.
                         * @implements IGetAutoscalingPolicyRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest=} [properties] Properties to set
                         */
                        function GetAutoscalingPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetAutoscalingPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @instance
                         */
                        GetAutoscalingPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetAutoscalingPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetAutoscalingPolicyRequest} GetAutoscalingPolicyRequest instance
                         */
                        GetAutoscalingPolicyRequest.create = function create(properties) {
                            return new GetAutoscalingPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetAutoscalingPolicyRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest} message GetAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAutoscalingPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetAutoscalingPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetAutoscalingPolicyRequest} message GetAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetAutoscalingPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetAutoscalingPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetAutoscalingPolicyRequest} GetAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAutoscalingPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetAutoscalingPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetAutoscalingPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetAutoscalingPolicyRequest} GetAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetAutoscalingPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetAutoscalingPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetAutoscalingPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetAutoscalingPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetAutoscalingPolicyRequest} GetAutoscalingPolicyRequest
                         */
                        GetAutoscalingPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetAutoscalingPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetAutoscalingPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetAutoscalingPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetAutoscalingPolicyRequest} message GetAutoscalingPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetAutoscalingPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetAutoscalingPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetAutoscalingPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetAutoscalingPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetAutoscalingPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetAutoscalingPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetAutoscalingPolicyRequest";
                        };
    
                        return GetAutoscalingPolicyRequest;
                    })();
    
                    v1.UpdateAutoscalingPolicyRequest = (function() {
    
                        /**
                         * Properties of an UpdateAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IUpdateAutoscalingPolicyRequest
                         * @property {google.cloud.dataproc.v1.IAutoscalingPolicy|null} [policy] UpdateAutoscalingPolicyRequest policy
                         */
    
                        /**
                         * Constructs a new UpdateAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an UpdateAutoscalingPolicyRequest.
                         * @implements IUpdateAutoscalingPolicyRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest=} [properties] Properties to set
                         */
                        function UpdateAutoscalingPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateAutoscalingPolicyRequest policy.
                         * @member {google.cloud.dataproc.v1.IAutoscalingPolicy|null|undefined} policy
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @instance
                         */
                        UpdateAutoscalingPolicyRequest.prototype.policy = null;
    
                        /**
                         * Creates a new UpdateAutoscalingPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest} UpdateAutoscalingPolicyRequest instance
                         */
                        UpdateAutoscalingPolicyRequest.create = function create(properties) {
                            return new UpdateAutoscalingPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateAutoscalingPolicyRequest message. Does not implicitly {@link google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest} message UpdateAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAutoscalingPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policy != null && Object.hasOwnProperty.call(message, "policy"))
                                $root.google.cloud.dataproc.v1.AutoscalingPolicy.encode(message.policy, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateAutoscalingPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateAutoscalingPolicyRequest} message UpdateAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateAutoscalingPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateAutoscalingPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest} UpdateAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAutoscalingPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateAutoscalingPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest} UpdateAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateAutoscalingPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateAutoscalingPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateAutoscalingPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policy != null && message.hasOwnProperty("policy")) {
                                var error = $root.google.cloud.dataproc.v1.AutoscalingPolicy.verify(message.policy);
                                if (error)
                                    return "policy." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateAutoscalingPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest} UpdateAutoscalingPolicyRequest
                         */
                        UpdateAutoscalingPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest();
                            if (object.policy != null) {
                                if (typeof object.policy !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest.policy: object expected");
                                message.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.fromObject(object.policy);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateAutoscalingPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest} message UpdateAutoscalingPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateAutoscalingPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.policy = null;
                            if (message.policy != null && message.hasOwnProperty("policy"))
                                object.policy = $root.google.cloud.dataproc.v1.AutoscalingPolicy.toObject(message.policy, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateAutoscalingPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateAutoscalingPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateAutoscalingPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateAutoscalingPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.UpdateAutoscalingPolicyRequest";
                        };
    
                        return UpdateAutoscalingPolicyRequest;
                    })();
    
                    v1.DeleteAutoscalingPolicyRequest = (function() {
    
                        /**
                         * Properties of a DeleteAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDeleteAutoscalingPolicyRequest
                         * @property {string|null} [name] DeleteAutoscalingPolicyRequest name
                         */
    
                        /**
                         * Constructs a new DeleteAutoscalingPolicyRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DeleteAutoscalingPolicyRequest.
                         * @implements IDeleteAutoscalingPolicyRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest=} [properties] Properties to set
                         */
                        function DeleteAutoscalingPolicyRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteAutoscalingPolicyRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @instance
                         */
                        DeleteAutoscalingPolicyRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteAutoscalingPolicyRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest} DeleteAutoscalingPolicyRequest instance
                         */
                        DeleteAutoscalingPolicyRequest.create = function create(properties) {
                            return new DeleteAutoscalingPolicyRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteAutoscalingPolicyRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest} message DeleteAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAutoscalingPolicyRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteAutoscalingPolicyRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteAutoscalingPolicyRequest} message DeleteAutoscalingPolicyRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteAutoscalingPolicyRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteAutoscalingPolicyRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest} DeleteAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAutoscalingPolicyRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteAutoscalingPolicyRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest} DeleteAutoscalingPolicyRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteAutoscalingPolicyRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteAutoscalingPolicyRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteAutoscalingPolicyRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteAutoscalingPolicyRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest} DeleteAutoscalingPolicyRequest
                         */
                        DeleteAutoscalingPolicyRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteAutoscalingPolicyRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest} message DeleteAutoscalingPolicyRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteAutoscalingPolicyRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteAutoscalingPolicyRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteAutoscalingPolicyRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteAutoscalingPolicyRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteAutoscalingPolicyRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DeleteAutoscalingPolicyRequest";
                        };
    
                        return DeleteAutoscalingPolicyRequest;
                    })();
    
                    v1.ListAutoscalingPoliciesRequest = (function() {
    
                        /**
                         * Properties of a ListAutoscalingPoliciesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListAutoscalingPoliciesRequest
                         * @property {string|null} [parent] ListAutoscalingPoliciesRequest parent
                         * @property {number|null} [pageSize] ListAutoscalingPoliciesRequest pageSize
                         * @property {string|null} [pageToken] ListAutoscalingPoliciesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListAutoscalingPoliciesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListAutoscalingPoliciesRequest.
                         * @implements IListAutoscalingPoliciesRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest=} [properties] Properties to set
                         */
                        function ListAutoscalingPoliciesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAutoscalingPoliciesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @instance
                         */
                        ListAutoscalingPoliciesRequest.prototype.parent = "";
    
                        /**
                         * ListAutoscalingPoliciesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @instance
                         */
                        ListAutoscalingPoliciesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListAutoscalingPoliciesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @instance
                         */
                        ListAutoscalingPoliciesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListAutoscalingPoliciesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest} ListAutoscalingPoliciesRequest instance
                         */
                        ListAutoscalingPoliciesRequest.create = function create(properties) {
                            return new ListAutoscalingPoliciesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListAutoscalingPoliciesRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest} message ListAutoscalingPoliciesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAutoscalingPoliciesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAutoscalingPoliciesRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesRequest} message ListAutoscalingPoliciesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAutoscalingPoliciesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAutoscalingPoliciesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest} ListAutoscalingPoliciesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAutoscalingPoliciesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAutoscalingPoliciesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest} ListAutoscalingPoliciesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAutoscalingPoliciesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAutoscalingPoliciesRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAutoscalingPoliciesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAutoscalingPoliciesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest} ListAutoscalingPoliciesRequest
                         */
                        ListAutoscalingPoliciesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAutoscalingPoliciesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest} message ListAutoscalingPoliciesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAutoscalingPoliciesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAutoscalingPoliciesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAutoscalingPoliciesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAutoscalingPoliciesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAutoscalingPoliciesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListAutoscalingPoliciesRequest";
                        };
    
                        return ListAutoscalingPoliciesRequest;
                    })();
    
                    v1.ListAutoscalingPoliciesResponse = (function() {
    
                        /**
                         * Properties of a ListAutoscalingPoliciesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListAutoscalingPoliciesResponse
                         * @property {Array.<google.cloud.dataproc.v1.IAutoscalingPolicy>|null} [policies] ListAutoscalingPoliciesResponse policies
                         * @property {string|null} [nextPageToken] ListAutoscalingPoliciesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListAutoscalingPoliciesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListAutoscalingPoliciesResponse.
                         * @implements IListAutoscalingPoliciesResponse
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesResponse=} [properties] Properties to set
                         */
                        function ListAutoscalingPoliciesResponse(properties) {
                            this.policies = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListAutoscalingPoliciesResponse policies.
                         * @member {Array.<google.cloud.dataproc.v1.IAutoscalingPolicy>} policies
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @instance
                         */
                        ListAutoscalingPoliciesResponse.prototype.policies = $util.emptyArray;
    
                        /**
                         * ListAutoscalingPoliciesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @instance
                         */
                        ListAutoscalingPoliciesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListAutoscalingPoliciesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesResponse=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} ListAutoscalingPoliciesResponse instance
                         */
                        ListAutoscalingPoliciesResponse.create = function create(properties) {
                            return new ListAutoscalingPoliciesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListAutoscalingPoliciesResponse message. Does not implicitly {@link google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesResponse} message ListAutoscalingPoliciesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAutoscalingPoliciesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policies != null && message.policies.length)
                                for (var i = 0; i < message.policies.length; ++i)
                                    $root.google.cloud.dataproc.v1.AutoscalingPolicy.encode(message.policies[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListAutoscalingPoliciesResponse message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListAutoscalingPoliciesResponse} message ListAutoscalingPoliciesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListAutoscalingPoliciesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListAutoscalingPoliciesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} ListAutoscalingPoliciesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAutoscalingPoliciesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.policies && message.policies.length))
                                            message.policies = [];
                                        message.policies.push($root.google.cloud.dataproc.v1.AutoscalingPolicy.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListAutoscalingPoliciesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} ListAutoscalingPoliciesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListAutoscalingPoliciesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListAutoscalingPoliciesResponse message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListAutoscalingPoliciesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policies != null && message.hasOwnProperty("policies")) {
                                if (!Array.isArray(message.policies))
                                    return "policies: array expected";
                                for (var i = 0; i < message.policies.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.AutoscalingPolicy.verify(message.policies[i]);
                                    if (error)
                                        return "policies." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListAutoscalingPoliciesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} ListAutoscalingPoliciesResponse
                         */
                        ListAutoscalingPoliciesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse();
                            if (object.policies) {
                                if (!Array.isArray(object.policies))
                                    throw TypeError(".google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse.policies: array expected");
                                message.policies = [];
                                for (var i = 0; i < object.policies.length; ++i) {
                                    if (typeof object.policies[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse.policies: object expected");
                                    message.policies[i] = $root.google.cloud.dataproc.v1.AutoscalingPolicy.fromObject(object.policies[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListAutoscalingPoliciesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse} message ListAutoscalingPoliciesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListAutoscalingPoliciesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.policies = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.policies && message.policies.length) {
                                object.policies = [];
                                for (var j = 0; j < message.policies.length; ++j)
                                    object.policies[j] = $root.google.cloud.dataproc.v1.AutoscalingPolicy.toObject(message.policies[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListAutoscalingPoliciesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListAutoscalingPoliciesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListAutoscalingPoliciesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListAutoscalingPoliciesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListAutoscalingPoliciesResponse";
                        };
    
                        return ListAutoscalingPoliciesResponse;
                    })();
    
                    v1.BatchController = (function() {
    
                        /**
                         * Constructs a new BatchController service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a BatchController
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function BatchController(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (BatchController.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = BatchController;
    
                        /**
                         * Creates new BatchController service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {BatchController} RPC service. Useful where requests and/or responses are streamed.
                         */
                        BatchController.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.BatchController|createBatch}.
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @typedef CreateBatchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateBatch.
                         * @function createBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest} request CreateBatchRequest message or plain object
                         * @param {google.cloud.dataproc.v1.BatchController.CreateBatchCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BatchController.prototype.createBatch = function createBatch(request, callback) {
                            return this.rpcCall(createBatch, $root.google.cloud.dataproc.v1.CreateBatchRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateBatch" });
    
                        /**
                         * Calls CreateBatch.
                         * @function createBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest} request CreateBatchRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.BatchController|getBatch}.
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @typedef GetBatchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Batch} [response] Batch
                         */
    
                        /**
                         * Calls GetBatch.
                         * @function getBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest} request GetBatchRequest message or plain object
                         * @param {google.cloud.dataproc.v1.BatchController.GetBatchCallback} callback Node-style callback called with the error, if any, and Batch
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BatchController.prototype.getBatch = function getBatch(request, callback) {
                            return this.rpcCall(getBatch, $root.google.cloud.dataproc.v1.GetBatchRequest, $root.google.cloud.dataproc.v1.Batch, request, callback);
                        }, "name", { value: "GetBatch" });
    
                        /**
                         * Calls GetBatch.
                         * @function getBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest} request GetBatchRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Batch>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.BatchController|listBatches}.
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @typedef ListBatchesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.ListBatchesResponse} [response] ListBatchesResponse
                         */
    
                        /**
                         * Calls ListBatches.
                         * @function listBatches
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest} request ListBatchesRequest message or plain object
                         * @param {google.cloud.dataproc.v1.BatchController.ListBatchesCallback} callback Node-style callback called with the error, if any, and ListBatchesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BatchController.prototype.listBatches = function listBatches(request, callback) {
                            return this.rpcCall(listBatches, $root.google.cloud.dataproc.v1.ListBatchesRequest, $root.google.cloud.dataproc.v1.ListBatchesResponse, request, callback);
                        }, "name", { value: "ListBatches" });
    
                        /**
                         * Calls ListBatches.
                         * @function listBatches
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest} request ListBatchesRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.ListBatchesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.BatchController|deleteBatch}.
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @typedef DeleteBatchCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteBatch.
                         * @function deleteBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest} request DeleteBatchRequest message or plain object
                         * @param {google.cloud.dataproc.v1.BatchController.DeleteBatchCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(BatchController.prototype.deleteBatch = function deleteBatch(request, callback) {
                            return this.rpcCall(deleteBatch, $root.google.cloud.dataproc.v1.DeleteBatchRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteBatch" });
    
                        /**
                         * Calls DeleteBatch.
                         * @function deleteBatch
                         * @memberof google.cloud.dataproc.v1.BatchController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest} request DeleteBatchRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return BatchController;
                    })();
    
                    v1.CreateBatchRequest = (function() {
    
                        /**
                         * Properties of a CreateBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICreateBatchRequest
                         * @property {string|null} [parent] CreateBatchRequest parent
                         * @property {google.cloud.dataproc.v1.IBatch|null} [batch] CreateBatchRequest batch
                         * @property {string|null} [batchId] CreateBatchRequest batchId
                         * @property {string|null} [requestId] CreateBatchRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CreateBatchRequest.
                         * @implements ICreateBatchRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest=} [properties] Properties to set
                         */
                        function CreateBatchRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateBatchRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @instance
                         */
                        CreateBatchRequest.prototype.parent = "";
    
                        /**
                         * CreateBatchRequest batch.
                         * @member {google.cloud.dataproc.v1.IBatch|null|undefined} batch
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @instance
                         */
                        CreateBatchRequest.prototype.batch = null;
    
                        /**
                         * CreateBatchRequest batchId.
                         * @member {string} batchId
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @instance
                         */
                        CreateBatchRequest.prototype.batchId = "";
    
                        /**
                         * CreateBatchRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @instance
                         */
                        CreateBatchRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateBatchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CreateBatchRequest} CreateBatchRequest instance
                         */
                        CreateBatchRequest.create = function create(properties) {
                            return new CreateBatchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateBatchRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CreateBatchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest} message CreateBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBatchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.batch != null && Object.hasOwnProperty.call(message, "batch"))
                                $root.google.cloud.dataproc.v1.Batch.encode(message.batch, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.batchId != null && Object.hasOwnProperty.call(message, "batchId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.batchId);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateBatchRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CreateBatchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateBatchRequest} message CreateBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateBatchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateBatchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CreateBatchRequest} CreateBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBatchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CreateBatchRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.batch = $root.google.cloud.dataproc.v1.Batch.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.batchId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateBatchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CreateBatchRequest} CreateBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateBatchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateBatchRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateBatchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.batch != null && message.hasOwnProperty("batch")) {
                                var error = $root.google.cloud.dataproc.v1.Batch.verify(message.batch);
                                if (error)
                                    return "batch." + error;
                            }
                            if (message.batchId != null && message.hasOwnProperty("batchId"))
                                if (!$util.isString(message.batchId))
                                    return "batchId: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateBatchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CreateBatchRequest} CreateBatchRequest
                         */
                        CreateBatchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CreateBatchRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CreateBatchRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.batch != null) {
                                if (typeof object.batch !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.CreateBatchRequest.batch: object expected");
                                message.batch = $root.google.cloud.dataproc.v1.Batch.fromObject(object.batch);
                            }
                            if (object.batchId != null)
                                message.batchId = String(object.batchId);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateBatchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CreateBatchRequest} message CreateBatchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateBatchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.batch = null;
                                object.batchId = "";
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.batch != null && message.hasOwnProperty("batch"))
                                object.batch = $root.google.cloud.dataproc.v1.Batch.toObject(message.batch, options);
                            if (message.batchId != null && message.hasOwnProperty("batchId"))
                                object.batchId = message.batchId;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateBatchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateBatchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateBatchRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CreateBatchRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateBatchRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CreateBatchRequest";
                        };
    
                        return CreateBatchRequest;
                    })();
    
                    v1.GetBatchRequest = (function() {
    
                        /**
                         * Properties of a GetBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetBatchRequest
                         * @property {string|null} [name] GetBatchRequest name
                         */
    
                        /**
                         * Constructs a new GetBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetBatchRequest.
                         * @implements IGetBatchRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest=} [properties] Properties to set
                         */
                        function GetBatchRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetBatchRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @instance
                         */
                        GetBatchRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetBatchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetBatchRequest} GetBatchRequest instance
                         */
                        GetBatchRequest.create = function create(properties) {
                            return new GetBatchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetBatchRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetBatchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest} message GetBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBatchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetBatchRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetBatchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetBatchRequest} message GetBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetBatchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetBatchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetBatchRequest} GetBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBatchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetBatchRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetBatchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetBatchRequest} GetBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetBatchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetBatchRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetBatchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetBatchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetBatchRequest} GetBatchRequest
                         */
                        GetBatchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetBatchRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetBatchRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetBatchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetBatchRequest} message GetBatchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetBatchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetBatchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetBatchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetBatchRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetBatchRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetBatchRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetBatchRequest";
                        };
    
                        return GetBatchRequest;
                    })();
    
                    v1.ListBatchesRequest = (function() {
    
                        /**
                         * Properties of a ListBatchesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListBatchesRequest
                         * @property {string|null} [parent] ListBatchesRequest parent
                         * @property {number|null} [pageSize] ListBatchesRequest pageSize
                         * @property {string|null} [pageToken] ListBatchesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListBatchesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListBatchesRequest.
                         * @implements IListBatchesRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest=} [properties] Properties to set
                         */
                        function ListBatchesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBatchesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @instance
                         */
                        ListBatchesRequest.prototype.parent = "";
    
                        /**
                         * ListBatchesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @instance
                         */
                        ListBatchesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListBatchesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @instance
                         */
                        ListBatchesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListBatchesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListBatchesRequest} ListBatchesRequest instance
                         */
                        ListBatchesRequest.create = function create(properties) {
                            return new ListBatchesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListBatchesRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ListBatchesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest} message ListBatchesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBatchesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBatchesRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListBatchesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesRequest} message ListBatchesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBatchesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBatchesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListBatchesRequest} ListBatchesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBatchesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListBatchesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBatchesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListBatchesRequest} ListBatchesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBatchesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBatchesRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBatchesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBatchesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListBatchesRequest} ListBatchesRequest
                         */
                        ListBatchesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListBatchesRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListBatchesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBatchesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ListBatchesRequest} message ListBatchesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBatchesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListBatchesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBatchesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBatchesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListBatchesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBatchesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListBatchesRequest";
                        };
    
                        return ListBatchesRequest;
                    })();
    
                    v1.ListBatchesResponse = (function() {
    
                        /**
                         * Properties of a ListBatchesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListBatchesResponse
                         * @property {Array.<google.cloud.dataproc.v1.IBatch>|null} [batches] ListBatchesResponse batches
                         * @property {string|null} [nextPageToken] ListBatchesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListBatchesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListBatchesResponse.
                         * @implements IListBatchesResponse
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListBatchesResponse=} [properties] Properties to set
                         */
                        function ListBatchesResponse(properties) {
                            this.batches = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListBatchesResponse batches.
                         * @member {Array.<google.cloud.dataproc.v1.IBatch>} batches
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @instance
                         */
                        ListBatchesResponse.prototype.batches = $util.emptyArray;
    
                        /**
                         * ListBatchesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @instance
                         */
                        ListBatchesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListBatchesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesResponse=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListBatchesResponse} ListBatchesResponse instance
                         */
                        ListBatchesResponse.create = function create(properties) {
                            return new ListBatchesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListBatchesResponse message. Does not implicitly {@link google.cloud.dataproc.v1.ListBatchesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesResponse} message ListBatchesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBatchesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.batches != null && message.batches.length)
                                for (var i = 0; i < message.batches.length; ++i)
                                    $root.google.cloud.dataproc.v1.Batch.encode(message.batches[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListBatchesResponse message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListBatchesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListBatchesResponse} message ListBatchesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListBatchesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListBatchesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListBatchesResponse} ListBatchesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBatchesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListBatchesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.batches && message.batches.length))
                                            message.batches = [];
                                        message.batches.push($root.google.cloud.dataproc.v1.Batch.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListBatchesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListBatchesResponse} ListBatchesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListBatchesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListBatchesResponse message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListBatchesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.batches != null && message.hasOwnProperty("batches")) {
                                if (!Array.isArray(message.batches))
                                    return "batches: array expected";
                                for (var i = 0; i < message.batches.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.Batch.verify(message.batches[i]);
                                    if (error)
                                        return "batches." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListBatchesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListBatchesResponse} ListBatchesResponse
                         */
                        ListBatchesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListBatchesResponse)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListBatchesResponse();
                            if (object.batches) {
                                if (!Array.isArray(object.batches))
                                    throw TypeError(".google.cloud.dataproc.v1.ListBatchesResponse.batches: array expected");
                                message.batches = [];
                                for (var i = 0; i < object.batches.length; ++i) {
                                    if (typeof object.batches[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ListBatchesResponse.batches: object expected");
                                    message.batches[i] = $root.google.cloud.dataproc.v1.Batch.fromObject(object.batches[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListBatchesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.ListBatchesResponse} message ListBatchesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListBatchesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.batches = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.batches && message.batches.length) {
                                object.batches = [];
                                for (var j = 0; j < message.batches.length; ++j)
                                    object.batches[j] = $root.google.cloud.dataproc.v1.Batch.toObject(message.batches[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListBatchesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListBatchesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListBatchesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListBatchesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListBatchesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListBatchesResponse";
                        };
    
                        return ListBatchesResponse;
                    })();
    
                    v1.DeleteBatchRequest = (function() {
    
                        /**
                         * Properties of a DeleteBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDeleteBatchRequest
                         * @property {string|null} [name] DeleteBatchRequest name
                         */
    
                        /**
                         * Constructs a new DeleteBatchRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DeleteBatchRequest.
                         * @implements IDeleteBatchRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest=} [properties] Properties to set
                         */
                        function DeleteBatchRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteBatchRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @instance
                         */
                        DeleteBatchRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteBatchRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DeleteBatchRequest} DeleteBatchRequest instance
                         */
                        DeleteBatchRequest.create = function create(properties) {
                            return new DeleteBatchRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteBatchRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DeleteBatchRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest} message DeleteBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBatchRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteBatchRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DeleteBatchRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteBatchRequest} message DeleteBatchRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteBatchRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteBatchRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DeleteBatchRequest} DeleteBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBatchRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DeleteBatchRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteBatchRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DeleteBatchRequest} DeleteBatchRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteBatchRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteBatchRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteBatchRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteBatchRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DeleteBatchRequest} DeleteBatchRequest
                         */
                        DeleteBatchRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DeleteBatchRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DeleteBatchRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteBatchRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DeleteBatchRequest} message DeleteBatchRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteBatchRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteBatchRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteBatchRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteBatchRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DeleteBatchRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteBatchRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DeleteBatchRequest";
                        };
    
                        return DeleteBatchRequest;
                    })();
    
                    v1.Batch = (function() {
    
                        /**
                         * Properties of a Batch.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IBatch
                         * @property {string|null} [name] Batch name
                         * @property {string|null} [uuid] Batch uuid
                         * @property {google.protobuf.ITimestamp|null} [createTime] Batch createTime
                         * @property {google.cloud.dataproc.v1.IPySparkBatch|null} [pysparkBatch] Batch pysparkBatch
                         * @property {google.cloud.dataproc.v1.ISparkBatch|null} [sparkBatch] Batch sparkBatch
                         * @property {google.cloud.dataproc.v1.ISparkRBatch|null} [sparkRBatch] Batch sparkRBatch
                         * @property {google.cloud.dataproc.v1.ISparkSqlBatch|null} [sparkSqlBatch] Batch sparkSqlBatch
                         * @property {google.cloud.dataproc.v1.IRuntimeInfo|null} [runtimeInfo] Batch runtimeInfo
                         * @property {google.cloud.dataproc.v1.Batch.State|null} [state] Batch state
                         * @property {string|null} [stateMessage] Batch stateMessage
                         * @property {google.protobuf.ITimestamp|null} [stateTime] Batch stateTime
                         * @property {string|null} [creator] Batch creator
                         * @property {Object.<string,string>|null} [labels] Batch labels
                         * @property {google.cloud.dataproc.v1.IRuntimeConfig|null} [runtimeConfig] Batch runtimeConfig
                         * @property {google.cloud.dataproc.v1.IEnvironmentConfig|null} [environmentConfig] Batch environmentConfig
                         * @property {string|null} [operation] Batch operation
                         * @property {Array.<google.cloud.dataproc.v1.Batch.IStateHistory>|null} [stateHistory] Batch stateHistory
                         */
    
                        /**
                         * Constructs a new Batch.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a Batch.
                         * @implements IBatch
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IBatch=} [properties] Properties to set
                         */
                        function Batch(properties) {
                            this.labels = {};
                            this.stateHistory = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Batch name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.name = "";
    
                        /**
                         * Batch uuid.
                         * @member {string} uuid
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.uuid = "";
    
                        /**
                         * Batch createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.createTime = null;
    
                        /**
                         * Batch pysparkBatch.
                         * @member {google.cloud.dataproc.v1.IPySparkBatch|null|undefined} pysparkBatch
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.pysparkBatch = null;
    
                        /**
                         * Batch sparkBatch.
                         * @member {google.cloud.dataproc.v1.ISparkBatch|null|undefined} sparkBatch
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.sparkBatch = null;
    
                        /**
                         * Batch sparkRBatch.
                         * @member {google.cloud.dataproc.v1.ISparkRBatch|null|undefined} sparkRBatch
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.sparkRBatch = null;
    
                        /**
                         * Batch sparkSqlBatch.
                         * @member {google.cloud.dataproc.v1.ISparkSqlBatch|null|undefined} sparkSqlBatch
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.sparkSqlBatch = null;
    
                        /**
                         * Batch runtimeInfo.
                         * @member {google.cloud.dataproc.v1.IRuntimeInfo|null|undefined} runtimeInfo
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.runtimeInfo = null;
    
                        /**
                         * Batch state.
                         * @member {google.cloud.dataproc.v1.Batch.State} state
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.state = 0;
    
                        /**
                         * Batch stateMessage.
                         * @member {string} stateMessage
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.stateMessage = "";
    
                        /**
                         * Batch stateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} stateTime
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.stateTime = null;
    
                        /**
                         * Batch creator.
                         * @member {string} creator
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.creator = "";
    
                        /**
                         * Batch labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.labels = $util.emptyObject;
    
                        /**
                         * Batch runtimeConfig.
                         * @member {google.cloud.dataproc.v1.IRuntimeConfig|null|undefined} runtimeConfig
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.runtimeConfig = null;
    
                        /**
                         * Batch environmentConfig.
                         * @member {google.cloud.dataproc.v1.IEnvironmentConfig|null|undefined} environmentConfig
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.environmentConfig = null;
    
                        /**
                         * Batch operation.
                         * @member {string} operation
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.operation = "";
    
                        /**
                         * Batch stateHistory.
                         * @member {Array.<google.cloud.dataproc.v1.Batch.IStateHistory>} stateHistory
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Batch.prototype.stateHistory = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Batch batchConfig.
                         * @member {"pysparkBatch"|"sparkBatch"|"sparkRBatch"|"sparkSqlBatch"|undefined} batchConfig
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         */
                        Object.defineProperty(Batch.prototype, "batchConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["pysparkBatch", "sparkBatch", "sparkRBatch", "sparkSqlBatch"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Batch instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatch=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.Batch} Batch instance
                         */
                        Batch.create = function create(properties) {
                            return new Batch(properties);
                        };
    
                        /**
                         * Encodes the specified Batch message. Does not implicitly {@link google.cloud.dataproc.v1.Batch.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatch} message Batch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Batch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.uuid != null && Object.hasOwnProperty.call(message, "uuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.uuid);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pysparkBatch != null && Object.hasOwnProperty.call(message, "pysparkBatch"))
                                $root.google.cloud.dataproc.v1.PySparkBatch.encode(message.pysparkBatch, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.sparkBatch != null && Object.hasOwnProperty.call(message, "sparkBatch"))
                                $root.google.cloud.dataproc.v1.SparkBatch.encode(message.sparkBatch, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.sparkRBatch != null && Object.hasOwnProperty.call(message, "sparkRBatch"))
                                $root.google.cloud.dataproc.v1.SparkRBatch.encode(message.sparkRBatch, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.sparkSqlBatch != null && Object.hasOwnProperty.call(message, "sparkSqlBatch"))
                                $root.google.cloud.dataproc.v1.SparkSqlBatch.encode(message.sparkSqlBatch, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.runtimeInfo != null && Object.hasOwnProperty.call(message, "runtimeInfo"))
                                $root.google.cloud.dataproc.v1.RuntimeInfo.encode(message.runtimeInfo, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 9, wireType 0 =*/72).int32(message.state);
                            if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.stateMessage);
                            if (message.stateTime != null && Object.hasOwnProperty.call(message, "stateTime"))
                                $root.google.protobuf.Timestamp.encode(message.stateTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.creator != null && Object.hasOwnProperty.call(message, "creator"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.creator);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.runtimeConfig != null && Object.hasOwnProperty.call(message, "runtimeConfig"))
                                $root.google.cloud.dataproc.v1.RuntimeConfig.encode(message.runtimeConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.environmentConfig != null && Object.hasOwnProperty.call(message, "environmentConfig"))
                                $root.google.cloud.dataproc.v1.EnvironmentConfig.encode(message.environmentConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.operation != null && Object.hasOwnProperty.call(message, "operation"))
                                writer.uint32(/* id 16, wireType 2 =*/130).string(message.operation);
                            if (message.stateHistory != null && message.stateHistory.length)
                                for (var i = 0; i < message.stateHistory.length; ++i)
                                    $root.google.cloud.dataproc.v1.Batch.StateHistory.encode(message.stateHistory[i], writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Batch message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.Batch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatch} message Batch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Batch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Batch message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.Batch} Batch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Batch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.Batch(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.uuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pysparkBatch = $root.google.cloud.dataproc.v1.PySparkBatch.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.sparkBatch = $root.google.cloud.dataproc.v1.SparkBatch.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.sparkRBatch = $root.google.cloud.dataproc.v1.SparkRBatch.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.sparkSqlBatch = $root.google.cloud.dataproc.v1.SparkSqlBatch.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.runtimeInfo = $root.google.cloud.dataproc.v1.RuntimeInfo.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 10: {
                                        message.stateMessage = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.stateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.creator = reader.string();
                                        break;
                                    }
                                case 13: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 14: {
                                        message.runtimeConfig = $root.google.cloud.dataproc.v1.RuntimeConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.environmentConfig = $root.google.cloud.dataproc.v1.EnvironmentConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.operation = reader.string();
                                        break;
                                    }
                                case 17: {
                                        if (!(message.stateHistory && message.stateHistory.length))
                                            message.stateHistory = [];
                                        message.stateHistory.push($root.google.cloud.dataproc.v1.Batch.StateHistory.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Batch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.Batch} Batch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Batch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Batch message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Batch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.uuid != null && message.hasOwnProperty("uuid"))
                                if (!$util.isString(message.uuid))
                                    return "uuid: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.pysparkBatch != null && message.hasOwnProperty("pysparkBatch")) {
                                properties.batchConfig = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PySparkBatch.verify(message.pysparkBatch);
                                    if (error)
                                        return "pysparkBatch." + error;
                                }
                            }
                            if (message.sparkBatch != null && message.hasOwnProperty("sparkBatch")) {
                                if (properties.batchConfig === 1)
                                    return "batchConfig: multiple values";
                                properties.batchConfig = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkBatch.verify(message.sparkBatch);
                                    if (error)
                                        return "sparkBatch." + error;
                                }
                            }
                            if (message.sparkRBatch != null && message.hasOwnProperty("sparkRBatch")) {
                                if (properties.batchConfig === 1)
                                    return "batchConfig: multiple values";
                                properties.batchConfig = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkRBatch.verify(message.sparkRBatch);
                                    if (error)
                                        return "sparkRBatch." + error;
                                }
                            }
                            if (message.sparkSqlBatch != null && message.hasOwnProperty("sparkSqlBatch")) {
                                if (properties.batchConfig === 1)
                                    return "batchConfig: multiple values";
                                properties.batchConfig = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkSqlBatch.verify(message.sparkSqlBatch);
                                    if (error)
                                        return "sparkSqlBatch." + error;
                                }
                            }
                            if (message.runtimeInfo != null && message.hasOwnProperty("runtimeInfo")) {
                                var error = $root.google.cloud.dataproc.v1.RuntimeInfo.verify(message.runtimeInfo);
                                if (error)
                                    return "runtimeInfo." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                    break;
                                }
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                if (!$util.isString(message.stateMessage))
                                    return "stateMessage: string expected";
                            if (message.stateTime != null && message.hasOwnProperty("stateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.stateTime);
                                if (error)
                                    return "stateTime." + error;
                            }
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                if (!$util.isString(message.creator))
                                    return "creator: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.runtimeConfig != null && message.hasOwnProperty("runtimeConfig")) {
                                var error = $root.google.cloud.dataproc.v1.RuntimeConfig.verify(message.runtimeConfig);
                                if (error)
                                    return "runtimeConfig." + error;
                            }
                            if (message.environmentConfig != null && message.hasOwnProperty("environmentConfig")) {
                                var error = $root.google.cloud.dataproc.v1.EnvironmentConfig.verify(message.environmentConfig);
                                if (error)
                                    return "environmentConfig." + error;
                            }
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                if (!$util.isString(message.operation))
                                    return "operation: string expected";
                            if (message.stateHistory != null && message.hasOwnProperty("stateHistory")) {
                                if (!Array.isArray(message.stateHistory))
                                    return "stateHistory: array expected";
                                for (var i = 0; i < message.stateHistory.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.Batch.StateHistory.verify(message.stateHistory[i]);
                                    if (error)
                                        return "stateHistory." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Batch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.Batch} Batch
                         */
                        Batch.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.Batch)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.Batch();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.uuid != null)
                                message.uuid = String(object.uuid);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.pysparkBatch != null) {
                                if (typeof object.pysparkBatch !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.pysparkBatch: object expected");
                                message.pysparkBatch = $root.google.cloud.dataproc.v1.PySparkBatch.fromObject(object.pysparkBatch);
                            }
                            if (object.sparkBatch != null) {
                                if (typeof object.sparkBatch !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.sparkBatch: object expected");
                                message.sparkBatch = $root.google.cloud.dataproc.v1.SparkBatch.fromObject(object.sparkBatch);
                            }
                            if (object.sparkRBatch != null) {
                                if (typeof object.sparkRBatch !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.sparkRBatch: object expected");
                                message.sparkRBatch = $root.google.cloud.dataproc.v1.SparkRBatch.fromObject(object.sparkRBatch);
                            }
                            if (object.sparkSqlBatch != null) {
                                if (typeof object.sparkSqlBatch !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.sparkSqlBatch: object expected");
                                message.sparkSqlBatch = $root.google.cloud.dataproc.v1.SparkSqlBatch.fromObject(object.sparkSqlBatch);
                            }
                            if (object.runtimeInfo != null) {
                                if (typeof object.runtimeInfo !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.runtimeInfo: object expected");
                                message.runtimeInfo = $root.google.cloud.dataproc.v1.RuntimeInfo.fromObject(object.runtimeInfo);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "CANCELLING":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            case "SUCCEEDED":
                            case 5:
                                message.state = 5;
                                break;
                            case "FAILED":
                            case 6:
                                message.state = 6;
                                break;
                            }
                            if (object.stateMessage != null)
                                message.stateMessage = String(object.stateMessage);
                            if (object.stateTime != null) {
                                if (typeof object.stateTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.stateTime: object expected");
                                message.stateTime = $root.google.protobuf.Timestamp.fromObject(object.stateTime);
                            }
                            if (object.creator != null)
                                message.creator = String(object.creator);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.runtimeConfig != null) {
                                if (typeof object.runtimeConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.runtimeConfig: object expected");
                                message.runtimeConfig = $root.google.cloud.dataproc.v1.RuntimeConfig.fromObject(object.runtimeConfig);
                            }
                            if (object.environmentConfig != null) {
                                if (typeof object.environmentConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.environmentConfig: object expected");
                                message.environmentConfig = $root.google.cloud.dataproc.v1.EnvironmentConfig.fromObject(object.environmentConfig);
                            }
                            if (object.operation != null)
                                message.operation = String(object.operation);
                            if (object.stateHistory) {
                                if (!Array.isArray(object.stateHistory))
                                    throw TypeError(".google.cloud.dataproc.v1.Batch.stateHistory: array expected");
                                message.stateHistory = [];
                                for (var i = 0; i < object.stateHistory.length; ++i) {
                                    if (typeof object.stateHistory[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.Batch.stateHistory: object expected");
                                    message.stateHistory[i] = $root.google.cloud.dataproc.v1.Batch.StateHistory.fromObject(object.stateHistory[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Batch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {google.cloud.dataproc.v1.Batch} message Batch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Batch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.stateHistory = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.uuid = "";
                                object.createTime = null;
                                object.runtimeInfo = null;
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.stateMessage = "";
                                object.stateTime = null;
                                object.creator = "";
                                object.runtimeConfig = null;
                                object.environmentConfig = null;
                                object.operation = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.uuid != null && message.hasOwnProperty("uuid"))
                                object.uuid = message.uuid;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.pysparkBatch != null && message.hasOwnProperty("pysparkBatch")) {
                                object.pysparkBatch = $root.google.cloud.dataproc.v1.PySparkBatch.toObject(message.pysparkBatch, options);
                                if (options.oneofs)
                                    object.batchConfig = "pysparkBatch";
                            }
                            if (message.sparkBatch != null && message.hasOwnProperty("sparkBatch")) {
                                object.sparkBatch = $root.google.cloud.dataproc.v1.SparkBatch.toObject(message.sparkBatch, options);
                                if (options.oneofs)
                                    object.batchConfig = "sparkBatch";
                            }
                            if (message.sparkRBatch != null && message.hasOwnProperty("sparkRBatch")) {
                                object.sparkRBatch = $root.google.cloud.dataproc.v1.SparkRBatch.toObject(message.sparkRBatch, options);
                                if (options.oneofs)
                                    object.batchConfig = "sparkRBatch";
                            }
                            if (message.sparkSqlBatch != null && message.hasOwnProperty("sparkSqlBatch")) {
                                object.sparkSqlBatch = $root.google.cloud.dataproc.v1.SparkSqlBatch.toObject(message.sparkSqlBatch, options);
                                if (options.oneofs)
                                    object.batchConfig = "sparkSqlBatch";
                            }
                            if (message.runtimeInfo != null && message.hasOwnProperty("runtimeInfo"))
                                object.runtimeInfo = $root.google.cloud.dataproc.v1.RuntimeInfo.toObject(message.runtimeInfo, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.Batch.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.Batch.State[message.state] : message.state;
                            if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                object.stateMessage = message.stateMessage;
                            if (message.stateTime != null && message.hasOwnProperty("stateTime"))
                                object.stateTime = $root.google.protobuf.Timestamp.toObject(message.stateTime, options);
                            if (message.creator != null && message.hasOwnProperty("creator"))
                                object.creator = message.creator;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.runtimeConfig != null && message.hasOwnProperty("runtimeConfig"))
                                object.runtimeConfig = $root.google.cloud.dataproc.v1.RuntimeConfig.toObject(message.runtimeConfig, options);
                            if (message.environmentConfig != null && message.hasOwnProperty("environmentConfig"))
                                object.environmentConfig = $root.google.cloud.dataproc.v1.EnvironmentConfig.toObject(message.environmentConfig, options);
                            if (message.operation != null && message.hasOwnProperty("operation"))
                                object.operation = message.operation;
                            if (message.stateHistory && message.stateHistory.length) {
                                object.stateHistory = [];
                                for (var j = 0; j < message.stateHistory.length; ++j)
                                    object.stateHistory[j] = $root.google.cloud.dataproc.v1.Batch.StateHistory.toObject(message.stateHistory[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this Batch to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Batch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Batch
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.Batch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Batch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.Batch";
                        };
    
                        Batch.StateHistory = (function() {
    
                            /**
                             * Properties of a StateHistory.
                             * @memberof google.cloud.dataproc.v1.Batch
                             * @interface IStateHistory
                             * @property {google.cloud.dataproc.v1.Batch.State|null} [state] StateHistory state
                             * @property {string|null} [stateMessage] StateHistory stateMessage
                             * @property {google.protobuf.ITimestamp|null} [stateStartTime] StateHistory stateStartTime
                             */
    
                            /**
                             * Constructs a new StateHistory.
                             * @memberof google.cloud.dataproc.v1.Batch
                             * @classdesc Represents a StateHistory.
                             * @implements IStateHistory
                             * @constructor
                             * @param {google.cloud.dataproc.v1.Batch.IStateHistory=} [properties] Properties to set
                             */
                            function StateHistory(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * StateHistory state.
                             * @member {google.cloud.dataproc.v1.Batch.State} state
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @instance
                             */
                            StateHistory.prototype.state = 0;
    
                            /**
                             * StateHistory stateMessage.
                             * @member {string} stateMessage
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @instance
                             */
                            StateHistory.prototype.stateMessage = "";
    
                            /**
                             * StateHistory stateStartTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} stateStartTime
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @instance
                             */
                            StateHistory.prototype.stateStartTime = null;
    
                            /**
                             * Creates a new StateHistory instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {google.cloud.dataproc.v1.Batch.IStateHistory=} [properties] Properties to set
                             * @returns {google.cloud.dataproc.v1.Batch.StateHistory} StateHistory instance
                             */
                            StateHistory.create = function create(properties) {
                                return new StateHistory(properties);
                            };
    
                            /**
                             * Encodes the specified StateHistory message. Does not implicitly {@link google.cloud.dataproc.v1.Batch.StateHistory.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {google.cloud.dataproc.v1.Batch.IStateHistory} message StateHistory message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StateHistory.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                                if (message.stateMessage != null && Object.hasOwnProperty.call(message, "stateMessage"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.stateMessage);
                                if (message.stateStartTime != null && Object.hasOwnProperty.call(message, "stateStartTime"))
                                    $root.google.protobuf.Timestamp.encode(message.stateStartTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified StateHistory message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.Batch.StateHistory.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {google.cloud.dataproc.v1.Batch.IStateHistory} message StateHistory message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            StateHistory.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a StateHistory message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.dataproc.v1.Batch.StateHistory} StateHistory
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StateHistory.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.Batch.StateHistory();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.state = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            message.stateMessage = reader.string();
                                            break;
                                        }
                                    case 3: {
                                            message.stateStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a StateHistory message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.dataproc.v1.Batch.StateHistory} StateHistory
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            StateHistory.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a StateHistory message.
                             * @function verify
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            StateHistory.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.state != null && message.hasOwnProperty("state"))
                                    switch (message.state) {
                                    default:
                                        return "state: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                    if (!$util.isString(message.stateMessage))
                                        return "stateMessage: string expected";
                                if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.stateStartTime);
                                    if (error)
                                        return "stateStartTime." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a StateHistory message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.dataproc.v1.Batch.StateHistory} StateHistory
                             */
                            StateHistory.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.dataproc.v1.Batch.StateHistory)
                                    return object;
                                var message = new $root.google.cloud.dataproc.v1.Batch.StateHistory();
                                switch (object.state) {
                                default:
                                    if (typeof object.state === "number") {
                                        message.state = object.state;
                                        break;
                                    }
                                    break;
                                case "STATE_UNSPECIFIED":
                                case 0:
                                    message.state = 0;
                                    break;
                                case "PENDING":
                                case 1:
                                    message.state = 1;
                                    break;
                                case "RUNNING":
                                case 2:
                                    message.state = 2;
                                    break;
                                case "CANCELLING":
                                case 3:
                                    message.state = 3;
                                    break;
                                case "CANCELLED":
                                case 4:
                                    message.state = 4;
                                    break;
                                case "SUCCEEDED":
                                case 5:
                                    message.state = 5;
                                    break;
                                case "FAILED":
                                case 6:
                                    message.state = 6;
                                    break;
                                }
                                if (object.stateMessage != null)
                                    message.stateMessage = String(object.stateMessage);
                                if (object.stateStartTime != null) {
                                    if (typeof object.stateStartTime !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.Batch.StateHistory.stateStartTime: object expected");
                                    message.stateStartTime = $root.google.protobuf.Timestamp.fromObject(object.stateStartTime);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a StateHistory message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {google.cloud.dataproc.v1.Batch.StateHistory} message StateHistory
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            StateHistory.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                    object.stateMessage = "";
                                    object.stateStartTime = null;
                                }
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = options.enums === String ? $root.google.cloud.dataproc.v1.Batch.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.Batch.State[message.state] : message.state;
                                if (message.stateMessage != null && message.hasOwnProperty("stateMessage"))
                                    object.stateMessage = message.stateMessage;
                                if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime"))
                                    object.stateStartTime = $root.google.protobuf.Timestamp.toObject(message.stateStartTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this StateHistory to JSON.
                             * @function toJSON
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            StateHistory.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for StateHistory
                             * @function getTypeUrl
                             * @memberof google.cloud.dataproc.v1.Batch.StateHistory
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            StateHistory.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.dataproc.v1.Batch.StateHistory";
                            };
    
                            return StateHistory;
                        })();
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.Batch.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} CANCELLING=3 CANCELLING value
                         * @property {number} CANCELLED=4 CANCELLED value
                         * @property {number} SUCCEEDED=5 SUCCEEDED value
                         * @property {number} FAILED=6 FAILED value
                         */
                        Batch.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "CANCELLING"] = 3;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            values[valuesById[5] = "SUCCEEDED"] = 5;
                            values[valuesById[6] = "FAILED"] = 6;
                            return values;
                        })();
    
                        return Batch;
                    })();
    
                    v1.PySparkBatch = (function() {
    
                        /**
                         * Properties of a PySparkBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IPySparkBatch
                         * @property {string|null} [mainPythonFileUri] PySparkBatch mainPythonFileUri
                         * @property {Array.<string>|null} [args] PySparkBatch args
                         * @property {Array.<string>|null} [pythonFileUris] PySparkBatch pythonFileUris
                         * @property {Array.<string>|null} [jarFileUris] PySparkBatch jarFileUris
                         * @property {Array.<string>|null} [fileUris] PySparkBatch fileUris
                         * @property {Array.<string>|null} [archiveUris] PySparkBatch archiveUris
                         */
    
                        /**
                         * Constructs a new PySparkBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a PySparkBatch.
                         * @implements IPySparkBatch
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IPySparkBatch=} [properties] Properties to set
                         */
                        function PySparkBatch(properties) {
                            this.args = [];
                            this.pythonFileUris = [];
                            this.jarFileUris = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PySparkBatch mainPythonFileUri.
                         * @member {string} mainPythonFileUri
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.mainPythonFileUri = "";
    
                        /**
                         * PySparkBatch args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.args = $util.emptyArray;
    
                        /**
                         * PySparkBatch pythonFileUris.
                         * @member {Array.<string>} pythonFileUris
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.pythonFileUris = $util.emptyArray;
    
                        /**
                         * PySparkBatch jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * PySparkBatch fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * PySparkBatch archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         */
                        PySparkBatch.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * Creates a new PySparkBatch instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkBatch=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.PySparkBatch} PySparkBatch instance
                         */
                        PySparkBatch.create = function create(properties) {
                            return new PySparkBatch(properties);
                        };
    
                        /**
                         * Encodes the specified PySparkBatch message. Does not implicitly {@link google.cloud.dataproc.v1.PySparkBatch.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkBatch} message PySparkBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PySparkBatch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainPythonFileUri != null && Object.hasOwnProperty.call(message, "mainPythonFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainPythonFileUri);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.args[i]);
                            if (message.pythonFileUris != null && message.pythonFileUris.length)
                                for (var i = 0; i < message.pythonFileUris.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pythonFileUris[i]);
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jarFileUris[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.archiveUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PySparkBatch message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.PySparkBatch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkBatch} message PySparkBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PySparkBatch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PySparkBatch message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.PySparkBatch} PySparkBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PySparkBatch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.PySparkBatch();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainPythonFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.pythonFileUris && message.pythonFileUris.length))
                                            message.pythonFileUris = [];
                                        message.pythonFileUris.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PySparkBatch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.PySparkBatch} PySparkBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PySparkBatch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PySparkBatch message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PySparkBatch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mainPythonFileUri != null && message.hasOwnProperty("mainPythonFileUri"))
                                if (!$util.isString(message.mainPythonFileUri))
                                    return "mainPythonFileUri: string expected";
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.pythonFileUris != null && message.hasOwnProperty("pythonFileUris")) {
                                if (!Array.isArray(message.pythonFileUris))
                                    return "pythonFileUris: array expected";
                                for (var i = 0; i < message.pythonFileUris.length; ++i)
                                    if (!$util.isString(message.pythonFileUris[i]))
                                        return "pythonFileUris: string[] expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PySparkBatch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.PySparkBatch} PySparkBatch
                         */
                        PySparkBatch.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.PySparkBatch)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.PySparkBatch();
                            if (object.mainPythonFileUri != null)
                                message.mainPythonFileUri = String(object.mainPythonFileUri);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkBatch.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.pythonFileUris) {
                                if (!Array.isArray(object.pythonFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkBatch.pythonFileUris: array expected");
                                message.pythonFileUris = [];
                                for (var i = 0; i < object.pythonFileUris.length; ++i)
                                    message.pythonFileUris[i] = String(object.pythonFileUris[i]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkBatch.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkBatch.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkBatch.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PySparkBatch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.PySparkBatch} message PySparkBatch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PySparkBatch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.pythonFileUris = [];
                                object.jarFileUris = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.defaults)
                                object.mainPythonFileUri = "";
                            if (message.mainPythonFileUri != null && message.hasOwnProperty("mainPythonFileUri"))
                                object.mainPythonFileUri = message.mainPythonFileUri;
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.pythonFileUris && message.pythonFileUris.length) {
                                object.pythonFileUris = [];
                                for (var j = 0; j < message.pythonFileUris.length; ++j)
                                    object.pythonFileUris[j] = message.pythonFileUris[j];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this PySparkBatch to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PySparkBatch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PySparkBatch
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.PySparkBatch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PySparkBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.PySparkBatch";
                        };
    
                        return PySparkBatch;
                    })();
    
                    v1.SparkBatch = (function() {
    
                        /**
                         * Properties of a SparkBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkBatch
                         * @property {string|null} [mainJarFileUri] SparkBatch mainJarFileUri
                         * @property {string|null} [mainClass] SparkBatch mainClass
                         * @property {Array.<string>|null} [args] SparkBatch args
                         * @property {Array.<string>|null} [jarFileUris] SparkBatch jarFileUris
                         * @property {Array.<string>|null} [fileUris] SparkBatch fileUris
                         * @property {Array.<string>|null} [archiveUris] SparkBatch archiveUris
                         */
    
                        /**
                         * Constructs a new SparkBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkBatch.
                         * @implements ISparkBatch
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkBatch=} [properties] Properties to set
                         */
                        function SparkBatch(properties) {
                            this.args = [];
                            this.jarFileUris = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkBatch mainJarFileUri.
                         * @member {string|null|undefined} mainJarFileUri
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.mainJarFileUri = null;
    
                        /**
                         * SparkBatch mainClass.
                         * @member {string|null|undefined} mainClass
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.mainClass = null;
    
                        /**
                         * SparkBatch args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.args = $util.emptyArray;
    
                        /**
                         * SparkBatch jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * SparkBatch fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * SparkBatch archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        SparkBatch.prototype.archiveUris = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SparkBatch driver.
                         * @member {"mainJarFileUri"|"mainClass"|undefined} driver
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         */
                        Object.defineProperty(SparkBatch.prototype, "driver", {
                            get: $util.oneOfGetter($oneOfFields = ["mainJarFileUri", "mainClass"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SparkBatch instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkBatch=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkBatch} SparkBatch instance
                         */
                        SparkBatch.create = function create(properties) {
                            return new SparkBatch(properties);
                        };
    
                        /**
                         * Encodes the specified SparkBatch message. Does not implicitly {@link google.cloud.dataproc.v1.SparkBatch.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkBatch} message SparkBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkBatch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainJarFileUri != null && Object.hasOwnProperty.call(message, "mainJarFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainJarFileUri);
                            if (message.mainClass != null && Object.hasOwnProperty.call(message, "mainClass"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mainClass);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.args[i]);
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jarFileUris[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.archiveUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkBatch message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkBatch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkBatch} message SparkBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkBatch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkBatch message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkBatch} SparkBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkBatch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkBatch();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainJarFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.mainClass = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkBatch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkBatch} SparkBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkBatch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkBatch message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkBatch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                properties.driver = 1;
                                if (!$util.isString(message.mainJarFileUri))
                                    return "mainJarFileUri: string expected";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                if (properties.driver === 1)
                                    return "driver: multiple values";
                                properties.driver = 1;
                                if (!$util.isString(message.mainClass))
                                    return "mainClass: string expected";
                            }
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkBatch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkBatch} SparkBatch
                         */
                        SparkBatch.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkBatch)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkBatch();
                            if (object.mainJarFileUri != null)
                                message.mainJarFileUri = String(object.mainJarFileUri);
                            if (object.mainClass != null)
                                message.mainClass = String(object.mainClass);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkBatch.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkBatch.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkBatch.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkBatch.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkBatch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkBatch} message SparkBatch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkBatch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.jarFileUris = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                object.mainJarFileUri = message.mainJarFileUri;
                                if (options.oneofs)
                                    object.driver = "mainJarFileUri";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                object.mainClass = message.mainClass;
                                if (options.oneofs)
                                    object.driver = "mainClass";
                            }
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SparkBatch to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkBatch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkBatch
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkBatch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkBatch";
                        };
    
                        return SparkBatch;
                    })();
    
                    v1.SparkRBatch = (function() {
    
                        /**
                         * Properties of a SparkRBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkRBatch
                         * @property {string|null} [mainRFileUri] SparkRBatch mainRFileUri
                         * @property {Array.<string>|null} [args] SparkRBatch args
                         * @property {Array.<string>|null} [fileUris] SparkRBatch fileUris
                         * @property {Array.<string>|null} [archiveUris] SparkRBatch archiveUris
                         */
    
                        /**
                         * Constructs a new SparkRBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkRBatch.
                         * @implements ISparkRBatch
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkRBatch=} [properties] Properties to set
                         */
                        function SparkRBatch(properties) {
                            this.args = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkRBatch mainRFileUri.
                         * @member {string} mainRFileUri
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @instance
                         */
                        SparkRBatch.prototype.mainRFileUri = "";
    
                        /**
                         * SparkRBatch args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @instance
                         */
                        SparkRBatch.prototype.args = $util.emptyArray;
    
                        /**
                         * SparkRBatch fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @instance
                         */
                        SparkRBatch.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * SparkRBatch archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @instance
                         */
                        SparkRBatch.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * Creates a new SparkRBatch instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRBatch=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkRBatch} SparkRBatch instance
                         */
                        SparkRBatch.create = function create(properties) {
                            return new SparkRBatch(properties);
                        };
    
                        /**
                         * Encodes the specified SparkRBatch message. Does not implicitly {@link google.cloud.dataproc.v1.SparkRBatch.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRBatch} message SparkRBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkRBatch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainRFileUri != null && Object.hasOwnProperty.call(message, "mainRFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainRFileUri);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.args[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.archiveUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkRBatch message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkRBatch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRBatch} message SparkRBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkRBatch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkRBatch message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkRBatch} SparkRBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkRBatch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkRBatch();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainRFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkRBatch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkRBatch} SparkRBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkRBatch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkRBatch message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkRBatch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mainRFileUri != null && message.hasOwnProperty("mainRFileUri"))
                                if (!$util.isString(message.mainRFileUri))
                                    return "mainRFileUri: string expected";
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkRBatch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkRBatch} SparkRBatch
                         */
                        SparkRBatch.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkRBatch)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkRBatch();
                            if (object.mainRFileUri != null)
                                message.mainRFileUri = String(object.mainRFileUri);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRBatch.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRBatch.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRBatch.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkRBatch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkRBatch} message SparkRBatch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkRBatch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.defaults)
                                object.mainRFileUri = "";
                            if (message.mainRFileUri != null && message.hasOwnProperty("mainRFileUri"))
                                object.mainRFileUri = message.mainRFileUri;
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SparkRBatch to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkRBatch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkRBatch
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkRBatch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkRBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkRBatch";
                        };
    
                        return SparkRBatch;
                    })();
    
                    v1.SparkSqlBatch = (function() {
    
                        /**
                         * Properties of a SparkSqlBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkSqlBatch
                         * @property {string|null} [queryFileUri] SparkSqlBatch queryFileUri
                         * @property {Object.<string,string>|null} [queryVariables] SparkSqlBatch queryVariables
                         * @property {Array.<string>|null} [jarFileUris] SparkSqlBatch jarFileUris
                         */
    
                        /**
                         * Constructs a new SparkSqlBatch.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkSqlBatch.
                         * @implements ISparkSqlBatch
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkSqlBatch=} [properties] Properties to set
                         */
                        function SparkSqlBatch(properties) {
                            this.queryVariables = {};
                            this.jarFileUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkSqlBatch queryFileUri.
                         * @member {string} queryFileUri
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @instance
                         */
                        SparkSqlBatch.prototype.queryFileUri = "";
    
                        /**
                         * SparkSqlBatch queryVariables.
                         * @member {Object.<string,string>} queryVariables
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @instance
                         */
                        SparkSqlBatch.prototype.queryVariables = $util.emptyObject;
    
                        /**
                         * SparkSqlBatch jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @instance
                         */
                        SparkSqlBatch.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * Creates a new SparkSqlBatch instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlBatch=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkSqlBatch} SparkSqlBatch instance
                         */
                        SparkSqlBatch.create = function create(properties) {
                            return new SparkSqlBatch(properties);
                        };
    
                        /**
                         * Encodes the specified SparkSqlBatch message. Does not implicitly {@link google.cloud.dataproc.v1.SparkSqlBatch.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlBatch} message SparkSqlBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkSqlBatch.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryFileUri != null && Object.hasOwnProperty.call(message, "queryFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryFileUri);
                            if (message.queryVariables != null && Object.hasOwnProperty.call(message, "queryVariables"))
                                for (var keys = Object.keys(message.queryVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.queryVariables[keys[i]]).ldelim();
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.jarFileUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkSqlBatch message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkSqlBatch.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlBatch} message SparkSqlBatch message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkSqlBatch.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkSqlBatch message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkSqlBatch} SparkSqlBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkSqlBatch.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkSqlBatch(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.queryVariables === $util.emptyObject)
                                            message.queryVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.queryVariables[key] = value;
                                        break;
                                    }
                                case 3: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkSqlBatch message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkSqlBatch} SparkSqlBatch
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkSqlBatch.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkSqlBatch message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkSqlBatch.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri"))
                                if (!$util.isString(message.queryFileUri))
                                    return "queryFileUri: string expected";
                            if (message.queryVariables != null && message.hasOwnProperty("queryVariables")) {
                                if (!$util.isObject(message.queryVariables))
                                    return "queryVariables: object expected";
                                var key = Object.keys(message.queryVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.queryVariables[key[i]]))
                                        return "queryVariables: string{k:string} expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkSqlBatch message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkSqlBatch} SparkSqlBatch
                         */
                        SparkSqlBatch.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkSqlBatch)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkSqlBatch();
                            if (object.queryFileUri != null)
                                message.queryFileUri = String(object.queryFileUri);
                            if (object.queryVariables) {
                                if (typeof object.queryVariables !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlBatch.queryVariables: object expected");
                                message.queryVariables = {};
                                for (var keys = Object.keys(object.queryVariables), i = 0; i < keys.length; ++i)
                                    message.queryVariables[keys[i]] = String(object.queryVariables[keys[i]]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlBatch.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkSqlBatch message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkSqlBatch} message SparkSqlBatch
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkSqlBatch.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jarFileUris = [];
                            if (options.objects || options.defaults)
                                object.queryVariables = {};
                            if (options.defaults)
                                object.queryFileUri = "";
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri"))
                                object.queryFileUri = message.queryFileUri;
                            var keys2;
                            if (message.queryVariables && (keys2 = Object.keys(message.queryVariables)).length) {
                                object.queryVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.queryVariables[keys2[j]] = message.queryVariables[keys2[j]];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SparkSqlBatch to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkSqlBatch.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkSqlBatch
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkSqlBatch
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkSqlBatch.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkSqlBatch";
                        };
    
                        return SparkSqlBatch;
                    })();
    
                    v1.RuntimeConfig = (function() {
    
                        /**
                         * Properties of a RuntimeConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IRuntimeConfig
                         * @property {string|null} [version] RuntimeConfig version
                         * @property {string|null} [containerImage] RuntimeConfig containerImage
                         * @property {Object.<string,string>|null} [properties] RuntimeConfig properties
                         */
    
                        /**
                         * Constructs a new RuntimeConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a RuntimeConfig.
                         * @implements IRuntimeConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IRuntimeConfig=} [properties] Properties to set
                         */
                        function RuntimeConfig(properties) {
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeConfig version.
                         * @member {string} version
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @instance
                         */
                        RuntimeConfig.prototype.version = "";
    
                        /**
                         * RuntimeConfig containerImage.
                         * @member {string} containerImage
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @instance
                         */
                        RuntimeConfig.prototype.containerImage = "";
    
                        /**
                         * RuntimeConfig properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @instance
                         */
                        RuntimeConfig.prototype.properties = $util.emptyObject;
    
                        /**
                         * Creates a new RuntimeConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.RuntimeConfig} RuntimeConfig instance
                         */
                        RuntimeConfig.create = function create(properties) {
                            return new RuntimeConfig(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeConfig message. Does not implicitly {@link google.cloud.dataproc.v1.RuntimeConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeConfig} message RuntimeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                            if (message.containerImage != null && Object.hasOwnProperty.call(message, "containerImage"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.containerImage);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.RuntimeConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeConfig} message RuntimeConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.RuntimeConfig} RuntimeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.RuntimeConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.version = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.containerImage = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.RuntimeConfig} RuntimeConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                if (!$util.isString(message.containerImage))
                                    return "containerImage: string expected";
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.RuntimeConfig} RuntimeConfig
                         */
                        RuntimeConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.RuntimeConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.RuntimeConfig();
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.containerImage != null)
                                message.containerImage = String(object.containerImage);
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.RuntimeConfig.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.RuntimeConfig} message RuntimeConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults) {
                                object.version = "";
                                object.containerImage = "";
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.containerImage != null && message.hasOwnProperty("containerImage"))
                                object.containerImage = message.containerImage;
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.RuntimeConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.RuntimeConfig";
                        };
    
                        return RuntimeConfig;
                    })();
    
                    v1.EnvironmentConfig = (function() {
    
                        /**
                         * Properties of an EnvironmentConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IEnvironmentConfig
                         * @property {google.cloud.dataproc.v1.IExecutionConfig|null} [executionConfig] EnvironmentConfig executionConfig
                         * @property {google.cloud.dataproc.v1.IPeripheralsConfig|null} [peripheralsConfig] EnvironmentConfig peripheralsConfig
                         */
    
                        /**
                         * Constructs a new EnvironmentConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an EnvironmentConfig.
                         * @implements IEnvironmentConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IEnvironmentConfig=} [properties] Properties to set
                         */
                        function EnvironmentConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EnvironmentConfig executionConfig.
                         * @member {google.cloud.dataproc.v1.IExecutionConfig|null|undefined} executionConfig
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @instance
                         */
                        EnvironmentConfig.prototype.executionConfig = null;
    
                        /**
                         * EnvironmentConfig peripheralsConfig.
                         * @member {google.cloud.dataproc.v1.IPeripheralsConfig|null|undefined} peripheralsConfig
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @instance
                         */
                        EnvironmentConfig.prototype.peripheralsConfig = null;
    
                        /**
                         * Creates a new EnvironmentConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEnvironmentConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.EnvironmentConfig} EnvironmentConfig instance
                         */
                        EnvironmentConfig.create = function create(properties) {
                            return new EnvironmentConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EnvironmentConfig message. Does not implicitly {@link google.cloud.dataproc.v1.EnvironmentConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEnvironmentConfig} message EnvironmentConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvironmentConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executionConfig != null && Object.hasOwnProperty.call(message, "executionConfig"))
                                $root.google.cloud.dataproc.v1.ExecutionConfig.encode(message.executionConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.peripheralsConfig != null && Object.hasOwnProperty.call(message, "peripheralsConfig"))
                                $root.google.cloud.dataproc.v1.PeripheralsConfig.encode(message.peripheralsConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EnvironmentConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.EnvironmentConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEnvironmentConfig} message EnvironmentConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EnvironmentConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EnvironmentConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.EnvironmentConfig} EnvironmentConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvironmentConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.EnvironmentConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.executionConfig = $root.google.cloud.dataproc.v1.ExecutionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.peripheralsConfig = $root.google.cloud.dataproc.v1.PeripheralsConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EnvironmentConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.EnvironmentConfig} EnvironmentConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EnvironmentConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EnvironmentConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EnvironmentConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executionConfig != null && message.hasOwnProperty("executionConfig")) {
                                var error = $root.google.cloud.dataproc.v1.ExecutionConfig.verify(message.executionConfig);
                                if (error)
                                    return "executionConfig." + error;
                            }
                            if (message.peripheralsConfig != null && message.hasOwnProperty("peripheralsConfig")) {
                                var error = $root.google.cloud.dataproc.v1.PeripheralsConfig.verify(message.peripheralsConfig);
                                if (error)
                                    return "peripheralsConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an EnvironmentConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.EnvironmentConfig} EnvironmentConfig
                         */
                        EnvironmentConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.EnvironmentConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.EnvironmentConfig();
                            if (object.executionConfig != null) {
                                if (typeof object.executionConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.EnvironmentConfig.executionConfig: object expected");
                                message.executionConfig = $root.google.cloud.dataproc.v1.ExecutionConfig.fromObject(object.executionConfig);
                            }
                            if (object.peripheralsConfig != null) {
                                if (typeof object.peripheralsConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.EnvironmentConfig.peripheralsConfig: object expected");
                                message.peripheralsConfig = $root.google.cloud.dataproc.v1.PeripheralsConfig.fromObject(object.peripheralsConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EnvironmentConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.EnvironmentConfig} message EnvironmentConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EnvironmentConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.executionConfig = null;
                                object.peripheralsConfig = null;
                            }
                            if (message.executionConfig != null && message.hasOwnProperty("executionConfig"))
                                object.executionConfig = $root.google.cloud.dataproc.v1.ExecutionConfig.toObject(message.executionConfig, options);
                            if (message.peripheralsConfig != null && message.hasOwnProperty("peripheralsConfig"))
                                object.peripheralsConfig = $root.google.cloud.dataproc.v1.PeripheralsConfig.toObject(message.peripheralsConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this EnvironmentConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EnvironmentConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EnvironmentConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.EnvironmentConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EnvironmentConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.EnvironmentConfig";
                        };
    
                        return EnvironmentConfig;
                    })();
    
                    v1.ExecutionConfig = (function() {
    
                        /**
                         * Properties of an ExecutionConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IExecutionConfig
                         * @property {string|null} [serviceAccount] ExecutionConfig serviceAccount
                         * @property {string|null} [networkUri] ExecutionConfig networkUri
                         * @property {string|null} [subnetworkUri] ExecutionConfig subnetworkUri
                         * @property {Array.<string>|null} [networkTags] ExecutionConfig networkTags
                         * @property {string|null} [kmsKey] ExecutionConfig kmsKey
                         */
    
                        /**
                         * Constructs a new ExecutionConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an ExecutionConfig.
                         * @implements IExecutionConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IExecutionConfig=} [properties] Properties to set
                         */
                        function ExecutionConfig(properties) {
                            this.networkTags = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ExecutionConfig serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.serviceAccount = "";
    
                        /**
                         * ExecutionConfig networkUri.
                         * @member {string|null|undefined} networkUri
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.networkUri = null;
    
                        /**
                         * ExecutionConfig subnetworkUri.
                         * @member {string|null|undefined} subnetworkUri
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.subnetworkUri = null;
    
                        /**
                         * ExecutionConfig networkTags.
                         * @member {Array.<string>} networkTags
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.networkTags = $util.emptyArray;
    
                        /**
                         * ExecutionConfig kmsKey.
                         * @member {string} kmsKey
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        ExecutionConfig.prototype.kmsKey = "";
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ExecutionConfig network.
                         * @member {"networkUri"|"subnetworkUri"|undefined} network
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         */
                        Object.defineProperty(ExecutionConfig.prototype, "network", {
                            get: $util.oneOfGetter($oneOfFields = ["networkUri", "subnetworkUri"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ExecutionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IExecutionConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ExecutionConfig} ExecutionConfig instance
                         */
                        ExecutionConfig.create = function create(properties) {
                            return new ExecutionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ExecutionConfig message. Does not implicitly {@link google.cloud.dataproc.v1.ExecutionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IExecutionConfig} message ExecutionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.serviceAccount);
                            if (message.networkUri != null && Object.hasOwnProperty.call(message, "networkUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.networkUri);
                            if (message.subnetworkUri != null && Object.hasOwnProperty.call(message, "subnetworkUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.subnetworkUri);
                            if (message.networkTags != null && message.networkTags.length)
                                for (var i = 0; i < message.networkTags.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.networkTags[i]);
                            if (message.kmsKey != null && Object.hasOwnProperty.call(message, "kmsKey"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.kmsKey);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ExecutionConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ExecutionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IExecutionConfig} message ExecutionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ExecutionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an ExecutionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ExecutionConfig} ExecutionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ExecutionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.networkUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.subnetworkUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (!(message.networkTags && message.networkTags.length))
                                            message.networkTags = [];
                                        message.networkTags.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.kmsKey = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an ExecutionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ExecutionConfig} ExecutionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ExecutionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an ExecutionConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ExecutionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.networkUri != null && message.hasOwnProperty("networkUri")) {
                                properties.network = 1;
                                if (!$util.isString(message.networkUri))
                                    return "networkUri: string expected";
                            }
                            if (message.subnetworkUri != null && message.hasOwnProperty("subnetworkUri")) {
                                if (properties.network === 1)
                                    return "network: multiple values";
                                properties.network = 1;
                                if (!$util.isString(message.subnetworkUri))
                                    return "subnetworkUri: string expected";
                            }
                            if (message.networkTags != null && message.hasOwnProperty("networkTags")) {
                                if (!Array.isArray(message.networkTags))
                                    return "networkTags: array expected";
                                for (var i = 0; i < message.networkTags.length; ++i)
                                    if (!$util.isString(message.networkTags[i]))
                                        return "networkTags: string[] expected";
                            }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                if (!$util.isString(message.kmsKey))
                                    return "kmsKey: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an ExecutionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ExecutionConfig} ExecutionConfig
                         */
                        ExecutionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ExecutionConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ExecutionConfig();
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.networkUri != null)
                                message.networkUri = String(object.networkUri);
                            if (object.subnetworkUri != null)
                                message.subnetworkUri = String(object.subnetworkUri);
                            if (object.networkTags) {
                                if (!Array.isArray(object.networkTags))
                                    throw TypeError(".google.cloud.dataproc.v1.ExecutionConfig.networkTags: array expected");
                                message.networkTags = [];
                                for (var i = 0; i < object.networkTags.length; ++i)
                                    message.networkTags[i] = String(object.networkTags[i]);
                            }
                            if (object.kmsKey != null)
                                message.kmsKey = String(object.kmsKey);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an ExecutionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ExecutionConfig} message ExecutionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ExecutionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.networkTags = [];
                            if (options.defaults) {
                                object.serviceAccount = "";
                                object.kmsKey = "";
                            }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.networkUri != null && message.hasOwnProperty("networkUri")) {
                                object.networkUri = message.networkUri;
                                if (options.oneofs)
                                    object.network = "networkUri";
                            }
                            if (message.subnetworkUri != null && message.hasOwnProperty("subnetworkUri")) {
                                object.subnetworkUri = message.subnetworkUri;
                                if (options.oneofs)
                                    object.network = "subnetworkUri";
                            }
                            if (message.networkTags && message.networkTags.length) {
                                object.networkTags = [];
                                for (var j = 0; j < message.networkTags.length; ++j)
                                    object.networkTags[j] = message.networkTags[j];
                            }
                            if (message.kmsKey != null && message.hasOwnProperty("kmsKey"))
                                object.kmsKey = message.kmsKey;
                            return object;
                        };
    
                        /**
                         * Converts this ExecutionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ExecutionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ExecutionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ExecutionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ExecutionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ExecutionConfig";
                        };
    
                        return ExecutionConfig;
                    })();
    
                    v1.SparkHistoryServerConfig = (function() {
    
                        /**
                         * Properties of a SparkHistoryServerConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkHistoryServerConfig
                         * @property {string|null} [dataprocCluster] SparkHistoryServerConfig dataprocCluster
                         */
    
                        /**
                         * Constructs a new SparkHistoryServerConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkHistoryServerConfig.
                         * @implements ISparkHistoryServerConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkHistoryServerConfig=} [properties] Properties to set
                         */
                        function SparkHistoryServerConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkHistoryServerConfig dataprocCluster.
                         * @member {string} dataprocCluster
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @instance
                         */
                        SparkHistoryServerConfig.prototype.dataprocCluster = "";
    
                        /**
                         * Creates a new SparkHistoryServerConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkHistoryServerConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkHistoryServerConfig} SparkHistoryServerConfig instance
                         */
                        SparkHistoryServerConfig.create = function create(properties) {
                            return new SparkHistoryServerConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SparkHistoryServerConfig message. Does not implicitly {@link google.cloud.dataproc.v1.SparkHistoryServerConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkHistoryServerConfig} message SparkHistoryServerConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkHistoryServerConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataprocCluster != null && Object.hasOwnProperty.call(message, "dataprocCluster"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.dataprocCluster);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkHistoryServerConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkHistoryServerConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkHistoryServerConfig} message SparkHistoryServerConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkHistoryServerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkHistoryServerConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkHistoryServerConfig} SparkHistoryServerConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkHistoryServerConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkHistoryServerConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataprocCluster = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkHistoryServerConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkHistoryServerConfig} SparkHistoryServerConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkHistoryServerConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkHistoryServerConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkHistoryServerConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataprocCluster != null && message.hasOwnProperty("dataprocCluster"))
                                if (!$util.isString(message.dataprocCluster))
                                    return "dataprocCluster: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SparkHistoryServerConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkHistoryServerConfig} SparkHistoryServerConfig
                         */
                        SparkHistoryServerConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkHistoryServerConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkHistoryServerConfig();
                            if (object.dataprocCluster != null)
                                message.dataprocCluster = String(object.dataprocCluster);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkHistoryServerConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkHistoryServerConfig} message SparkHistoryServerConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkHistoryServerConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.dataprocCluster = "";
                            if (message.dataprocCluster != null && message.hasOwnProperty("dataprocCluster"))
                                object.dataprocCluster = message.dataprocCluster;
                            return object;
                        };
    
                        /**
                         * Converts this SparkHistoryServerConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkHistoryServerConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkHistoryServerConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkHistoryServerConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkHistoryServerConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkHistoryServerConfig";
                        };
    
                        return SparkHistoryServerConfig;
                    })();
    
                    v1.PeripheralsConfig = (function() {
    
                        /**
                         * Properties of a PeripheralsConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IPeripheralsConfig
                         * @property {string|null} [metastoreService] PeripheralsConfig metastoreService
                         * @property {google.cloud.dataproc.v1.ISparkHistoryServerConfig|null} [sparkHistoryServerConfig] PeripheralsConfig sparkHistoryServerConfig
                         */
    
                        /**
                         * Constructs a new PeripheralsConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a PeripheralsConfig.
                         * @implements IPeripheralsConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IPeripheralsConfig=} [properties] Properties to set
                         */
                        function PeripheralsConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PeripheralsConfig metastoreService.
                         * @member {string} metastoreService
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @instance
                         */
                        PeripheralsConfig.prototype.metastoreService = "";
    
                        /**
                         * PeripheralsConfig sparkHistoryServerConfig.
                         * @member {google.cloud.dataproc.v1.ISparkHistoryServerConfig|null|undefined} sparkHistoryServerConfig
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @instance
                         */
                        PeripheralsConfig.prototype.sparkHistoryServerConfig = null;
    
                        /**
                         * Creates a new PeripheralsConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IPeripheralsConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.PeripheralsConfig} PeripheralsConfig instance
                         */
                        PeripheralsConfig.create = function create(properties) {
                            return new PeripheralsConfig(properties);
                        };
    
                        /**
                         * Encodes the specified PeripheralsConfig message. Does not implicitly {@link google.cloud.dataproc.v1.PeripheralsConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IPeripheralsConfig} message PeripheralsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PeripheralsConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metastoreService != null && Object.hasOwnProperty.call(message, "metastoreService"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.metastoreService);
                            if (message.sparkHistoryServerConfig != null && Object.hasOwnProperty.call(message, "sparkHistoryServerConfig"))
                                $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.encode(message.sparkHistoryServerConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PeripheralsConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.PeripheralsConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IPeripheralsConfig} message PeripheralsConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PeripheralsConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PeripheralsConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.PeripheralsConfig} PeripheralsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PeripheralsConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.PeripheralsConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.metastoreService = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PeripheralsConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.PeripheralsConfig} PeripheralsConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PeripheralsConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PeripheralsConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PeripheralsConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metastoreService != null && message.hasOwnProperty("metastoreService"))
                                if (!$util.isString(message.metastoreService))
                                    return "metastoreService: string expected";
                            if (message.sparkHistoryServerConfig != null && message.hasOwnProperty("sparkHistoryServerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.verify(message.sparkHistoryServerConfig);
                                if (error)
                                    return "sparkHistoryServerConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PeripheralsConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.PeripheralsConfig} PeripheralsConfig
                         */
                        PeripheralsConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.PeripheralsConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.PeripheralsConfig();
                            if (object.metastoreService != null)
                                message.metastoreService = String(object.metastoreService);
                            if (object.sparkHistoryServerConfig != null) {
                                if (typeof object.sparkHistoryServerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PeripheralsConfig.sparkHistoryServerConfig: object expected");
                                message.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.fromObject(object.sparkHistoryServerConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PeripheralsConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.PeripheralsConfig} message PeripheralsConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PeripheralsConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.metastoreService = "";
                                object.sparkHistoryServerConfig = null;
                            }
                            if (message.metastoreService != null && message.hasOwnProperty("metastoreService"))
                                object.metastoreService = message.metastoreService;
                            if (message.sparkHistoryServerConfig != null && message.hasOwnProperty("sparkHistoryServerConfig"))
                                object.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.toObject(message.sparkHistoryServerConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PeripheralsConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PeripheralsConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PeripheralsConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.PeripheralsConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PeripheralsConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.PeripheralsConfig";
                        };
    
                        return PeripheralsConfig;
                    })();
    
                    v1.RuntimeInfo = (function() {
    
                        /**
                         * Properties of a RuntimeInfo.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IRuntimeInfo
                         * @property {Object.<string,string>|null} [endpoints] RuntimeInfo endpoints
                         * @property {string|null} [outputUri] RuntimeInfo outputUri
                         * @property {string|null} [diagnosticOutputUri] RuntimeInfo diagnosticOutputUri
                         */
    
                        /**
                         * Constructs a new RuntimeInfo.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a RuntimeInfo.
                         * @implements IRuntimeInfo
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IRuntimeInfo=} [properties] Properties to set
                         */
                        function RuntimeInfo(properties) {
                            this.endpoints = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RuntimeInfo endpoints.
                         * @member {Object.<string,string>} endpoints
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @instance
                         */
                        RuntimeInfo.prototype.endpoints = $util.emptyObject;
    
                        /**
                         * RuntimeInfo outputUri.
                         * @member {string} outputUri
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @instance
                         */
                        RuntimeInfo.prototype.outputUri = "";
    
                        /**
                         * RuntimeInfo diagnosticOutputUri.
                         * @member {string} diagnosticOutputUri
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @instance
                         */
                        RuntimeInfo.prototype.diagnosticOutputUri = "";
    
                        /**
                         * Creates a new RuntimeInfo instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeInfo=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.RuntimeInfo} RuntimeInfo instance
                         */
                        RuntimeInfo.create = function create(properties) {
                            return new RuntimeInfo(properties);
                        };
    
                        /**
                         * Encodes the specified RuntimeInfo message. Does not implicitly {@link google.cloud.dataproc.v1.RuntimeInfo.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeInfo} message RuntimeInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeInfo.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.endpoints != null && Object.hasOwnProperty.call(message, "endpoints"))
                                for (var keys = Object.keys(message.endpoints), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.endpoints[keys[i]]).ldelim();
                            if (message.outputUri != null && Object.hasOwnProperty.call(message, "outputUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.outputUri);
                            if (message.diagnosticOutputUri != null && Object.hasOwnProperty.call(message, "diagnosticOutputUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.diagnosticOutputUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RuntimeInfo message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.RuntimeInfo.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {google.cloud.dataproc.v1.IRuntimeInfo} message RuntimeInfo message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RuntimeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RuntimeInfo message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.RuntimeInfo} RuntimeInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeInfo.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.RuntimeInfo(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.endpoints === $util.emptyObject)
                                            message.endpoints = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.endpoints[key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.outputUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.diagnosticOutputUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RuntimeInfo message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.RuntimeInfo} RuntimeInfo
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RuntimeInfo.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RuntimeInfo message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RuntimeInfo.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.endpoints != null && message.hasOwnProperty("endpoints")) {
                                if (!$util.isObject(message.endpoints))
                                    return "endpoints: object expected";
                                var key = Object.keys(message.endpoints);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.endpoints[key[i]]))
                                        return "endpoints: string{k:string} expected";
                            }
                            if (message.outputUri != null && message.hasOwnProperty("outputUri"))
                                if (!$util.isString(message.outputUri))
                                    return "outputUri: string expected";
                            if (message.diagnosticOutputUri != null && message.hasOwnProperty("diagnosticOutputUri"))
                                if (!$util.isString(message.diagnosticOutputUri))
                                    return "diagnosticOutputUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a RuntimeInfo message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.RuntimeInfo} RuntimeInfo
                         */
                        RuntimeInfo.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.RuntimeInfo)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.RuntimeInfo();
                            if (object.endpoints) {
                                if (typeof object.endpoints !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.RuntimeInfo.endpoints: object expected");
                                message.endpoints = {};
                                for (var keys = Object.keys(object.endpoints), i = 0; i < keys.length; ++i)
                                    message.endpoints[keys[i]] = String(object.endpoints[keys[i]]);
                            }
                            if (object.outputUri != null)
                                message.outputUri = String(object.outputUri);
                            if (object.diagnosticOutputUri != null)
                                message.diagnosticOutputUri = String(object.diagnosticOutputUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RuntimeInfo message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {google.cloud.dataproc.v1.RuntimeInfo} message RuntimeInfo
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RuntimeInfo.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.endpoints = {};
                            if (options.defaults) {
                                object.outputUri = "";
                                object.diagnosticOutputUri = "";
                            }
                            var keys2;
                            if (message.endpoints && (keys2 = Object.keys(message.endpoints)).length) {
                                object.endpoints = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.endpoints[keys2[j]] = message.endpoints[keys2[j]];
                            }
                            if (message.outputUri != null && message.hasOwnProperty("outputUri"))
                                object.outputUri = message.outputUri;
                            if (message.diagnosticOutputUri != null && message.hasOwnProperty("diagnosticOutputUri"))
                                object.diagnosticOutputUri = message.diagnosticOutputUri;
                            return object;
                        };
    
                        /**
                         * Converts this RuntimeInfo to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RuntimeInfo.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RuntimeInfo
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.RuntimeInfo
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RuntimeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.RuntimeInfo";
                        };
    
                        return RuntimeInfo;
                    })();
    
                    v1.GkeClusterConfig = (function() {
    
                        /**
                         * Properties of a GkeClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGkeClusterConfig
                         * @property {string|null} [gkeClusterTarget] GkeClusterConfig gkeClusterTarget
                         * @property {Array.<google.cloud.dataproc.v1.IGkeNodePoolTarget>|null} [nodePoolTarget] GkeClusterConfig nodePoolTarget
                         */
    
                        /**
                         * Constructs a new GkeClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GkeClusterConfig.
                         * @implements IGkeClusterConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGkeClusterConfig=} [properties] Properties to set
                         */
                        function GkeClusterConfig(properties) {
                            this.nodePoolTarget = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeClusterConfig gkeClusterTarget.
                         * @member {string} gkeClusterTarget
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @instance
                         */
                        GkeClusterConfig.prototype.gkeClusterTarget = "";
    
                        /**
                         * GkeClusterConfig nodePoolTarget.
                         * @member {Array.<google.cloud.dataproc.v1.IGkeNodePoolTarget>} nodePoolTarget
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @instance
                         */
                        GkeClusterConfig.prototype.nodePoolTarget = $util.emptyArray;
    
                        /**
                         * Creates a new GkeClusterConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeClusterConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GkeClusterConfig} GkeClusterConfig instance
                         */
                        GkeClusterConfig.create = function create(properties) {
                            return new GkeClusterConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GkeClusterConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GkeClusterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeClusterConfig} message GkeClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeClusterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gkeClusterTarget != null && Object.hasOwnProperty.call(message, "gkeClusterTarget"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.gkeClusterTarget);
                            if (message.nodePoolTarget != null && message.nodePoolTarget.length)
                                for (var i = 0; i < message.nodePoolTarget.length; ++i)
                                    $root.google.cloud.dataproc.v1.GkeNodePoolTarget.encode(message.nodePoolTarget[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeClusterConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeClusterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeClusterConfig} message GkeClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeClusterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GkeClusterConfig} GkeClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeClusterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeClusterConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.gkeClusterTarget = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.nodePoolTarget && message.nodePoolTarget.length))
                                            message.nodePoolTarget = [];
                                        message.nodePoolTarget.push($root.google.cloud.dataproc.v1.GkeNodePoolTarget.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeClusterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GkeClusterConfig} GkeClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeClusterConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeClusterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gkeClusterTarget != null && message.hasOwnProperty("gkeClusterTarget"))
                                if (!$util.isString(message.gkeClusterTarget))
                                    return "gkeClusterTarget: string expected";
                            if (message.nodePoolTarget != null && message.hasOwnProperty("nodePoolTarget")) {
                                if (!Array.isArray(message.nodePoolTarget))
                                    return "nodePoolTarget: array expected";
                                for (var i = 0; i < message.nodePoolTarget.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.GkeNodePoolTarget.verify(message.nodePoolTarget[i]);
                                    if (error)
                                        return "nodePoolTarget." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GkeClusterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GkeClusterConfig} GkeClusterConfig
                         */
                        GkeClusterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GkeClusterConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GkeClusterConfig();
                            if (object.gkeClusterTarget != null)
                                message.gkeClusterTarget = String(object.gkeClusterTarget);
                            if (object.nodePoolTarget) {
                                if (!Array.isArray(object.nodePoolTarget))
                                    throw TypeError(".google.cloud.dataproc.v1.GkeClusterConfig.nodePoolTarget: array expected");
                                message.nodePoolTarget = [];
                                for (var i = 0; i < object.nodePoolTarget.length; ++i) {
                                    if (typeof object.nodePoolTarget[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.GkeClusterConfig.nodePoolTarget: object expected");
                                    message.nodePoolTarget[i] = $root.google.cloud.dataproc.v1.GkeNodePoolTarget.fromObject(object.nodePoolTarget[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeClusterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.GkeClusterConfig} message GkeClusterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeClusterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.nodePoolTarget = [];
                            if (options.defaults)
                                object.gkeClusterTarget = "";
                            if (message.gkeClusterTarget != null && message.hasOwnProperty("gkeClusterTarget"))
                                object.gkeClusterTarget = message.gkeClusterTarget;
                            if (message.nodePoolTarget && message.nodePoolTarget.length) {
                                object.nodePoolTarget = [];
                                for (var j = 0; j < message.nodePoolTarget.length; ++j)
                                    object.nodePoolTarget[j] = $root.google.cloud.dataproc.v1.GkeNodePoolTarget.toObject(message.nodePoolTarget[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GkeClusterConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeClusterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GkeClusterConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GkeClusterConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GkeClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeClusterConfig";
                        };
    
                        return GkeClusterConfig;
                    })();
    
                    v1.KubernetesClusterConfig = (function() {
    
                        /**
                         * Properties of a KubernetesClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IKubernetesClusterConfig
                         * @property {string|null} [kubernetesNamespace] KubernetesClusterConfig kubernetesNamespace
                         * @property {google.cloud.dataproc.v1.IGkeClusterConfig|null} [gkeClusterConfig] KubernetesClusterConfig gkeClusterConfig
                         * @property {google.cloud.dataproc.v1.IKubernetesSoftwareConfig|null} [kubernetesSoftwareConfig] KubernetesClusterConfig kubernetesSoftwareConfig
                         */
    
                        /**
                         * Constructs a new KubernetesClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a KubernetesClusterConfig.
                         * @implements IKubernetesClusterConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IKubernetesClusterConfig=} [properties] Properties to set
                         */
                        function KubernetesClusterConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesClusterConfig kubernetesNamespace.
                         * @member {string} kubernetesNamespace
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @instance
                         */
                        KubernetesClusterConfig.prototype.kubernetesNamespace = "";
    
                        /**
                         * KubernetesClusterConfig gkeClusterConfig.
                         * @member {google.cloud.dataproc.v1.IGkeClusterConfig|null|undefined} gkeClusterConfig
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @instance
                         */
                        KubernetesClusterConfig.prototype.gkeClusterConfig = null;
    
                        /**
                         * KubernetesClusterConfig kubernetesSoftwareConfig.
                         * @member {google.cloud.dataproc.v1.IKubernetesSoftwareConfig|null|undefined} kubernetesSoftwareConfig
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @instance
                         */
                        KubernetesClusterConfig.prototype.kubernetesSoftwareConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * KubernetesClusterConfig config.
                         * @member {"gkeClusterConfig"|undefined} config
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @instance
                         */
                        Object.defineProperty(KubernetesClusterConfig.prototype, "config", {
                            get: $util.oneOfGetter($oneOfFields = ["gkeClusterConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new KubernetesClusterConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesClusterConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.KubernetesClusterConfig} KubernetesClusterConfig instance
                         */
                        KubernetesClusterConfig.create = function create(properties) {
                            return new KubernetesClusterConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesClusterConfig message. Does not implicitly {@link google.cloud.dataproc.v1.KubernetesClusterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesClusterConfig} message KubernetesClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesClusterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kubernetesNamespace != null && Object.hasOwnProperty.call(message, "kubernetesNamespace"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kubernetesNamespace);
                            if (message.gkeClusterConfig != null && Object.hasOwnProperty.call(message, "gkeClusterConfig"))
                                $root.google.cloud.dataproc.v1.GkeClusterConfig.encode(message.gkeClusterConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.kubernetesSoftwareConfig != null && Object.hasOwnProperty.call(message, "kubernetesSoftwareConfig"))
                                $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig.encode(message.kubernetesSoftwareConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesClusterConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.KubernetesClusterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesClusterConfig} message KubernetesClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesClusterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.KubernetesClusterConfig} KubernetesClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesClusterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.KubernetesClusterConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kubernetesNamespace = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.gkeClusterConfig = $root.google.cloud.dataproc.v1.GkeClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.kubernetesSoftwareConfig = $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesClusterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.KubernetesClusterConfig} KubernetesClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesClusterConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesClusterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.kubernetesNamespace != null && message.hasOwnProperty("kubernetesNamespace"))
                                if (!$util.isString(message.kubernetesNamespace))
                                    return "kubernetesNamespace: string expected";
                            if (message.gkeClusterConfig != null && message.hasOwnProperty("gkeClusterConfig")) {
                                properties.config = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.GkeClusterConfig.verify(message.gkeClusterConfig);
                                    if (error)
                                        return "gkeClusterConfig." + error;
                                }
                            }
                            if (message.kubernetesSoftwareConfig != null && message.hasOwnProperty("kubernetesSoftwareConfig")) {
                                var error = $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig.verify(message.kubernetesSoftwareConfig);
                                if (error)
                                    return "kubernetesSoftwareConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesClusterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.KubernetesClusterConfig} KubernetesClusterConfig
                         */
                        KubernetesClusterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.KubernetesClusterConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.KubernetesClusterConfig();
                            if (object.kubernetesNamespace != null)
                                message.kubernetesNamespace = String(object.kubernetesNamespace);
                            if (object.gkeClusterConfig != null) {
                                if (typeof object.gkeClusterConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.KubernetesClusterConfig.gkeClusterConfig: object expected");
                                message.gkeClusterConfig = $root.google.cloud.dataproc.v1.GkeClusterConfig.fromObject(object.gkeClusterConfig);
                            }
                            if (object.kubernetesSoftwareConfig != null) {
                                if (typeof object.kubernetesSoftwareConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.KubernetesClusterConfig.kubernetesSoftwareConfig: object expected");
                                message.kubernetesSoftwareConfig = $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig.fromObject(object.kubernetesSoftwareConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesClusterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.KubernetesClusterConfig} message KubernetesClusterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesClusterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesNamespace = "";
                                object.kubernetesSoftwareConfig = null;
                            }
                            if (message.kubernetesNamespace != null && message.hasOwnProperty("kubernetesNamespace"))
                                object.kubernetesNamespace = message.kubernetesNamespace;
                            if (message.gkeClusterConfig != null && message.hasOwnProperty("gkeClusterConfig")) {
                                object.gkeClusterConfig = $root.google.cloud.dataproc.v1.GkeClusterConfig.toObject(message.gkeClusterConfig, options);
                                if (options.oneofs)
                                    object.config = "gkeClusterConfig";
                            }
                            if (message.kubernetesSoftwareConfig != null && message.hasOwnProperty("kubernetesSoftwareConfig"))
                                object.kubernetesSoftwareConfig = $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig.toObject(message.kubernetesSoftwareConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesClusterConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesClusterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KubernetesClusterConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.KubernetesClusterConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KubernetesClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.KubernetesClusterConfig";
                        };
    
                        return KubernetesClusterConfig;
                    })();
    
                    v1.KubernetesSoftwareConfig = (function() {
    
                        /**
                         * Properties of a KubernetesSoftwareConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IKubernetesSoftwareConfig
                         * @property {Object.<string,string>|null} [componentVersion] KubernetesSoftwareConfig componentVersion
                         * @property {Object.<string,string>|null} [properties] KubernetesSoftwareConfig properties
                         */
    
                        /**
                         * Constructs a new KubernetesSoftwareConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a KubernetesSoftwareConfig.
                         * @implements IKubernetesSoftwareConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IKubernetesSoftwareConfig=} [properties] Properties to set
                         */
                        function KubernetesSoftwareConfig(properties) {
                            this.componentVersion = {};
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesSoftwareConfig componentVersion.
                         * @member {Object.<string,string>} componentVersion
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @instance
                         */
                        KubernetesSoftwareConfig.prototype.componentVersion = $util.emptyObject;
    
                        /**
                         * KubernetesSoftwareConfig properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @instance
                         */
                        KubernetesSoftwareConfig.prototype.properties = $util.emptyObject;
    
                        /**
                         * Creates a new KubernetesSoftwareConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesSoftwareConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.KubernetesSoftwareConfig} KubernetesSoftwareConfig instance
                         */
                        KubernetesSoftwareConfig.create = function create(properties) {
                            return new KubernetesSoftwareConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesSoftwareConfig message. Does not implicitly {@link google.cloud.dataproc.v1.KubernetesSoftwareConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesSoftwareConfig} message KubernetesSoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesSoftwareConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.componentVersion != null && Object.hasOwnProperty.call(message, "componentVersion"))
                                for (var keys = Object.keys(message.componentVersion), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.componentVersion[keys[i]]).ldelim();
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesSoftwareConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.KubernetesSoftwareConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKubernetesSoftwareConfig} message KubernetesSoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesSoftwareConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesSoftwareConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.KubernetesSoftwareConfig} KubernetesSoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesSoftwareConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.componentVersion === $util.emptyObject)
                                            message.componentVersion = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.componentVersion[key] = value;
                                        break;
                                    }
                                case 2: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesSoftwareConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.KubernetesSoftwareConfig} KubernetesSoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesSoftwareConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesSoftwareConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesSoftwareConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.componentVersion != null && message.hasOwnProperty("componentVersion")) {
                                if (!$util.isObject(message.componentVersion))
                                    return "componentVersion: object expected";
                                var key = Object.keys(message.componentVersion);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.componentVersion[key[i]]))
                                        return "componentVersion: string{k:string} expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesSoftwareConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.KubernetesSoftwareConfig} KubernetesSoftwareConfig
                         */
                        KubernetesSoftwareConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.KubernetesSoftwareConfig();
                            if (object.componentVersion) {
                                if (typeof object.componentVersion !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.KubernetesSoftwareConfig.componentVersion: object expected");
                                message.componentVersion = {};
                                for (var keys = Object.keys(object.componentVersion), i = 0; i < keys.length; ++i)
                                    message.componentVersion[keys[i]] = String(object.componentVersion[keys[i]]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.KubernetesSoftwareConfig.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesSoftwareConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.KubernetesSoftwareConfig} message KubernetesSoftwareConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesSoftwareConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.componentVersion = {};
                                object.properties = {};
                            }
                            var keys2;
                            if (message.componentVersion && (keys2 = Object.keys(message.componentVersion)).length) {
                                object.componentVersion = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.componentVersion[keys2[j]] = message.componentVersion[keys2[j]];
                            }
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesSoftwareConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesSoftwareConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KubernetesSoftwareConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.KubernetesSoftwareConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KubernetesSoftwareConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.KubernetesSoftwareConfig";
                        };
    
                        return KubernetesSoftwareConfig;
                    })();
    
                    v1.GkeNodePoolTarget = (function() {
    
                        /**
                         * Properties of a GkeNodePoolTarget.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGkeNodePoolTarget
                         * @property {string|null} [nodePool] GkeNodePoolTarget nodePool
                         * @property {Array.<google.cloud.dataproc.v1.GkeNodePoolTarget.Role>|null} [roles] GkeNodePoolTarget roles
                         * @property {google.cloud.dataproc.v1.IGkeNodePoolConfig|null} [nodePoolConfig] GkeNodePoolTarget nodePoolConfig
                         */
    
                        /**
                         * Constructs a new GkeNodePoolTarget.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GkeNodePoolTarget.
                         * @implements IGkeNodePoolTarget
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolTarget=} [properties] Properties to set
                         */
                        function GkeNodePoolTarget(properties) {
                            this.roles = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeNodePoolTarget nodePool.
                         * @member {string} nodePool
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @instance
                         */
                        GkeNodePoolTarget.prototype.nodePool = "";
    
                        /**
                         * GkeNodePoolTarget roles.
                         * @member {Array.<google.cloud.dataproc.v1.GkeNodePoolTarget.Role>} roles
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @instance
                         */
                        GkeNodePoolTarget.prototype.roles = $util.emptyArray;
    
                        /**
                         * GkeNodePoolTarget nodePoolConfig.
                         * @member {google.cloud.dataproc.v1.IGkeNodePoolConfig|null|undefined} nodePoolConfig
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @instance
                         */
                        GkeNodePoolTarget.prototype.nodePoolConfig = null;
    
                        /**
                         * Creates a new GkeNodePoolTarget instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolTarget=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolTarget} GkeNodePoolTarget instance
                         */
                        GkeNodePoolTarget.create = function create(properties) {
                            return new GkeNodePoolTarget(properties);
                        };
    
                        /**
                         * Encodes the specified GkeNodePoolTarget message. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolTarget.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolTarget} message GkeNodePoolTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeNodePoolTarget.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodePool != null && Object.hasOwnProperty.call(message, "nodePool"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.nodePool);
                            if (message.roles != null && message.roles.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.roles.length; ++i)
                                    writer.int32(message.roles[i]);
                                writer.ldelim();
                            }
                            if (message.nodePoolConfig != null && Object.hasOwnProperty.call(message, "nodePoolConfig"))
                                $root.google.cloud.dataproc.v1.GkeNodePoolConfig.encode(message.nodePoolConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeNodePoolTarget message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolTarget.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolTarget} message GkeNodePoolTarget message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeNodePoolTarget.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeNodePoolTarget message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolTarget} GkeNodePoolTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeNodePoolTarget.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeNodePoolTarget();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nodePool = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.roles && message.roles.length))
                                            message.roles = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.roles.push(reader.int32());
                                        } else
                                            message.roles.push(reader.int32());
                                        break;
                                    }
                                case 3: {
                                        message.nodePoolConfig = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeNodePoolTarget message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolTarget} GkeNodePoolTarget
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeNodePoolTarget.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeNodePoolTarget message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeNodePoolTarget.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodePool != null && message.hasOwnProperty("nodePool"))
                                if (!$util.isString(message.nodePool))
                                    return "nodePool: string expected";
                            if (message.roles != null && message.hasOwnProperty("roles")) {
                                if (!Array.isArray(message.roles))
                                    return "roles: array expected";
                                for (var i = 0; i < message.roles.length; ++i)
                                    switch (message.roles[i]) {
                                    default:
                                        return "roles: enum value[] expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                        break;
                                    }
                            }
                            if (message.nodePoolConfig != null && message.hasOwnProperty("nodePoolConfig")) {
                                var error = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.verify(message.nodePoolConfig);
                                if (error)
                                    return "nodePoolConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GkeNodePoolTarget message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolTarget} GkeNodePoolTarget
                         */
                        GkeNodePoolTarget.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GkeNodePoolTarget)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GkeNodePoolTarget();
                            if (object.nodePool != null)
                                message.nodePool = String(object.nodePool);
                            if (object.roles) {
                                if (!Array.isArray(object.roles))
                                    throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolTarget.roles: array expected");
                                message.roles = [];
                                for (var i = 0; i < object.roles.length; ++i)
                                    switch (object.roles[i]) {
                                    default:
                                        if (typeof object.roles[i] === "number") {
                                            message.roles[i] = object.roles[i];
                                            break;
                                        }
                                    case "ROLE_UNSPECIFIED":
                                    case 0:
                                        message.roles[i] = 0;
                                        break;
                                    case "DEFAULT":
                                    case 1:
                                        message.roles[i] = 1;
                                        break;
                                    case "CONTROLLER":
                                    case 2:
                                        message.roles[i] = 2;
                                        break;
                                    case "SPARK_DRIVER":
                                    case 3:
                                        message.roles[i] = 3;
                                        break;
                                    case "SPARK_EXECUTOR":
                                    case 4:
                                        message.roles[i] = 4;
                                        break;
                                    }
                            }
                            if (object.nodePoolConfig != null) {
                                if (typeof object.nodePoolConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolTarget.nodePoolConfig: object expected");
                                message.nodePoolConfig = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.fromObject(object.nodePoolConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeNodePoolTarget message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {google.cloud.dataproc.v1.GkeNodePoolTarget} message GkeNodePoolTarget
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeNodePoolTarget.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.roles = [];
                            if (options.defaults) {
                                object.nodePool = "";
                                object.nodePoolConfig = null;
                            }
                            if (message.nodePool != null && message.hasOwnProperty("nodePool"))
                                object.nodePool = message.nodePool;
                            if (message.roles && message.roles.length) {
                                object.roles = [];
                                for (var j = 0; j < message.roles.length; ++j)
                                    object.roles[j] = options.enums === String ? $root.google.cloud.dataproc.v1.GkeNodePoolTarget.Role[message.roles[j]] === undefined ? message.roles[j] : $root.google.cloud.dataproc.v1.GkeNodePoolTarget.Role[message.roles[j]] : message.roles[j];
                            }
                            if (message.nodePoolConfig != null && message.hasOwnProperty("nodePoolConfig"))
                                object.nodePoolConfig = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.toObject(message.nodePoolConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this GkeNodePoolTarget to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeNodePoolTarget.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GkeNodePoolTarget
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolTarget
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GkeNodePoolTarget.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeNodePoolTarget";
                        };
    
                        /**
                         * Role enum.
                         * @name google.cloud.dataproc.v1.GkeNodePoolTarget.Role
                         * @enum {number}
                         * @property {number} ROLE_UNSPECIFIED=0 ROLE_UNSPECIFIED value
                         * @property {number} DEFAULT=1 DEFAULT value
                         * @property {number} CONTROLLER=2 CONTROLLER value
                         * @property {number} SPARK_DRIVER=3 SPARK_DRIVER value
                         * @property {number} SPARK_EXECUTOR=4 SPARK_EXECUTOR value
                         */
                        GkeNodePoolTarget.Role = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ROLE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DEFAULT"] = 1;
                            values[valuesById[2] = "CONTROLLER"] = 2;
                            values[valuesById[3] = "SPARK_DRIVER"] = 3;
                            values[valuesById[4] = "SPARK_EXECUTOR"] = 4;
                            return values;
                        })();
    
                        return GkeNodePoolTarget;
                    })();
    
                    v1.GkeNodePoolConfig = (function() {
    
                        /**
                         * Properties of a GkeNodePoolConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGkeNodePoolConfig
                         * @property {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig|null} [config] GkeNodePoolConfig config
                         * @property {Array.<string>|null} [locations] GkeNodePoolConfig locations
                         * @property {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig|null} [autoscaling] GkeNodePoolConfig autoscaling
                         */
    
                        /**
                         * Constructs a new GkeNodePoolConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GkeNodePoolConfig.
                         * @implements IGkeNodePoolConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolConfig=} [properties] Properties to set
                         */
                        function GkeNodePoolConfig(properties) {
                            this.locations = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeNodePoolConfig config.
                         * @member {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig|null|undefined} config
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @instance
                         */
                        GkeNodePoolConfig.prototype.config = null;
    
                        /**
                         * GkeNodePoolConfig locations.
                         * @member {Array.<string>} locations
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @instance
                         */
                        GkeNodePoolConfig.prototype.locations = $util.emptyArray;
    
                        /**
                         * GkeNodePoolConfig autoscaling.
                         * @member {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig|null|undefined} autoscaling
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @instance
                         */
                        GkeNodePoolConfig.prototype.autoscaling = null;
    
                        /**
                         * Creates a new GkeNodePoolConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig} GkeNodePoolConfig instance
                         */
                        GkeNodePoolConfig.create = function create(properties) {
                            return new GkeNodePoolConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GkeNodePoolConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolConfig} message GkeNodePoolConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeNodePoolConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.encode(message.config, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.autoscaling != null && Object.hasOwnProperty.call(message, "autoscaling"))
                                $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.encode(message.autoscaling, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.locations != null && message.locations.length)
                                for (var i = 0; i < message.locations.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.locations[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeNodePoolConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGkeNodePoolConfig} message GkeNodePoolConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeNodePoolConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeNodePoolConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig} GkeNodePoolConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeNodePoolConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.config = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.locations && message.locations.length))
                                            message.locations = [];
                                        message.locations.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        message.autoscaling = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeNodePoolConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig} GkeNodePoolConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeNodePoolConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeNodePoolConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeNodePoolConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.locations != null && message.hasOwnProperty("locations")) {
                                if (!Array.isArray(message.locations))
                                    return "locations: array expected";
                                for (var i = 0; i < message.locations.length; ++i)
                                    if (!$util.isString(message.locations[i]))
                                        return "locations: string[] expected";
                            }
                            if (message.autoscaling != null && message.hasOwnProperty("autoscaling")) {
                                var error = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.verify(message.autoscaling);
                                if (error)
                                    return "autoscaling." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GkeNodePoolConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig} GkeNodePoolConfig
                         */
                        GkeNodePoolConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GkeNodePoolConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig();
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolConfig.config: object expected");
                                message.config = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.fromObject(object.config);
                            }
                            if (object.locations) {
                                if (!Array.isArray(object.locations))
                                    throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolConfig.locations: array expected");
                                message.locations = [];
                                for (var i = 0; i < object.locations.length; ++i)
                                    message.locations[i] = String(object.locations[i]);
                            }
                            if (object.autoscaling != null) {
                                if (typeof object.autoscaling !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolConfig.autoscaling: object expected");
                                message.autoscaling = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.fromObject(object.autoscaling);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeNodePoolConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.GkeNodePoolConfig} message GkeNodePoolConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeNodePoolConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.locations = [];
                            if (options.defaults) {
                                object.config = null;
                                object.autoscaling = null;
                            }
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.toObject(message.config, options);
                            if (message.autoscaling != null && message.hasOwnProperty("autoscaling"))
                                object.autoscaling = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.toObject(message.autoscaling, options);
                            if (message.locations && message.locations.length) {
                                object.locations = [];
                                for (var j = 0; j < message.locations.length; ++j)
                                    object.locations[j] = message.locations[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GkeNodePoolConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeNodePoolConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GkeNodePoolConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GkeNodePoolConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeNodePoolConfig";
                        };
    
                        GkeNodePoolConfig.GkeNodeConfig = (function() {
    
                            /**
                             * Properties of a GkeNodeConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @interface IGkeNodeConfig
                             * @property {string|null} [machineType] GkeNodeConfig machineType
                             * @property {boolean|null} [preemptible] GkeNodeConfig preemptible
                             * @property {number|null} [localSsdCount] GkeNodeConfig localSsdCount
                             * @property {Array.<google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig>|null} [accelerators] GkeNodeConfig accelerators
                             * @property {string|null} [minCpuPlatform] GkeNodeConfig minCpuPlatform
                             */
    
                            /**
                             * Constructs a new GkeNodeConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @classdesc Represents a GkeNodeConfig.
                             * @implements IGkeNodeConfig
                             * @constructor
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig=} [properties] Properties to set
                             */
                            function GkeNodeConfig(properties) {
                                this.accelerators = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GkeNodeConfig machineType.
                             * @member {string} machineType
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             */
                            GkeNodeConfig.prototype.machineType = "";
    
                            /**
                             * GkeNodeConfig preemptible.
                             * @member {boolean} preemptible
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             */
                            GkeNodeConfig.prototype.preemptible = false;
    
                            /**
                             * GkeNodeConfig localSsdCount.
                             * @member {number} localSsdCount
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             */
                            GkeNodeConfig.prototype.localSsdCount = 0;
    
                            /**
                             * GkeNodeConfig accelerators.
                             * @member {Array.<google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig>} accelerators
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             */
                            GkeNodeConfig.prototype.accelerators = $util.emptyArray;
    
                            /**
                             * GkeNodeConfig minCpuPlatform.
                             * @member {string} minCpuPlatform
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             */
                            GkeNodeConfig.prototype.minCpuPlatform = "";
    
                            /**
                             * Creates a new GkeNodeConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig=} [properties] Properties to set
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig} GkeNodeConfig instance
                             */
                            GkeNodeConfig.create = function create(properties) {
                                return new GkeNodeConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GkeNodeConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig} message GkeNodeConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodeConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.machineType != null && Object.hasOwnProperty.call(message, "machineType"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.machineType);
                                if (message.localSsdCount != null && Object.hasOwnProperty.call(message, "localSsdCount"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).int32(message.localSsdCount);
                                if (message.preemptible != null && Object.hasOwnProperty.call(message, "preemptible"))
                                    writer.uint32(/* id 10, wireType 0 =*/80).bool(message.preemptible);
                                if (message.accelerators != null && message.accelerators.length)
                                    for (var i = 0; i < message.accelerators.length; ++i)
                                        $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.encode(message.accelerators[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                                if (message.minCpuPlatform != null && Object.hasOwnProperty.call(message, "minCpuPlatform"))
                                    writer.uint32(/* id 13, wireType 2 =*/106).string(message.minCpuPlatform);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GkeNodeConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodeConfig} message GkeNodeConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodeConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GkeNodeConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig} GkeNodeConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodeConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.machineType = reader.string();
                                            break;
                                        }
                                    case 10: {
                                            message.preemptible = reader.bool();
                                            break;
                                        }
                                    case 7: {
                                            message.localSsdCount = reader.int32();
                                            break;
                                        }
                                    case 11: {
                                            if (!(message.accelerators && message.accelerators.length))
                                                message.accelerators = [];
                                            message.accelerators.push($root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.decode(reader, reader.uint32()));
                                            break;
                                        }
                                    case 13: {
                                            message.minCpuPlatform = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GkeNodeConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig} GkeNodeConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodeConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GkeNodeConfig message.
                             * @function verify
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GkeNodeConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.machineType != null && message.hasOwnProperty("machineType"))
                                    if (!$util.isString(message.machineType))
                                        return "machineType: string expected";
                                if (message.preemptible != null && message.hasOwnProperty("preemptible"))
                                    if (typeof message.preemptible !== "boolean")
                                        return "preemptible: boolean expected";
                                if (message.localSsdCount != null && message.hasOwnProperty("localSsdCount"))
                                    if (!$util.isInteger(message.localSsdCount))
                                        return "localSsdCount: integer expected";
                                if (message.accelerators != null && message.hasOwnProperty("accelerators")) {
                                    if (!Array.isArray(message.accelerators))
                                        return "accelerators: array expected";
                                    for (var i = 0; i < message.accelerators.length; ++i) {
                                        var error = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.verify(message.accelerators[i]);
                                        if (error)
                                            return "accelerators." + error;
                                    }
                                }
                                if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                                    if (!$util.isString(message.minCpuPlatform))
                                        return "minCpuPlatform: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GkeNodeConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig} GkeNodeConfig
                             */
                            GkeNodeConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig)
                                    return object;
                                var message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig();
                                if (object.machineType != null)
                                    message.machineType = String(object.machineType);
                                if (object.preemptible != null)
                                    message.preemptible = Boolean(object.preemptible);
                                if (object.localSsdCount != null)
                                    message.localSsdCount = object.localSsdCount | 0;
                                if (object.accelerators) {
                                    if (!Array.isArray(object.accelerators))
                                        throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.accelerators: array expected");
                                    message.accelerators = [];
                                    for (var i = 0; i < object.accelerators.length; ++i) {
                                        if (typeof object.accelerators[i] !== "object")
                                            throw TypeError(".google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig.accelerators: object expected");
                                        message.accelerators[i] = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.fromObject(object.accelerators[i]);
                                    }
                                }
                                if (object.minCpuPlatform != null)
                                    message.minCpuPlatform = String(object.minCpuPlatform);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GkeNodeConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig} message GkeNodeConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GkeNodeConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.accelerators = [];
                                if (options.defaults) {
                                    object.machineType = "";
                                    object.localSsdCount = 0;
                                    object.preemptible = false;
                                    object.minCpuPlatform = "";
                                }
                                if (message.machineType != null && message.hasOwnProperty("machineType"))
                                    object.machineType = message.machineType;
                                if (message.localSsdCount != null && message.hasOwnProperty("localSsdCount"))
                                    object.localSsdCount = message.localSsdCount;
                                if (message.preemptible != null && message.hasOwnProperty("preemptible"))
                                    object.preemptible = message.preemptible;
                                if (message.accelerators && message.accelerators.length) {
                                    object.accelerators = [];
                                    for (var j = 0; j < message.accelerators.length; ++j)
                                        object.accelerators[j] = $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.toObject(message.accelerators[j], options);
                                }
                                if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                                    object.minCpuPlatform = message.minCpuPlatform;
                                return object;
                            };
    
                            /**
                             * Converts this GkeNodeConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GkeNodeConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GkeNodeConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GkeNodeConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodeConfig";
                            };
    
                            return GkeNodeConfig;
                        })();
    
                        GkeNodePoolConfig.GkeNodePoolAcceleratorConfig = (function() {
    
                            /**
                             * Properties of a GkeNodePoolAcceleratorConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @interface IGkeNodePoolAcceleratorConfig
                             * @property {number|Long|null} [acceleratorCount] GkeNodePoolAcceleratorConfig acceleratorCount
                             * @property {string|null} [acceleratorType] GkeNodePoolAcceleratorConfig acceleratorType
                             */
    
                            /**
                             * Constructs a new GkeNodePoolAcceleratorConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @classdesc Represents a GkeNodePoolAcceleratorConfig.
                             * @implements IGkeNodePoolAcceleratorConfig
                             * @constructor
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig=} [properties] Properties to set
                             */
                            function GkeNodePoolAcceleratorConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GkeNodePoolAcceleratorConfig acceleratorCount.
                             * @member {number|Long} acceleratorCount
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @instance
                             */
                            GkeNodePoolAcceleratorConfig.prototype.acceleratorCount = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * GkeNodePoolAcceleratorConfig acceleratorType.
                             * @member {string} acceleratorType
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @instance
                             */
                            GkeNodePoolAcceleratorConfig.prototype.acceleratorType = "";
    
                            /**
                             * Creates a new GkeNodePoolAcceleratorConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig=} [properties] Properties to set
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig} GkeNodePoolAcceleratorConfig instance
                             */
                            GkeNodePoolAcceleratorConfig.create = function create(properties) {
                                return new GkeNodePoolAcceleratorConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GkeNodePoolAcceleratorConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig} message GkeNodePoolAcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodePoolAcceleratorConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.acceleratorCount != null && Object.hasOwnProperty.call(message, "acceleratorCount"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.acceleratorCount);
                                if (message.acceleratorType != null && Object.hasOwnProperty.call(message, "acceleratorType"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.acceleratorType);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GkeNodePoolAcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAcceleratorConfig} message GkeNodePoolAcceleratorConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodePoolAcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GkeNodePoolAcceleratorConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig} GkeNodePoolAcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodePoolAcceleratorConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.acceleratorCount = reader.int64();
                                            break;
                                        }
                                    case 2: {
                                            message.acceleratorType = reader.string();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GkeNodePoolAcceleratorConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig} GkeNodePoolAcceleratorConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodePoolAcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GkeNodePoolAcceleratorConfig message.
                             * @function verify
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GkeNodePoolAcceleratorConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                                    if (!$util.isInteger(message.acceleratorCount) && !(message.acceleratorCount && $util.isInteger(message.acceleratorCount.low) && $util.isInteger(message.acceleratorCount.high)))
                                        return "acceleratorCount: integer|Long expected";
                                if (message.acceleratorType != null && message.hasOwnProperty("acceleratorType"))
                                    if (!$util.isString(message.acceleratorType))
                                        return "acceleratorType: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GkeNodePoolAcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig} GkeNodePoolAcceleratorConfig
                             */
                            GkeNodePoolAcceleratorConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig)
                                    return object;
                                var message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig();
                                if (object.acceleratorCount != null)
                                    if ($util.Long)
                                        (message.acceleratorCount = $util.Long.fromValue(object.acceleratorCount)).unsigned = false;
                                    else if (typeof object.acceleratorCount === "string")
                                        message.acceleratorCount = parseInt(object.acceleratorCount, 10);
                                    else if (typeof object.acceleratorCount === "number")
                                        message.acceleratorCount = object.acceleratorCount;
                                    else if (typeof object.acceleratorCount === "object")
                                        message.acceleratorCount = new $util.LongBits(object.acceleratorCount.low >>> 0, object.acceleratorCount.high >>> 0).toNumber();
                                if (object.acceleratorType != null)
                                    message.acceleratorType = String(object.acceleratorType);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GkeNodePoolAcceleratorConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig} message GkeNodePoolAcceleratorConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GkeNodePoolAcceleratorConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.acceleratorCount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.acceleratorCount = options.longs === String ? "0" : 0;
                                    object.acceleratorType = "";
                                }
                                if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                                    if (typeof message.acceleratorCount === "number")
                                        object.acceleratorCount = options.longs === String ? String(message.acceleratorCount) : message.acceleratorCount;
                                    else
                                        object.acceleratorCount = options.longs === String ? $util.Long.prototype.toString.call(message.acceleratorCount) : options.longs === Number ? new $util.LongBits(message.acceleratorCount.low >>> 0, message.acceleratorCount.high >>> 0).toNumber() : message.acceleratorCount;
                                if (message.acceleratorType != null && message.hasOwnProperty("acceleratorType"))
                                    object.acceleratorType = message.acceleratorType;
                                return object;
                            };
    
                            /**
                             * Converts this GkeNodePoolAcceleratorConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GkeNodePoolAcceleratorConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GkeNodePoolAcceleratorConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GkeNodePoolAcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAcceleratorConfig";
                            };
    
                            return GkeNodePoolAcceleratorConfig;
                        })();
    
                        GkeNodePoolConfig.GkeNodePoolAutoscalingConfig = (function() {
    
                            /**
                             * Properties of a GkeNodePoolAutoscalingConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @interface IGkeNodePoolAutoscalingConfig
                             * @property {number|null} [minNodeCount] GkeNodePoolAutoscalingConfig minNodeCount
                             * @property {number|null} [maxNodeCount] GkeNodePoolAutoscalingConfig maxNodeCount
                             */
    
                            /**
                             * Constructs a new GkeNodePoolAutoscalingConfig.
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig
                             * @classdesc Represents a GkeNodePoolAutoscalingConfig.
                             * @implements IGkeNodePoolAutoscalingConfig
                             * @constructor
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig=} [properties] Properties to set
                             */
                            function GkeNodePoolAutoscalingConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GkeNodePoolAutoscalingConfig minNodeCount.
                             * @member {number} minNodeCount
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @instance
                             */
                            GkeNodePoolAutoscalingConfig.prototype.minNodeCount = 0;
    
                            /**
                             * GkeNodePoolAutoscalingConfig maxNodeCount.
                             * @member {number} maxNodeCount
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @instance
                             */
                            GkeNodePoolAutoscalingConfig.prototype.maxNodeCount = 0;
    
                            /**
                             * Creates a new GkeNodePoolAutoscalingConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig=} [properties] Properties to set
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig} GkeNodePoolAutoscalingConfig instance
                             */
                            GkeNodePoolAutoscalingConfig.create = function create(properties) {
                                return new GkeNodePoolAutoscalingConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GkeNodePoolAutoscalingConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig} message GkeNodePoolAutoscalingConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodePoolAutoscalingConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.minNodeCount != null && Object.hasOwnProperty.call(message, "minNodeCount"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.minNodeCount);
                                if (message.maxNodeCount != null && Object.hasOwnProperty.call(message, "maxNodeCount"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.maxNodeCount);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GkeNodePoolAutoscalingConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.IGkeNodePoolAutoscalingConfig} message GkeNodePoolAutoscalingConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GkeNodePoolAutoscalingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GkeNodePoolAutoscalingConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig} GkeNodePoolAutoscalingConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodePoolAutoscalingConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 2: {
                                            message.minNodeCount = reader.int32();
                                            break;
                                        }
                                    case 3: {
                                            message.maxNodeCount = reader.int32();
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GkeNodePoolAutoscalingConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig} GkeNodePoolAutoscalingConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GkeNodePoolAutoscalingConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GkeNodePoolAutoscalingConfig message.
                             * @function verify
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GkeNodePoolAutoscalingConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.minNodeCount != null && message.hasOwnProperty("minNodeCount"))
                                    if (!$util.isInteger(message.minNodeCount))
                                        return "minNodeCount: integer expected";
                                if (message.maxNodeCount != null && message.hasOwnProperty("maxNodeCount"))
                                    if (!$util.isInteger(message.maxNodeCount))
                                        return "maxNodeCount: integer expected";
                                return null;
                            };
    
                            /**
                             * Creates a GkeNodePoolAutoscalingConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig} GkeNodePoolAutoscalingConfig
                             */
                            GkeNodePoolAutoscalingConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig)
                                    return object;
                                var message = new $root.google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig();
                                if (object.minNodeCount != null)
                                    message.minNodeCount = object.minNodeCount | 0;
                                if (object.maxNodeCount != null)
                                    message.maxNodeCount = object.maxNodeCount | 0;
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GkeNodePoolAutoscalingConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig} message GkeNodePoolAutoscalingConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GkeNodePoolAutoscalingConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.minNodeCount = 0;
                                    object.maxNodeCount = 0;
                                }
                                if (message.minNodeCount != null && message.hasOwnProperty("minNodeCount"))
                                    object.minNodeCount = message.minNodeCount;
                                if (message.maxNodeCount != null && message.hasOwnProperty("maxNodeCount"))
                                    object.maxNodeCount = message.maxNodeCount;
                                return object;
                            };
    
                            /**
                             * Converts this GkeNodePoolAutoscalingConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GkeNodePoolAutoscalingConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for GkeNodePoolAutoscalingConfig
                             * @function getTypeUrl
                             * @memberof google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            GkeNodePoolAutoscalingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.dataproc.v1.GkeNodePoolConfig.GkeNodePoolAutoscalingConfig";
                            };
    
                            return GkeNodePoolAutoscalingConfig;
                        })();
    
                        return GkeNodePoolConfig;
                    })();
    
                    /**
                     * Component enum.
                     * @name google.cloud.dataproc.v1.Component
                     * @enum {number}
                     * @property {number} COMPONENT_UNSPECIFIED=0 COMPONENT_UNSPECIFIED value
                     * @property {number} ANACONDA=5 ANACONDA value
                     * @property {number} DOCKER=13 DOCKER value
                     * @property {number} DRUID=9 DRUID value
                     * @property {number} FLINK=14 FLINK value
                     * @property {number} HBASE=11 HBASE value
                     * @property {number} HIVE_WEBHCAT=3 HIVE_WEBHCAT value
                     * @property {number} JUPYTER=1 JUPYTER value
                     * @property {number} PRESTO=6 PRESTO value
                     * @property {number} RANGER=12 RANGER value
                     * @property {number} SOLR=10 SOLR value
                     * @property {number} ZEPPELIN=4 ZEPPELIN value
                     * @property {number} ZOOKEEPER=8 ZOOKEEPER value
                     */
                    v1.Component = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "COMPONENT_UNSPECIFIED"] = 0;
                        values[valuesById[5] = "ANACONDA"] = 5;
                        values[valuesById[13] = "DOCKER"] = 13;
                        values[valuesById[9] = "DRUID"] = 9;
                        values[valuesById[14] = "FLINK"] = 14;
                        values[valuesById[11] = "HBASE"] = 11;
                        values[valuesById[3] = "HIVE_WEBHCAT"] = 3;
                        values[valuesById[1] = "JUPYTER"] = 1;
                        values[valuesById[6] = "PRESTO"] = 6;
                        values[valuesById[12] = "RANGER"] = 12;
                        values[valuesById[10] = "SOLR"] = 10;
                        values[valuesById[4] = "ZEPPELIN"] = 4;
                        values[valuesById[8] = "ZOOKEEPER"] = 8;
                        return values;
                    })();
    
                    /**
                     * FailureAction enum.
                     * @name google.cloud.dataproc.v1.FailureAction
                     * @enum {number}
                     * @property {number} FAILURE_ACTION_UNSPECIFIED=0 FAILURE_ACTION_UNSPECIFIED value
                     * @property {number} NO_ACTION=1 NO_ACTION value
                     * @property {number} DELETE=2 DELETE value
                     */
                    v1.FailureAction = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "FAILURE_ACTION_UNSPECIFIED"] = 0;
                        values[valuesById[1] = "NO_ACTION"] = 1;
                        values[valuesById[2] = "DELETE"] = 2;
                        return values;
                    })();
    
                    v1.ClusterController = (function() {
    
                        /**
                         * Constructs a new ClusterController service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterController
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function ClusterController(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (ClusterController.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = ClusterController;
    
                        /**
                         * Creates new ClusterController service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {ClusterController} RPC service. Useful where requests and/or responses are streamed.
                         */
                        ClusterController.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|createCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef CreateClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateCluster.
                         * @function createCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.CreateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.createCluster = function createCluster(request, callback) {
                            return this.rpcCall(createCluster, $root.google.cloud.dataproc.v1.CreateClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateCluster" });
    
                        /**
                         * Calls CreateCluster.
                         * @function createCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest} request CreateClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|updateCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef UpdateClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateCluster.
                         * @function updateCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.UpdateClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.updateCluster = function updateCluster(request, callback) {
                            return this.rpcCall(updateCluster, $root.google.cloud.dataproc.v1.UpdateClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateCluster" });
    
                        /**
                         * Calls UpdateCluster.
                         * @function updateCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest} request UpdateClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|stopCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef StopClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StopCluster.
                         * @function stopCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest} request StopClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.StopClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.stopCluster = function stopCluster(request, callback) {
                            return this.rpcCall(stopCluster, $root.google.cloud.dataproc.v1.StopClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StopCluster" });
    
                        /**
                         * Calls StopCluster.
                         * @function stopCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest} request StopClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|startCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef StartClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls StartCluster.
                         * @function startCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest} request StartClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.StartClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.startCluster = function startCluster(request, callback) {
                            return this.rpcCall(startCluster, $root.google.cloud.dataproc.v1.StartClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "StartCluster" });
    
                        /**
                         * Calls StartCluster.
                         * @function startCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest} request StartClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|deleteCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef DeleteClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteCluster.
                         * @function deleteCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.DeleteClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.deleteCluster = function deleteCluster(request, callback) {
                            return this.rpcCall(deleteCluster, $root.google.cloud.dataproc.v1.DeleteClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteCluster" });
    
                        /**
                         * Calls DeleteCluster.
                         * @function deleteCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest} request DeleteClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|getCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef GetClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Cluster} [response] Cluster
                         */
    
                        /**
                         * Calls GetCluster.
                         * @function getCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.GetClusterCallback} callback Node-style callback called with the error, if any, and Cluster
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.getCluster = function getCluster(request, callback) {
                            return this.rpcCall(getCluster, $root.google.cloud.dataproc.v1.GetClusterRequest, $root.google.cloud.dataproc.v1.Cluster, request, callback);
                        }, "name", { value: "GetCluster" });
    
                        /**
                         * Calls GetCluster.
                         * @function getCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest} request GetClusterRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Cluster>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|listClusters}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef ListClustersCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.ListClustersResponse} [response] ListClustersResponse
                         */
    
                        /**
                         * Calls ListClusters.
                         * @function listClusters
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListClustersRequest} request ListClustersRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.ListClustersCallback} callback Node-style callback called with the error, if any, and ListClustersResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.listClusters = function listClusters(request, callback) {
                            return this.rpcCall(listClusters, $root.google.cloud.dataproc.v1.ListClustersRequest, $root.google.cloud.dataproc.v1.ListClustersResponse, request, callback);
                        }, "name", { value: "ListClusters" });
    
                        /**
                         * Calls ListClusters.
                         * @function listClusters
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListClustersRequest} request ListClustersRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.ListClustersResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.ClusterController|diagnoseCluster}.
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @typedef DiagnoseClusterCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DiagnoseCluster.
                         * @function diagnoseCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest} request DiagnoseClusterRequest message or plain object
                         * @param {google.cloud.dataproc.v1.ClusterController.DiagnoseClusterCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(ClusterController.prototype.diagnoseCluster = function diagnoseCluster(request, callback) {
                            return this.rpcCall(diagnoseCluster, $root.google.cloud.dataproc.v1.DiagnoseClusterRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DiagnoseCluster" });
    
                        /**
                         * Calls DiagnoseCluster.
                         * @function diagnoseCluster
                         * @memberof google.cloud.dataproc.v1.ClusterController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest} request DiagnoseClusterRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return ClusterController;
                    })();
    
                    v1.Cluster = (function() {
    
                        /**
                         * Properties of a Cluster.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICluster
                         * @property {string|null} [projectId] Cluster projectId
                         * @property {string|null} [clusterName] Cluster clusterName
                         * @property {google.cloud.dataproc.v1.IClusterConfig|null} [config] Cluster config
                         * @property {google.cloud.dataproc.v1.IVirtualClusterConfig|null} [virtualClusterConfig] Cluster virtualClusterConfig
                         * @property {Object.<string,string>|null} [labels] Cluster labels
                         * @property {google.cloud.dataproc.v1.IClusterStatus|null} [status] Cluster status
                         * @property {Array.<google.cloud.dataproc.v1.IClusterStatus>|null} [statusHistory] Cluster statusHistory
                         * @property {string|null} [clusterUuid] Cluster clusterUuid
                         * @property {google.cloud.dataproc.v1.IClusterMetrics|null} [metrics] Cluster metrics
                         */
    
                        /**
                         * Constructs a new Cluster.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a Cluster.
                         * @implements ICluster
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICluster=} [properties] Properties to set
                         */
                        function Cluster(properties) {
                            this.labels = {};
                            this.statusHistory = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Cluster projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.projectId = "";
    
                        /**
                         * Cluster clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.clusterName = "";
    
                        /**
                         * Cluster config.
                         * @member {google.cloud.dataproc.v1.IClusterConfig|null|undefined} config
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.config = null;
    
                        /**
                         * Cluster virtualClusterConfig.
                         * @member {google.cloud.dataproc.v1.IVirtualClusterConfig|null|undefined} virtualClusterConfig
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.virtualClusterConfig = null;
    
                        /**
                         * Cluster labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.labels = $util.emptyObject;
    
                        /**
                         * Cluster status.
                         * @member {google.cloud.dataproc.v1.IClusterStatus|null|undefined} status
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.status = null;
    
                        /**
                         * Cluster statusHistory.
                         * @member {Array.<google.cloud.dataproc.v1.IClusterStatus>} statusHistory
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.statusHistory = $util.emptyArray;
    
                        /**
                         * Cluster clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.clusterUuid = "";
    
                        /**
                         * Cluster metrics.
                         * @member {google.cloud.dataproc.v1.IClusterMetrics|null|undefined} metrics
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         */
                        Cluster.prototype.metrics = null;
    
                        /**
                         * Creates a new Cluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {google.cloud.dataproc.v1.ICluster=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.Cluster} Cluster instance
                         */
                        Cluster.create = function create(properties) {
                            return new Cluster(properties);
                        };
    
                        /**
                         * Encodes the specified Cluster message. Does not implicitly {@link google.cloud.dataproc.v1.Cluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {google.cloud.dataproc.v1.ICluster} message Cluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.dataproc.v1.ClusterConfig.encode(message.config, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.dataproc.v1.ClusterStatus.encode(message.status, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.clusterUuid);
                            if (message.statusHistory != null && message.statusHistory.length)
                                for (var i = 0; i < message.statusHistory.length; ++i)
                                    $root.google.cloud.dataproc.v1.ClusterStatus.encode(message.statusHistory[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.metrics != null && Object.hasOwnProperty.call(message, "metrics"))
                                $root.google.cloud.dataproc.v1.ClusterMetrics.encode(message.metrics, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.virtualClusterConfig != null && Object.hasOwnProperty.call(message, "virtualClusterConfig"))
                                $root.google.cloud.dataproc.v1.VirtualClusterConfig.encode(message.virtualClusterConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Cluster message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.Cluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {google.cloud.dataproc.v1.ICluster} message Cluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Cluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Cluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.Cluster} Cluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.Cluster(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.config = $root.google.cloud.dataproc.v1.ClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.virtualClusterConfig = $root.google.cloud.dataproc.v1.VirtualClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 4: {
                                        message.status = $root.google.cloud.dataproc.v1.ClusterStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        if (!(message.statusHistory && message.statusHistory.length))
                                            message.statusHistory = [];
                                        message.statusHistory.push($root.google.cloud.dataproc.v1.ClusterStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 6: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.metrics = $root.google.cloud.dataproc.v1.ClusterMetrics.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Cluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.Cluster} Cluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Cluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Cluster message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Cluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.virtualClusterConfig != null && message.hasOwnProperty("virtualClusterConfig")) {
                                var error = $root.google.cloud.dataproc.v1.VirtualClusterConfig.verify(message.virtualClusterConfig);
                                if (error)
                                    return "virtualClusterConfig." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.statusHistory != null && message.hasOwnProperty("statusHistory")) {
                                if (!Array.isArray(message.statusHistory))
                                    return "statusHistory: array expected";
                                for (var i = 0; i < message.statusHistory.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.ClusterStatus.verify(message.statusHistory[i]);
                                    if (error)
                                        return "statusHistory." + error;
                                }
                            }
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterMetrics.verify(message.metrics);
                                if (error)
                                    return "metrics." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Cluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.Cluster} Cluster
                         */
                        Cluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.Cluster)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.Cluster();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.config: object expected");
                                message.config = $root.google.cloud.dataproc.v1.ClusterConfig.fromObject(object.config);
                            }
                            if (object.virtualClusterConfig != null) {
                                if (typeof object.virtualClusterConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.virtualClusterConfig: object expected");
                                message.virtualClusterConfig = $root.google.cloud.dataproc.v1.VirtualClusterConfig.fromObject(object.virtualClusterConfig);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.status: object expected");
                                message.status = $root.google.cloud.dataproc.v1.ClusterStatus.fromObject(object.status);
                            }
                            if (object.statusHistory) {
                                if (!Array.isArray(object.statusHistory))
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.statusHistory: array expected");
                                message.statusHistory = [];
                                for (var i = 0; i < object.statusHistory.length; ++i) {
                                    if (typeof object.statusHistory[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.Cluster.statusHistory: object expected");
                                    message.statusHistory[i] = $root.google.cloud.dataproc.v1.ClusterStatus.fromObject(object.statusHistory[i]);
                                }
                            }
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.metrics != null) {
                                if (typeof object.metrics !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Cluster.metrics: object expected");
                                message.metrics = $root.google.cloud.dataproc.v1.ClusterMetrics.fromObject(object.metrics);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Cluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {google.cloud.dataproc.v1.Cluster} message Cluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Cluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.statusHistory = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.clusterName = "";
                                object.config = null;
                                object.status = null;
                                object.clusterUuid = "";
                                object.metrics = null;
                                object.virtualClusterConfig = null;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.dataproc.v1.ClusterConfig.toObject(message.config, options);
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.dataproc.v1.ClusterStatus.toObject(message.status, options);
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.statusHistory && message.statusHistory.length) {
                                object.statusHistory = [];
                                for (var j = 0; j < message.statusHistory.length; ++j)
                                    object.statusHistory[j] = $root.google.cloud.dataproc.v1.ClusterStatus.toObject(message.statusHistory[j], options);
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.metrics != null && message.hasOwnProperty("metrics"))
                                object.metrics = $root.google.cloud.dataproc.v1.ClusterMetrics.toObject(message.metrics, options);
                            if (message.virtualClusterConfig != null && message.hasOwnProperty("virtualClusterConfig"))
                                object.virtualClusterConfig = $root.google.cloud.dataproc.v1.VirtualClusterConfig.toObject(message.virtualClusterConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Cluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Cluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Cluster
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.Cluster
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Cluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.Cluster";
                        };
    
                        return Cluster;
                    })();
    
                    v1.ClusterConfig = (function() {
    
                        /**
                         * Properties of a ClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterConfig
                         * @property {string|null} [configBucket] ClusterConfig configBucket
                         * @property {string|null} [tempBucket] ClusterConfig tempBucket
                         * @property {google.cloud.dataproc.v1.IGceClusterConfig|null} [gceClusterConfig] ClusterConfig gceClusterConfig
                         * @property {google.cloud.dataproc.v1.IInstanceGroupConfig|null} [masterConfig] ClusterConfig masterConfig
                         * @property {google.cloud.dataproc.v1.IInstanceGroupConfig|null} [workerConfig] ClusterConfig workerConfig
                         * @property {google.cloud.dataproc.v1.IInstanceGroupConfig|null} [secondaryWorkerConfig] ClusterConfig secondaryWorkerConfig
                         * @property {google.cloud.dataproc.v1.ISoftwareConfig|null} [softwareConfig] ClusterConfig softwareConfig
                         * @property {Array.<google.cloud.dataproc.v1.INodeInitializationAction>|null} [initializationActions] ClusterConfig initializationActions
                         * @property {google.cloud.dataproc.v1.IEncryptionConfig|null} [encryptionConfig] ClusterConfig encryptionConfig
                         * @property {google.cloud.dataproc.v1.IAutoscalingConfig|null} [autoscalingConfig] ClusterConfig autoscalingConfig
                         * @property {google.cloud.dataproc.v1.ISecurityConfig|null} [securityConfig] ClusterConfig securityConfig
                         * @property {google.cloud.dataproc.v1.ILifecycleConfig|null} [lifecycleConfig] ClusterConfig lifecycleConfig
                         * @property {google.cloud.dataproc.v1.IEndpointConfig|null} [endpointConfig] ClusterConfig endpointConfig
                         * @property {google.cloud.dataproc.v1.IMetastoreConfig|null} [metastoreConfig] ClusterConfig metastoreConfig
                         * @property {google.cloud.dataproc.v1.IDataprocMetricConfig|null} [dataprocMetricConfig] ClusterConfig dataprocMetricConfig
                         * @property {Array.<google.cloud.dataproc.v1.IAuxiliaryNodeGroup>|null} [auxiliaryNodeGroups] ClusterConfig auxiliaryNodeGroups
                         */
    
                        /**
                         * Constructs a new ClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterConfig.
                         * @implements IClusterConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterConfig=} [properties] Properties to set
                         */
                        function ClusterConfig(properties) {
                            this.initializationActions = [];
                            this.auxiliaryNodeGroups = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterConfig configBucket.
                         * @member {string} configBucket
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.configBucket = "";
    
                        /**
                         * ClusterConfig tempBucket.
                         * @member {string} tempBucket
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.tempBucket = "";
    
                        /**
                         * ClusterConfig gceClusterConfig.
                         * @member {google.cloud.dataproc.v1.IGceClusterConfig|null|undefined} gceClusterConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.gceClusterConfig = null;
    
                        /**
                         * ClusterConfig masterConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupConfig|null|undefined} masterConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.masterConfig = null;
    
                        /**
                         * ClusterConfig workerConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupConfig|null|undefined} workerConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.workerConfig = null;
    
                        /**
                         * ClusterConfig secondaryWorkerConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupConfig|null|undefined} secondaryWorkerConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.secondaryWorkerConfig = null;
    
                        /**
                         * ClusterConfig softwareConfig.
                         * @member {google.cloud.dataproc.v1.ISoftwareConfig|null|undefined} softwareConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.softwareConfig = null;
    
                        /**
                         * ClusterConfig initializationActions.
                         * @member {Array.<google.cloud.dataproc.v1.INodeInitializationAction>} initializationActions
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.initializationActions = $util.emptyArray;
    
                        /**
                         * ClusterConfig encryptionConfig.
                         * @member {google.cloud.dataproc.v1.IEncryptionConfig|null|undefined} encryptionConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.encryptionConfig = null;
    
                        /**
                         * ClusterConfig autoscalingConfig.
                         * @member {google.cloud.dataproc.v1.IAutoscalingConfig|null|undefined} autoscalingConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.autoscalingConfig = null;
    
                        /**
                         * ClusterConfig securityConfig.
                         * @member {google.cloud.dataproc.v1.ISecurityConfig|null|undefined} securityConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.securityConfig = null;
    
                        /**
                         * ClusterConfig lifecycleConfig.
                         * @member {google.cloud.dataproc.v1.ILifecycleConfig|null|undefined} lifecycleConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.lifecycleConfig = null;
    
                        /**
                         * ClusterConfig endpointConfig.
                         * @member {google.cloud.dataproc.v1.IEndpointConfig|null|undefined} endpointConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.endpointConfig = null;
    
                        /**
                         * ClusterConfig metastoreConfig.
                         * @member {google.cloud.dataproc.v1.IMetastoreConfig|null|undefined} metastoreConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.metastoreConfig = null;
    
                        /**
                         * ClusterConfig dataprocMetricConfig.
                         * @member {google.cloud.dataproc.v1.IDataprocMetricConfig|null|undefined} dataprocMetricConfig
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.dataprocMetricConfig = null;
    
                        /**
                         * ClusterConfig auxiliaryNodeGroups.
                         * @member {Array.<google.cloud.dataproc.v1.IAuxiliaryNodeGroup>} auxiliaryNodeGroups
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         */
                        ClusterConfig.prototype.auxiliaryNodeGroups = $util.emptyArray;
    
                        /**
                         * Creates a new ClusterConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterConfig} ClusterConfig instance
                         */
                        ClusterConfig.create = function create(properties) {
                            return new ClusterConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterConfig message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterConfig} message ClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.configBucket != null && Object.hasOwnProperty.call(message, "configBucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.configBucket);
                            if (message.tempBucket != null && Object.hasOwnProperty.call(message, "tempBucket"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.tempBucket);
                            if (message.gceClusterConfig != null && Object.hasOwnProperty.call(message, "gceClusterConfig"))
                                $root.google.cloud.dataproc.v1.GceClusterConfig.encode(message.gceClusterConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.masterConfig != null && Object.hasOwnProperty.call(message, "masterConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupConfig.encode(message.masterConfig, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.workerConfig != null && Object.hasOwnProperty.call(message, "workerConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupConfig.encode(message.workerConfig, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.initializationActions != null && message.initializationActions.length)
                                for (var i = 0; i < message.initializationActions.length; ++i)
                                    $root.google.cloud.dataproc.v1.NodeInitializationAction.encode(message.initializationActions[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.secondaryWorkerConfig != null && Object.hasOwnProperty.call(message, "secondaryWorkerConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupConfig.encode(message.secondaryWorkerConfig, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.softwareConfig != null && Object.hasOwnProperty.call(message, "softwareConfig"))
                                $root.google.cloud.dataproc.v1.SoftwareConfig.encode(message.softwareConfig, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.encryptionConfig != null && Object.hasOwnProperty.call(message, "encryptionConfig"))
                                $root.google.cloud.dataproc.v1.EncryptionConfig.encode(message.encryptionConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.securityConfig != null && Object.hasOwnProperty.call(message, "securityConfig"))
                                $root.google.cloud.dataproc.v1.SecurityConfig.encode(message.securityConfig, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.lifecycleConfig != null && Object.hasOwnProperty.call(message, "lifecycleConfig"))
                                $root.google.cloud.dataproc.v1.LifecycleConfig.encode(message.lifecycleConfig, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.autoscalingConfig != null && Object.hasOwnProperty.call(message, "autoscalingConfig"))
                                $root.google.cloud.dataproc.v1.AutoscalingConfig.encode(message.autoscalingConfig, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.endpointConfig != null && Object.hasOwnProperty.call(message, "endpointConfig"))
                                $root.google.cloud.dataproc.v1.EndpointConfig.encode(message.endpointConfig, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.metastoreConfig != null && Object.hasOwnProperty.call(message, "metastoreConfig"))
                                $root.google.cloud.dataproc.v1.MetastoreConfig.encode(message.metastoreConfig, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.dataprocMetricConfig != null && Object.hasOwnProperty.call(message, "dataprocMetricConfig"))
                                $root.google.cloud.dataproc.v1.DataprocMetricConfig.encode(message.dataprocMetricConfig, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.auxiliaryNodeGroups != null && message.auxiliaryNodeGroups.length)
                                for (var i = 0; i < message.auxiliaryNodeGroups.length; ++i)
                                    $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup.encode(message.auxiliaryNodeGroups[i], writer.uint32(/* id 25, wireType 2 =*/202).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterConfig} message ClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterConfig} ClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.configBucket = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.tempBucket = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.gceClusterConfig = $root.google.cloud.dataproc.v1.GceClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.masterConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.softwareConfig = $root.google.cloud.dataproc.v1.SoftwareConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        if (!(message.initializationActions && message.initializationActions.length))
                                            message.initializationActions = [];
                                        message.initializationActions.push($root.google.cloud.dataproc.v1.NodeInitializationAction.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 15: {
                                        message.encryptionConfig = $root.google.cloud.dataproc.v1.EncryptionConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.autoscalingConfig = $root.google.cloud.dataproc.v1.AutoscalingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.securityConfig = $root.google.cloud.dataproc.v1.SecurityConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.lifecycleConfig = $root.google.cloud.dataproc.v1.LifecycleConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.endpointConfig = $root.google.cloud.dataproc.v1.EndpointConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 23: {
                                        message.dataprocMetricConfig = $root.google.cloud.dataproc.v1.DataprocMetricConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 25: {
                                        if (!(message.auxiliaryNodeGroups && message.auxiliaryNodeGroups.length))
                                            message.auxiliaryNodeGroups = [];
                                        message.auxiliaryNodeGroups.push($root.google.cloud.dataproc.v1.AuxiliaryNodeGroup.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterConfig} ClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.configBucket != null && message.hasOwnProperty("configBucket"))
                                if (!$util.isString(message.configBucket))
                                    return "configBucket: string expected";
                            if (message.tempBucket != null && message.hasOwnProperty("tempBucket"))
                                if (!$util.isString(message.tempBucket))
                                    return "tempBucket: string expected";
                            if (message.gceClusterConfig != null && message.hasOwnProperty("gceClusterConfig")) {
                                var error = $root.google.cloud.dataproc.v1.GceClusterConfig.verify(message.gceClusterConfig);
                                if (error)
                                    return "gceClusterConfig." + error;
                            }
                            if (message.masterConfig != null && message.hasOwnProperty("masterConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupConfig.verify(message.masterConfig);
                                if (error)
                                    return "masterConfig." + error;
                            }
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupConfig.verify(message.workerConfig);
                                if (error)
                                    return "workerConfig." + error;
                            }
                            if (message.secondaryWorkerConfig != null && message.hasOwnProperty("secondaryWorkerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupConfig.verify(message.secondaryWorkerConfig);
                                if (error)
                                    return "secondaryWorkerConfig." + error;
                            }
                            if (message.softwareConfig != null && message.hasOwnProperty("softwareConfig")) {
                                var error = $root.google.cloud.dataproc.v1.SoftwareConfig.verify(message.softwareConfig);
                                if (error)
                                    return "softwareConfig." + error;
                            }
                            if (message.initializationActions != null && message.hasOwnProperty("initializationActions")) {
                                if (!Array.isArray(message.initializationActions))
                                    return "initializationActions: array expected";
                                for (var i = 0; i < message.initializationActions.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.NodeInitializationAction.verify(message.initializationActions[i]);
                                    if (error)
                                        return "initializationActions." + error;
                                }
                            }
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig")) {
                                var error = $root.google.cloud.dataproc.v1.EncryptionConfig.verify(message.encryptionConfig);
                                if (error)
                                    return "encryptionConfig." + error;
                            }
                            if (message.autoscalingConfig != null && message.hasOwnProperty("autoscalingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.AutoscalingConfig.verify(message.autoscalingConfig);
                                if (error)
                                    return "autoscalingConfig." + error;
                            }
                            if (message.securityConfig != null && message.hasOwnProperty("securityConfig")) {
                                var error = $root.google.cloud.dataproc.v1.SecurityConfig.verify(message.securityConfig);
                                if (error)
                                    return "securityConfig." + error;
                            }
                            if (message.lifecycleConfig != null && message.hasOwnProperty("lifecycleConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LifecycleConfig.verify(message.lifecycleConfig);
                                if (error)
                                    return "lifecycleConfig." + error;
                            }
                            if (message.endpointConfig != null && message.hasOwnProperty("endpointConfig")) {
                                var error = $root.google.cloud.dataproc.v1.EndpointConfig.verify(message.endpointConfig);
                                if (error)
                                    return "endpointConfig." + error;
                            }
                            if (message.metastoreConfig != null && message.hasOwnProperty("metastoreConfig")) {
                                var error = $root.google.cloud.dataproc.v1.MetastoreConfig.verify(message.metastoreConfig);
                                if (error)
                                    return "metastoreConfig." + error;
                            }
                            if (message.dataprocMetricConfig != null && message.hasOwnProperty("dataprocMetricConfig")) {
                                var error = $root.google.cloud.dataproc.v1.DataprocMetricConfig.verify(message.dataprocMetricConfig);
                                if (error)
                                    return "dataprocMetricConfig." + error;
                            }
                            if (message.auxiliaryNodeGroups != null && message.hasOwnProperty("auxiliaryNodeGroups")) {
                                if (!Array.isArray(message.auxiliaryNodeGroups))
                                    return "auxiliaryNodeGroups: array expected";
                                for (var i = 0; i < message.auxiliaryNodeGroups.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup.verify(message.auxiliaryNodeGroups[i]);
                                    if (error)
                                        return "auxiliaryNodeGroups." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterConfig} ClusterConfig
                         */
                        ClusterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterConfig();
                            if (object.configBucket != null)
                                message.configBucket = String(object.configBucket);
                            if (object.tempBucket != null)
                                message.tempBucket = String(object.tempBucket);
                            if (object.gceClusterConfig != null) {
                                if (typeof object.gceClusterConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.gceClusterConfig: object expected");
                                message.gceClusterConfig = $root.google.cloud.dataproc.v1.GceClusterConfig.fromObject(object.gceClusterConfig);
                            }
                            if (object.masterConfig != null) {
                                if (typeof object.masterConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.masterConfig: object expected");
                                message.masterConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.fromObject(object.masterConfig);
                            }
                            if (object.workerConfig != null) {
                                if (typeof object.workerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.workerConfig: object expected");
                                message.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.fromObject(object.workerConfig);
                            }
                            if (object.secondaryWorkerConfig != null) {
                                if (typeof object.secondaryWorkerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.secondaryWorkerConfig: object expected");
                                message.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.fromObject(object.secondaryWorkerConfig);
                            }
                            if (object.softwareConfig != null) {
                                if (typeof object.softwareConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.softwareConfig: object expected");
                                message.softwareConfig = $root.google.cloud.dataproc.v1.SoftwareConfig.fromObject(object.softwareConfig);
                            }
                            if (object.initializationActions) {
                                if (!Array.isArray(object.initializationActions))
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.initializationActions: array expected");
                                message.initializationActions = [];
                                for (var i = 0; i < object.initializationActions.length; ++i) {
                                    if (typeof object.initializationActions[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.initializationActions: object expected");
                                    message.initializationActions[i] = $root.google.cloud.dataproc.v1.NodeInitializationAction.fromObject(object.initializationActions[i]);
                                }
                            }
                            if (object.encryptionConfig != null) {
                                if (typeof object.encryptionConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.encryptionConfig: object expected");
                                message.encryptionConfig = $root.google.cloud.dataproc.v1.EncryptionConfig.fromObject(object.encryptionConfig);
                            }
                            if (object.autoscalingConfig != null) {
                                if (typeof object.autoscalingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.autoscalingConfig: object expected");
                                message.autoscalingConfig = $root.google.cloud.dataproc.v1.AutoscalingConfig.fromObject(object.autoscalingConfig);
                            }
                            if (object.securityConfig != null) {
                                if (typeof object.securityConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.securityConfig: object expected");
                                message.securityConfig = $root.google.cloud.dataproc.v1.SecurityConfig.fromObject(object.securityConfig);
                            }
                            if (object.lifecycleConfig != null) {
                                if (typeof object.lifecycleConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.lifecycleConfig: object expected");
                                message.lifecycleConfig = $root.google.cloud.dataproc.v1.LifecycleConfig.fromObject(object.lifecycleConfig);
                            }
                            if (object.endpointConfig != null) {
                                if (typeof object.endpointConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.endpointConfig: object expected");
                                message.endpointConfig = $root.google.cloud.dataproc.v1.EndpointConfig.fromObject(object.endpointConfig);
                            }
                            if (object.metastoreConfig != null) {
                                if (typeof object.metastoreConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.metastoreConfig: object expected");
                                message.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.fromObject(object.metastoreConfig);
                            }
                            if (object.dataprocMetricConfig != null) {
                                if (typeof object.dataprocMetricConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.dataprocMetricConfig: object expected");
                                message.dataprocMetricConfig = $root.google.cloud.dataproc.v1.DataprocMetricConfig.fromObject(object.dataprocMetricConfig);
                            }
                            if (object.auxiliaryNodeGroups) {
                                if (!Array.isArray(object.auxiliaryNodeGroups))
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.auxiliaryNodeGroups: array expected");
                                message.auxiliaryNodeGroups = [];
                                for (var i = 0; i < object.auxiliaryNodeGroups.length; ++i) {
                                    if (typeof object.auxiliaryNodeGroups[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ClusterConfig.auxiliaryNodeGroups: object expected");
                                    message.auxiliaryNodeGroups[i] = $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup.fromObject(object.auxiliaryNodeGroups[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterConfig} message ClusterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.initializationActions = [];
                                object.auxiliaryNodeGroups = [];
                            }
                            if (options.defaults) {
                                object.configBucket = "";
                                object.tempBucket = "";
                                object.gceClusterConfig = null;
                                object.masterConfig = null;
                                object.workerConfig = null;
                                object.secondaryWorkerConfig = null;
                                object.softwareConfig = null;
                                object.encryptionConfig = null;
                                object.securityConfig = null;
                                object.lifecycleConfig = null;
                                object.autoscalingConfig = null;
                                object.endpointConfig = null;
                                object.metastoreConfig = null;
                                object.dataprocMetricConfig = null;
                            }
                            if (message.configBucket != null && message.hasOwnProperty("configBucket"))
                                object.configBucket = message.configBucket;
                            if (message.tempBucket != null && message.hasOwnProperty("tempBucket"))
                                object.tempBucket = message.tempBucket;
                            if (message.gceClusterConfig != null && message.hasOwnProperty("gceClusterConfig"))
                                object.gceClusterConfig = $root.google.cloud.dataproc.v1.GceClusterConfig.toObject(message.gceClusterConfig, options);
                            if (message.masterConfig != null && message.hasOwnProperty("masterConfig"))
                                object.masterConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.toObject(message.masterConfig, options);
                            if (message.workerConfig != null && message.hasOwnProperty("workerConfig"))
                                object.workerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.toObject(message.workerConfig, options);
                            if (message.initializationActions && message.initializationActions.length) {
                                object.initializationActions = [];
                                for (var j = 0; j < message.initializationActions.length; ++j)
                                    object.initializationActions[j] = $root.google.cloud.dataproc.v1.NodeInitializationAction.toObject(message.initializationActions[j], options);
                            }
                            if (message.secondaryWorkerConfig != null && message.hasOwnProperty("secondaryWorkerConfig"))
                                object.secondaryWorkerConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.toObject(message.secondaryWorkerConfig, options);
                            if (message.softwareConfig != null && message.hasOwnProperty("softwareConfig"))
                                object.softwareConfig = $root.google.cloud.dataproc.v1.SoftwareConfig.toObject(message.softwareConfig, options);
                            if (message.encryptionConfig != null && message.hasOwnProperty("encryptionConfig"))
                                object.encryptionConfig = $root.google.cloud.dataproc.v1.EncryptionConfig.toObject(message.encryptionConfig, options);
                            if (message.securityConfig != null && message.hasOwnProperty("securityConfig"))
                                object.securityConfig = $root.google.cloud.dataproc.v1.SecurityConfig.toObject(message.securityConfig, options);
                            if (message.lifecycleConfig != null && message.hasOwnProperty("lifecycleConfig"))
                                object.lifecycleConfig = $root.google.cloud.dataproc.v1.LifecycleConfig.toObject(message.lifecycleConfig, options);
                            if (message.autoscalingConfig != null && message.hasOwnProperty("autoscalingConfig"))
                                object.autoscalingConfig = $root.google.cloud.dataproc.v1.AutoscalingConfig.toObject(message.autoscalingConfig, options);
                            if (message.endpointConfig != null && message.hasOwnProperty("endpointConfig"))
                                object.endpointConfig = $root.google.cloud.dataproc.v1.EndpointConfig.toObject(message.endpointConfig, options);
                            if (message.metastoreConfig != null && message.hasOwnProperty("metastoreConfig"))
                                object.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.toObject(message.metastoreConfig, options);
                            if (message.dataprocMetricConfig != null && message.hasOwnProperty("dataprocMetricConfig"))
                                object.dataprocMetricConfig = $root.google.cloud.dataproc.v1.DataprocMetricConfig.toObject(message.dataprocMetricConfig, options);
                            if (message.auxiliaryNodeGroups && message.auxiliaryNodeGroups.length) {
                                object.auxiliaryNodeGroups = [];
                                for (var j = 0; j < message.auxiliaryNodeGroups.length; ++j)
                                    object.auxiliaryNodeGroups[j] = $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup.toObject(message.auxiliaryNodeGroups[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ClusterConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterConfig";
                        };
    
                        return ClusterConfig;
                    })();
    
                    v1.VirtualClusterConfig = (function() {
    
                        /**
                         * Properties of a VirtualClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IVirtualClusterConfig
                         * @property {string|null} [stagingBucket] VirtualClusterConfig stagingBucket
                         * @property {google.cloud.dataproc.v1.IKubernetesClusterConfig|null} [kubernetesClusterConfig] VirtualClusterConfig kubernetesClusterConfig
                         * @property {google.cloud.dataproc.v1.IAuxiliaryServicesConfig|null} [auxiliaryServicesConfig] VirtualClusterConfig auxiliaryServicesConfig
                         */
    
                        /**
                         * Constructs a new VirtualClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a VirtualClusterConfig.
                         * @implements IVirtualClusterConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IVirtualClusterConfig=} [properties] Properties to set
                         */
                        function VirtualClusterConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * VirtualClusterConfig stagingBucket.
                         * @member {string} stagingBucket
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @instance
                         */
                        VirtualClusterConfig.prototype.stagingBucket = "";
    
                        /**
                         * VirtualClusterConfig kubernetesClusterConfig.
                         * @member {google.cloud.dataproc.v1.IKubernetesClusterConfig|null|undefined} kubernetesClusterConfig
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @instance
                         */
                        VirtualClusterConfig.prototype.kubernetesClusterConfig = null;
    
                        /**
                         * VirtualClusterConfig auxiliaryServicesConfig.
                         * @member {google.cloud.dataproc.v1.IAuxiliaryServicesConfig|null|undefined} auxiliaryServicesConfig
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @instance
                         */
                        VirtualClusterConfig.prototype.auxiliaryServicesConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * VirtualClusterConfig infrastructureConfig.
                         * @member {"kubernetesClusterConfig"|undefined} infrastructureConfig
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @instance
                         */
                        Object.defineProperty(VirtualClusterConfig.prototype, "infrastructureConfig", {
                            get: $util.oneOfGetter($oneOfFields = ["kubernetesClusterConfig"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new VirtualClusterConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IVirtualClusterConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.VirtualClusterConfig} VirtualClusterConfig instance
                         */
                        VirtualClusterConfig.create = function create(properties) {
                            return new VirtualClusterConfig(properties);
                        };
    
                        /**
                         * Encodes the specified VirtualClusterConfig message. Does not implicitly {@link google.cloud.dataproc.v1.VirtualClusterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IVirtualClusterConfig} message VirtualClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualClusterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stagingBucket != null && Object.hasOwnProperty.call(message, "stagingBucket"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.stagingBucket);
                            if (message.kubernetesClusterConfig != null && Object.hasOwnProperty.call(message, "kubernetesClusterConfig"))
                                $root.google.cloud.dataproc.v1.KubernetesClusterConfig.encode(message.kubernetesClusterConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.auxiliaryServicesConfig != null && Object.hasOwnProperty.call(message, "auxiliaryServicesConfig"))
                                $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig.encode(message.auxiliaryServicesConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified VirtualClusterConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.VirtualClusterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IVirtualClusterConfig} message VirtualClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VirtualClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a VirtualClusterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.VirtualClusterConfig} VirtualClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualClusterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.VirtualClusterConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stagingBucket = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.kubernetesClusterConfig = $root.google.cloud.dataproc.v1.KubernetesClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.auxiliaryServicesConfig = $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a VirtualClusterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.VirtualClusterConfig} VirtualClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VirtualClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a VirtualClusterConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VirtualClusterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.stagingBucket != null && message.hasOwnProperty("stagingBucket"))
                                if (!$util.isString(message.stagingBucket))
                                    return "stagingBucket: string expected";
                            if (message.kubernetesClusterConfig != null && message.hasOwnProperty("kubernetesClusterConfig")) {
                                properties.infrastructureConfig = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.KubernetesClusterConfig.verify(message.kubernetesClusterConfig);
                                    if (error)
                                        return "kubernetesClusterConfig." + error;
                                }
                            }
                            if (message.auxiliaryServicesConfig != null && message.hasOwnProperty("auxiliaryServicesConfig")) {
                                var error = $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig.verify(message.auxiliaryServicesConfig);
                                if (error)
                                    return "auxiliaryServicesConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a VirtualClusterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.VirtualClusterConfig} VirtualClusterConfig
                         */
                        VirtualClusterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.VirtualClusterConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.VirtualClusterConfig();
                            if (object.stagingBucket != null)
                                message.stagingBucket = String(object.stagingBucket);
                            if (object.kubernetesClusterConfig != null) {
                                if (typeof object.kubernetesClusterConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.VirtualClusterConfig.kubernetesClusterConfig: object expected");
                                message.kubernetesClusterConfig = $root.google.cloud.dataproc.v1.KubernetesClusterConfig.fromObject(object.kubernetesClusterConfig);
                            }
                            if (object.auxiliaryServicesConfig != null) {
                                if (typeof object.auxiliaryServicesConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.VirtualClusterConfig.auxiliaryServicesConfig: object expected");
                                message.auxiliaryServicesConfig = $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig.fromObject(object.auxiliaryServicesConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a VirtualClusterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.VirtualClusterConfig} message VirtualClusterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VirtualClusterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.stagingBucket = "";
                                object.auxiliaryServicesConfig = null;
                            }
                            if (message.stagingBucket != null && message.hasOwnProperty("stagingBucket"))
                                object.stagingBucket = message.stagingBucket;
                            if (message.kubernetesClusterConfig != null && message.hasOwnProperty("kubernetesClusterConfig")) {
                                object.kubernetesClusterConfig = $root.google.cloud.dataproc.v1.KubernetesClusterConfig.toObject(message.kubernetesClusterConfig, options);
                                if (options.oneofs)
                                    object.infrastructureConfig = "kubernetesClusterConfig";
                            }
                            if (message.auxiliaryServicesConfig != null && message.hasOwnProperty("auxiliaryServicesConfig"))
                                object.auxiliaryServicesConfig = $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig.toObject(message.auxiliaryServicesConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this VirtualClusterConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VirtualClusterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for VirtualClusterConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.VirtualClusterConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VirtualClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.VirtualClusterConfig";
                        };
    
                        return VirtualClusterConfig;
                    })();
    
                    v1.AuxiliaryServicesConfig = (function() {
    
                        /**
                         * Properties of an AuxiliaryServicesConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IAuxiliaryServicesConfig
                         * @property {google.cloud.dataproc.v1.IMetastoreConfig|null} [metastoreConfig] AuxiliaryServicesConfig metastoreConfig
                         * @property {google.cloud.dataproc.v1.ISparkHistoryServerConfig|null} [sparkHistoryServerConfig] AuxiliaryServicesConfig sparkHistoryServerConfig
                         */
    
                        /**
                         * Constructs a new AuxiliaryServicesConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AuxiliaryServicesConfig.
                         * @implements IAuxiliaryServicesConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IAuxiliaryServicesConfig=} [properties] Properties to set
                         */
                        function AuxiliaryServicesConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuxiliaryServicesConfig metastoreConfig.
                         * @member {google.cloud.dataproc.v1.IMetastoreConfig|null|undefined} metastoreConfig
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @instance
                         */
                        AuxiliaryServicesConfig.prototype.metastoreConfig = null;
    
                        /**
                         * AuxiliaryServicesConfig sparkHistoryServerConfig.
                         * @member {google.cloud.dataproc.v1.ISparkHistoryServerConfig|null|undefined} sparkHistoryServerConfig
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @instance
                         */
                        AuxiliaryServicesConfig.prototype.sparkHistoryServerConfig = null;
    
                        /**
                         * Creates a new AuxiliaryServicesConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryServicesConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.AuxiliaryServicesConfig} AuxiliaryServicesConfig instance
                         */
                        AuxiliaryServicesConfig.create = function create(properties) {
                            return new AuxiliaryServicesConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AuxiliaryServicesConfig message. Does not implicitly {@link google.cloud.dataproc.v1.AuxiliaryServicesConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryServicesConfig} message AuxiliaryServicesConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryServicesConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metastoreConfig != null && Object.hasOwnProperty.call(message, "metastoreConfig"))
                                $root.google.cloud.dataproc.v1.MetastoreConfig.encode(message.metastoreConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.sparkHistoryServerConfig != null && Object.hasOwnProperty.call(message, "sparkHistoryServerConfig"))
                                $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.encode(message.sparkHistoryServerConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuxiliaryServicesConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.AuxiliaryServicesConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryServicesConfig} message AuxiliaryServicesConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryServicesConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuxiliaryServicesConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.AuxiliaryServicesConfig} AuxiliaryServicesConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryServicesConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuxiliaryServicesConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.AuxiliaryServicesConfig} AuxiliaryServicesConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryServicesConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuxiliaryServicesConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuxiliaryServicesConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metastoreConfig != null && message.hasOwnProperty("metastoreConfig")) {
                                var error = $root.google.cloud.dataproc.v1.MetastoreConfig.verify(message.metastoreConfig);
                                if (error)
                                    return "metastoreConfig." + error;
                            }
                            if (message.sparkHistoryServerConfig != null && message.hasOwnProperty("sparkHistoryServerConfig")) {
                                var error = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.verify(message.sparkHistoryServerConfig);
                                if (error)
                                    return "sparkHistoryServerConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an AuxiliaryServicesConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.AuxiliaryServicesConfig} AuxiliaryServicesConfig
                         */
                        AuxiliaryServicesConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.AuxiliaryServicesConfig();
                            if (object.metastoreConfig != null) {
                                if (typeof object.metastoreConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AuxiliaryServicesConfig.metastoreConfig: object expected");
                                message.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.fromObject(object.metastoreConfig);
                            }
                            if (object.sparkHistoryServerConfig != null) {
                                if (typeof object.sparkHistoryServerConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AuxiliaryServicesConfig.sparkHistoryServerConfig: object expected");
                                message.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.fromObject(object.sparkHistoryServerConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuxiliaryServicesConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.AuxiliaryServicesConfig} message AuxiliaryServicesConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuxiliaryServicesConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.metastoreConfig = null;
                                object.sparkHistoryServerConfig = null;
                            }
                            if (message.metastoreConfig != null && message.hasOwnProperty("metastoreConfig"))
                                object.metastoreConfig = $root.google.cloud.dataproc.v1.MetastoreConfig.toObject(message.metastoreConfig, options);
                            if (message.sparkHistoryServerConfig != null && message.hasOwnProperty("sparkHistoryServerConfig"))
                                object.sparkHistoryServerConfig = $root.google.cloud.dataproc.v1.SparkHistoryServerConfig.toObject(message.sparkHistoryServerConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this AuxiliaryServicesConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuxiliaryServicesConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuxiliaryServicesConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.AuxiliaryServicesConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuxiliaryServicesConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.AuxiliaryServicesConfig";
                        };
    
                        return AuxiliaryServicesConfig;
                    })();
    
                    v1.EndpointConfig = (function() {
    
                        /**
                         * Properties of an EndpointConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IEndpointConfig
                         * @property {Object.<string,string>|null} [httpPorts] EndpointConfig httpPorts
                         * @property {boolean|null} [enableHttpPortAccess] EndpointConfig enableHttpPortAccess
                         */
    
                        /**
                         * Constructs a new EndpointConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an EndpointConfig.
                         * @implements IEndpointConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IEndpointConfig=} [properties] Properties to set
                         */
                        function EndpointConfig(properties) {
                            this.httpPorts = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EndpointConfig httpPorts.
                         * @member {Object.<string,string>} httpPorts
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @instance
                         */
                        EndpointConfig.prototype.httpPorts = $util.emptyObject;
    
                        /**
                         * EndpointConfig enableHttpPortAccess.
                         * @member {boolean} enableHttpPortAccess
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @instance
                         */
                        EndpointConfig.prototype.enableHttpPortAccess = false;
    
                        /**
                         * Creates a new EndpointConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEndpointConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.EndpointConfig} EndpointConfig instance
                         */
                        EndpointConfig.create = function create(properties) {
                            return new EndpointConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EndpointConfig message. Does not implicitly {@link google.cloud.dataproc.v1.EndpointConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEndpointConfig} message EndpointConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EndpointConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.httpPorts != null && Object.hasOwnProperty.call(message, "httpPorts"))
                                for (var keys = Object.keys(message.httpPorts), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.httpPorts[keys[i]]).ldelim();
                            if (message.enableHttpPortAccess != null && Object.hasOwnProperty.call(message, "enableHttpPortAccess"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableHttpPortAccess);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EndpointConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.EndpointConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEndpointConfig} message EndpointConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EndpointConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EndpointConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.EndpointConfig} EndpointConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EndpointConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.EndpointConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.httpPorts === $util.emptyObject)
                                            message.httpPorts = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.httpPorts[key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.enableHttpPortAccess = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EndpointConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.EndpointConfig} EndpointConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EndpointConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EndpointConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EndpointConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.httpPorts != null && message.hasOwnProperty("httpPorts")) {
                                if (!$util.isObject(message.httpPorts))
                                    return "httpPorts: object expected";
                                var key = Object.keys(message.httpPorts);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.httpPorts[key[i]]))
                                        return "httpPorts: string{k:string} expected";
                            }
                            if (message.enableHttpPortAccess != null && message.hasOwnProperty("enableHttpPortAccess"))
                                if (typeof message.enableHttpPortAccess !== "boolean")
                                    return "enableHttpPortAccess: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an EndpointConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.EndpointConfig} EndpointConfig
                         */
                        EndpointConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.EndpointConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.EndpointConfig();
                            if (object.httpPorts) {
                                if (typeof object.httpPorts !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.EndpointConfig.httpPorts: object expected");
                                message.httpPorts = {};
                                for (var keys = Object.keys(object.httpPorts), i = 0; i < keys.length; ++i)
                                    message.httpPorts[keys[i]] = String(object.httpPorts[keys[i]]);
                            }
                            if (object.enableHttpPortAccess != null)
                                message.enableHttpPortAccess = Boolean(object.enableHttpPortAccess);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EndpointConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.EndpointConfig} message EndpointConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EndpointConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.httpPorts = {};
                            if (options.defaults)
                                object.enableHttpPortAccess = false;
                            var keys2;
                            if (message.httpPorts && (keys2 = Object.keys(message.httpPorts)).length) {
                                object.httpPorts = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.httpPorts[keys2[j]] = message.httpPorts[keys2[j]];
                            }
                            if (message.enableHttpPortAccess != null && message.hasOwnProperty("enableHttpPortAccess"))
                                object.enableHttpPortAccess = message.enableHttpPortAccess;
                            return object;
                        };
    
                        /**
                         * Converts this EndpointConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EndpointConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EndpointConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.EndpointConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EndpointConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.EndpointConfig";
                        };
    
                        return EndpointConfig;
                    })();
    
                    v1.AutoscalingConfig = (function() {
    
                        /**
                         * Properties of an AutoscalingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IAutoscalingConfig
                         * @property {string|null} [policyUri] AutoscalingConfig policyUri
                         */
    
                        /**
                         * Constructs a new AutoscalingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AutoscalingConfig.
                         * @implements IAutoscalingConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IAutoscalingConfig=} [properties] Properties to set
                         */
                        function AutoscalingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AutoscalingConfig policyUri.
                         * @member {string} policyUri
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @instance
                         */
                        AutoscalingConfig.prototype.policyUri = "";
    
                        /**
                         * Creates a new AutoscalingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.AutoscalingConfig} AutoscalingConfig instance
                         */
                        AutoscalingConfig.create = function create(properties) {
                            return new AutoscalingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AutoscalingConfig message. Does not implicitly {@link google.cloud.dataproc.v1.AutoscalingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingConfig} message AutoscalingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoscalingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.policyUri != null && Object.hasOwnProperty.call(message, "policyUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.policyUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AutoscalingConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.AutoscalingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAutoscalingConfig} message AutoscalingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AutoscalingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AutoscalingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.AutoscalingConfig} AutoscalingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoscalingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.AutoscalingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.policyUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AutoscalingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.AutoscalingConfig} AutoscalingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AutoscalingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AutoscalingConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AutoscalingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.policyUri != null && message.hasOwnProperty("policyUri"))
                                if (!$util.isString(message.policyUri))
                                    return "policyUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AutoscalingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.AutoscalingConfig} AutoscalingConfig
                         */
                        AutoscalingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.AutoscalingConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.AutoscalingConfig();
                            if (object.policyUri != null)
                                message.policyUri = String(object.policyUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AutoscalingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.AutoscalingConfig} message AutoscalingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AutoscalingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.policyUri = "";
                            if (message.policyUri != null && message.hasOwnProperty("policyUri"))
                                object.policyUri = message.policyUri;
                            return object;
                        };
    
                        /**
                         * Converts this AutoscalingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AutoscalingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AutoscalingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.AutoscalingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AutoscalingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.AutoscalingConfig";
                        };
    
                        return AutoscalingConfig;
                    })();
    
                    v1.EncryptionConfig = (function() {
    
                        /**
                         * Properties of an EncryptionConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IEncryptionConfig
                         * @property {string|null} [gcePdKmsKeyName] EncryptionConfig gcePdKmsKeyName
                         */
    
                        /**
                         * Constructs a new EncryptionConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an EncryptionConfig.
                         * @implements IEncryptionConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IEncryptionConfig=} [properties] Properties to set
                         */
                        function EncryptionConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * EncryptionConfig gcePdKmsKeyName.
                         * @member {string} gcePdKmsKeyName
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @instance
                         */
                        EncryptionConfig.prototype.gcePdKmsKeyName = "";
    
                        /**
                         * Creates a new EncryptionConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEncryptionConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.EncryptionConfig} EncryptionConfig instance
                         */
                        EncryptionConfig.create = function create(properties) {
                            return new EncryptionConfig(properties);
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message. Does not implicitly {@link google.cloud.dataproc.v1.EncryptionConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gcePdKmsKeyName != null && Object.hasOwnProperty.call(message, "gcePdKmsKeyName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.gcePdKmsKeyName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified EncryptionConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.EncryptionConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IEncryptionConfig} message EncryptionConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EncryptionConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.EncryptionConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.gcePdKmsKeyName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an EncryptionConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.EncryptionConfig} EncryptionConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EncryptionConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an EncryptionConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EncryptionConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gcePdKmsKeyName != null && message.hasOwnProperty("gcePdKmsKeyName"))
                                if (!$util.isString(message.gcePdKmsKeyName))
                                    return "gcePdKmsKeyName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an EncryptionConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.EncryptionConfig} EncryptionConfig
                         */
                        EncryptionConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.EncryptionConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.EncryptionConfig();
                            if (object.gcePdKmsKeyName != null)
                                message.gcePdKmsKeyName = String(object.gcePdKmsKeyName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an EncryptionConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.EncryptionConfig} message EncryptionConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EncryptionConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.gcePdKmsKeyName = "";
                            if (message.gcePdKmsKeyName != null && message.hasOwnProperty("gcePdKmsKeyName"))
                                object.gcePdKmsKeyName = message.gcePdKmsKeyName;
                            return object;
                        };
    
                        /**
                         * Converts this EncryptionConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EncryptionConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for EncryptionConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.EncryptionConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EncryptionConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.EncryptionConfig";
                        };
    
                        return EncryptionConfig;
                    })();
    
                    v1.GceClusterConfig = (function() {
    
                        /**
                         * Properties of a GceClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGceClusterConfig
                         * @property {string|null} [zoneUri] GceClusterConfig zoneUri
                         * @property {string|null} [networkUri] GceClusterConfig networkUri
                         * @property {string|null} [subnetworkUri] GceClusterConfig subnetworkUri
                         * @property {boolean|null} [internalIpOnly] GceClusterConfig internalIpOnly
                         * @property {google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess|null} [privateIpv6GoogleAccess] GceClusterConfig privateIpv6GoogleAccess
                         * @property {string|null} [serviceAccount] GceClusterConfig serviceAccount
                         * @property {Array.<string>|null} [serviceAccountScopes] GceClusterConfig serviceAccountScopes
                         * @property {Array.<string>|null} [tags] GceClusterConfig tags
                         * @property {Object.<string,string>|null} [metadata] GceClusterConfig metadata
                         * @property {google.cloud.dataproc.v1.IReservationAffinity|null} [reservationAffinity] GceClusterConfig reservationAffinity
                         * @property {google.cloud.dataproc.v1.INodeGroupAffinity|null} [nodeGroupAffinity] GceClusterConfig nodeGroupAffinity
                         * @property {google.cloud.dataproc.v1.IShieldedInstanceConfig|null} [shieldedInstanceConfig] GceClusterConfig shieldedInstanceConfig
                         * @property {google.cloud.dataproc.v1.IConfidentialInstanceConfig|null} [confidentialInstanceConfig] GceClusterConfig confidentialInstanceConfig
                         */
    
                        /**
                         * Constructs a new GceClusterConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GceClusterConfig.
                         * @implements IGceClusterConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGceClusterConfig=} [properties] Properties to set
                         */
                        function GceClusterConfig(properties) {
                            this.serviceAccountScopes = [];
                            this.tags = [];
                            this.metadata = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GceClusterConfig zoneUri.
                         * @member {string} zoneUri
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.zoneUri = "";
    
                        /**
                         * GceClusterConfig networkUri.
                         * @member {string} networkUri
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.networkUri = "";
    
                        /**
                         * GceClusterConfig subnetworkUri.
                         * @member {string} subnetworkUri
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.subnetworkUri = "";
    
                        /**
                         * GceClusterConfig internalIpOnly.
                         * @member {boolean} internalIpOnly
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.internalIpOnly = false;
    
                        /**
                         * GceClusterConfig privateIpv6GoogleAccess.
                         * @member {google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess} privateIpv6GoogleAccess
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.privateIpv6GoogleAccess = 0;
    
                        /**
                         * GceClusterConfig serviceAccount.
                         * @member {string} serviceAccount
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.serviceAccount = "";
    
                        /**
                         * GceClusterConfig serviceAccountScopes.
                         * @member {Array.<string>} serviceAccountScopes
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.serviceAccountScopes = $util.emptyArray;
    
                        /**
                         * GceClusterConfig tags.
                         * @member {Array.<string>} tags
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.tags = $util.emptyArray;
    
                        /**
                         * GceClusterConfig metadata.
                         * @member {Object.<string,string>} metadata
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.metadata = $util.emptyObject;
    
                        /**
                         * GceClusterConfig reservationAffinity.
                         * @member {google.cloud.dataproc.v1.IReservationAffinity|null|undefined} reservationAffinity
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.reservationAffinity = null;
    
                        /**
                         * GceClusterConfig nodeGroupAffinity.
                         * @member {google.cloud.dataproc.v1.INodeGroupAffinity|null|undefined} nodeGroupAffinity
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.nodeGroupAffinity = null;
    
                        /**
                         * GceClusterConfig shieldedInstanceConfig.
                         * @member {google.cloud.dataproc.v1.IShieldedInstanceConfig|null|undefined} shieldedInstanceConfig
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.shieldedInstanceConfig = null;
    
                        /**
                         * GceClusterConfig confidentialInstanceConfig.
                         * @member {google.cloud.dataproc.v1.IConfidentialInstanceConfig|null|undefined} confidentialInstanceConfig
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         */
                        GceClusterConfig.prototype.confidentialInstanceConfig = null;
    
                        /**
                         * Creates a new GceClusterConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGceClusterConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GceClusterConfig} GceClusterConfig instance
                         */
                        GceClusterConfig.create = function create(properties) {
                            return new GceClusterConfig(properties);
                        };
    
                        /**
                         * Encodes the specified GceClusterConfig message. Does not implicitly {@link google.cloud.dataproc.v1.GceClusterConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGceClusterConfig} message GceClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GceClusterConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.zoneUri != null && Object.hasOwnProperty.call(message, "zoneUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.zoneUri);
                            if (message.networkUri != null && Object.hasOwnProperty.call(message, "networkUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.networkUri);
                            if (message.serviceAccountScopes != null && message.serviceAccountScopes.length)
                                for (var i = 0; i < message.serviceAccountScopes.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.serviceAccountScopes[i]);
                            if (message.tags != null && message.tags.length)
                                for (var i = 0; i < message.tags.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.tags[i]);
                            if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                                for (var keys = Object.keys(message.metadata), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.metadata[keys[i]]).ldelim();
                            if (message.subnetworkUri != null && Object.hasOwnProperty.call(message, "subnetworkUri"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.subnetworkUri);
                            if (message.internalIpOnly != null && Object.hasOwnProperty.call(message, "internalIpOnly"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.internalIpOnly);
                            if (message.serviceAccount != null && Object.hasOwnProperty.call(message, "serviceAccount"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.serviceAccount);
                            if (message.reservationAffinity != null && Object.hasOwnProperty.call(message, "reservationAffinity"))
                                $root.google.cloud.dataproc.v1.ReservationAffinity.encode(message.reservationAffinity, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.privateIpv6GoogleAccess != null && Object.hasOwnProperty.call(message, "privateIpv6GoogleAccess"))
                                writer.uint32(/* id 12, wireType 0 =*/96).int32(message.privateIpv6GoogleAccess);
                            if (message.nodeGroupAffinity != null && Object.hasOwnProperty.call(message, "nodeGroupAffinity"))
                                $root.google.cloud.dataproc.v1.NodeGroupAffinity.encode(message.nodeGroupAffinity, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.shieldedInstanceConfig != null && Object.hasOwnProperty.call(message, "shieldedInstanceConfig"))
                                $root.google.cloud.dataproc.v1.ShieldedInstanceConfig.encode(message.shieldedInstanceConfig, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.confidentialInstanceConfig != null && Object.hasOwnProperty.call(message, "confidentialInstanceConfig"))
                                $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig.encode(message.confidentialInstanceConfig, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GceClusterConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GceClusterConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IGceClusterConfig} message GceClusterConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GceClusterConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GceClusterConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GceClusterConfig} GceClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GceClusterConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GceClusterConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.zoneUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.networkUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.subnetworkUri = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.internalIpOnly = reader.bool();
                                        break;
                                    }
                                case 12: {
                                        message.privateIpv6GoogleAccess = reader.int32();
                                        break;
                                    }
                                case 8: {
                                        message.serviceAccount = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.serviceAccountScopes && message.serviceAccountScopes.length))
                                            message.serviceAccountScopes = [];
                                        message.serviceAccountScopes.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.tags && message.tags.length))
                                            message.tags = [];
                                        message.tags.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (message.metadata === $util.emptyObject)
                                            message.metadata = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.metadata[key] = value;
                                        break;
                                    }
                                case 11: {
                                        message.reservationAffinity = $root.google.cloud.dataproc.v1.ReservationAffinity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.nodeGroupAffinity = $root.google.cloud.dataproc.v1.NodeGroupAffinity.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.shieldedInstanceConfig = $root.google.cloud.dataproc.v1.ShieldedInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.confidentialInstanceConfig = $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GceClusterConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GceClusterConfig} GceClusterConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GceClusterConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GceClusterConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GceClusterConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.zoneUri != null && message.hasOwnProperty("zoneUri"))
                                if (!$util.isString(message.zoneUri))
                                    return "zoneUri: string expected";
                            if (message.networkUri != null && message.hasOwnProperty("networkUri"))
                                if (!$util.isString(message.networkUri))
                                    return "networkUri: string expected";
                            if (message.subnetworkUri != null && message.hasOwnProperty("subnetworkUri"))
                                if (!$util.isString(message.subnetworkUri))
                                    return "subnetworkUri: string expected";
                            if (message.internalIpOnly != null && message.hasOwnProperty("internalIpOnly"))
                                if (typeof message.internalIpOnly !== "boolean")
                                    return "internalIpOnly: boolean expected";
                            if (message.privateIpv6GoogleAccess != null && message.hasOwnProperty("privateIpv6GoogleAccess"))
                                switch (message.privateIpv6GoogleAccess) {
                                default:
                                    return "privateIpv6GoogleAccess: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                if (!$util.isString(message.serviceAccount))
                                    return "serviceAccount: string expected";
                            if (message.serviceAccountScopes != null && message.hasOwnProperty("serviceAccountScopes")) {
                                if (!Array.isArray(message.serviceAccountScopes))
                                    return "serviceAccountScopes: array expected";
                                for (var i = 0; i < message.serviceAccountScopes.length; ++i)
                                    if (!$util.isString(message.serviceAccountScopes[i]))
                                        return "serviceAccountScopes: string[] expected";
                            }
                            if (message.tags != null && message.hasOwnProperty("tags")) {
                                if (!Array.isArray(message.tags))
                                    return "tags: array expected";
                                for (var i = 0; i < message.tags.length; ++i)
                                    if (!$util.isString(message.tags[i]))
                                        return "tags: string[] expected";
                            }
                            if (message.metadata != null && message.hasOwnProperty("metadata")) {
                                if (!$util.isObject(message.metadata))
                                    return "metadata: object expected";
                                var key = Object.keys(message.metadata);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.metadata[key[i]]))
                                        return "metadata: string{k:string} expected";
                            }
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity")) {
                                var error = $root.google.cloud.dataproc.v1.ReservationAffinity.verify(message.reservationAffinity);
                                if (error)
                                    return "reservationAffinity." + error;
                            }
                            if (message.nodeGroupAffinity != null && message.hasOwnProperty("nodeGroupAffinity")) {
                                var error = $root.google.cloud.dataproc.v1.NodeGroupAffinity.verify(message.nodeGroupAffinity);
                                if (error)
                                    return "nodeGroupAffinity." + error;
                            }
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig")) {
                                var error = $root.google.cloud.dataproc.v1.ShieldedInstanceConfig.verify(message.shieldedInstanceConfig);
                                if (error)
                                    return "shieldedInstanceConfig." + error;
                            }
                            if (message.confidentialInstanceConfig != null && message.hasOwnProperty("confidentialInstanceConfig")) {
                                var error = $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig.verify(message.confidentialInstanceConfig);
                                if (error)
                                    return "confidentialInstanceConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GceClusterConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GceClusterConfig} GceClusterConfig
                         */
                        GceClusterConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GceClusterConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GceClusterConfig();
                            if (object.zoneUri != null)
                                message.zoneUri = String(object.zoneUri);
                            if (object.networkUri != null)
                                message.networkUri = String(object.networkUri);
                            if (object.subnetworkUri != null)
                                message.subnetworkUri = String(object.subnetworkUri);
                            if (object.internalIpOnly != null)
                                message.internalIpOnly = Boolean(object.internalIpOnly);
                            switch (object.privateIpv6GoogleAccess) {
                            default:
                                if (typeof object.privateIpv6GoogleAccess === "number") {
                                    message.privateIpv6GoogleAccess = object.privateIpv6GoogleAccess;
                                    break;
                                }
                                break;
                            case "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED":
                            case 0:
                                message.privateIpv6GoogleAccess = 0;
                                break;
                            case "INHERIT_FROM_SUBNETWORK":
                            case 1:
                                message.privateIpv6GoogleAccess = 1;
                                break;
                            case "OUTBOUND":
                            case 2:
                                message.privateIpv6GoogleAccess = 2;
                                break;
                            case "BIDIRECTIONAL":
                            case 3:
                                message.privateIpv6GoogleAccess = 3;
                                break;
                            }
                            if (object.serviceAccount != null)
                                message.serviceAccount = String(object.serviceAccount);
                            if (object.serviceAccountScopes) {
                                if (!Array.isArray(object.serviceAccountScopes))
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.serviceAccountScopes: array expected");
                                message.serviceAccountScopes = [];
                                for (var i = 0; i < object.serviceAccountScopes.length; ++i)
                                    message.serviceAccountScopes[i] = String(object.serviceAccountScopes[i]);
                            }
                            if (object.tags) {
                                if (!Array.isArray(object.tags))
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.tags: array expected");
                                message.tags = [];
                                for (var i = 0; i < object.tags.length; ++i)
                                    message.tags[i] = String(object.tags[i]);
                            }
                            if (object.metadata) {
                                if (typeof object.metadata !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.metadata: object expected");
                                message.metadata = {};
                                for (var keys = Object.keys(object.metadata), i = 0; i < keys.length; ++i)
                                    message.metadata[keys[i]] = String(object.metadata[keys[i]]);
                            }
                            if (object.reservationAffinity != null) {
                                if (typeof object.reservationAffinity !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.reservationAffinity: object expected");
                                message.reservationAffinity = $root.google.cloud.dataproc.v1.ReservationAffinity.fromObject(object.reservationAffinity);
                            }
                            if (object.nodeGroupAffinity != null) {
                                if (typeof object.nodeGroupAffinity !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.nodeGroupAffinity: object expected");
                                message.nodeGroupAffinity = $root.google.cloud.dataproc.v1.NodeGroupAffinity.fromObject(object.nodeGroupAffinity);
                            }
                            if (object.shieldedInstanceConfig != null) {
                                if (typeof object.shieldedInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.shieldedInstanceConfig: object expected");
                                message.shieldedInstanceConfig = $root.google.cloud.dataproc.v1.ShieldedInstanceConfig.fromObject(object.shieldedInstanceConfig);
                            }
                            if (object.confidentialInstanceConfig != null) {
                                if (typeof object.confidentialInstanceConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.GceClusterConfig.confidentialInstanceConfig: object expected");
                                message.confidentialInstanceConfig = $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig.fromObject(object.confidentialInstanceConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GceClusterConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.GceClusterConfig} message GceClusterConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GceClusterConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.serviceAccountScopes = [];
                                object.tags = [];
                            }
                            if (options.objects || options.defaults)
                                object.metadata = {};
                            if (options.defaults) {
                                object.zoneUri = "";
                                object.networkUri = "";
                                object.subnetworkUri = "";
                                object.internalIpOnly = false;
                                object.serviceAccount = "";
                                object.reservationAffinity = null;
                                object.privateIpv6GoogleAccess = options.enums === String ? "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED" : 0;
                                object.nodeGroupAffinity = null;
                                object.shieldedInstanceConfig = null;
                                object.confidentialInstanceConfig = null;
                            }
                            if (message.zoneUri != null && message.hasOwnProperty("zoneUri"))
                                object.zoneUri = message.zoneUri;
                            if (message.networkUri != null && message.hasOwnProperty("networkUri"))
                                object.networkUri = message.networkUri;
                            if (message.serviceAccountScopes && message.serviceAccountScopes.length) {
                                object.serviceAccountScopes = [];
                                for (var j = 0; j < message.serviceAccountScopes.length; ++j)
                                    object.serviceAccountScopes[j] = message.serviceAccountScopes[j];
                            }
                            if (message.tags && message.tags.length) {
                                object.tags = [];
                                for (var j = 0; j < message.tags.length; ++j)
                                    object.tags[j] = message.tags[j];
                            }
                            var keys2;
                            if (message.metadata && (keys2 = Object.keys(message.metadata)).length) {
                                object.metadata = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.metadata[keys2[j]] = message.metadata[keys2[j]];
                            }
                            if (message.subnetworkUri != null && message.hasOwnProperty("subnetworkUri"))
                                object.subnetworkUri = message.subnetworkUri;
                            if (message.internalIpOnly != null && message.hasOwnProperty("internalIpOnly"))
                                object.internalIpOnly = message.internalIpOnly;
                            if (message.serviceAccount != null && message.hasOwnProperty("serviceAccount"))
                                object.serviceAccount = message.serviceAccount;
                            if (message.reservationAffinity != null && message.hasOwnProperty("reservationAffinity"))
                                object.reservationAffinity = $root.google.cloud.dataproc.v1.ReservationAffinity.toObject(message.reservationAffinity, options);
                            if (message.privateIpv6GoogleAccess != null && message.hasOwnProperty("privateIpv6GoogleAccess"))
                                object.privateIpv6GoogleAccess = options.enums === String ? $root.google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess[message.privateIpv6GoogleAccess] === undefined ? message.privateIpv6GoogleAccess : $root.google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess[message.privateIpv6GoogleAccess] : message.privateIpv6GoogleAccess;
                            if (message.nodeGroupAffinity != null && message.hasOwnProperty("nodeGroupAffinity"))
                                object.nodeGroupAffinity = $root.google.cloud.dataproc.v1.NodeGroupAffinity.toObject(message.nodeGroupAffinity, options);
                            if (message.shieldedInstanceConfig != null && message.hasOwnProperty("shieldedInstanceConfig"))
                                object.shieldedInstanceConfig = $root.google.cloud.dataproc.v1.ShieldedInstanceConfig.toObject(message.shieldedInstanceConfig, options);
                            if (message.confidentialInstanceConfig != null && message.hasOwnProperty("confidentialInstanceConfig"))
                                object.confidentialInstanceConfig = $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig.toObject(message.confidentialInstanceConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this GceClusterConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GceClusterConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GceClusterConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GceClusterConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GceClusterConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GceClusterConfig";
                        };
    
                        /**
                         * PrivateIpv6GoogleAccess enum.
                         * @name google.cloud.dataproc.v1.GceClusterConfig.PrivateIpv6GoogleAccess
                         * @enum {number}
                         * @property {number} PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED=0 PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED value
                         * @property {number} INHERIT_FROM_SUBNETWORK=1 INHERIT_FROM_SUBNETWORK value
                         * @property {number} OUTBOUND=2 OUTBOUND value
                         * @property {number} BIDIRECTIONAL=3 BIDIRECTIONAL value
                         */
                        GceClusterConfig.PrivateIpv6GoogleAccess = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "INHERIT_FROM_SUBNETWORK"] = 1;
                            values[valuesById[2] = "OUTBOUND"] = 2;
                            values[valuesById[3] = "BIDIRECTIONAL"] = 3;
                            return values;
                        })();
    
                        return GceClusterConfig;
                    })();
    
                    v1.NodeGroupAffinity = (function() {
    
                        /**
                         * Properties of a NodeGroupAffinity.
                         * @memberof google.cloud.dataproc.v1
                         * @interface INodeGroupAffinity
                         * @property {string|null} [nodeGroupUri] NodeGroupAffinity nodeGroupUri
                         */
    
                        /**
                         * Constructs a new NodeGroupAffinity.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a NodeGroupAffinity.
                         * @implements INodeGroupAffinity
                         * @constructor
                         * @param {google.cloud.dataproc.v1.INodeGroupAffinity=} [properties] Properties to set
                         */
                        function NodeGroupAffinity(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeGroupAffinity nodeGroupUri.
                         * @member {string} nodeGroupUri
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @instance
                         */
                        NodeGroupAffinity.prototype.nodeGroupUri = "";
    
                        /**
                         * Creates a new NodeGroupAffinity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupAffinity=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.NodeGroupAffinity} NodeGroupAffinity instance
                         */
                        NodeGroupAffinity.create = function create(properties) {
                            return new NodeGroupAffinity(properties);
                        };
    
                        /**
                         * Encodes the specified NodeGroupAffinity message. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroupAffinity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupAffinity} message NodeGroupAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroupAffinity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodeGroupUri != null && Object.hasOwnProperty.call(message, "nodeGroupUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.nodeGroupUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeGroupAffinity message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroupAffinity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupAffinity} message NodeGroupAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroupAffinity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeGroupAffinity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.NodeGroupAffinity} NodeGroupAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroupAffinity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.NodeGroupAffinity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nodeGroupUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeGroupAffinity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.NodeGroupAffinity} NodeGroupAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroupAffinity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeGroupAffinity message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeGroupAffinity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodeGroupUri != null && message.hasOwnProperty("nodeGroupUri"))
                                if (!$util.isString(message.nodeGroupUri))
                                    return "nodeGroupUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a NodeGroupAffinity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.NodeGroupAffinity} NodeGroupAffinity
                         */
                        NodeGroupAffinity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.NodeGroupAffinity)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.NodeGroupAffinity();
                            if (object.nodeGroupUri != null)
                                message.nodeGroupUri = String(object.nodeGroupUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeGroupAffinity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.NodeGroupAffinity} message NodeGroupAffinity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeGroupAffinity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.nodeGroupUri = "";
                            if (message.nodeGroupUri != null && message.hasOwnProperty("nodeGroupUri"))
                                object.nodeGroupUri = message.nodeGroupUri;
                            return object;
                        };
    
                        /**
                         * Converts this NodeGroupAffinity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeGroupAffinity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeGroupAffinity
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.NodeGroupAffinity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeGroupAffinity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.NodeGroupAffinity";
                        };
    
                        return NodeGroupAffinity;
                    })();
    
                    v1.ShieldedInstanceConfig = (function() {
    
                        /**
                         * Properties of a ShieldedInstanceConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IShieldedInstanceConfig
                         * @property {boolean|null} [enableSecureBoot] ShieldedInstanceConfig enableSecureBoot
                         * @property {boolean|null} [enableVtpm] ShieldedInstanceConfig enableVtpm
                         * @property {boolean|null} [enableIntegrityMonitoring] ShieldedInstanceConfig enableIntegrityMonitoring
                         */
    
                        /**
                         * Constructs a new ShieldedInstanceConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ShieldedInstanceConfig.
                         * @implements IShieldedInstanceConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IShieldedInstanceConfig=} [properties] Properties to set
                         */
                        function ShieldedInstanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ShieldedInstanceConfig enableSecureBoot.
                         * @member {boolean} enableSecureBoot
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableSecureBoot = false;
    
                        /**
                         * ShieldedInstanceConfig enableVtpm.
                         * @member {boolean} enableVtpm
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableVtpm = false;
    
                        /**
                         * ShieldedInstanceConfig enableIntegrityMonitoring.
                         * @member {boolean} enableIntegrityMonitoring
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @instance
                         */
                        ShieldedInstanceConfig.prototype.enableIntegrityMonitoring = false;
    
                        /**
                         * Creates a new ShieldedInstanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IShieldedInstanceConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ShieldedInstanceConfig} ShieldedInstanceConfig instance
                         */
                        ShieldedInstanceConfig.create = function create(properties) {
                            return new ShieldedInstanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ShieldedInstanceConfig message. Does not implicitly {@link google.cloud.dataproc.v1.ShieldedInstanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShieldedInstanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableSecureBoot != null && Object.hasOwnProperty.call(message, "enableSecureBoot"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableSecureBoot);
                            if (message.enableVtpm != null && Object.hasOwnProperty.call(message, "enableVtpm"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enableVtpm);
                            if (message.enableIntegrityMonitoring != null && Object.hasOwnProperty.call(message, "enableIntegrityMonitoring"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableIntegrityMonitoring);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ShieldedInstanceConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ShieldedInstanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IShieldedInstanceConfig} message ShieldedInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ShieldedInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ShieldedInstanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShieldedInstanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ShieldedInstanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableSecureBoot = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.enableVtpm = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.enableIntegrityMonitoring = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ShieldedInstanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ShieldedInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ShieldedInstanceConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ShieldedInstanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                if (typeof message.enableSecureBoot !== "boolean")
                                    return "enableSecureBoot: boolean expected";
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                if (typeof message.enableVtpm !== "boolean")
                                    return "enableVtpm: boolean expected";
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                if (typeof message.enableIntegrityMonitoring !== "boolean")
                                    return "enableIntegrityMonitoring: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ShieldedInstanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ShieldedInstanceConfig} ShieldedInstanceConfig
                         */
                        ShieldedInstanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ShieldedInstanceConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ShieldedInstanceConfig();
                            if (object.enableSecureBoot != null)
                                message.enableSecureBoot = Boolean(object.enableSecureBoot);
                            if (object.enableVtpm != null)
                                message.enableVtpm = Boolean(object.enableVtpm);
                            if (object.enableIntegrityMonitoring != null)
                                message.enableIntegrityMonitoring = Boolean(object.enableIntegrityMonitoring);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ShieldedInstanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ShieldedInstanceConfig} message ShieldedInstanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ShieldedInstanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableSecureBoot = false;
                                object.enableVtpm = false;
                                object.enableIntegrityMonitoring = false;
                            }
                            if (message.enableSecureBoot != null && message.hasOwnProperty("enableSecureBoot"))
                                object.enableSecureBoot = message.enableSecureBoot;
                            if (message.enableVtpm != null && message.hasOwnProperty("enableVtpm"))
                                object.enableVtpm = message.enableVtpm;
                            if (message.enableIntegrityMonitoring != null && message.hasOwnProperty("enableIntegrityMonitoring"))
                                object.enableIntegrityMonitoring = message.enableIntegrityMonitoring;
                            return object;
                        };
    
                        /**
                         * Converts this ShieldedInstanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ShieldedInstanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ShieldedInstanceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ShieldedInstanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ShieldedInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ShieldedInstanceConfig";
                        };
    
                        return ShieldedInstanceConfig;
                    })();
    
                    v1.ConfidentialInstanceConfig = (function() {
    
                        /**
                         * Properties of a ConfidentialInstanceConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IConfidentialInstanceConfig
                         * @property {boolean|null} [enableConfidentialCompute] ConfidentialInstanceConfig enableConfidentialCompute
                         */
    
                        /**
                         * Constructs a new ConfidentialInstanceConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ConfidentialInstanceConfig.
                         * @implements IConfidentialInstanceConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IConfidentialInstanceConfig=} [properties] Properties to set
                         */
                        function ConfidentialInstanceConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConfidentialInstanceConfig enableConfidentialCompute.
                         * @member {boolean} enableConfidentialCompute
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @instance
                         */
                        ConfidentialInstanceConfig.prototype.enableConfidentialCompute = false;
    
                        /**
                         * Creates a new ConfidentialInstanceConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IConfidentialInstanceConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ConfidentialInstanceConfig} ConfidentialInstanceConfig instance
                         */
                        ConfidentialInstanceConfig.create = function create(properties) {
                            return new ConfidentialInstanceConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ConfidentialInstanceConfig message. Does not implicitly {@link google.cloud.dataproc.v1.ConfidentialInstanceConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IConfidentialInstanceConfig} message ConfidentialInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfidentialInstanceConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableConfidentialCompute != null && Object.hasOwnProperty.call(message, "enableConfidentialCompute"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableConfidentialCompute);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConfidentialInstanceConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ConfidentialInstanceConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IConfidentialInstanceConfig} message ConfidentialInstanceConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConfidentialInstanceConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConfidentialInstanceConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ConfidentialInstanceConfig} ConfidentialInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfidentialInstanceConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableConfidentialCompute = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConfidentialInstanceConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ConfidentialInstanceConfig} ConfidentialInstanceConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConfidentialInstanceConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConfidentialInstanceConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConfidentialInstanceConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableConfidentialCompute != null && message.hasOwnProperty("enableConfidentialCompute"))
                                if (typeof message.enableConfidentialCompute !== "boolean")
                                    return "enableConfidentialCompute: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConfidentialInstanceConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ConfidentialInstanceConfig} ConfidentialInstanceConfig
                         */
                        ConfidentialInstanceConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ConfidentialInstanceConfig();
                            if (object.enableConfidentialCompute != null)
                                message.enableConfidentialCompute = Boolean(object.enableConfidentialCompute);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConfidentialInstanceConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ConfidentialInstanceConfig} message ConfidentialInstanceConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConfidentialInstanceConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.enableConfidentialCompute = false;
                            if (message.enableConfidentialCompute != null && message.hasOwnProperty("enableConfidentialCompute"))
                                object.enableConfidentialCompute = message.enableConfidentialCompute;
                            return object;
                        };
    
                        /**
                         * Converts this ConfidentialInstanceConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConfidentialInstanceConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ConfidentialInstanceConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ConfidentialInstanceConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ConfidentialInstanceConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ConfidentialInstanceConfig";
                        };
    
                        return ConfidentialInstanceConfig;
                    })();
    
                    v1.InstanceGroupConfig = (function() {
    
                        /**
                         * Properties of an InstanceGroupConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IInstanceGroupConfig
                         * @property {number|null} [numInstances] InstanceGroupConfig numInstances
                         * @property {Array.<string>|null} [instanceNames] InstanceGroupConfig instanceNames
                         * @property {string|null} [imageUri] InstanceGroupConfig imageUri
                         * @property {string|null} [machineTypeUri] InstanceGroupConfig machineTypeUri
                         * @property {google.cloud.dataproc.v1.IDiskConfig|null} [diskConfig] InstanceGroupConfig diskConfig
                         * @property {boolean|null} [isPreemptible] InstanceGroupConfig isPreemptible
                         * @property {google.cloud.dataproc.v1.InstanceGroupConfig.Preemptibility|null} [preemptibility] InstanceGroupConfig preemptibility
                         * @property {google.cloud.dataproc.v1.IManagedGroupConfig|null} [managedGroupConfig] InstanceGroupConfig managedGroupConfig
                         * @property {Array.<google.cloud.dataproc.v1.IAcceleratorConfig>|null} [accelerators] InstanceGroupConfig accelerators
                         * @property {string|null} [minCpuPlatform] InstanceGroupConfig minCpuPlatform
                         */
    
                        /**
                         * Constructs a new InstanceGroupConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an InstanceGroupConfig.
                         * @implements IInstanceGroupConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IInstanceGroupConfig=} [properties] Properties to set
                         */
                        function InstanceGroupConfig(properties) {
                            this.instanceNames = [];
                            this.accelerators = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstanceGroupConfig numInstances.
                         * @member {number} numInstances
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.numInstances = 0;
    
                        /**
                         * InstanceGroupConfig instanceNames.
                         * @member {Array.<string>} instanceNames
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.instanceNames = $util.emptyArray;
    
                        /**
                         * InstanceGroupConfig imageUri.
                         * @member {string} imageUri
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.imageUri = "";
    
                        /**
                         * InstanceGroupConfig machineTypeUri.
                         * @member {string} machineTypeUri
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.machineTypeUri = "";
    
                        /**
                         * InstanceGroupConfig diskConfig.
                         * @member {google.cloud.dataproc.v1.IDiskConfig|null|undefined} diskConfig
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.diskConfig = null;
    
                        /**
                         * InstanceGroupConfig isPreemptible.
                         * @member {boolean} isPreemptible
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.isPreemptible = false;
    
                        /**
                         * InstanceGroupConfig preemptibility.
                         * @member {google.cloud.dataproc.v1.InstanceGroupConfig.Preemptibility} preemptibility
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.preemptibility = 0;
    
                        /**
                         * InstanceGroupConfig managedGroupConfig.
                         * @member {google.cloud.dataproc.v1.IManagedGroupConfig|null|undefined} managedGroupConfig
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.managedGroupConfig = null;
    
                        /**
                         * InstanceGroupConfig accelerators.
                         * @member {Array.<google.cloud.dataproc.v1.IAcceleratorConfig>} accelerators
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.accelerators = $util.emptyArray;
    
                        /**
                         * InstanceGroupConfig minCpuPlatform.
                         * @member {string} minCpuPlatform
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         */
                        InstanceGroupConfig.prototype.minCpuPlatform = "";
    
                        /**
                         * Creates a new InstanceGroupConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.InstanceGroupConfig} InstanceGroupConfig instance
                         */
                        InstanceGroupConfig.create = function create(properties) {
                            return new InstanceGroupConfig(properties);
                        };
    
                        /**
                         * Encodes the specified InstanceGroupConfig message. Does not implicitly {@link google.cloud.dataproc.v1.InstanceGroupConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupConfig} message InstanceGroupConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceGroupConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.numInstances != null && Object.hasOwnProperty.call(message, "numInstances"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.numInstances);
                            if (message.instanceNames != null && message.instanceNames.length)
                                for (var i = 0; i < message.instanceNames.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceNames[i]);
                            if (message.imageUri != null && Object.hasOwnProperty.call(message, "imageUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.imageUri);
                            if (message.machineTypeUri != null && Object.hasOwnProperty.call(message, "machineTypeUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.machineTypeUri);
                            if (message.diskConfig != null && Object.hasOwnProperty.call(message, "diskConfig"))
                                $root.google.cloud.dataproc.v1.DiskConfig.encode(message.diskConfig, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.isPreemptible != null && Object.hasOwnProperty.call(message, "isPreemptible"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.isPreemptible);
                            if (message.managedGroupConfig != null && Object.hasOwnProperty.call(message, "managedGroupConfig"))
                                $root.google.cloud.dataproc.v1.ManagedGroupConfig.encode(message.managedGroupConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.accelerators != null && message.accelerators.length)
                                for (var i = 0; i < message.accelerators.length; ++i)
                                    $root.google.cloud.dataproc.v1.AcceleratorConfig.encode(message.accelerators[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.minCpuPlatform != null && Object.hasOwnProperty.call(message, "minCpuPlatform"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.minCpuPlatform);
                            if (message.preemptibility != null && Object.hasOwnProperty.call(message, "preemptibility"))
                                writer.uint32(/* id 10, wireType 0 =*/80).int32(message.preemptibility);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstanceGroupConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.InstanceGroupConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstanceGroupConfig} message InstanceGroupConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstanceGroupConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstanceGroupConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.InstanceGroupConfig} InstanceGroupConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceGroupConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.InstanceGroupConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.numInstances = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.instanceNames && message.instanceNames.length))
                                            message.instanceNames = [];
                                        message.instanceNames.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.imageUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.machineTypeUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.diskConfig = $root.google.cloud.dataproc.v1.DiskConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.isPreemptible = reader.bool();
                                        break;
                                    }
                                case 10: {
                                        message.preemptibility = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.managedGroupConfig = $root.google.cloud.dataproc.v1.ManagedGroupConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (!(message.accelerators && message.accelerators.length))
                                            message.accelerators = [];
                                        message.accelerators.push($root.google.cloud.dataproc.v1.AcceleratorConfig.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        message.minCpuPlatform = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstanceGroupConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.InstanceGroupConfig} InstanceGroupConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstanceGroupConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstanceGroupConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstanceGroupConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.numInstances != null && message.hasOwnProperty("numInstances"))
                                if (!$util.isInteger(message.numInstances))
                                    return "numInstances: integer expected";
                            if (message.instanceNames != null && message.hasOwnProperty("instanceNames")) {
                                if (!Array.isArray(message.instanceNames))
                                    return "instanceNames: array expected";
                                for (var i = 0; i < message.instanceNames.length; ++i)
                                    if (!$util.isString(message.instanceNames[i]))
                                        return "instanceNames: string[] expected";
                            }
                            if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                if (!$util.isString(message.imageUri))
                                    return "imageUri: string expected";
                            if (message.machineTypeUri != null && message.hasOwnProperty("machineTypeUri"))
                                if (!$util.isString(message.machineTypeUri))
                                    return "machineTypeUri: string expected";
                            if (message.diskConfig != null && message.hasOwnProperty("diskConfig")) {
                                var error = $root.google.cloud.dataproc.v1.DiskConfig.verify(message.diskConfig);
                                if (error)
                                    return "diskConfig." + error;
                            }
                            if (message.isPreemptible != null && message.hasOwnProperty("isPreemptible"))
                                if (typeof message.isPreemptible !== "boolean")
                                    return "isPreemptible: boolean expected";
                            if (message.preemptibility != null && message.hasOwnProperty("preemptibility"))
                                switch (message.preemptibility) {
                                default:
                                    return "preemptibility: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.managedGroupConfig != null && message.hasOwnProperty("managedGroupConfig")) {
                                var error = $root.google.cloud.dataproc.v1.ManagedGroupConfig.verify(message.managedGroupConfig);
                                if (error)
                                    return "managedGroupConfig." + error;
                            }
                            if (message.accelerators != null && message.hasOwnProperty("accelerators")) {
                                if (!Array.isArray(message.accelerators))
                                    return "accelerators: array expected";
                                for (var i = 0; i < message.accelerators.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.AcceleratorConfig.verify(message.accelerators[i]);
                                    if (error)
                                        return "accelerators." + error;
                                }
                            }
                            if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                                if (!$util.isString(message.minCpuPlatform))
                                    return "minCpuPlatform: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstanceGroupConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.InstanceGroupConfig} InstanceGroupConfig
                         */
                        InstanceGroupConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.InstanceGroupConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.InstanceGroupConfig();
                            if (object.numInstances != null)
                                message.numInstances = object.numInstances | 0;
                            if (object.instanceNames) {
                                if (!Array.isArray(object.instanceNames))
                                    throw TypeError(".google.cloud.dataproc.v1.InstanceGroupConfig.instanceNames: array expected");
                                message.instanceNames = [];
                                for (var i = 0; i < object.instanceNames.length; ++i)
                                    message.instanceNames[i] = String(object.instanceNames[i]);
                            }
                            if (object.imageUri != null)
                                message.imageUri = String(object.imageUri);
                            if (object.machineTypeUri != null)
                                message.machineTypeUri = String(object.machineTypeUri);
                            if (object.diskConfig != null) {
                                if (typeof object.diskConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.InstanceGroupConfig.diskConfig: object expected");
                                message.diskConfig = $root.google.cloud.dataproc.v1.DiskConfig.fromObject(object.diskConfig);
                            }
                            if (object.isPreemptible != null)
                                message.isPreemptible = Boolean(object.isPreemptible);
                            switch (object.preemptibility) {
                            default:
                                if (typeof object.preemptibility === "number") {
                                    message.preemptibility = object.preemptibility;
                                    break;
                                }
                                break;
                            case "PREEMPTIBILITY_UNSPECIFIED":
                            case 0:
                                message.preemptibility = 0;
                                break;
                            case "NON_PREEMPTIBLE":
                            case 1:
                                message.preemptibility = 1;
                                break;
                            case "PREEMPTIBLE":
                            case 2:
                                message.preemptibility = 2;
                                break;
                            case "SPOT":
                            case 3:
                                message.preemptibility = 3;
                                break;
                            }
                            if (object.managedGroupConfig != null) {
                                if (typeof object.managedGroupConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.InstanceGroupConfig.managedGroupConfig: object expected");
                                message.managedGroupConfig = $root.google.cloud.dataproc.v1.ManagedGroupConfig.fromObject(object.managedGroupConfig);
                            }
                            if (object.accelerators) {
                                if (!Array.isArray(object.accelerators))
                                    throw TypeError(".google.cloud.dataproc.v1.InstanceGroupConfig.accelerators: array expected");
                                message.accelerators = [];
                                for (var i = 0; i < object.accelerators.length; ++i) {
                                    if (typeof object.accelerators[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.InstanceGroupConfig.accelerators: object expected");
                                    message.accelerators[i] = $root.google.cloud.dataproc.v1.AcceleratorConfig.fromObject(object.accelerators[i]);
                                }
                            }
                            if (object.minCpuPlatform != null)
                                message.minCpuPlatform = String(object.minCpuPlatform);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstanceGroupConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.InstanceGroupConfig} message InstanceGroupConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstanceGroupConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.instanceNames = [];
                                object.accelerators = [];
                            }
                            if (options.defaults) {
                                object.numInstances = 0;
                                object.imageUri = "";
                                object.machineTypeUri = "";
                                object.diskConfig = null;
                                object.isPreemptible = false;
                                object.managedGroupConfig = null;
                                object.minCpuPlatform = "";
                                object.preemptibility = options.enums === String ? "PREEMPTIBILITY_UNSPECIFIED" : 0;
                            }
                            if (message.numInstances != null && message.hasOwnProperty("numInstances"))
                                object.numInstances = message.numInstances;
                            if (message.instanceNames && message.instanceNames.length) {
                                object.instanceNames = [];
                                for (var j = 0; j < message.instanceNames.length; ++j)
                                    object.instanceNames[j] = message.instanceNames[j];
                            }
                            if (message.imageUri != null && message.hasOwnProperty("imageUri"))
                                object.imageUri = message.imageUri;
                            if (message.machineTypeUri != null && message.hasOwnProperty("machineTypeUri"))
                                object.machineTypeUri = message.machineTypeUri;
                            if (message.diskConfig != null && message.hasOwnProperty("diskConfig"))
                                object.diskConfig = $root.google.cloud.dataproc.v1.DiskConfig.toObject(message.diskConfig, options);
                            if (message.isPreemptible != null && message.hasOwnProperty("isPreemptible"))
                                object.isPreemptible = message.isPreemptible;
                            if (message.managedGroupConfig != null && message.hasOwnProperty("managedGroupConfig"))
                                object.managedGroupConfig = $root.google.cloud.dataproc.v1.ManagedGroupConfig.toObject(message.managedGroupConfig, options);
                            if (message.accelerators && message.accelerators.length) {
                                object.accelerators = [];
                                for (var j = 0; j < message.accelerators.length; ++j)
                                    object.accelerators[j] = $root.google.cloud.dataproc.v1.AcceleratorConfig.toObject(message.accelerators[j], options);
                            }
                            if (message.minCpuPlatform != null && message.hasOwnProperty("minCpuPlatform"))
                                object.minCpuPlatform = message.minCpuPlatform;
                            if (message.preemptibility != null && message.hasOwnProperty("preemptibility"))
                                object.preemptibility = options.enums === String ? $root.google.cloud.dataproc.v1.InstanceGroupConfig.Preemptibility[message.preemptibility] === undefined ? message.preemptibility : $root.google.cloud.dataproc.v1.InstanceGroupConfig.Preemptibility[message.preemptibility] : message.preemptibility;
                            return object;
                        };
    
                        /**
                         * Converts this InstanceGroupConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstanceGroupConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InstanceGroupConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.InstanceGroupConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InstanceGroupConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.InstanceGroupConfig";
                        };
    
                        /**
                         * Preemptibility enum.
                         * @name google.cloud.dataproc.v1.InstanceGroupConfig.Preemptibility
                         * @enum {number}
                         * @property {number} PREEMPTIBILITY_UNSPECIFIED=0 PREEMPTIBILITY_UNSPECIFIED value
                         * @property {number} NON_PREEMPTIBLE=1 NON_PREEMPTIBLE value
                         * @property {number} PREEMPTIBLE=2 PREEMPTIBLE value
                         * @property {number} SPOT=3 SPOT value
                         */
                        InstanceGroupConfig.Preemptibility = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "PREEMPTIBILITY_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NON_PREEMPTIBLE"] = 1;
                            values[valuesById[2] = "PREEMPTIBLE"] = 2;
                            values[valuesById[3] = "SPOT"] = 3;
                            return values;
                        })();
    
                        return InstanceGroupConfig;
                    })();
    
                    v1.ManagedGroupConfig = (function() {
    
                        /**
                         * Properties of a ManagedGroupConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IManagedGroupConfig
                         * @property {string|null} [instanceTemplateName] ManagedGroupConfig instanceTemplateName
                         * @property {string|null} [instanceGroupManagerName] ManagedGroupConfig instanceGroupManagerName
                         */
    
                        /**
                         * Constructs a new ManagedGroupConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ManagedGroupConfig.
                         * @implements IManagedGroupConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IManagedGroupConfig=} [properties] Properties to set
                         */
                        function ManagedGroupConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ManagedGroupConfig instanceTemplateName.
                         * @member {string} instanceTemplateName
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @instance
                         */
                        ManagedGroupConfig.prototype.instanceTemplateName = "";
    
                        /**
                         * ManagedGroupConfig instanceGroupManagerName.
                         * @member {string} instanceGroupManagerName
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @instance
                         */
                        ManagedGroupConfig.prototype.instanceGroupManagerName = "";
    
                        /**
                         * Creates a new ManagedGroupConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedGroupConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ManagedGroupConfig} ManagedGroupConfig instance
                         */
                        ManagedGroupConfig.create = function create(properties) {
                            return new ManagedGroupConfig(properties);
                        };
    
                        /**
                         * Encodes the specified ManagedGroupConfig message. Does not implicitly {@link google.cloud.dataproc.v1.ManagedGroupConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedGroupConfig} message ManagedGroupConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagedGroupConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.instanceTemplateName != null && Object.hasOwnProperty.call(message, "instanceTemplateName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.instanceTemplateName);
                            if (message.instanceGroupManagerName != null && Object.hasOwnProperty.call(message, "instanceGroupManagerName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.instanceGroupManagerName);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ManagedGroupConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ManagedGroupConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedGroupConfig} message ManagedGroupConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagedGroupConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ManagedGroupConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ManagedGroupConfig} ManagedGroupConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagedGroupConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ManagedGroupConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.instanceTemplateName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.instanceGroupManagerName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ManagedGroupConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ManagedGroupConfig} ManagedGroupConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagedGroupConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ManagedGroupConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ManagedGroupConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.instanceTemplateName != null && message.hasOwnProperty("instanceTemplateName"))
                                if (!$util.isString(message.instanceTemplateName))
                                    return "instanceTemplateName: string expected";
                            if (message.instanceGroupManagerName != null && message.hasOwnProperty("instanceGroupManagerName"))
                                if (!$util.isString(message.instanceGroupManagerName))
                                    return "instanceGroupManagerName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ManagedGroupConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ManagedGroupConfig} ManagedGroupConfig
                         */
                        ManagedGroupConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ManagedGroupConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ManagedGroupConfig();
                            if (object.instanceTemplateName != null)
                                message.instanceTemplateName = String(object.instanceTemplateName);
                            if (object.instanceGroupManagerName != null)
                                message.instanceGroupManagerName = String(object.instanceGroupManagerName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ManagedGroupConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ManagedGroupConfig} message ManagedGroupConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ManagedGroupConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.instanceTemplateName = "";
                                object.instanceGroupManagerName = "";
                            }
                            if (message.instanceTemplateName != null && message.hasOwnProperty("instanceTemplateName"))
                                object.instanceTemplateName = message.instanceTemplateName;
                            if (message.instanceGroupManagerName != null && message.hasOwnProperty("instanceGroupManagerName"))
                                object.instanceGroupManagerName = message.instanceGroupManagerName;
                            return object;
                        };
    
                        /**
                         * Converts this ManagedGroupConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ManagedGroupConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ManagedGroupConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ManagedGroupConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ManagedGroupConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ManagedGroupConfig";
                        };
    
                        return ManagedGroupConfig;
                    })();
    
                    v1.AcceleratorConfig = (function() {
    
                        /**
                         * Properties of an AcceleratorConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IAcceleratorConfig
                         * @property {string|null} [acceleratorTypeUri] AcceleratorConfig acceleratorTypeUri
                         * @property {number|null} [acceleratorCount] AcceleratorConfig acceleratorCount
                         */
    
                        /**
                         * Constructs a new AcceleratorConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AcceleratorConfig.
                         * @implements IAcceleratorConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IAcceleratorConfig=} [properties] Properties to set
                         */
                        function AcceleratorConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AcceleratorConfig acceleratorTypeUri.
                         * @member {string} acceleratorTypeUri
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @instance
                         */
                        AcceleratorConfig.prototype.acceleratorTypeUri = "";
    
                        /**
                         * AcceleratorConfig acceleratorCount.
                         * @member {number} acceleratorCount
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @instance
                         */
                        AcceleratorConfig.prototype.acceleratorCount = 0;
    
                        /**
                         * Creates a new AcceleratorConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAcceleratorConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.AcceleratorConfig} AcceleratorConfig instance
                         */
                        AcceleratorConfig.create = function create(properties) {
                            return new AcceleratorConfig(properties);
                        };
    
                        /**
                         * Encodes the specified AcceleratorConfig message. Does not implicitly {@link google.cloud.dataproc.v1.AcceleratorConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcceleratorConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.acceleratorTypeUri != null && Object.hasOwnProperty.call(message, "acceleratorTypeUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.acceleratorTypeUri);
                            if (message.acceleratorCount != null && Object.hasOwnProperty.call(message, "acceleratorCount"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.acceleratorCount);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AcceleratorConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.AcceleratorConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IAcceleratorConfig} message AcceleratorConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AcceleratorConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AcceleratorConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.AcceleratorConfig} AcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcceleratorConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.AcceleratorConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.acceleratorTypeUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.acceleratorCount = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AcceleratorConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.AcceleratorConfig} AcceleratorConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AcceleratorConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AcceleratorConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AcceleratorConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.acceleratorTypeUri != null && message.hasOwnProperty("acceleratorTypeUri"))
                                if (!$util.isString(message.acceleratorTypeUri))
                                    return "acceleratorTypeUri: string expected";
                            if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                                if (!$util.isInteger(message.acceleratorCount))
                                    return "acceleratorCount: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates an AcceleratorConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.AcceleratorConfig} AcceleratorConfig
                         */
                        AcceleratorConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.AcceleratorConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.AcceleratorConfig();
                            if (object.acceleratorTypeUri != null)
                                message.acceleratorTypeUri = String(object.acceleratorTypeUri);
                            if (object.acceleratorCount != null)
                                message.acceleratorCount = object.acceleratorCount | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AcceleratorConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.AcceleratorConfig} message AcceleratorConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AcceleratorConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.acceleratorTypeUri = "";
                                object.acceleratorCount = 0;
                            }
                            if (message.acceleratorTypeUri != null && message.hasOwnProperty("acceleratorTypeUri"))
                                object.acceleratorTypeUri = message.acceleratorTypeUri;
                            if (message.acceleratorCount != null && message.hasOwnProperty("acceleratorCount"))
                                object.acceleratorCount = message.acceleratorCount;
                            return object;
                        };
    
                        /**
                         * Converts this AcceleratorConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AcceleratorConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AcceleratorConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.AcceleratorConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AcceleratorConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.AcceleratorConfig";
                        };
    
                        return AcceleratorConfig;
                    })();
    
                    v1.DiskConfig = (function() {
    
                        /**
                         * Properties of a DiskConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDiskConfig
                         * @property {string|null} [bootDiskType] DiskConfig bootDiskType
                         * @property {number|null} [bootDiskSizeGb] DiskConfig bootDiskSizeGb
                         * @property {number|null} [numLocalSsds] DiskConfig numLocalSsds
                         * @property {string|null} [localSsdInterface] DiskConfig localSsdInterface
                         */
    
                        /**
                         * Constructs a new DiskConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DiskConfig.
                         * @implements IDiskConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDiskConfig=} [properties] Properties to set
                         */
                        function DiskConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiskConfig bootDiskType.
                         * @member {string} bootDiskType
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @instance
                         */
                        DiskConfig.prototype.bootDiskType = "";
    
                        /**
                         * DiskConfig bootDiskSizeGb.
                         * @member {number} bootDiskSizeGb
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @instance
                         */
                        DiskConfig.prototype.bootDiskSizeGb = 0;
    
                        /**
                         * DiskConfig numLocalSsds.
                         * @member {number} numLocalSsds
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @instance
                         */
                        DiskConfig.prototype.numLocalSsds = 0;
    
                        /**
                         * DiskConfig localSsdInterface.
                         * @member {string} localSsdInterface
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @instance
                         */
                        DiskConfig.prototype.localSsdInterface = "";
    
                        /**
                         * Creates a new DiskConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiskConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DiskConfig} DiskConfig instance
                         */
                        DiskConfig.create = function create(properties) {
                            return new DiskConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DiskConfig message. Does not implicitly {@link google.cloud.dataproc.v1.DiskConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiskConfig} message DiskConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.bootDiskSizeGb != null && Object.hasOwnProperty.call(message, "bootDiskSizeGb"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.bootDiskSizeGb);
                            if (message.numLocalSsds != null && Object.hasOwnProperty.call(message, "numLocalSsds"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.numLocalSsds);
                            if (message.bootDiskType != null && Object.hasOwnProperty.call(message, "bootDiskType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.bootDiskType);
                            if (message.localSsdInterface != null && Object.hasOwnProperty.call(message, "localSsdInterface"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.localSsdInterface);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiskConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DiskConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiskConfig} message DiskConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiskConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiskConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DiskConfig} DiskConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DiskConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 3: {
                                        message.bootDiskType = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.bootDiskSizeGb = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.numLocalSsds = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.localSsdInterface = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiskConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DiskConfig} DiskConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiskConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiskConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiskConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                if (!$util.isString(message.bootDiskType))
                                    return "bootDiskType: string expected";
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                if (!$util.isInteger(message.bootDiskSizeGb))
                                    return "bootDiskSizeGb: integer expected";
                            if (message.numLocalSsds != null && message.hasOwnProperty("numLocalSsds"))
                                if (!$util.isInteger(message.numLocalSsds))
                                    return "numLocalSsds: integer expected";
                            if (message.localSsdInterface != null && message.hasOwnProperty("localSsdInterface"))
                                if (!$util.isString(message.localSsdInterface))
                                    return "localSsdInterface: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiskConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DiskConfig} DiskConfig
                         */
                        DiskConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DiskConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DiskConfig();
                            if (object.bootDiskType != null)
                                message.bootDiskType = String(object.bootDiskType);
                            if (object.bootDiskSizeGb != null)
                                message.bootDiskSizeGb = object.bootDiskSizeGb | 0;
                            if (object.numLocalSsds != null)
                                message.numLocalSsds = object.numLocalSsds | 0;
                            if (object.localSsdInterface != null)
                                message.localSsdInterface = String(object.localSsdInterface);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiskConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.DiskConfig} message DiskConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiskConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.bootDiskSizeGb = 0;
                                object.numLocalSsds = 0;
                                object.bootDiskType = "";
                                object.localSsdInterface = "";
                            }
                            if (message.bootDiskSizeGb != null && message.hasOwnProperty("bootDiskSizeGb"))
                                object.bootDiskSizeGb = message.bootDiskSizeGb;
                            if (message.numLocalSsds != null && message.hasOwnProperty("numLocalSsds"))
                                object.numLocalSsds = message.numLocalSsds;
                            if (message.bootDiskType != null && message.hasOwnProperty("bootDiskType"))
                                object.bootDiskType = message.bootDiskType;
                            if (message.localSsdInterface != null && message.hasOwnProperty("localSsdInterface"))
                                object.localSsdInterface = message.localSsdInterface;
                            return object;
                        };
    
                        /**
                         * Converts this DiskConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiskConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiskConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DiskConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiskConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DiskConfig";
                        };
    
                        return DiskConfig;
                    })();
    
                    v1.AuxiliaryNodeGroup = (function() {
    
                        /**
                         * Properties of an AuxiliaryNodeGroup.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IAuxiliaryNodeGroup
                         * @property {google.cloud.dataproc.v1.INodeGroup|null} [nodeGroup] AuxiliaryNodeGroup nodeGroup
                         * @property {string|null} [nodeGroupId] AuxiliaryNodeGroup nodeGroupId
                         */
    
                        /**
                         * Constructs a new AuxiliaryNodeGroup.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an AuxiliaryNodeGroup.
                         * @implements IAuxiliaryNodeGroup
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IAuxiliaryNodeGroup=} [properties] Properties to set
                         */
                        function AuxiliaryNodeGroup(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * AuxiliaryNodeGroup nodeGroup.
                         * @member {google.cloud.dataproc.v1.INodeGroup|null|undefined} nodeGroup
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @instance
                         */
                        AuxiliaryNodeGroup.prototype.nodeGroup = null;
    
                        /**
                         * AuxiliaryNodeGroup nodeGroupId.
                         * @member {string} nodeGroupId
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @instance
                         */
                        AuxiliaryNodeGroup.prototype.nodeGroupId = "";
    
                        /**
                         * Creates a new AuxiliaryNodeGroup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryNodeGroup=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.AuxiliaryNodeGroup} AuxiliaryNodeGroup instance
                         */
                        AuxiliaryNodeGroup.create = function create(properties) {
                            return new AuxiliaryNodeGroup(properties);
                        };
    
                        /**
                         * Encodes the specified AuxiliaryNodeGroup message. Does not implicitly {@link google.cloud.dataproc.v1.AuxiliaryNodeGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryNodeGroup} message AuxiliaryNodeGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryNodeGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodeGroup != null && Object.hasOwnProperty.call(message, "nodeGroup"))
                                $root.google.cloud.dataproc.v1.NodeGroup.encode(message.nodeGroup, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nodeGroupId != null && Object.hasOwnProperty.call(message, "nodeGroupId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nodeGroupId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified AuxiliaryNodeGroup message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.AuxiliaryNodeGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.IAuxiliaryNodeGroup} message AuxiliaryNodeGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AuxiliaryNodeGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an AuxiliaryNodeGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.AuxiliaryNodeGroup} AuxiliaryNodeGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryNodeGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.nodeGroupId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an AuxiliaryNodeGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.AuxiliaryNodeGroup} AuxiliaryNodeGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AuxiliaryNodeGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an AuxiliaryNodeGroup message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AuxiliaryNodeGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup")) {
                                var error = $root.google.cloud.dataproc.v1.NodeGroup.verify(message.nodeGroup);
                                if (error)
                                    return "nodeGroup." + error;
                            }
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                if (!$util.isString(message.nodeGroupId))
                                    return "nodeGroupId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an AuxiliaryNodeGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.AuxiliaryNodeGroup} AuxiliaryNodeGroup
                         */
                        AuxiliaryNodeGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.AuxiliaryNodeGroup();
                            if (object.nodeGroup != null) {
                                if (typeof object.nodeGroup !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.AuxiliaryNodeGroup.nodeGroup: object expected");
                                message.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.fromObject(object.nodeGroup);
                            }
                            if (object.nodeGroupId != null)
                                message.nodeGroupId = String(object.nodeGroupId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an AuxiliaryNodeGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.AuxiliaryNodeGroup} message AuxiliaryNodeGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AuxiliaryNodeGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.nodeGroup = null;
                                object.nodeGroupId = "";
                            }
                            if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup"))
                                object.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.toObject(message.nodeGroup, options);
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                object.nodeGroupId = message.nodeGroupId;
                            return object;
                        };
    
                        /**
                         * Converts this AuxiliaryNodeGroup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AuxiliaryNodeGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for AuxiliaryNodeGroup
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.AuxiliaryNodeGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AuxiliaryNodeGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.AuxiliaryNodeGroup";
                        };
    
                        return AuxiliaryNodeGroup;
                    })();
    
                    v1.NodeGroup = (function() {
    
                        /**
                         * Properties of a NodeGroup.
                         * @memberof google.cloud.dataproc.v1
                         * @interface INodeGroup
                         * @property {string|null} [name] NodeGroup name
                         * @property {Array.<google.cloud.dataproc.v1.NodeGroup.Role>|null} [roles] NodeGroup roles
                         * @property {google.cloud.dataproc.v1.IInstanceGroupConfig|null} [nodeGroupConfig] NodeGroup nodeGroupConfig
                         * @property {Object.<string,string>|null} [labels] NodeGroup labels
                         */
    
                        /**
                         * Constructs a new NodeGroup.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a NodeGroup.
                         * @implements INodeGroup
                         * @constructor
                         * @param {google.cloud.dataproc.v1.INodeGroup=} [properties] Properties to set
                         */
                        function NodeGroup(properties) {
                            this.roles = [];
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeGroup name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @instance
                         */
                        NodeGroup.prototype.name = "";
    
                        /**
                         * NodeGroup roles.
                         * @member {Array.<google.cloud.dataproc.v1.NodeGroup.Role>} roles
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @instance
                         */
                        NodeGroup.prototype.roles = $util.emptyArray;
    
                        /**
                         * NodeGroup nodeGroupConfig.
                         * @member {google.cloud.dataproc.v1.IInstanceGroupConfig|null|undefined} nodeGroupConfig
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @instance
                         */
                        NodeGroup.prototype.nodeGroupConfig = null;
    
                        /**
                         * NodeGroup labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @instance
                         */
                        NodeGroup.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new NodeGroup instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroup=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.NodeGroup} NodeGroup instance
                         */
                        NodeGroup.create = function create(properties) {
                            return new NodeGroup(properties);
                        };
    
                        /**
                         * Encodes the specified NodeGroup message. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroup.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroup} message NodeGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroup.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.roles != null && message.roles.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.roles.length; ++i)
                                    writer.int32(message.roles[i]);
                                writer.ldelim();
                            }
                            if (message.nodeGroupConfig != null && Object.hasOwnProperty.call(message, "nodeGroupConfig"))
                                $root.google.cloud.dataproc.v1.InstanceGroupConfig.encode(message.nodeGroupConfig, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeGroup message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroup.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroup} message NodeGroup message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroup.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeGroup message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.NodeGroup} NodeGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroup.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.NodeGroup(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.roles && message.roles.length))
                                            message.roles = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.roles.push(reader.int32());
                                        } else
                                            message.roles.push(reader.int32());
                                        break;
                                    }
                                case 3: {
                                        message.nodeGroupConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeGroup message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.NodeGroup} NodeGroup
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroup.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeGroup message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeGroup.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.roles != null && message.hasOwnProperty("roles")) {
                                if (!Array.isArray(message.roles))
                                    return "roles: array expected";
                                for (var i = 0; i < message.roles.length; ++i)
                                    switch (message.roles[i]) {
                                    default:
                                        return "roles: enum value[] expected";
                                    case 0:
                                    case 1:
                                        break;
                                    }
                            }
                            if (message.nodeGroupConfig != null && message.hasOwnProperty("nodeGroupConfig")) {
                                var error = $root.google.cloud.dataproc.v1.InstanceGroupConfig.verify(message.nodeGroupConfig);
                                if (error)
                                    return "nodeGroupConfig." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NodeGroup message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.NodeGroup} NodeGroup
                         */
                        NodeGroup.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.NodeGroup)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.NodeGroup();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.roles) {
                                if (!Array.isArray(object.roles))
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroup.roles: array expected");
                                message.roles = [];
                                for (var i = 0; i < object.roles.length; ++i)
                                    switch (object.roles[i]) {
                                    default:
                                        if (typeof object.roles[i] === "number") {
                                            message.roles[i] = object.roles[i];
                                            break;
                                        }
                                    case "ROLE_UNSPECIFIED":
                                    case 0:
                                        message.roles[i] = 0;
                                        break;
                                    case "DRIVER":
                                    case 1:
                                        message.roles[i] = 1;
                                        break;
                                    }
                            }
                            if (object.nodeGroupConfig != null) {
                                if (typeof object.nodeGroupConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroup.nodeGroupConfig: object expected");
                                message.nodeGroupConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.fromObject(object.nodeGroupConfig);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroup.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeGroup message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {google.cloud.dataproc.v1.NodeGroup} message NodeGroup
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeGroup.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.roles = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.nodeGroupConfig = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.roles && message.roles.length) {
                                object.roles = [];
                                for (var j = 0; j < message.roles.length; ++j)
                                    object.roles[j] = options.enums === String ? $root.google.cloud.dataproc.v1.NodeGroup.Role[message.roles[j]] === undefined ? message.roles[j] : $root.google.cloud.dataproc.v1.NodeGroup.Role[message.roles[j]] : message.roles[j];
                            }
                            if (message.nodeGroupConfig != null && message.hasOwnProperty("nodeGroupConfig"))
                                object.nodeGroupConfig = $root.google.cloud.dataproc.v1.InstanceGroupConfig.toObject(message.nodeGroupConfig, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NodeGroup to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeGroup.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeGroup
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.NodeGroup
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeGroup.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.NodeGroup";
                        };
    
                        /**
                         * Role enum.
                         * @name google.cloud.dataproc.v1.NodeGroup.Role
                         * @enum {number}
                         * @property {number} ROLE_UNSPECIFIED=0 ROLE_UNSPECIFIED value
                         * @property {number} DRIVER=1 DRIVER value
                         */
                        NodeGroup.Role = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ROLE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "DRIVER"] = 1;
                            return values;
                        })();
    
                        return NodeGroup;
                    })();
    
                    v1.NodeInitializationAction = (function() {
    
                        /**
                         * Properties of a NodeInitializationAction.
                         * @memberof google.cloud.dataproc.v1
                         * @interface INodeInitializationAction
                         * @property {string|null} [executableFile] NodeInitializationAction executableFile
                         * @property {google.protobuf.IDuration|null} [executionTimeout] NodeInitializationAction executionTimeout
                         */
    
                        /**
                         * Constructs a new NodeInitializationAction.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a NodeInitializationAction.
                         * @implements INodeInitializationAction
                         * @constructor
                         * @param {google.cloud.dataproc.v1.INodeInitializationAction=} [properties] Properties to set
                         */
                        function NodeInitializationAction(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeInitializationAction executableFile.
                         * @member {string} executableFile
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @instance
                         */
                        NodeInitializationAction.prototype.executableFile = "";
    
                        /**
                         * NodeInitializationAction executionTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} executionTimeout
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @instance
                         */
                        NodeInitializationAction.prototype.executionTimeout = null;
    
                        /**
                         * Creates a new NodeInitializationAction instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeInitializationAction=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.NodeInitializationAction} NodeInitializationAction instance
                         */
                        NodeInitializationAction.create = function create(properties) {
                            return new NodeInitializationAction(properties);
                        };
    
                        /**
                         * Encodes the specified NodeInitializationAction message. Does not implicitly {@link google.cloud.dataproc.v1.NodeInitializationAction.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeInitializationAction} message NodeInitializationAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeInitializationAction.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.executableFile != null && Object.hasOwnProperty.call(message, "executableFile"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.executableFile);
                            if (message.executionTimeout != null && Object.hasOwnProperty.call(message, "executionTimeout"))
                                $root.google.protobuf.Duration.encode(message.executionTimeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeInitializationAction message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.NodeInitializationAction.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeInitializationAction} message NodeInitializationAction message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeInitializationAction.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeInitializationAction message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.NodeInitializationAction} NodeInitializationAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeInitializationAction.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.NodeInitializationAction();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.executableFile = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.executionTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeInitializationAction message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.NodeInitializationAction} NodeInitializationAction
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeInitializationAction.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeInitializationAction message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeInitializationAction.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.executableFile != null && message.hasOwnProperty("executableFile"))
                                if (!$util.isString(message.executableFile))
                                    return "executableFile: string expected";
                            if (message.executionTimeout != null && message.hasOwnProperty("executionTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.executionTimeout);
                                if (error)
                                    return "executionTimeout." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NodeInitializationAction message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.NodeInitializationAction} NodeInitializationAction
                         */
                        NodeInitializationAction.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.NodeInitializationAction)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.NodeInitializationAction();
                            if (object.executableFile != null)
                                message.executableFile = String(object.executableFile);
                            if (object.executionTimeout != null) {
                                if (typeof object.executionTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.NodeInitializationAction.executionTimeout: object expected");
                                message.executionTimeout = $root.google.protobuf.Duration.fromObject(object.executionTimeout);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeInitializationAction message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {google.cloud.dataproc.v1.NodeInitializationAction} message NodeInitializationAction
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeInitializationAction.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.executableFile = "";
                                object.executionTimeout = null;
                            }
                            if (message.executableFile != null && message.hasOwnProperty("executableFile"))
                                object.executableFile = message.executableFile;
                            if (message.executionTimeout != null && message.hasOwnProperty("executionTimeout"))
                                object.executionTimeout = $root.google.protobuf.Duration.toObject(message.executionTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this NodeInitializationAction to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeInitializationAction.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeInitializationAction
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.NodeInitializationAction
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeInitializationAction.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.NodeInitializationAction";
                        };
    
                        return NodeInitializationAction;
                    })();
    
                    v1.ClusterStatus = (function() {
    
                        /**
                         * Properties of a ClusterStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterStatus
                         * @property {google.cloud.dataproc.v1.ClusterStatus.State|null} [state] ClusterStatus state
                         * @property {string|null} [detail] ClusterStatus detail
                         * @property {google.protobuf.ITimestamp|null} [stateStartTime] ClusterStatus stateStartTime
                         * @property {google.cloud.dataproc.v1.ClusterStatus.Substate|null} [substate] ClusterStatus substate
                         */
    
                        /**
                         * Constructs a new ClusterStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterStatus.
                         * @implements IClusterStatus
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterStatus=} [properties] Properties to set
                         */
                        function ClusterStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterStatus state.
                         * @member {google.cloud.dataproc.v1.ClusterStatus.State} state
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @instance
                         */
                        ClusterStatus.prototype.state = 0;
    
                        /**
                         * ClusterStatus detail.
                         * @member {string} detail
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @instance
                         */
                        ClusterStatus.prototype.detail = "";
    
                        /**
                         * ClusterStatus stateStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} stateStartTime
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @instance
                         */
                        ClusterStatus.prototype.stateStartTime = null;
    
                        /**
                         * ClusterStatus substate.
                         * @member {google.cloud.dataproc.v1.ClusterStatus.Substate} substate
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @instance
                         */
                        ClusterStatus.prototype.substate = 0;
    
                        /**
                         * Creates a new ClusterStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterStatus=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterStatus} ClusterStatus instance
                         */
                        ClusterStatus.create = function create(properties) {
                            return new ClusterStatus(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterStatus message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterStatus} message ClusterStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.detail != null && Object.hasOwnProperty.call(message, "detail"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.detail);
                            if (message.stateStartTime != null && Object.hasOwnProperty.call(message, "stateStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.stateStartTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.substate != null && Object.hasOwnProperty.call(message, "substate"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.substate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterStatus message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterStatus} message ClusterStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterStatus} ClusterStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.detail = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.stateStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.substate = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterStatus} ClusterStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterStatus message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 9:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.detail != null && message.hasOwnProperty("detail"))
                                if (!$util.isString(message.detail))
                                    return "detail: string expected";
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.stateStartTime);
                                if (error)
                                    return "stateStartTime." + error;
                            }
                            if (message.substate != null && message.hasOwnProperty("substate"))
                                switch (message.substate) {
                                default:
                                    return "substate: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterStatus} ClusterStatus
                         */
                        ClusterStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterStatus)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterStatus();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.state = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "ERROR":
                            case 3:
                                message.state = 3;
                                break;
                            case "ERROR_DUE_TO_UPDATE":
                            case 9:
                                message.state = 9;
                                break;
                            case "DELETING":
                            case 4:
                                message.state = 4;
                                break;
                            case "UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            case "STOPPING":
                            case 6:
                                message.state = 6;
                                break;
                            case "STOPPED":
                            case 7:
                                message.state = 7;
                                break;
                            case "STARTING":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.detail != null)
                                message.detail = String(object.detail);
                            if (object.stateStartTime != null) {
                                if (typeof object.stateStartTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterStatus.stateStartTime: object expected");
                                message.stateStartTime = $root.google.protobuf.Timestamp.fromObject(object.stateStartTime);
                            }
                            switch (object.substate) {
                            default:
                                if (typeof object.substate === "number") {
                                    message.substate = object.substate;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.substate = 0;
                                break;
                            case "UNHEALTHY":
                            case 1:
                                message.substate = 1;
                                break;
                            case "STALE_STATUS":
                            case 2:
                                message.substate = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterStatus} message ClusterStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "UNKNOWN" : 0;
                                object.detail = "";
                                object.stateStartTime = null;
                                object.substate = options.enums === String ? "UNSPECIFIED" : 0;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.ClusterStatus.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.ClusterStatus.State[message.state] : message.state;
                            if (message.detail != null && message.hasOwnProperty("detail"))
                                object.detail = message.detail;
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime"))
                                object.stateStartTime = $root.google.protobuf.Timestamp.toObject(message.stateStartTime, options);
                            if (message.substate != null && message.hasOwnProperty("substate"))
                                object.substate = options.enums === String ? $root.google.cloud.dataproc.v1.ClusterStatus.Substate[message.substate] === undefined ? message.substate : $root.google.cloud.dataproc.v1.ClusterStatus.Substate[message.substate] : message.substate;
                            return object;
                        };
    
                        /**
                         * Converts this ClusterStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterStatus";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.ClusterStatus.State
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} ERROR=3 ERROR value
                         * @property {number} ERROR_DUE_TO_UPDATE=9 ERROR_DUE_TO_UPDATE value
                         * @property {number} DELETING=4 DELETING value
                         * @property {number} UPDATING=5 UPDATING value
                         * @property {number} STOPPING=6 STOPPING value
                         * @property {number} STOPPED=7 STOPPED value
                         * @property {number} STARTING=8 STARTING value
                         */
                        ClusterStatus.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            values[valuesById[9] = "ERROR_DUE_TO_UPDATE"] = 9;
                            values[valuesById[4] = "DELETING"] = 4;
                            values[valuesById[5] = "UPDATING"] = 5;
                            values[valuesById[6] = "STOPPING"] = 6;
                            values[valuesById[7] = "STOPPED"] = 7;
                            values[valuesById[8] = "STARTING"] = 8;
                            return values;
                        })();
    
                        /**
                         * Substate enum.
                         * @name google.cloud.dataproc.v1.ClusterStatus.Substate
                         * @enum {number}
                         * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                         * @property {number} UNHEALTHY=1 UNHEALTHY value
                         * @property {number} STALE_STATUS=2 STALE_STATUS value
                         */
                        ClusterStatus.Substate = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED"] = 0;
                            values[valuesById[1] = "UNHEALTHY"] = 1;
                            values[valuesById[2] = "STALE_STATUS"] = 2;
                            return values;
                        })();
    
                        return ClusterStatus;
                    })();
    
                    v1.SecurityConfig = (function() {
    
                        /**
                         * Properties of a SecurityConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISecurityConfig
                         * @property {google.cloud.dataproc.v1.IKerberosConfig|null} [kerberosConfig] SecurityConfig kerberosConfig
                         * @property {google.cloud.dataproc.v1.IIdentityConfig|null} [identityConfig] SecurityConfig identityConfig
                         */
    
                        /**
                         * Constructs a new SecurityConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SecurityConfig.
                         * @implements ISecurityConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISecurityConfig=} [properties] Properties to set
                         */
                        function SecurityConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SecurityConfig kerberosConfig.
                         * @member {google.cloud.dataproc.v1.IKerberosConfig|null|undefined} kerberosConfig
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @instance
                         */
                        SecurityConfig.prototype.kerberosConfig = null;
    
                        /**
                         * SecurityConfig identityConfig.
                         * @member {google.cloud.dataproc.v1.IIdentityConfig|null|undefined} identityConfig
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @instance
                         */
                        SecurityConfig.prototype.identityConfig = null;
    
                        /**
                         * Creates a new SecurityConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISecurityConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SecurityConfig} SecurityConfig instance
                         */
                        SecurityConfig.create = function create(properties) {
                            return new SecurityConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SecurityConfig message. Does not implicitly {@link google.cloud.dataproc.v1.SecurityConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISecurityConfig} message SecurityConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecurityConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kerberosConfig != null && Object.hasOwnProperty.call(message, "kerberosConfig"))
                                $root.google.cloud.dataproc.v1.KerberosConfig.encode(message.kerberosConfig, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.identityConfig != null && Object.hasOwnProperty.call(message, "identityConfig"))
                                $root.google.cloud.dataproc.v1.IdentityConfig.encode(message.identityConfig, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SecurityConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SecurityConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISecurityConfig} message SecurityConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SecurityConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SecurityConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SecurityConfig} SecurityConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecurityConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SecurityConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.kerberosConfig = $root.google.cloud.dataproc.v1.KerberosConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.identityConfig = $root.google.cloud.dataproc.v1.IdentityConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SecurityConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SecurityConfig} SecurityConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SecurityConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SecurityConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SecurityConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig")) {
                                var error = $root.google.cloud.dataproc.v1.KerberosConfig.verify(message.kerberosConfig);
                                if (error)
                                    return "kerberosConfig." + error;
                            }
                            if (message.identityConfig != null && message.hasOwnProperty("identityConfig")) {
                                var error = $root.google.cloud.dataproc.v1.IdentityConfig.verify(message.identityConfig);
                                if (error)
                                    return "identityConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SecurityConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SecurityConfig} SecurityConfig
                         */
                        SecurityConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SecurityConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SecurityConfig();
                            if (object.kerberosConfig != null) {
                                if (typeof object.kerberosConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SecurityConfig.kerberosConfig: object expected");
                                message.kerberosConfig = $root.google.cloud.dataproc.v1.KerberosConfig.fromObject(object.kerberosConfig);
                            }
                            if (object.identityConfig != null) {
                                if (typeof object.identityConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SecurityConfig.identityConfig: object expected");
                                message.identityConfig = $root.google.cloud.dataproc.v1.IdentityConfig.fromObject(object.identityConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SecurityConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.SecurityConfig} message SecurityConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SecurityConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kerberosConfig = null;
                                object.identityConfig = null;
                            }
                            if (message.kerberosConfig != null && message.hasOwnProperty("kerberosConfig"))
                                object.kerberosConfig = $root.google.cloud.dataproc.v1.KerberosConfig.toObject(message.kerberosConfig, options);
                            if (message.identityConfig != null && message.hasOwnProperty("identityConfig"))
                                object.identityConfig = $root.google.cloud.dataproc.v1.IdentityConfig.toObject(message.identityConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this SecurityConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SecurityConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SecurityConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SecurityConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SecurityConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SecurityConfig";
                        };
    
                        return SecurityConfig;
                    })();
    
                    v1.KerberosConfig = (function() {
    
                        /**
                         * Properties of a KerberosConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IKerberosConfig
                         * @property {boolean|null} [enableKerberos] KerberosConfig enableKerberos
                         * @property {string|null} [rootPrincipalPasswordUri] KerberosConfig rootPrincipalPasswordUri
                         * @property {string|null} [kmsKeyUri] KerberosConfig kmsKeyUri
                         * @property {string|null} [keystoreUri] KerberosConfig keystoreUri
                         * @property {string|null} [truststoreUri] KerberosConfig truststoreUri
                         * @property {string|null} [keystorePasswordUri] KerberosConfig keystorePasswordUri
                         * @property {string|null} [keyPasswordUri] KerberosConfig keyPasswordUri
                         * @property {string|null} [truststorePasswordUri] KerberosConfig truststorePasswordUri
                         * @property {string|null} [crossRealmTrustRealm] KerberosConfig crossRealmTrustRealm
                         * @property {string|null} [crossRealmTrustKdc] KerberosConfig crossRealmTrustKdc
                         * @property {string|null} [crossRealmTrustAdminServer] KerberosConfig crossRealmTrustAdminServer
                         * @property {string|null} [crossRealmTrustSharedPasswordUri] KerberosConfig crossRealmTrustSharedPasswordUri
                         * @property {string|null} [kdcDbKeyUri] KerberosConfig kdcDbKeyUri
                         * @property {number|null} [tgtLifetimeHours] KerberosConfig tgtLifetimeHours
                         * @property {string|null} [realm] KerberosConfig realm
                         */
    
                        /**
                         * Constructs a new KerberosConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a KerberosConfig.
                         * @implements IKerberosConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IKerberosConfig=} [properties] Properties to set
                         */
                        function KerberosConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KerberosConfig enableKerberos.
                         * @member {boolean} enableKerberos
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.enableKerberos = false;
    
                        /**
                         * KerberosConfig rootPrincipalPasswordUri.
                         * @member {string} rootPrincipalPasswordUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.rootPrincipalPasswordUri = "";
    
                        /**
                         * KerberosConfig kmsKeyUri.
                         * @member {string} kmsKeyUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.kmsKeyUri = "";
    
                        /**
                         * KerberosConfig keystoreUri.
                         * @member {string} keystoreUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keystoreUri = "";
    
                        /**
                         * KerberosConfig truststoreUri.
                         * @member {string} truststoreUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.truststoreUri = "";
    
                        /**
                         * KerberosConfig keystorePasswordUri.
                         * @member {string} keystorePasswordUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keystorePasswordUri = "";
    
                        /**
                         * KerberosConfig keyPasswordUri.
                         * @member {string} keyPasswordUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.keyPasswordUri = "";
    
                        /**
                         * KerberosConfig truststorePasswordUri.
                         * @member {string} truststorePasswordUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.truststorePasswordUri = "";
    
                        /**
                         * KerberosConfig crossRealmTrustRealm.
                         * @member {string} crossRealmTrustRealm
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.crossRealmTrustRealm = "";
    
                        /**
                         * KerberosConfig crossRealmTrustKdc.
                         * @member {string} crossRealmTrustKdc
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.crossRealmTrustKdc = "";
    
                        /**
                         * KerberosConfig crossRealmTrustAdminServer.
                         * @member {string} crossRealmTrustAdminServer
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.crossRealmTrustAdminServer = "";
    
                        /**
                         * KerberosConfig crossRealmTrustSharedPasswordUri.
                         * @member {string} crossRealmTrustSharedPasswordUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.crossRealmTrustSharedPasswordUri = "";
    
                        /**
                         * KerberosConfig kdcDbKeyUri.
                         * @member {string} kdcDbKeyUri
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.kdcDbKeyUri = "";
    
                        /**
                         * KerberosConfig tgtLifetimeHours.
                         * @member {number} tgtLifetimeHours
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.tgtLifetimeHours = 0;
    
                        /**
                         * KerberosConfig realm.
                         * @member {string} realm
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         */
                        KerberosConfig.prototype.realm = "";
    
                        /**
                         * Creates a new KerberosConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKerberosConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.KerberosConfig} KerberosConfig instance
                         */
                        KerberosConfig.create = function create(properties) {
                            return new KerberosConfig(properties);
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message. Does not implicitly {@link google.cloud.dataproc.v1.KerberosConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.enableKerberos != null && Object.hasOwnProperty.call(message, "enableKerberos"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enableKerberos);
                            if (message.rootPrincipalPasswordUri != null && Object.hasOwnProperty.call(message, "rootPrincipalPasswordUri"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.rootPrincipalPasswordUri);
                            if (message.kmsKeyUri != null && Object.hasOwnProperty.call(message, "kmsKeyUri"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.kmsKeyUri);
                            if (message.keystoreUri != null && Object.hasOwnProperty.call(message, "keystoreUri"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.keystoreUri);
                            if (message.truststoreUri != null && Object.hasOwnProperty.call(message, "truststoreUri"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.truststoreUri);
                            if (message.keystorePasswordUri != null && Object.hasOwnProperty.call(message, "keystorePasswordUri"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.keystorePasswordUri);
                            if (message.keyPasswordUri != null && Object.hasOwnProperty.call(message, "keyPasswordUri"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.keyPasswordUri);
                            if (message.truststorePasswordUri != null && Object.hasOwnProperty.call(message, "truststorePasswordUri"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.truststorePasswordUri);
                            if (message.crossRealmTrustRealm != null && Object.hasOwnProperty.call(message, "crossRealmTrustRealm"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.crossRealmTrustRealm);
                            if (message.crossRealmTrustKdc != null && Object.hasOwnProperty.call(message, "crossRealmTrustKdc"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.crossRealmTrustKdc);
                            if (message.crossRealmTrustAdminServer != null && Object.hasOwnProperty.call(message, "crossRealmTrustAdminServer"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.crossRealmTrustAdminServer);
                            if (message.crossRealmTrustSharedPasswordUri != null && Object.hasOwnProperty.call(message, "crossRealmTrustSharedPasswordUri"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.crossRealmTrustSharedPasswordUri);
                            if (message.kdcDbKeyUri != null && Object.hasOwnProperty.call(message, "kdcDbKeyUri"))
                                writer.uint32(/* id 13, wireType 2 =*/106).string(message.kdcDbKeyUri);
                            if (message.tgtLifetimeHours != null && Object.hasOwnProperty.call(message, "tgtLifetimeHours"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.tgtLifetimeHours);
                            if (message.realm != null && Object.hasOwnProperty.call(message, "realm"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.realm);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KerberosConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.KerberosConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IKerberosConfig} message KerberosConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KerberosConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.KerberosConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.enableKerberos = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.rootPrincipalPasswordUri = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.kmsKeyUri = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.keystoreUri = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.truststoreUri = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.keystorePasswordUri = reader.string();
                                        break;
                                    }
                                case 7: {
                                        message.keyPasswordUri = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.truststorePasswordUri = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.crossRealmTrustRealm = reader.string();
                                        break;
                                    }
                                case 10: {
                                        message.crossRealmTrustKdc = reader.string();
                                        break;
                                    }
                                case 11: {
                                        message.crossRealmTrustAdminServer = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.crossRealmTrustSharedPasswordUri = reader.string();
                                        break;
                                    }
                                case 13: {
                                        message.kdcDbKeyUri = reader.string();
                                        break;
                                    }
                                case 14: {
                                        message.tgtLifetimeHours = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        message.realm = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KerberosConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.KerberosConfig} KerberosConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KerberosConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KerberosConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KerberosConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.enableKerberos != null && message.hasOwnProperty("enableKerberos"))
                                if (typeof message.enableKerberos !== "boolean")
                                    return "enableKerberos: boolean expected";
                            if (message.rootPrincipalPasswordUri != null && message.hasOwnProperty("rootPrincipalPasswordUri"))
                                if (!$util.isString(message.rootPrincipalPasswordUri))
                                    return "rootPrincipalPasswordUri: string expected";
                            if (message.kmsKeyUri != null && message.hasOwnProperty("kmsKeyUri"))
                                if (!$util.isString(message.kmsKeyUri))
                                    return "kmsKeyUri: string expected";
                            if (message.keystoreUri != null && message.hasOwnProperty("keystoreUri"))
                                if (!$util.isString(message.keystoreUri))
                                    return "keystoreUri: string expected";
                            if (message.truststoreUri != null && message.hasOwnProperty("truststoreUri"))
                                if (!$util.isString(message.truststoreUri))
                                    return "truststoreUri: string expected";
                            if (message.keystorePasswordUri != null && message.hasOwnProperty("keystorePasswordUri"))
                                if (!$util.isString(message.keystorePasswordUri))
                                    return "keystorePasswordUri: string expected";
                            if (message.keyPasswordUri != null && message.hasOwnProperty("keyPasswordUri"))
                                if (!$util.isString(message.keyPasswordUri))
                                    return "keyPasswordUri: string expected";
                            if (message.truststorePasswordUri != null && message.hasOwnProperty("truststorePasswordUri"))
                                if (!$util.isString(message.truststorePasswordUri))
                                    return "truststorePasswordUri: string expected";
                            if (message.crossRealmTrustRealm != null && message.hasOwnProperty("crossRealmTrustRealm"))
                                if (!$util.isString(message.crossRealmTrustRealm))
                                    return "crossRealmTrustRealm: string expected";
                            if (message.crossRealmTrustKdc != null && message.hasOwnProperty("crossRealmTrustKdc"))
                                if (!$util.isString(message.crossRealmTrustKdc))
                                    return "crossRealmTrustKdc: string expected";
                            if (message.crossRealmTrustAdminServer != null && message.hasOwnProperty("crossRealmTrustAdminServer"))
                                if (!$util.isString(message.crossRealmTrustAdminServer))
                                    return "crossRealmTrustAdminServer: string expected";
                            if (message.crossRealmTrustSharedPasswordUri != null && message.hasOwnProperty("crossRealmTrustSharedPasswordUri"))
                                if (!$util.isString(message.crossRealmTrustSharedPasswordUri))
                                    return "crossRealmTrustSharedPasswordUri: string expected";
                            if (message.kdcDbKeyUri != null && message.hasOwnProperty("kdcDbKeyUri"))
                                if (!$util.isString(message.kdcDbKeyUri))
                                    return "kdcDbKeyUri: string expected";
                            if (message.tgtLifetimeHours != null && message.hasOwnProperty("tgtLifetimeHours"))
                                if (!$util.isInteger(message.tgtLifetimeHours))
                                    return "tgtLifetimeHours: integer expected";
                            if (message.realm != null && message.hasOwnProperty("realm"))
                                if (!$util.isString(message.realm))
                                    return "realm: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a KerberosConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.KerberosConfig} KerberosConfig
                         */
                        KerberosConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.KerberosConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.KerberosConfig();
                            if (object.enableKerberos != null)
                                message.enableKerberos = Boolean(object.enableKerberos);
                            if (object.rootPrincipalPasswordUri != null)
                                message.rootPrincipalPasswordUri = String(object.rootPrincipalPasswordUri);
                            if (object.kmsKeyUri != null)
                                message.kmsKeyUri = String(object.kmsKeyUri);
                            if (object.keystoreUri != null)
                                message.keystoreUri = String(object.keystoreUri);
                            if (object.truststoreUri != null)
                                message.truststoreUri = String(object.truststoreUri);
                            if (object.keystorePasswordUri != null)
                                message.keystorePasswordUri = String(object.keystorePasswordUri);
                            if (object.keyPasswordUri != null)
                                message.keyPasswordUri = String(object.keyPasswordUri);
                            if (object.truststorePasswordUri != null)
                                message.truststorePasswordUri = String(object.truststorePasswordUri);
                            if (object.crossRealmTrustRealm != null)
                                message.crossRealmTrustRealm = String(object.crossRealmTrustRealm);
                            if (object.crossRealmTrustKdc != null)
                                message.crossRealmTrustKdc = String(object.crossRealmTrustKdc);
                            if (object.crossRealmTrustAdminServer != null)
                                message.crossRealmTrustAdminServer = String(object.crossRealmTrustAdminServer);
                            if (object.crossRealmTrustSharedPasswordUri != null)
                                message.crossRealmTrustSharedPasswordUri = String(object.crossRealmTrustSharedPasswordUri);
                            if (object.kdcDbKeyUri != null)
                                message.kdcDbKeyUri = String(object.kdcDbKeyUri);
                            if (object.tgtLifetimeHours != null)
                                message.tgtLifetimeHours = object.tgtLifetimeHours | 0;
                            if (object.realm != null)
                                message.realm = String(object.realm);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KerberosConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.KerberosConfig} message KerberosConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KerberosConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.enableKerberos = false;
                                object.rootPrincipalPasswordUri = "";
                                object.kmsKeyUri = "";
                                object.keystoreUri = "";
                                object.truststoreUri = "";
                                object.keystorePasswordUri = "";
                                object.keyPasswordUri = "";
                                object.truststorePasswordUri = "";
                                object.crossRealmTrustRealm = "";
                                object.crossRealmTrustKdc = "";
                                object.crossRealmTrustAdminServer = "";
                                object.crossRealmTrustSharedPasswordUri = "";
                                object.kdcDbKeyUri = "";
                                object.tgtLifetimeHours = 0;
                                object.realm = "";
                            }
                            if (message.enableKerberos != null && message.hasOwnProperty("enableKerberos"))
                                object.enableKerberos = message.enableKerberos;
                            if (message.rootPrincipalPasswordUri != null && message.hasOwnProperty("rootPrincipalPasswordUri"))
                                object.rootPrincipalPasswordUri = message.rootPrincipalPasswordUri;
                            if (message.kmsKeyUri != null && message.hasOwnProperty("kmsKeyUri"))
                                object.kmsKeyUri = message.kmsKeyUri;
                            if (message.keystoreUri != null && message.hasOwnProperty("keystoreUri"))
                                object.keystoreUri = message.keystoreUri;
                            if (message.truststoreUri != null && message.hasOwnProperty("truststoreUri"))
                                object.truststoreUri = message.truststoreUri;
                            if (message.keystorePasswordUri != null && message.hasOwnProperty("keystorePasswordUri"))
                                object.keystorePasswordUri = message.keystorePasswordUri;
                            if (message.keyPasswordUri != null && message.hasOwnProperty("keyPasswordUri"))
                                object.keyPasswordUri = message.keyPasswordUri;
                            if (message.truststorePasswordUri != null && message.hasOwnProperty("truststorePasswordUri"))
                                object.truststorePasswordUri = message.truststorePasswordUri;
                            if (message.crossRealmTrustRealm != null && message.hasOwnProperty("crossRealmTrustRealm"))
                                object.crossRealmTrustRealm = message.crossRealmTrustRealm;
                            if (message.crossRealmTrustKdc != null && message.hasOwnProperty("crossRealmTrustKdc"))
                                object.crossRealmTrustKdc = message.crossRealmTrustKdc;
                            if (message.crossRealmTrustAdminServer != null && message.hasOwnProperty("crossRealmTrustAdminServer"))
                                object.crossRealmTrustAdminServer = message.crossRealmTrustAdminServer;
                            if (message.crossRealmTrustSharedPasswordUri != null && message.hasOwnProperty("crossRealmTrustSharedPasswordUri"))
                                object.crossRealmTrustSharedPasswordUri = message.crossRealmTrustSharedPasswordUri;
                            if (message.kdcDbKeyUri != null && message.hasOwnProperty("kdcDbKeyUri"))
                                object.kdcDbKeyUri = message.kdcDbKeyUri;
                            if (message.tgtLifetimeHours != null && message.hasOwnProperty("tgtLifetimeHours"))
                                object.tgtLifetimeHours = message.tgtLifetimeHours;
                            if (message.realm != null && message.hasOwnProperty("realm"))
                                object.realm = message.realm;
                            return object;
                        };
    
                        /**
                         * Converts this KerberosConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KerberosConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for KerberosConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.KerberosConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        KerberosConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.KerberosConfig";
                        };
    
                        return KerberosConfig;
                    })();
    
                    v1.IdentityConfig = (function() {
    
                        /**
                         * Properties of an IdentityConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IIdentityConfig
                         * @property {Object.<string,string>|null} [userServiceAccountMapping] IdentityConfig userServiceAccountMapping
                         */
    
                        /**
                         * Constructs a new IdentityConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an IdentityConfig.
                         * @implements IIdentityConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IIdentityConfig=} [properties] Properties to set
                         */
                        function IdentityConfig(properties) {
                            this.userServiceAccountMapping = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * IdentityConfig userServiceAccountMapping.
                         * @member {Object.<string,string>} userServiceAccountMapping
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @instance
                         */
                        IdentityConfig.prototype.userServiceAccountMapping = $util.emptyObject;
    
                        /**
                         * Creates a new IdentityConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IIdentityConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.IdentityConfig} IdentityConfig instance
                         */
                        IdentityConfig.create = function create(properties) {
                            return new IdentityConfig(properties);
                        };
    
                        /**
                         * Encodes the specified IdentityConfig message. Does not implicitly {@link google.cloud.dataproc.v1.IdentityConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IIdentityConfig} message IdentityConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IdentityConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.userServiceAccountMapping != null && Object.hasOwnProperty.call(message, "userServiceAccountMapping"))
                                for (var keys = Object.keys(message.userServiceAccountMapping), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.userServiceAccountMapping[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified IdentityConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.IdentityConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IIdentityConfig} message IdentityConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        IdentityConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an IdentityConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.IdentityConfig} IdentityConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IdentityConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.IdentityConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.userServiceAccountMapping === $util.emptyObject)
                                            message.userServiceAccountMapping = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.userServiceAccountMapping[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an IdentityConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.IdentityConfig} IdentityConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        IdentityConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an IdentityConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        IdentityConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.userServiceAccountMapping != null && message.hasOwnProperty("userServiceAccountMapping")) {
                                if (!$util.isObject(message.userServiceAccountMapping))
                                    return "userServiceAccountMapping: object expected";
                                var key = Object.keys(message.userServiceAccountMapping);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.userServiceAccountMapping[key[i]]))
                                        return "userServiceAccountMapping: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an IdentityConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.IdentityConfig} IdentityConfig
                         */
                        IdentityConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.IdentityConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.IdentityConfig();
                            if (object.userServiceAccountMapping) {
                                if (typeof object.userServiceAccountMapping !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.IdentityConfig.userServiceAccountMapping: object expected");
                                message.userServiceAccountMapping = {};
                                for (var keys = Object.keys(object.userServiceAccountMapping), i = 0; i < keys.length; ++i)
                                    message.userServiceAccountMapping[keys[i]] = String(object.userServiceAccountMapping[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an IdentityConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IdentityConfig} message IdentityConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        IdentityConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.userServiceAccountMapping = {};
                            var keys2;
                            if (message.userServiceAccountMapping && (keys2 = Object.keys(message.userServiceAccountMapping)).length) {
                                object.userServiceAccountMapping = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.userServiceAccountMapping[keys2[j]] = message.userServiceAccountMapping[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this IdentityConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        IdentityConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for IdentityConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.IdentityConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        IdentityConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.IdentityConfig";
                        };
    
                        return IdentityConfig;
                    })();
    
                    v1.SoftwareConfig = (function() {
    
                        /**
                         * Properties of a SoftwareConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISoftwareConfig
                         * @property {string|null} [imageVersion] SoftwareConfig imageVersion
                         * @property {Object.<string,string>|null} [properties] SoftwareConfig properties
                         * @property {Array.<google.cloud.dataproc.v1.Component>|null} [optionalComponents] SoftwareConfig optionalComponents
                         */
    
                        /**
                         * Constructs a new SoftwareConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SoftwareConfig.
                         * @implements ISoftwareConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISoftwareConfig=} [properties] Properties to set
                         */
                        function SoftwareConfig(properties) {
                            this.properties = {};
                            this.optionalComponents = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SoftwareConfig imageVersion.
                         * @member {string} imageVersion
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @instance
                         */
                        SoftwareConfig.prototype.imageVersion = "";
    
                        /**
                         * SoftwareConfig properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @instance
                         */
                        SoftwareConfig.prototype.properties = $util.emptyObject;
    
                        /**
                         * SoftwareConfig optionalComponents.
                         * @member {Array.<google.cloud.dataproc.v1.Component>} optionalComponents
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @instance
                         */
                        SoftwareConfig.prototype.optionalComponents = $util.emptyArray;
    
                        /**
                         * Creates a new SoftwareConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISoftwareConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SoftwareConfig} SoftwareConfig instance
                         */
                        SoftwareConfig.create = function create(properties) {
                            return new SoftwareConfig(properties);
                        };
    
                        /**
                         * Encodes the specified SoftwareConfig message. Does not implicitly {@link google.cloud.dataproc.v1.SoftwareConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISoftwareConfig} message SoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SoftwareConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.imageVersion != null && Object.hasOwnProperty.call(message, "imageVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.imageVersion);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.optionalComponents != null && message.optionalComponents.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.optionalComponents.length; ++i)
                                    writer.int32(message.optionalComponents[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SoftwareConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SoftwareConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ISoftwareConfig} message SoftwareConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SoftwareConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SoftwareConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SoftwareConfig} SoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SoftwareConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SoftwareConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.imageVersion = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 3: {
                                        if (!(message.optionalComponents && message.optionalComponents.length))
                                            message.optionalComponents = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.optionalComponents.push(reader.int32());
                                        } else
                                            message.optionalComponents.push(reader.int32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SoftwareConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SoftwareConfig} SoftwareConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SoftwareConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SoftwareConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SoftwareConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.imageVersion != null && message.hasOwnProperty("imageVersion"))
                                if (!$util.isString(message.imageVersion))
                                    return "imageVersion: string expected";
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.optionalComponents != null && message.hasOwnProperty("optionalComponents")) {
                                if (!Array.isArray(message.optionalComponents))
                                    return "optionalComponents: array expected";
                                for (var i = 0; i < message.optionalComponents.length; ++i)
                                    switch (message.optionalComponents[i]) {
                                    default:
                                        return "optionalComponents: enum value[] expected";
                                    case 0:
                                    case 5:
                                    case 13:
                                    case 9:
                                    case 14:
                                    case 11:
                                    case 3:
                                    case 1:
                                    case 6:
                                    case 12:
                                    case 10:
                                    case 4:
                                    case 8:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SoftwareConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SoftwareConfig} SoftwareConfig
                         */
                        SoftwareConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SoftwareConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SoftwareConfig();
                            if (object.imageVersion != null)
                                message.imageVersion = String(object.imageVersion);
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SoftwareConfig.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.optionalComponents) {
                                if (!Array.isArray(object.optionalComponents))
                                    throw TypeError(".google.cloud.dataproc.v1.SoftwareConfig.optionalComponents: array expected");
                                message.optionalComponents = [];
                                for (var i = 0; i < object.optionalComponents.length; ++i)
                                    switch (object.optionalComponents[i]) {
                                    default:
                                        if (typeof object.optionalComponents[i] === "number") {
                                            message.optionalComponents[i] = object.optionalComponents[i];
                                            break;
                                        }
                                    case "COMPONENT_UNSPECIFIED":
                                    case 0:
                                        message.optionalComponents[i] = 0;
                                        break;
                                    case "ANACONDA":
                                    case 5:
                                        message.optionalComponents[i] = 5;
                                        break;
                                    case "DOCKER":
                                    case 13:
                                        message.optionalComponents[i] = 13;
                                        break;
                                    case "DRUID":
                                    case 9:
                                        message.optionalComponents[i] = 9;
                                        break;
                                    case "FLINK":
                                    case 14:
                                        message.optionalComponents[i] = 14;
                                        break;
                                    case "HBASE":
                                    case 11:
                                        message.optionalComponents[i] = 11;
                                        break;
                                    case "HIVE_WEBHCAT":
                                    case 3:
                                        message.optionalComponents[i] = 3;
                                        break;
                                    case "JUPYTER":
                                    case 1:
                                        message.optionalComponents[i] = 1;
                                        break;
                                    case "PRESTO":
                                    case 6:
                                        message.optionalComponents[i] = 6;
                                        break;
                                    case "RANGER":
                                    case 12:
                                        message.optionalComponents[i] = 12;
                                        break;
                                    case "SOLR":
                                    case 10:
                                        message.optionalComponents[i] = 10;
                                        break;
                                    case "ZEPPELIN":
                                    case 4:
                                        message.optionalComponents[i] = 4;
                                        break;
                                    case "ZOOKEEPER":
                                    case 8:
                                        message.optionalComponents[i] = 8;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SoftwareConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.SoftwareConfig} message SoftwareConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SoftwareConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.optionalComponents = [];
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults)
                                object.imageVersion = "";
                            if (message.imageVersion != null && message.hasOwnProperty("imageVersion"))
                                object.imageVersion = message.imageVersion;
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.optionalComponents && message.optionalComponents.length) {
                                object.optionalComponents = [];
                                for (var j = 0; j < message.optionalComponents.length; ++j)
                                    object.optionalComponents[j] = options.enums === String ? $root.google.cloud.dataproc.v1.Component[message.optionalComponents[j]] === undefined ? message.optionalComponents[j] : $root.google.cloud.dataproc.v1.Component[message.optionalComponents[j]] : message.optionalComponents[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SoftwareConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SoftwareConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SoftwareConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SoftwareConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SoftwareConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SoftwareConfig";
                        };
    
                        return SoftwareConfig;
                    })();
    
                    v1.LifecycleConfig = (function() {
    
                        /**
                         * Properties of a LifecycleConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ILifecycleConfig
                         * @property {google.protobuf.IDuration|null} [idleDeleteTtl] LifecycleConfig idleDeleteTtl
                         * @property {google.protobuf.ITimestamp|null} [autoDeleteTime] LifecycleConfig autoDeleteTime
                         * @property {google.protobuf.IDuration|null} [autoDeleteTtl] LifecycleConfig autoDeleteTtl
                         * @property {google.protobuf.ITimestamp|null} [idleStartTime] LifecycleConfig idleStartTime
                         */
    
                        /**
                         * Constructs a new LifecycleConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a LifecycleConfig.
                         * @implements ILifecycleConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ILifecycleConfig=} [properties] Properties to set
                         */
                        function LifecycleConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LifecycleConfig idleDeleteTtl.
                         * @member {google.protobuf.IDuration|null|undefined} idleDeleteTtl
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         */
                        LifecycleConfig.prototype.idleDeleteTtl = null;
    
                        /**
                         * LifecycleConfig autoDeleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} autoDeleteTime
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         */
                        LifecycleConfig.prototype.autoDeleteTime = null;
    
                        /**
                         * LifecycleConfig autoDeleteTtl.
                         * @member {google.protobuf.IDuration|null|undefined} autoDeleteTtl
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         */
                        LifecycleConfig.prototype.autoDeleteTtl = null;
    
                        /**
                         * LifecycleConfig idleStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} idleStartTime
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         */
                        LifecycleConfig.prototype.idleStartTime = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * LifecycleConfig ttl.
                         * @member {"autoDeleteTime"|"autoDeleteTtl"|undefined} ttl
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         */
                        Object.defineProperty(LifecycleConfig.prototype, "ttl", {
                            get: $util.oneOfGetter($oneOfFields = ["autoDeleteTime", "autoDeleteTtl"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new LifecycleConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILifecycleConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.LifecycleConfig} LifecycleConfig instance
                         */
                        LifecycleConfig.create = function create(properties) {
                            return new LifecycleConfig(properties);
                        };
    
                        /**
                         * Encodes the specified LifecycleConfig message. Does not implicitly {@link google.cloud.dataproc.v1.LifecycleConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILifecycleConfig} message LifecycleConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LifecycleConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.idleDeleteTtl != null && Object.hasOwnProperty.call(message, "idleDeleteTtl"))
                                $root.google.protobuf.Duration.encode(message.idleDeleteTtl, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.autoDeleteTime != null && Object.hasOwnProperty.call(message, "autoDeleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.autoDeleteTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.autoDeleteTtl != null && Object.hasOwnProperty.call(message, "autoDeleteTtl"))
                                $root.google.protobuf.Duration.encode(message.autoDeleteTtl, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.idleStartTime != null && Object.hasOwnProperty.call(message, "idleStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.idleStartTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LifecycleConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.LifecycleConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILifecycleConfig} message LifecycleConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LifecycleConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LifecycleConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.LifecycleConfig} LifecycleConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LifecycleConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.LifecycleConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.idleDeleteTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.autoDeleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.autoDeleteTtl = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.idleStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LifecycleConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.LifecycleConfig} LifecycleConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LifecycleConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LifecycleConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LifecycleConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.idleDeleteTtl != null && message.hasOwnProperty("idleDeleteTtl")) {
                                var error = $root.google.protobuf.Duration.verify(message.idleDeleteTtl);
                                if (error)
                                    return "idleDeleteTtl." + error;
                            }
                            if (message.autoDeleteTime != null && message.hasOwnProperty("autoDeleteTime")) {
                                properties.ttl = 1;
                                {
                                    var error = $root.google.protobuf.Timestamp.verify(message.autoDeleteTime);
                                    if (error)
                                        return "autoDeleteTime." + error;
                                }
                            }
                            if (message.autoDeleteTtl != null && message.hasOwnProperty("autoDeleteTtl")) {
                                if (properties.ttl === 1)
                                    return "ttl: multiple values";
                                properties.ttl = 1;
                                {
                                    var error = $root.google.protobuf.Duration.verify(message.autoDeleteTtl);
                                    if (error)
                                        return "autoDeleteTtl." + error;
                                }
                            }
                            if (message.idleStartTime != null && message.hasOwnProperty("idleStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.idleStartTime);
                                if (error)
                                    return "idleStartTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LifecycleConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.LifecycleConfig} LifecycleConfig
                         */
                        LifecycleConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.LifecycleConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.LifecycleConfig();
                            if (object.idleDeleteTtl != null) {
                                if (typeof object.idleDeleteTtl !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.LifecycleConfig.idleDeleteTtl: object expected");
                                message.idleDeleteTtl = $root.google.protobuf.Duration.fromObject(object.idleDeleteTtl);
                            }
                            if (object.autoDeleteTime != null) {
                                if (typeof object.autoDeleteTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.LifecycleConfig.autoDeleteTime: object expected");
                                message.autoDeleteTime = $root.google.protobuf.Timestamp.fromObject(object.autoDeleteTime);
                            }
                            if (object.autoDeleteTtl != null) {
                                if (typeof object.autoDeleteTtl !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.LifecycleConfig.autoDeleteTtl: object expected");
                                message.autoDeleteTtl = $root.google.protobuf.Duration.fromObject(object.autoDeleteTtl);
                            }
                            if (object.idleStartTime != null) {
                                if (typeof object.idleStartTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.LifecycleConfig.idleStartTime: object expected");
                                message.idleStartTime = $root.google.protobuf.Timestamp.fromObject(object.idleStartTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LifecycleConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.LifecycleConfig} message LifecycleConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LifecycleConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.idleDeleteTtl = null;
                                object.idleStartTime = null;
                            }
                            if (message.idleDeleteTtl != null && message.hasOwnProperty("idleDeleteTtl"))
                                object.idleDeleteTtl = $root.google.protobuf.Duration.toObject(message.idleDeleteTtl, options);
                            if (message.autoDeleteTime != null && message.hasOwnProperty("autoDeleteTime")) {
                                object.autoDeleteTime = $root.google.protobuf.Timestamp.toObject(message.autoDeleteTime, options);
                                if (options.oneofs)
                                    object.ttl = "autoDeleteTime";
                            }
                            if (message.autoDeleteTtl != null && message.hasOwnProperty("autoDeleteTtl")) {
                                object.autoDeleteTtl = $root.google.protobuf.Duration.toObject(message.autoDeleteTtl, options);
                                if (options.oneofs)
                                    object.ttl = "autoDeleteTtl";
                            }
                            if (message.idleStartTime != null && message.hasOwnProperty("idleStartTime"))
                                object.idleStartTime = $root.google.protobuf.Timestamp.toObject(message.idleStartTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this LifecycleConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LifecycleConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LifecycleConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.LifecycleConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LifecycleConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.LifecycleConfig";
                        };
    
                        return LifecycleConfig;
                    })();
    
                    v1.MetastoreConfig = (function() {
    
                        /**
                         * Properties of a MetastoreConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IMetastoreConfig
                         * @property {string|null} [dataprocMetastoreService] MetastoreConfig dataprocMetastoreService
                         */
    
                        /**
                         * Constructs a new MetastoreConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a MetastoreConfig.
                         * @implements IMetastoreConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IMetastoreConfig=} [properties] Properties to set
                         */
                        function MetastoreConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MetastoreConfig dataprocMetastoreService.
                         * @member {string} dataprocMetastoreService
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @instance
                         */
                        MetastoreConfig.prototype.dataprocMetastoreService = "";
    
                        /**
                         * Creates a new MetastoreConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IMetastoreConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.MetastoreConfig} MetastoreConfig instance
                         */
                        MetastoreConfig.create = function create(properties) {
                            return new MetastoreConfig(properties);
                        };
    
                        /**
                         * Encodes the specified MetastoreConfig message. Does not implicitly {@link google.cloud.dataproc.v1.MetastoreConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IMetastoreConfig} message MetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetastoreConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dataprocMetastoreService != null && Object.hasOwnProperty.call(message, "dataprocMetastoreService"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.dataprocMetastoreService);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MetastoreConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.MetastoreConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IMetastoreConfig} message MetastoreConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MetastoreConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MetastoreConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.MetastoreConfig} MetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetastoreConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.MetastoreConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dataprocMetastoreService = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MetastoreConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.MetastoreConfig} MetastoreConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MetastoreConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MetastoreConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MetastoreConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.dataprocMetastoreService != null && message.hasOwnProperty("dataprocMetastoreService"))
                                if (!$util.isString(message.dataprocMetastoreService))
                                    return "dataprocMetastoreService: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a MetastoreConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.MetastoreConfig} MetastoreConfig
                         */
                        MetastoreConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.MetastoreConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.MetastoreConfig();
                            if (object.dataprocMetastoreService != null)
                                message.dataprocMetastoreService = String(object.dataprocMetastoreService);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MetastoreConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.MetastoreConfig} message MetastoreConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MetastoreConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.dataprocMetastoreService = "";
                            if (message.dataprocMetastoreService != null && message.hasOwnProperty("dataprocMetastoreService"))
                                object.dataprocMetastoreService = message.dataprocMetastoreService;
                            return object;
                        };
    
                        /**
                         * Converts this MetastoreConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MetastoreConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for MetastoreConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.MetastoreConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        MetastoreConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.MetastoreConfig";
                        };
    
                        return MetastoreConfig;
                    })();
    
                    v1.DataprocMetricConfig = (function() {
    
                        /**
                         * Properties of a DataprocMetricConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDataprocMetricConfig
                         * @property {Array.<google.cloud.dataproc.v1.DataprocMetricConfig.IMetric>|null} [metrics] DataprocMetricConfig metrics
                         */
    
                        /**
                         * Constructs a new DataprocMetricConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DataprocMetricConfig.
                         * @implements IDataprocMetricConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDataprocMetricConfig=} [properties] Properties to set
                         */
                        function DataprocMetricConfig(properties) {
                            this.metrics = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DataprocMetricConfig metrics.
                         * @member {Array.<google.cloud.dataproc.v1.DataprocMetricConfig.IMetric>} metrics
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @instance
                         */
                        DataprocMetricConfig.prototype.metrics = $util.emptyArray;
    
                        /**
                         * Creates a new DataprocMetricConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDataprocMetricConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DataprocMetricConfig} DataprocMetricConfig instance
                         */
                        DataprocMetricConfig.create = function create(properties) {
                            return new DataprocMetricConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DataprocMetricConfig message. Does not implicitly {@link google.cloud.dataproc.v1.DataprocMetricConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDataprocMetricConfig} message DataprocMetricConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataprocMetricConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.metrics != null && message.metrics.length)
                                for (var i = 0; i < message.metrics.length; ++i)
                                    $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric.encode(message.metrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DataprocMetricConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DataprocMetricConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDataprocMetricConfig} message DataprocMetricConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DataprocMetricConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DataprocMetricConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DataprocMetricConfig} DataprocMetricConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataprocMetricConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DataprocMetricConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.metrics && message.metrics.length))
                                            message.metrics = [];
                                        message.metrics.push($root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DataprocMetricConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DataprocMetricConfig} DataprocMetricConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DataprocMetricConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DataprocMetricConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DataprocMetricConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.metrics != null && message.hasOwnProperty("metrics")) {
                                if (!Array.isArray(message.metrics))
                                    return "metrics: array expected";
                                for (var i = 0; i < message.metrics.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric.verify(message.metrics[i]);
                                    if (error)
                                        return "metrics." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a DataprocMetricConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DataprocMetricConfig} DataprocMetricConfig
                         */
                        DataprocMetricConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DataprocMetricConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DataprocMetricConfig();
                            if (object.metrics) {
                                if (!Array.isArray(object.metrics))
                                    throw TypeError(".google.cloud.dataproc.v1.DataprocMetricConfig.metrics: array expected");
                                message.metrics = [];
                                for (var i = 0; i < object.metrics.length; ++i) {
                                    if (typeof object.metrics[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.DataprocMetricConfig.metrics: object expected");
                                    message.metrics[i] = $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric.fromObject(object.metrics[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DataprocMetricConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.DataprocMetricConfig} message DataprocMetricConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DataprocMetricConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.metrics = [];
                            if (message.metrics && message.metrics.length) {
                                object.metrics = [];
                                for (var j = 0; j < message.metrics.length; ++j)
                                    object.metrics[j] = $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric.toObject(message.metrics[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this DataprocMetricConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DataprocMetricConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DataprocMetricConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DataprocMetricConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DataprocMetricConfig";
                        };
    
                        /**
                         * MetricSource enum.
                         * @name google.cloud.dataproc.v1.DataprocMetricConfig.MetricSource
                         * @enum {number}
                         * @property {number} METRIC_SOURCE_UNSPECIFIED=0 METRIC_SOURCE_UNSPECIFIED value
                         * @property {number} MONITORING_AGENT_DEFAULTS=1 MONITORING_AGENT_DEFAULTS value
                         * @property {number} HDFS=2 HDFS value
                         * @property {number} SPARK=3 SPARK value
                         * @property {number} YARN=4 YARN value
                         * @property {number} SPARK_HISTORY_SERVER=5 SPARK_HISTORY_SERVER value
                         * @property {number} HIVESERVER2=6 HIVESERVER2 value
                         */
                        DataprocMetricConfig.MetricSource = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "METRIC_SOURCE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "MONITORING_AGENT_DEFAULTS"] = 1;
                            values[valuesById[2] = "HDFS"] = 2;
                            values[valuesById[3] = "SPARK"] = 3;
                            values[valuesById[4] = "YARN"] = 4;
                            values[valuesById[5] = "SPARK_HISTORY_SERVER"] = 5;
                            values[valuesById[6] = "HIVESERVER2"] = 6;
                            return values;
                        })();
    
                        DataprocMetricConfig.Metric = (function() {
    
                            /**
                             * Properties of a Metric.
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                             * @interface IMetric
                             * @property {google.cloud.dataproc.v1.DataprocMetricConfig.MetricSource|null} [metricSource] Metric metricSource
                             * @property {Array.<string>|null} [metricOverrides] Metric metricOverrides
                             */
    
                            /**
                             * Constructs a new Metric.
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig
                             * @classdesc Represents a Metric.
                             * @implements IMetric
                             * @constructor
                             * @param {google.cloud.dataproc.v1.DataprocMetricConfig.IMetric=} [properties] Properties to set
                             */
                            function Metric(properties) {
                                this.metricOverrides = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * Metric metricSource.
                             * @member {google.cloud.dataproc.v1.DataprocMetricConfig.MetricSource} metricSource
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @instance
                             */
                            Metric.prototype.metricSource = 0;
    
                            /**
                             * Metric metricOverrides.
                             * @member {Array.<string>} metricOverrides
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @instance
                             */
                            Metric.prototype.metricOverrides = $util.emptyArray;
    
                            /**
                             * Creates a new Metric instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {google.cloud.dataproc.v1.DataprocMetricConfig.IMetric=} [properties] Properties to set
                             * @returns {google.cloud.dataproc.v1.DataprocMetricConfig.Metric} Metric instance
                             */
                            Metric.create = function create(properties) {
                                return new Metric(properties);
                            };
    
                            /**
                             * Encodes the specified Metric message. Does not implicitly {@link google.cloud.dataproc.v1.DataprocMetricConfig.Metric.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {google.cloud.dataproc.v1.DataprocMetricConfig.IMetric} message Metric message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metric.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.metricSource != null && Object.hasOwnProperty.call(message, "metricSource"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.metricSource);
                                if (message.metricOverrides != null && message.metricOverrides.length)
                                    for (var i = 0; i < message.metricOverrides.length; ++i)
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metricOverrides[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified Metric message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DataprocMetricConfig.Metric.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {google.cloud.dataproc.v1.DataprocMetricConfig.IMetric} message Metric message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            Metric.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a Metric message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.dataproc.v1.DataprocMetricConfig.Metric} Metric
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metric.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1: {
                                            message.metricSource = reader.int32();
                                            break;
                                        }
                                    case 2: {
                                            if (!(message.metricOverrides && message.metricOverrides.length))
                                                message.metricOverrides = [];
                                            message.metricOverrides.push(reader.string());
                                            break;
                                        }
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a Metric message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.dataproc.v1.DataprocMetricConfig.Metric} Metric
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            Metric.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a Metric message.
                             * @function verify
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            Metric.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.metricSource != null && message.hasOwnProperty("metricSource"))
                                    switch (message.metricSource) {
                                    default:
                                        return "metricSource: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                        break;
                                    }
                                if (message.metricOverrides != null && message.hasOwnProperty("metricOverrides")) {
                                    if (!Array.isArray(message.metricOverrides))
                                        return "metricOverrides: array expected";
                                    for (var i = 0; i < message.metricOverrides.length; ++i)
                                        if (!$util.isString(message.metricOverrides[i]))
                                            return "metricOverrides: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a Metric message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.dataproc.v1.DataprocMetricConfig.Metric} Metric
                             */
                            Metric.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric)
                                    return object;
                                var message = new $root.google.cloud.dataproc.v1.DataprocMetricConfig.Metric();
                                switch (object.metricSource) {
                                default:
                                    if (typeof object.metricSource === "number") {
                                        message.metricSource = object.metricSource;
                                        break;
                                    }
                                    break;
                                case "METRIC_SOURCE_UNSPECIFIED":
                                case 0:
                                    message.metricSource = 0;
                                    break;
                                case "MONITORING_AGENT_DEFAULTS":
                                case 1:
                                    message.metricSource = 1;
                                    break;
                                case "HDFS":
                                case 2:
                                    message.metricSource = 2;
                                    break;
                                case "SPARK":
                                case 3:
                                    message.metricSource = 3;
                                    break;
                                case "YARN":
                                case 4:
                                    message.metricSource = 4;
                                    break;
                                case "SPARK_HISTORY_SERVER":
                                case 5:
                                    message.metricSource = 5;
                                    break;
                                case "HIVESERVER2":
                                case 6:
                                    message.metricSource = 6;
                                    break;
                                }
                                if (object.metricOverrides) {
                                    if (!Array.isArray(object.metricOverrides))
                                        throw TypeError(".google.cloud.dataproc.v1.DataprocMetricConfig.Metric.metricOverrides: array expected");
                                    message.metricOverrides = [];
                                    for (var i = 0; i < object.metricOverrides.length; ++i)
                                        message.metricOverrides[i] = String(object.metricOverrides[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a Metric message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {google.cloud.dataproc.v1.DataprocMetricConfig.Metric} message Metric
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            Metric.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.metricOverrides = [];
                                if (options.defaults)
                                    object.metricSource = options.enums === String ? "METRIC_SOURCE_UNSPECIFIED" : 0;
                                if (message.metricSource != null && message.hasOwnProperty("metricSource"))
                                    object.metricSource = options.enums === String ? $root.google.cloud.dataproc.v1.DataprocMetricConfig.MetricSource[message.metricSource] === undefined ? message.metricSource : $root.google.cloud.dataproc.v1.DataprocMetricConfig.MetricSource[message.metricSource] : message.metricSource;
                                if (message.metricOverrides && message.metricOverrides.length) {
                                    object.metricOverrides = [];
                                    for (var j = 0; j < message.metricOverrides.length; ++j)
                                        object.metricOverrides[j] = message.metricOverrides[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this Metric to JSON.
                             * @function toJSON
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            Metric.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * Gets the default type url for Metric
                             * @function getTypeUrl
                             * @memberof google.cloud.dataproc.v1.DataprocMetricConfig.Metric
                             * @static
                             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                             * @returns {string} The default type url
                             */
                            Metric.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                                if (typeUrlPrefix === undefined) {
                                    typeUrlPrefix = "type.googleapis.com";
                                }
                                return typeUrlPrefix + "/google.cloud.dataproc.v1.DataprocMetricConfig.Metric";
                            };
    
                            return Metric;
                        })();
    
                        return DataprocMetricConfig;
                    })();
    
                    v1.ClusterMetrics = (function() {
    
                        /**
                         * Properties of a ClusterMetrics.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterMetrics
                         * @property {Object.<string,number|Long>|null} [hdfsMetrics] ClusterMetrics hdfsMetrics
                         * @property {Object.<string,number|Long>|null} [yarnMetrics] ClusterMetrics yarnMetrics
                         */
    
                        /**
                         * Constructs a new ClusterMetrics.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterMetrics.
                         * @implements IClusterMetrics
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterMetrics=} [properties] Properties to set
                         */
                        function ClusterMetrics(properties) {
                            this.hdfsMetrics = {};
                            this.yarnMetrics = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterMetrics hdfsMetrics.
                         * @member {Object.<string,number|Long>} hdfsMetrics
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @instance
                         */
                        ClusterMetrics.prototype.hdfsMetrics = $util.emptyObject;
    
                        /**
                         * ClusterMetrics yarnMetrics.
                         * @member {Object.<string,number|Long>} yarnMetrics
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @instance
                         */
                        ClusterMetrics.prototype.yarnMetrics = $util.emptyObject;
    
                        /**
                         * Creates a new ClusterMetrics instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterMetrics=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterMetrics} ClusterMetrics instance
                         */
                        ClusterMetrics.create = function create(properties) {
                            return new ClusterMetrics(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterMetrics message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterMetrics.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterMetrics} message ClusterMetrics message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterMetrics.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.hdfsMetrics != null && Object.hasOwnProperty.call(message, "hdfsMetrics"))
                                for (var keys = Object.keys(message.hdfsMetrics), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int64(message.hdfsMetrics[keys[i]]).ldelim();
                            if (message.yarnMetrics != null && Object.hasOwnProperty.call(message, "yarnMetrics"))
                                for (var keys = Object.keys(message.yarnMetrics), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int64(message.yarnMetrics[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterMetrics message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterMetrics.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterMetrics} message ClusterMetrics message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterMetrics.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterMetrics message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterMetrics} ClusterMetrics
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterMetrics.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterMetrics(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.hdfsMetrics === $util.emptyObject)
                                            message.hdfsMetrics = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = 0;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.int64();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.hdfsMetrics[key] = value;
                                        break;
                                    }
                                case 2: {
                                        if (message.yarnMetrics === $util.emptyObject)
                                            message.yarnMetrics = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = 0;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.int64();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.yarnMetrics[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterMetrics message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterMetrics} ClusterMetrics
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterMetrics.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterMetrics message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterMetrics.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.hdfsMetrics != null && message.hasOwnProperty("hdfsMetrics")) {
                                if (!$util.isObject(message.hdfsMetrics))
                                    return "hdfsMetrics: object expected";
                                var key = Object.keys(message.hdfsMetrics);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isInteger(message.hdfsMetrics[key[i]]) && !(message.hdfsMetrics[key[i]] && $util.isInteger(message.hdfsMetrics[key[i]].low) && $util.isInteger(message.hdfsMetrics[key[i]].high)))
                                        return "hdfsMetrics: integer|Long{k:string} expected";
                            }
                            if (message.yarnMetrics != null && message.hasOwnProperty("yarnMetrics")) {
                                if (!$util.isObject(message.yarnMetrics))
                                    return "yarnMetrics: object expected";
                                var key = Object.keys(message.yarnMetrics);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isInteger(message.yarnMetrics[key[i]]) && !(message.yarnMetrics[key[i]] && $util.isInteger(message.yarnMetrics[key[i]].low) && $util.isInteger(message.yarnMetrics[key[i]].high)))
                                        return "yarnMetrics: integer|Long{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterMetrics message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterMetrics} ClusterMetrics
                         */
                        ClusterMetrics.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterMetrics)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterMetrics();
                            if (object.hdfsMetrics) {
                                if (typeof object.hdfsMetrics !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterMetrics.hdfsMetrics: object expected");
                                message.hdfsMetrics = {};
                                for (var keys = Object.keys(object.hdfsMetrics), i = 0; i < keys.length; ++i)
                                    if ($util.Long)
                                        (message.hdfsMetrics[keys[i]] = $util.Long.fromValue(object.hdfsMetrics[keys[i]])).unsigned = false;
                                    else if (typeof object.hdfsMetrics[keys[i]] === "string")
                                        message.hdfsMetrics[keys[i]] = parseInt(object.hdfsMetrics[keys[i]], 10);
                                    else if (typeof object.hdfsMetrics[keys[i]] === "number")
                                        message.hdfsMetrics[keys[i]] = object.hdfsMetrics[keys[i]];
                                    else if (typeof object.hdfsMetrics[keys[i]] === "object")
                                        message.hdfsMetrics[keys[i]] = new $util.LongBits(object.hdfsMetrics[keys[i]].low >>> 0, object.hdfsMetrics[keys[i]].high >>> 0).toNumber();
                            }
                            if (object.yarnMetrics) {
                                if (typeof object.yarnMetrics !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterMetrics.yarnMetrics: object expected");
                                message.yarnMetrics = {};
                                for (var keys = Object.keys(object.yarnMetrics), i = 0; i < keys.length; ++i)
                                    if ($util.Long)
                                        (message.yarnMetrics[keys[i]] = $util.Long.fromValue(object.yarnMetrics[keys[i]])).unsigned = false;
                                    else if (typeof object.yarnMetrics[keys[i]] === "string")
                                        message.yarnMetrics[keys[i]] = parseInt(object.yarnMetrics[keys[i]], 10);
                                    else if (typeof object.yarnMetrics[keys[i]] === "number")
                                        message.yarnMetrics[keys[i]] = object.yarnMetrics[keys[i]];
                                    else if (typeof object.yarnMetrics[keys[i]] === "object")
                                        message.yarnMetrics[keys[i]] = new $util.LongBits(object.yarnMetrics[keys[i]].low >>> 0, object.yarnMetrics[keys[i]].high >>> 0).toNumber();
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterMetrics message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterMetrics} message ClusterMetrics
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterMetrics.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.hdfsMetrics = {};
                                object.yarnMetrics = {};
                            }
                            var keys2;
                            if (message.hdfsMetrics && (keys2 = Object.keys(message.hdfsMetrics)).length) {
                                object.hdfsMetrics = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    if (typeof message.hdfsMetrics[keys2[j]] === "number")
                                        object.hdfsMetrics[keys2[j]] = options.longs === String ? String(message.hdfsMetrics[keys2[j]]) : message.hdfsMetrics[keys2[j]];
                                    else
                                        object.hdfsMetrics[keys2[j]] = options.longs === String ? $util.Long.prototype.toString.call(message.hdfsMetrics[keys2[j]]) : options.longs === Number ? new $util.LongBits(message.hdfsMetrics[keys2[j]].low >>> 0, message.hdfsMetrics[keys2[j]].high >>> 0).toNumber() : message.hdfsMetrics[keys2[j]];
                            }
                            if (message.yarnMetrics && (keys2 = Object.keys(message.yarnMetrics)).length) {
                                object.yarnMetrics = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    if (typeof message.yarnMetrics[keys2[j]] === "number")
                                        object.yarnMetrics[keys2[j]] = options.longs === String ? String(message.yarnMetrics[keys2[j]]) : message.yarnMetrics[keys2[j]];
                                    else
                                        object.yarnMetrics[keys2[j]] = options.longs === String ? $util.Long.prototype.toString.call(message.yarnMetrics[keys2[j]]) : options.longs === Number ? new $util.LongBits(message.yarnMetrics[keys2[j]].low >>> 0, message.yarnMetrics[keys2[j]].high >>> 0).toNumber() : message.yarnMetrics[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ClusterMetrics to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterMetrics.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterMetrics
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterMetrics
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterMetrics.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterMetrics";
                        };
    
                        return ClusterMetrics;
                    })();
    
                    v1.CreateClusterRequest = (function() {
    
                        /**
                         * Properties of a CreateClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICreateClusterRequest
                         * @property {string|null} [projectId] CreateClusterRequest projectId
                         * @property {string|null} [region] CreateClusterRequest region
                         * @property {google.cloud.dataproc.v1.ICluster|null} [cluster] CreateClusterRequest cluster
                         * @property {string|null} [requestId] CreateClusterRequest requestId
                         * @property {google.cloud.dataproc.v1.FailureAction|null} [actionOnFailedPrimaryWorkers] CreateClusterRequest actionOnFailedPrimaryWorkers
                         */
    
                        /**
                         * Constructs a new CreateClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CreateClusterRequest.
                         * @implements ICreateClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest=} [properties] Properties to set
                         */
                        function CreateClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.projectId = "";
    
                        /**
                         * CreateClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.region = "";
    
                        /**
                         * CreateClusterRequest cluster.
                         * @member {google.cloud.dataproc.v1.ICluster|null|undefined} cluster
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.cluster = null;
    
                        /**
                         * CreateClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.requestId = "";
    
                        /**
                         * CreateClusterRequest actionOnFailedPrimaryWorkers.
                         * @member {google.cloud.dataproc.v1.FailureAction} actionOnFailedPrimaryWorkers
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         */
                        CreateClusterRequest.prototype.actionOnFailedPrimaryWorkers = 0;
    
                        /**
                         * Creates a new CreateClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CreateClusterRequest} CreateClusterRequest instance
                         */
                        CreateClusterRequest.create = function create(properties) {
                            return new CreateClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CreateClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                $root.google.cloud.dataproc.v1.Cluster.encode(message.cluster, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            if (message.actionOnFailedPrimaryWorkers != null && Object.hasOwnProperty.call(message, "actionOnFailedPrimaryWorkers"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.actionOnFailedPrimaryWorkers);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CreateClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateClusterRequest} message CreateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CreateClusterRequest} CreateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CreateClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.cluster = $root.google.cloud.dataproc.v1.Cluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.actionOnFailedPrimaryWorkers = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CreateClusterRequest} CreateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.cluster != null && message.hasOwnProperty("cluster")) {
                                var error = $root.google.cloud.dataproc.v1.Cluster.verify(message.cluster);
                                if (error)
                                    return "cluster." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.actionOnFailedPrimaryWorkers != null && message.hasOwnProperty("actionOnFailedPrimaryWorkers"))
                                switch (message.actionOnFailedPrimaryWorkers) {
                                default:
                                    return "actionOnFailedPrimaryWorkers: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a CreateClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CreateClusterRequest} CreateClusterRequest
                         */
                        CreateClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CreateClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CreateClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.cluster != null) {
                                if (typeof object.cluster !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.CreateClusterRequest.cluster: object expected");
                                message.cluster = $root.google.cloud.dataproc.v1.Cluster.fromObject(object.cluster);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            switch (object.actionOnFailedPrimaryWorkers) {
                            default:
                                if (typeof object.actionOnFailedPrimaryWorkers === "number") {
                                    message.actionOnFailedPrimaryWorkers = object.actionOnFailedPrimaryWorkers;
                                    break;
                                }
                                break;
                            case "FAILURE_ACTION_UNSPECIFIED":
                            case 0:
                                message.actionOnFailedPrimaryWorkers = 0;
                                break;
                            case "NO_ACTION":
                            case 1:
                                message.actionOnFailedPrimaryWorkers = 1;
                                break;
                            case "DELETE":
                            case 2:
                                message.actionOnFailedPrimaryWorkers = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CreateClusterRequest} message CreateClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.cluster = null;
                                object.region = "";
                                object.requestId = "";
                                object.actionOnFailedPrimaryWorkers = options.enums === String ? "FAILURE_ACTION_UNSPECIFIED" : 0;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                object.cluster = $root.google.cloud.dataproc.v1.Cluster.toObject(message.cluster, options);
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.actionOnFailedPrimaryWorkers != null && message.hasOwnProperty("actionOnFailedPrimaryWorkers"))
                                object.actionOnFailedPrimaryWorkers = options.enums === String ? $root.google.cloud.dataproc.v1.FailureAction[message.actionOnFailedPrimaryWorkers] === undefined ? message.actionOnFailedPrimaryWorkers : $root.google.cloud.dataproc.v1.FailureAction[message.actionOnFailedPrimaryWorkers] : message.actionOnFailedPrimaryWorkers;
                            return object;
                        };
    
                        /**
                         * Converts this CreateClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CreateClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CreateClusterRequest";
                        };
    
                        return CreateClusterRequest;
                    })();
    
                    v1.UpdateClusterRequest = (function() {
    
                        /**
                         * Properties of an UpdateClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IUpdateClusterRequest
                         * @property {string|null} [projectId] UpdateClusterRequest projectId
                         * @property {string|null} [region] UpdateClusterRequest region
                         * @property {string|null} [clusterName] UpdateClusterRequest clusterName
                         * @property {google.cloud.dataproc.v1.ICluster|null} [cluster] UpdateClusterRequest cluster
                         * @property {google.protobuf.IDuration|null} [gracefulDecommissionTimeout] UpdateClusterRequest gracefulDecommissionTimeout
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateClusterRequest updateMask
                         * @property {string|null} [requestId] UpdateClusterRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an UpdateClusterRequest.
                         * @implements IUpdateClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest=} [properties] Properties to set
                         */
                        function UpdateClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.projectId = "";
    
                        /**
                         * UpdateClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.region = "";
    
                        /**
                         * UpdateClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.clusterName = "";
    
                        /**
                         * UpdateClusterRequest cluster.
                         * @member {google.cloud.dataproc.v1.ICluster|null|undefined} cluster
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.cluster = null;
    
                        /**
                         * UpdateClusterRequest gracefulDecommissionTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} gracefulDecommissionTimeout
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.gracefulDecommissionTimeout = null;
    
                        /**
                         * UpdateClusterRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         */
                        UpdateClusterRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.UpdateClusterRequest} UpdateClusterRequest instance
                         */
                        UpdateClusterRequest.create = function create(properties) {
                            return new UpdateClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.UpdateClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.cluster != null && Object.hasOwnProperty.call(message, "cluster"))
                                $root.google.cloud.dataproc.v1.Cluster.encode(message.cluster, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.region);
                            if (message.gracefulDecommissionTimeout != null && Object.hasOwnProperty.call(message, "gracefulDecommissionTimeout"))
                                $root.google.protobuf.Duration.encode(message.gracefulDecommissionTimeout, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.UpdateClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateClusterRequest} message UpdateClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.UpdateClusterRequest} UpdateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.UpdateClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.cluster = $root.google.cloud.dataproc.v1.Cluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.UpdateClusterRequest} UpdateClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.cluster != null && message.hasOwnProperty("cluster")) {
                                var error = $root.google.cloud.dataproc.v1.Cluster.verify(message.cluster);
                                if (error)
                                    return "cluster." + error;
                            }
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.gracefulDecommissionTimeout);
                                if (error)
                                    return "gracefulDecommissionTimeout." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.UpdateClusterRequest} UpdateClusterRequest
                         */
                        UpdateClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.UpdateClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.UpdateClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.cluster != null) {
                                if (typeof object.cluster !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateClusterRequest.cluster: object expected");
                                message.cluster = $root.google.cloud.dataproc.v1.Cluster.fromObject(object.cluster);
                            }
                            if (object.gracefulDecommissionTimeout != null) {
                                if (typeof object.gracefulDecommissionTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateClusterRequest.gracefulDecommissionTimeout: object expected");
                                message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.fromObject(object.gracefulDecommissionTimeout);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateClusterRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.UpdateClusterRequest} message UpdateClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.clusterName = "";
                                object.cluster = null;
                                object.updateMask = null;
                                object.region = "";
                                object.gracefulDecommissionTimeout = null;
                                object.requestId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.cluster != null && message.hasOwnProperty("cluster"))
                                object.cluster = $root.google.cloud.dataproc.v1.Cluster.toObject(message.cluster, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout"))
                                object.gracefulDecommissionTimeout = $root.google.protobuf.Duration.toObject(message.gracefulDecommissionTimeout, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.UpdateClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.UpdateClusterRequest";
                        };
    
                        return UpdateClusterRequest;
                    })();
    
                    v1.StopClusterRequest = (function() {
    
                        /**
                         * Properties of a StopClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IStopClusterRequest
                         * @property {string|null} [projectId] StopClusterRequest projectId
                         * @property {string|null} [region] StopClusterRequest region
                         * @property {string|null} [clusterName] StopClusterRequest clusterName
                         * @property {string|null} [clusterUuid] StopClusterRequest clusterUuid
                         * @property {string|null} [requestId] StopClusterRequest requestId
                         */
    
                        /**
                         * Constructs a new StopClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a StopClusterRequest.
                         * @implements IStopClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest=} [properties] Properties to set
                         */
                        function StopClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StopClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         */
                        StopClusterRequest.prototype.projectId = "";
    
                        /**
                         * StopClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         */
                        StopClusterRequest.prototype.region = "";
    
                        /**
                         * StopClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         */
                        StopClusterRequest.prototype.clusterName = "";
    
                        /**
                         * StopClusterRequest clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         */
                        StopClusterRequest.prototype.clusterUuid = "";
    
                        /**
                         * StopClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         */
                        StopClusterRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new StopClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.StopClusterRequest} StopClusterRequest instance
                         */
                        StopClusterRequest.create = function create(properties) {
                            return new StopClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StopClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.StopClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest} message StopClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.region);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterName);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.clusterUuid);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StopClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.StopClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStopClusterRequest} message StopClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StopClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StopClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.StopClusterRequest} StopClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.StopClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StopClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.StopClusterRequest} StopClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StopClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StopClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StopClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StopClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.StopClusterRequest} StopClusterRequest
                         */
                        StopClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.StopClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.StopClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StopClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.StopClusterRequest} message StopClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StopClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.region = "";
                                object.clusterName = "";
                                object.clusterUuid = "";
                                object.requestId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this StopClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StopClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StopClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.StopClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StopClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.StopClusterRequest";
                        };
    
                        return StopClusterRequest;
                    })();
    
                    v1.StartClusterRequest = (function() {
    
                        /**
                         * Properties of a StartClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IStartClusterRequest
                         * @property {string|null} [projectId] StartClusterRequest projectId
                         * @property {string|null} [region] StartClusterRequest region
                         * @property {string|null} [clusterName] StartClusterRequest clusterName
                         * @property {string|null} [clusterUuid] StartClusterRequest clusterUuid
                         * @property {string|null} [requestId] StartClusterRequest requestId
                         */
    
                        /**
                         * Constructs a new StartClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a StartClusterRequest.
                         * @implements IStartClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest=} [properties] Properties to set
                         */
                        function StartClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * StartClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         */
                        StartClusterRequest.prototype.projectId = "";
    
                        /**
                         * StartClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         */
                        StartClusterRequest.prototype.region = "";
    
                        /**
                         * StartClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         */
                        StartClusterRequest.prototype.clusterName = "";
    
                        /**
                         * StartClusterRequest clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         */
                        StartClusterRequest.prototype.clusterUuid = "";
    
                        /**
                         * StartClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         */
                        StartClusterRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new StartClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.StartClusterRequest} StartClusterRequest instance
                         */
                        StartClusterRequest.create = function create(properties) {
                            return new StartClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified StartClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.StartClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest} message StartClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.region);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.clusterName);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.clusterUuid);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified StartClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.StartClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IStartClusterRequest} message StartClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StartClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a StartClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.StartClusterRequest} StartClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.StartClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a StartClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.StartClusterRequest} StartClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StartClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a StartClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StartClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a StartClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.StartClusterRequest} StartClusterRequest
                         */
                        StartClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.StartClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.StartClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a StartClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.StartClusterRequest} message StartClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StartClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.region = "";
                                object.clusterName = "";
                                object.clusterUuid = "";
                                object.requestId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this StartClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StartClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for StartClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.StartClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StartClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.StartClusterRequest";
                        };
    
                        return StartClusterRequest;
                    })();
    
                    v1.DeleteClusterRequest = (function() {
    
                        /**
                         * Properties of a DeleteClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDeleteClusterRequest
                         * @property {string|null} [projectId] DeleteClusterRequest projectId
                         * @property {string|null} [region] DeleteClusterRequest region
                         * @property {string|null} [clusterName] DeleteClusterRequest clusterName
                         * @property {string|null} [clusterUuid] DeleteClusterRequest clusterUuid
                         * @property {string|null} [requestId] DeleteClusterRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DeleteClusterRequest.
                         * @implements IDeleteClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest=} [properties] Properties to set
                         */
                        function DeleteClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.projectId = "";
    
                        /**
                         * DeleteClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.region = "";
    
                        /**
                         * DeleteClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.clusterName = "";
    
                        /**
                         * DeleteClusterRequest clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.clusterUuid = "";
    
                        /**
                         * DeleteClusterRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         */
                        DeleteClusterRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DeleteClusterRequest} DeleteClusterRequest instance
                         */
                        DeleteClusterRequest.create = function create(properties) {
                            return new DeleteClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DeleteClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.clusterUuid);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DeleteClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteClusterRequest} message DeleteClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DeleteClusterRequest} DeleteClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DeleteClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DeleteClusterRequest} DeleteClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DeleteClusterRequest} DeleteClusterRequest
                         */
                        DeleteClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DeleteClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DeleteClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DeleteClusterRequest} message DeleteClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.clusterName = "";
                                object.region = "";
                                object.clusterUuid = "";
                                object.requestId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DeleteClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DeleteClusterRequest";
                        };
    
                        return DeleteClusterRequest;
                    })();
    
                    v1.GetClusterRequest = (function() {
    
                        /**
                         * Properties of a GetClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetClusterRequest
                         * @property {string|null} [projectId] GetClusterRequest projectId
                         * @property {string|null} [region] GetClusterRequest region
                         * @property {string|null} [clusterName] GetClusterRequest clusterName
                         */
    
                        /**
                         * Constructs a new GetClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetClusterRequest.
                         * @implements IGetClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest=} [properties] Properties to set
                         */
                        function GetClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @instance
                         */
                        GetClusterRequest.prototype.projectId = "";
    
                        /**
                         * GetClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @instance
                         */
                        GetClusterRequest.prototype.region = "";
    
                        /**
                         * GetClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @instance
                         */
                        GetClusterRequest.prototype.clusterName = "";
    
                        /**
                         * Creates a new GetClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetClusterRequest} GetClusterRequest instance
                         */
                        GetClusterRequest.create = function create(properties) {
                            return new GetClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetClusterRequest} message GetClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetClusterRequest} GetClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetClusterRequest} GetClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetClusterRequest} GetClusterRequest
                         */
                        GetClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetClusterRequest} message GetClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.clusterName = "";
                                object.region = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this GetClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetClusterRequest";
                        };
    
                        return GetClusterRequest;
                    })();
    
                    v1.ListClustersRequest = (function() {
    
                        /**
                         * Properties of a ListClustersRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListClustersRequest
                         * @property {string|null} [projectId] ListClustersRequest projectId
                         * @property {string|null} [region] ListClustersRequest region
                         * @property {string|null} [filter] ListClustersRequest filter
                         * @property {number|null} [pageSize] ListClustersRequest pageSize
                         * @property {string|null} [pageToken] ListClustersRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListClustersRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListClustersRequest.
                         * @implements IListClustersRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListClustersRequest=} [properties] Properties to set
                         */
                        function ListClustersRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListClustersRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.projectId = "";
    
                        /**
                         * ListClustersRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.region = "";
    
                        /**
                         * ListClustersRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.filter = "";
    
                        /**
                         * ListClustersRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.pageSize = 0;
    
                        /**
                         * ListClustersRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         */
                        ListClustersRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListClustersRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListClustersRequest} ListClustersRequest instance
                         */
                        ListClustersRequest.create = function create(properties) {
                            return new ListClustersRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListClustersRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ListClustersRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.region);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListClustersRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListClustersRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersRequest} message ListClustersRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListClustersRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListClustersRequest} ListClustersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListClustersRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListClustersRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListClustersRequest} ListClustersRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListClustersRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListClustersRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListClustersRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListClustersRequest} ListClustersRequest
                         */
                        ListClustersRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListClustersRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListClustersRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListClustersRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ListClustersRequest} message ListClustersRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListClustersRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.region = "";
                                object.filter = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListClustersRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListClustersRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListClustersRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListClustersRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListClustersRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListClustersRequest";
                        };
    
                        return ListClustersRequest;
                    })();
    
                    v1.ListClustersResponse = (function() {
    
                        /**
                         * Properties of a ListClustersResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListClustersResponse
                         * @property {Array.<google.cloud.dataproc.v1.ICluster>|null} [clusters] ListClustersResponse clusters
                         * @property {string|null} [nextPageToken] ListClustersResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListClustersResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListClustersResponse.
                         * @implements IListClustersResponse
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListClustersResponse=} [properties] Properties to set
                         */
                        function ListClustersResponse(properties) {
                            this.clusters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListClustersResponse clusters.
                         * @member {Array.<google.cloud.dataproc.v1.ICluster>} clusters
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @instance
                         */
                        ListClustersResponse.prototype.clusters = $util.emptyArray;
    
                        /**
                         * ListClustersResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @instance
                         */
                        ListClustersResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListClustersResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersResponse=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListClustersResponse} ListClustersResponse instance
                         */
                        ListClustersResponse.create = function create(properties) {
                            return new ListClustersResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListClustersResponse message. Does not implicitly {@link google.cloud.dataproc.v1.ListClustersResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clusters != null && message.clusters.length)
                                for (var i = 0; i < message.clusters.length; ++i)
                                    $root.google.cloud.dataproc.v1.Cluster.encode(message.clusters[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListClustersResponse message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListClustersResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListClustersResponse} message ListClustersResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListClustersResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListClustersResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListClustersResponse} ListClustersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListClustersResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.clusters && message.clusters.length))
                                            message.clusters = [];
                                        message.clusters.push($root.google.cloud.dataproc.v1.Cluster.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListClustersResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListClustersResponse} ListClustersResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListClustersResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListClustersResponse message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListClustersResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clusters != null && message.hasOwnProperty("clusters")) {
                                if (!Array.isArray(message.clusters))
                                    return "clusters: array expected";
                                for (var i = 0; i < message.clusters.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.Cluster.verify(message.clusters[i]);
                                    if (error)
                                        return "clusters." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListClustersResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListClustersResponse} ListClustersResponse
                         */
                        ListClustersResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListClustersResponse)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListClustersResponse();
                            if (object.clusters) {
                                if (!Array.isArray(object.clusters))
                                    throw TypeError(".google.cloud.dataproc.v1.ListClustersResponse.clusters: array expected");
                                message.clusters = [];
                                for (var i = 0; i < object.clusters.length; ++i) {
                                    if (typeof object.clusters[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ListClustersResponse.clusters: object expected");
                                    message.clusters[i] = $root.google.cloud.dataproc.v1.Cluster.fromObject(object.clusters[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListClustersResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.ListClustersResponse} message ListClustersResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListClustersResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.clusters = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.clusters && message.clusters.length) {
                                object.clusters = [];
                                for (var j = 0; j < message.clusters.length; ++j)
                                    object.clusters[j] = $root.google.cloud.dataproc.v1.Cluster.toObject(message.clusters[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListClustersResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListClustersResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListClustersResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListClustersResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListClustersResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListClustersResponse";
                        };
    
                        return ListClustersResponse;
                    })();
    
                    v1.DiagnoseClusterRequest = (function() {
    
                        /**
                         * Properties of a DiagnoseClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDiagnoseClusterRequest
                         * @property {string|null} [projectId] DiagnoseClusterRequest projectId
                         * @property {string|null} [region] DiagnoseClusterRequest region
                         * @property {string|null} [clusterName] DiagnoseClusterRequest clusterName
                         */
    
                        /**
                         * Constructs a new DiagnoseClusterRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DiagnoseClusterRequest.
                         * @implements IDiagnoseClusterRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest=} [properties] Properties to set
                         */
                        function DiagnoseClusterRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnoseClusterRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @instance
                         */
                        DiagnoseClusterRequest.prototype.projectId = "";
    
                        /**
                         * DiagnoseClusterRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @instance
                         */
                        DiagnoseClusterRequest.prototype.region = "";
    
                        /**
                         * DiagnoseClusterRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @instance
                         */
                        DiagnoseClusterRequest.prototype.clusterName = "";
    
                        /**
                         * Creates a new DiagnoseClusterRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterRequest} DiagnoseClusterRequest instance
                         */
                        DiagnoseClusterRequest.create = function create(properties) {
                            return new DiagnoseClusterRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnoseClusterRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DiagnoseClusterRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest} message DiagnoseClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseClusterRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnoseClusterRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DiagnoseClusterRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterRequest} message DiagnoseClusterRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseClusterRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnoseClusterRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterRequest} DiagnoseClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseClusterRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DiagnoseClusterRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnoseClusterRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterRequest} DiagnoseClusterRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseClusterRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnoseClusterRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnoseClusterRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiagnoseClusterRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterRequest} DiagnoseClusterRequest
                         */
                        DiagnoseClusterRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DiagnoseClusterRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DiagnoseClusterRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnoseClusterRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DiagnoseClusterRequest} message DiagnoseClusterRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnoseClusterRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.clusterName = "";
                                object.region = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this DiagnoseClusterRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnoseClusterRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnoseClusterRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnoseClusterRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DiagnoseClusterRequest";
                        };
    
                        return DiagnoseClusterRequest;
                    })();
    
                    v1.DiagnoseClusterResults = (function() {
    
                        /**
                         * Properties of a DiagnoseClusterResults.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDiagnoseClusterResults
                         * @property {string|null} [outputUri] DiagnoseClusterResults outputUri
                         */
    
                        /**
                         * Constructs a new DiagnoseClusterResults.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DiagnoseClusterResults.
                         * @implements IDiagnoseClusterResults
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterResults=} [properties] Properties to set
                         */
                        function DiagnoseClusterResults(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DiagnoseClusterResults outputUri.
                         * @member {string} outputUri
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @instance
                         */
                        DiagnoseClusterResults.prototype.outputUri = "";
    
                        /**
                         * Creates a new DiagnoseClusterResults instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterResults=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterResults} DiagnoseClusterResults instance
                         */
                        DiagnoseClusterResults.create = function create(properties) {
                            return new DiagnoseClusterResults(properties);
                        };
    
                        /**
                         * Encodes the specified DiagnoseClusterResults message. Does not implicitly {@link google.cloud.dataproc.v1.DiagnoseClusterResults.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterResults} message DiagnoseClusterResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseClusterResults.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.outputUri != null && Object.hasOwnProperty.call(message, "outputUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.outputUri);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DiagnoseClusterResults message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DiagnoseClusterResults.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {google.cloud.dataproc.v1.IDiagnoseClusterResults} message DiagnoseClusterResults message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DiagnoseClusterResults.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DiagnoseClusterResults message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterResults} DiagnoseClusterResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseClusterResults.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DiagnoseClusterResults();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.outputUri = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DiagnoseClusterResults message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterResults} DiagnoseClusterResults
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DiagnoseClusterResults.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DiagnoseClusterResults message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DiagnoseClusterResults.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.outputUri != null && message.hasOwnProperty("outputUri"))
                                if (!$util.isString(message.outputUri))
                                    return "outputUri: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DiagnoseClusterResults message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DiagnoseClusterResults} DiagnoseClusterResults
                         */
                        DiagnoseClusterResults.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DiagnoseClusterResults)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DiagnoseClusterResults();
                            if (object.outputUri != null)
                                message.outputUri = String(object.outputUri);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DiagnoseClusterResults message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {google.cloud.dataproc.v1.DiagnoseClusterResults} message DiagnoseClusterResults
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DiagnoseClusterResults.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.outputUri = "";
                            if (message.outputUri != null && message.hasOwnProperty("outputUri"))
                                object.outputUri = message.outputUri;
                            return object;
                        };
    
                        /**
                         * Converts this DiagnoseClusterResults to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DiagnoseClusterResults.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DiagnoseClusterResults
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DiagnoseClusterResults
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DiagnoseClusterResults.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DiagnoseClusterResults";
                        };
    
                        return DiagnoseClusterResults;
                    })();
    
                    v1.ReservationAffinity = (function() {
    
                        /**
                         * Properties of a ReservationAffinity.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IReservationAffinity
                         * @property {google.cloud.dataproc.v1.ReservationAffinity.Type|null} [consumeReservationType] ReservationAffinity consumeReservationType
                         * @property {string|null} [key] ReservationAffinity key
                         * @property {Array.<string>|null} [values] ReservationAffinity values
                         */
    
                        /**
                         * Constructs a new ReservationAffinity.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ReservationAffinity.
                         * @implements IReservationAffinity
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IReservationAffinity=} [properties] Properties to set
                         */
                        function ReservationAffinity(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ReservationAffinity consumeReservationType.
                         * @member {google.cloud.dataproc.v1.ReservationAffinity.Type} consumeReservationType
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.consumeReservationType = 0;
    
                        /**
                         * ReservationAffinity key.
                         * @member {string} key
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.key = "";
    
                        /**
                         * ReservationAffinity values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @instance
                         */
                        ReservationAffinity.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new ReservationAffinity instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.IReservationAffinity=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ReservationAffinity} ReservationAffinity instance
                         */
                        ReservationAffinity.create = function create(properties) {
                            return new ReservationAffinity(properties);
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message. Does not implicitly {@link google.cloud.dataproc.v1.ReservationAffinity.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.consumeReservationType != null && Object.hasOwnProperty.call(message, "consumeReservationType"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.consumeReservationType);
                            if (message.key != null && Object.hasOwnProperty.call(message, "key"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.key);
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ReservationAffinity message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ReservationAffinity.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.IReservationAffinity} message ReservationAffinity message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ReservationAffinity.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ReservationAffinity();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.consumeReservationType = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.key = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ReservationAffinity message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ReservationAffinity} ReservationAffinity
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ReservationAffinity.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ReservationAffinity message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ReservationAffinity.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                switch (message.consumeReservationType) {
                                default:
                                    return "consumeReservationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.key != null && message.hasOwnProperty("key"))
                                if (!$util.isString(message.key))
                                    return "key: string expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ReservationAffinity message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ReservationAffinity} ReservationAffinity
                         */
                        ReservationAffinity.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ReservationAffinity)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ReservationAffinity();
                            switch (object.consumeReservationType) {
                            default:
                                if (typeof object.consumeReservationType === "number") {
                                    message.consumeReservationType = object.consumeReservationType;
                                    break;
                                }
                                break;
                            case "TYPE_UNSPECIFIED":
                            case 0:
                                message.consumeReservationType = 0;
                                break;
                            case "NO_RESERVATION":
                            case 1:
                                message.consumeReservationType = 1;
                                break;
                            case "ANY_RESERVATION":
                            case 2:
                                message.consumeReservationType = 2;
                                break;
                            case "SPECIFIC_RESERVATION":
                            case 3:
                                message.consumeReservationType = 3;
                                break;
                            }
                            if (object.key != null)
                                message.key = String(object.key);
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.dataproc.v1.ReservationAffinity.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ReservationAffinity message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {google.cloud.dataproc.v1.ReservationAffinity} message ReservationAffinity
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ReservationAffinity.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (options.defaults) {
                                object.consumeReservationType = options.enums === String ? "TYPE_UNSPECIFIED" : 0;
                                object.key = "";
                            }
                            if (message.consumeReservationType != null && message.hasOwnProperty("consumeReservationType"))
                                object.consumeReservationType = options.enums === String ? $root.google.cloud.dataproc.v1.ReservationAffinity.Type[message.consumeReservationType] === undefined ? message.consumeReservationType : $root.google.cloud.dataproc.v1.ReservationAffinity.Type[message.consumeReservationType] : message.consumeReservationType;
                            if (message.key != null && message.hasOwnProperty("key"))
                                object.key = message.key;
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ReservationAffinity to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ReservationAffinity.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ReservationAffinity
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ReservationAffinity
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ReservationAffinity.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ReservationAffinity";
                        };
    
                        /**
                         * Type enum.
                         * @name google.cloud.dataproc.v1.ReservationAffinity.Type
                         * @enum {number}
                         * @property {number} TYPE_UNSPECIFIED=0 TYPE_UNSPECIFIED value
                         * @property {number} NO_RESERVATION=1 NO_RESERVATION value
                         * @property {number} ANY_RESERVATION=2 ANY_RESERVATION value
                         * @property {number} SPECIFIC_RESERVATION=3 SPECIFIC_RESERVATION value
                         */
                        ReservationAffinity.Type = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NO_RESERVATION"] = 1;
                            values[valuesById[2] = "ANY_RESERVATION"] = 2;
                            values[valuesById[3] = "SPECIFIC_RESERVATION"] = 3;
                            return values;
                        })();
    
                        return ReservationAffinity;
                    })();
    
                    v1.JobController = (function() {
    
                        /**
                         * Constructs a new JobController service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobController
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function JobController(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (JobController.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = JobController;
    
                        /**
                         * Creates new JobController service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {JobController} RPC service. Useful where requests and/or responses are streamed.
                         */
                        JobController.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|submitJob}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef SubmitJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Job} [response] Job
                         */
    
                        /**
                         * Calls SubmitJob.
                         * @function submitJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} request SubmitJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.SubmitJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.submitJob = function submitJob(request, callback) {
                            return this.rpcCall(submitJob, $root.google.cloud.dataproc.v1.SubmitJobRequest, $root.google.cloud.dataproc.v1.Job, request, callback);
                        }, "name", { value: "SubmitJob" });
    
                        /**
                         * Calls SubmitJob.
                         * @function submitJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} request SubmitJobRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|submitJobAsOperation}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef SubmitJobAsOperationCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls SubmitJobAsOperation.
                         * @function submitJobAsOperation
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} request SubmitJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.SubmitJobAsOperationCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.submitJobAsOperation = function submitJobAsOperation(request, callback) {
                            return this.rpcCall(submitJobAsOperation, $root.google.cloud.dataproc.v1.SubmitJobRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "SubmitJobAsOperation" });
    
                        /**
                         * Calls SubmitJobAsOperation.
                         * @function submitJobAsOperation
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} request SubmitJobRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|getJob}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef GetJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Job} [response] Job
                         */
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetJobRequest} request GetJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.GetJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.getJob = function getJob(request, callback) {
                            return this.rpcCall(getJob, $root.google.cloud.dataproc.v1.GetJobRequest, $root.google.cloud.dataproc.v1.Job, request, callback);
                        }, "name", { value: "GetJob" });
    
                        /**
                         * Calls GetJob.
                         * @function getJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetJobRequest} request GetJobRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|listJobs}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef ListJobsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.ListJobsResponse} [response] ListJobsResponse
                         */
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListJobsRequest} request ListJobsRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.ListJobsCallback} callback Node-style callback called with the error, if any, and ListJobsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.listJobs = function listJobs(request, callback) {
                            return this.rpcCall(listJobs, $root.google.cloud.dataproc.v1.ListJobsRequest, $root.google.cloud.dataproc.v1.ListJobsResponse, request, callback);
                        }, "name", { value: "ListJobs" });
    
                        /**
                         * Calls ListJobs.
                         * @function listJobs
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListJobsRequest} request ListJobsRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.ListJobsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|updateJob}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef UpdateJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Job} [response] Job
                         */
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.UpdateJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.updateJob = function updateJob(request, callback) {
                            return this.rpcCall(updateJob, $root.google.cloud.dataproc.v1.UpdateJobRequest, $root.google.cloud.dataproc.v1.Job, request, callback);
                        }, "name", { value: "UpdateJob" });
    
                        /**
                         * Calls UpdateJob.
                         * @function updateJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest} request UpdateJobRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|cancelJob}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef CancelJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.Job} [response] Job
                         */
    
                        /**
                         * Calls CancelJob.
                         * @function cancelJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest} request CancelJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.CancelJobCallback} callback Node-style callback called with the error, if any, and Job
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.cancelJob = function cancelJob(request, callback) {
                            return this.rpcCall(cancelJob, $root.google.cloud.dataproc.v1.CancelJobRequest, $root.google.cloud.dataproc.v1.Job, request, callback);
                        }, "name", { value: "CancelJob" });
    
                        /**
                         * Calls CancelJob.
                         * @function cancelJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest} request CancelJobRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.Job>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.JobController|deleteJob}.
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @typedef DeleteJobCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @param {google.cloud.dataproc.v1.JobController.DeleteJobCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(JobController.prototype.deleteJob = function deleteJob(request, callback) {
                            return this.rpcCall(deleteJob, $root.google.cloud.dataproc.v1.DeleteJobRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteJob" });
    
                        /**
                         * Calls DeleteJob.
                         * @function deleteJob
                         * @memberof google.cloud.dataproc.v1.JobController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest} request DeleteJobRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return JobController;
                    })();
    
                    v1.LoggingConfig = (function() {
    
                        /**
                         * Properties of a LoggingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ILoggingConfig
                         * @property {Object.<string,google.cloud.dataproc.v1.LoggingConfig.Level>|null} [driverLogLevels] LoggingConfig driverLogLevels
                         */
    
                        /**
                         * Constructs a new LoggingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a LoggingConfig.
                         * @implements ILoggingConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ILoggingConfig=} [properties] Properties to set
                         */
                        function LoggingConfig(properties) {
                            this.driverLogLevels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * LoggingConfig driverLogLevels.
                         * @member {Object.<string,google.cloud.dataproc.v1.LoggingConfig.Level>} driverLogLevels
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @instance
                         */
                        LoggingConfig.prototype.driverLogLevels = $util.emptyObject;
    
                        /**
                         * Creates a new LoggingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILoggingConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.LoggingConfig} LoggingConfig instance
                         */
                        LoggingConfig.create = function create(properties) {
                            return new LoggingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified LoggingConfig message. Does not implicitly {@link google.cloud.dataproc.v1.LoggingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILoggingConfig} message LoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LoggingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.driverLogLevels != null && Object.hasOwnProperty.call(message, "driverLogLevels"))
                                for (var keys = Object.keys(message.driverLogLevels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 0 =*/16).int32(message.driverLogLevels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified LoggingConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.LoggingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.ILoggingConfig} message LoggingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LoggingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a LoggingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.LoggingConfig} LoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LoggingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.LoggingConfig(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        if (message.driverLogLevels === $util.emptyObject)
                                            message.driverLogLevels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = 0;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.int32();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.driverLogLevels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a LoggingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.LoggingConfig} LoggingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LoggingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a LoggingConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LoggingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.driverLogLevels != null && message.hasOwnProperty("driverLogLevels")) {
                                if (!$util.isObject(message.driverLogLevels))
                                    return "driverLogLevels: object expected";
                                var key = Object.keys(message.driverLogLevels);
                                for (var i = 0; i < key.length; ++i)
                                    switch (message.driverLogLevels[key[i]]) {
                                    default:
                                        return "driverLogLevels: enum value{k:string} expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                    case 8:
                                        break;
                                    }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a LoggingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.LoggingConfig} LoggingConfig
                         */
                        LoggingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.LoggingConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.LoggingConfig();
                            if (object.driverLogLevels) {
                                if (typeof object.driverLogLevels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.LoggingConfig.driverLogLevels: object expected");
                                message.driverLogLevels = {};
                                for (var keys = Object.keys(object.driverLogLevels), i = 0; i < keys.length; ++i)
                                    switch (object.driverLogLevels[keys[i]]) {
                                    default:
                                        if (typeof object.driverLogLevels[keys[i]] === "number") {
                                            message.driverLogLevels[keys[i]] = object.driverLogLevels[keys[i]];
                                            break;
                                        }
                                        break;
                                    case "LEVEL_UNSPECIFIED":
                                    case 0:
                                        message.driverLogLevels[keys[i]] = 0;
                                        break;
                                    case "ALL":
                                    case 1:
                                        message.driverLogLevels[keys[i]] = 1;
                                        break;
                                    case "TRACE":
                                    case 2:
                                        message.driverLogLevels[keys[i]] = 2;
                                        break;
                                    case "DEBUG":
                                    case 3:
                                        message.driverLogLevels[keys[i]] = 3;
                                        break;
                                    case "INFO":
                                    case 4:
                                        message.driverLogLevels[keys[i]] = 4;
                                        break;
                                    case "WARN":
                                    case 5:
                                        message.driverLogLevels[keys[i]] = 5;
                                        break;
                                    case "ERROR":
                                    case 6:
                                        message.driverLogLevels[keys[i]] = 6;
                                        break;
                                    case "FATAL":
                                    case 7:
                                        message.driverLogLevels[keys[i]] = 7;
                                        break;
                                    case "OFF":
                                    case 8:
                                        message.driverLogLevels[keys[i]] = 8;
                                        break;
                                    }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a LoggingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.LoggingConfig} message LoggingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LoggingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.driverLogLevels = {};
                            var keys2;
                            if (message.driverLogLevels && (keys2 = Object.keys(message.driverLogLevels)).length) {
                                object.driverLogLevels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.driverLogLevels[keys2[j]] = options.enums === String ? $root.google.cloud.dataproc.v1.LoggingConfig.Level[message.driverLogLevels[keys2[j]]] === undefined ? message.driverLogLevels[keys2[j]] : $root.google.cloud.dataproc.v1.LoggingConfig.Level[message.driverLogLevels[keys2[j]]] : message.driverLogLevels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this LoggingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LoggingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for LoggingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.LoggingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LoggingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.LoggingConfig";
                        };
    
                        /**
                         * Level enum.
                         * @name google.cloud.dataproc.v1.LoggingConfig.Level
                         * @enum {number}
                         * @property {number} LEVEL_UNSPECIFIED=0 LEVEL_UNSPECIFIED value
                         * @property {number} ALL=1 ALL value
                         * @property {number} TRACE=2 TRACE value
                         * @property {number} DEBUG=3 DEBUG value
                         * @property {number} INFO=4 INFO value
                         * @property {number} WARN=5 WARN value
                         * @property {number} ERROR=6 ERROR value
                         * @property {number} FATAL=7 FATAL value
                         * @property {number} OFF=8 OFF value
                         */
                        LoggingConfig.Level = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "LEVEL_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ALL"] = 1;
                            values[valuesById[2] = "TRACE"] = 2;
                            values[valuesById[3] = "DEBUG"] = 3;
                            values[valuesById[4] = "INFO"] = 4;
                            values[valuesById[5] = "WARN"] = 5;
                            values[valuesById[6] = "ERROR"] = 6;
                            values[valuesById[7] = "FATAL"] = 7;
                            values[valuesById[8] = "OFF"] = 8;
                            return values;
                        })();
    
                        return LoggingConfig;
                    })();
    
                    v1.HadoopJob = (function() {
    
                        /**
                         * Properties of a HadoopJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IHadoopJob
                         * @property {string|null} [mainJarFileUri] HadoopJob mainJarFileUri
                         * @property {string|null} [mainClass] HadoopJob mainClass
                         * @property {Array.<string>|null} [args] HadoopJob args
                         * @property {Array.<string>|null} [jarFileUris] HadoopJob jarFileUris
                         * @property {Array.<string>|null} [fileUris] HadoopJob fileUris
                         * @property {Array.<string>|null} [archiveUris] HadoopJob archiveUris
                         * @property {Object.<string,string>|null} [properties] HadoopJob properties
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] HadoopJob loggingConfig
                         */
    
                        /**
                         * Constructs a new HadoopJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a HadoopJob.
                         * @implements IHadoopJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IHadoopJob=} [properties] Properties to set
                         */
                        function HadoopJob(properties) {
                            this.args = [];
                            this.jarFileUris = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HadoopJob mainJarFileUri.
                         * @member {string|null|undefined} mainJarFileUri
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.mainJarFileUri = null;
    
                        /**
                         * HadoopJob mainClass.
                         * @member {string|null|undefined} mainClass
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.mainClass = null;
    
                        /**
                         * HadoopJob args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.args = $util.emptyArray;
    
                        /**
                         * HadoopJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * HadoopJob fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * HadoopJob archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * HadoopJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * HadoopJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        HadoopJob.prototype.loggingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HadoopJob driver.
                         * @member {"mainJarFileUri"|"mainClass"|undefined} driver
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         */
                        Object.defineProperty(HadoopJob.prototype, "driver", {
                            get: $util.oneOfGetter($oneOfFields = ["mainJarFileUri", "mainClass"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HadoopJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHadoopJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.HadoopJob} HadoopJob instance
                         */
                        HadoopJob.create = function create(properties) {
                            return new HadoopJob(properties);
                        };
    
                        /**
                         * Encodes the specified HadoopJob message. Does not implicitly {@link google.cloud.dataproc.v1.HadoopJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHadoopJob} message HadoopJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HadoopJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainJarFileUri != null && Object.hasOwnProperty.call(message, "mainJarFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainJarFileUri);
                            if (message.mainClass != null && Object.hasOwnProperty.call(message, "mainClass"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mainClass);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.args[i]);
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jarFileUris[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.archiveUris[i]);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HadoopJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.HadoopJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHadoopJob} message HadoopJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HadoopJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HadoopJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.HadoopJob} HadoopJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HadoopJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.HadoopJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainJarFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.mainClass = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 8: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HadoopJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.HadoopJob} HadoopJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HadoopJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HadoopJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HadoopJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                properties.driver = 1;
                                if (!$util.isString(message.mainJarFileUri))
                                    return "mainJarFileUri: string expected";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                if (properties.driver === 1)
                                    return "driver: multiple values";
                                properties.driver = 1;
                                if (!$util.isString(message.mainClass))
                                    return "mainClass: string expected";
                            }
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HadoopJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.HadoopJob} HadoopJob
                         */
                        HadoopJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.HadoopJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.HadoopJob();
                            if (object.mainJarFileUri != null)
                                message.mainJarFileUri = String(object.mainJarFileUri);
                            if (object.mainClass != null)
                                message.mainClass = String(object.mainClass);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.HadoopJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HadoopJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {google.cloud.dataproc.v1.HadoopJob} message HadoopJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HadoopJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.jarFileUris = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults)
                                object.loggingConfig = null;
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                object.mainJarFileUri = message.mainJarFileUri;
                                if (options.oneofs)
                                    object.driver = "mainJarFileUri";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                object.mainClass = message.mainClass;
                                if (options.oneofs)
                                    object.driver = "mainClass";
                            }
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this HadoopJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HadoopJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HadoopJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.HadoopJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HadoopJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.HadoopJob";
                        };
    
                        return HadoopJob;
                    })();
    
                    v1.SparkJob = (function() {
    
                        /**
                         * Properties of a SparkJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkJob
                         * @property {string|null} [mainJarFileUri] SparkJob mainJarFileUri
                         * @property {string|null} [mainClass] SparkJob mainClass
                         * @property {Array.<string>|null} [args] SparkJob args
                         * @property {Array.<string>|null} [jarFileUris] SparkJob jarFileUris
                         * @property {Array.<string>|null} [fileUris] SparkJob fileUris
                         * @property {Array.<string>|null} [archiveUris] SparkJob archiveUris
                         * @property {Object.<string,string>|null} [properties] SparkJob properties
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] SparkJob loggingConfig
                         */
    
                        /**
                         * Constructs a new SparkJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkJob.
                         * @implements ISparkJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkJob=} [properties] Properties to set
                         */
                        function SparkJob(properties) {
                            this.args = [];
                            this.jarFileUris = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkJob mainJarFileUri.
                         * @member {string|null|undefined} mainJarFileUri
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.mainJarFileUri = null;
    
                        /**
                         * SparkJob mainClass.
                         * @member {string|null|undefined} mainClass
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.mainClass = null;
    
                        /**
                         * SparkJob args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.args = $util.emptyArray;
    
                        /**
                         * SparkJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * SparkJob fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * SparkJob archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * SparkJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * SparkJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        SparkJob.prototype.loggingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SparkJob driver.
                         * @member {"mainJarFileUri"|"mainClass"|undefined} driver
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         */
                        Object.defineProperty(SparkJob.prototype, "driver", {
                            get: $util.oneOfGetter($oneOfFields = ["mainJarFileUri", "mainClass"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SparkJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkJob} SparkJob instance
                         */
                        SparkJob.create = function create(properties) {
                            return new SparkJob(properties);
                        };
    
                        /**
                         * Encodes the specified SparkJob message. Does not implicitly {@link google.cloud.dataproc.v1.SparkJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkJob} message SparkJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainJarFileUri != null && Object.hasOwnProperty.call(message, "mainJarFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainJarFileUri);
                            if (message.mainClass != null && Object.hasOwnProperty.call(message, "mainClass"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.mainClass);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.args[i]);
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jarFileUris[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.archiveUris[i]);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkJob} message SparkJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkJob} SparkJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainJarFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.mainClass = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 8: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkJob} SparkJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                properties.driver = 1;
                                if (!$util.isString(message.mainJarFileUri))
                                    return "mainJarFileUri: string expected";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                if (properties.driver === 1)
                                    return "driver: multiple values";
                                properties.driver = 1;
                                if (!$util.isString(message.mainClass))
                                    return "mainClass: string expected";
                            }
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkJob} SparkJob
                         */
                        SparkJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkJob();
                            if (object.mainJarFileUri != null)
                                message.mainJarFileUri = String(object.mainJarFileUri);
                            if (object.mainClass != null)
                                message.mainClass = String(object.mainClass);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkJob} message SparkJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.jarFileUris = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults)
                                object.loggingConfig = null;
                            if (message.mainJarFileUri != null && message.hasOwnProperty("mainJarFileUri")) {
                                object.mainJarFileUri = message.mainJarFileUri;
                                if (options.oneofs)
                                    object.driver = "mainJarFileUri";
                            }
                            if (message.mainClass != null && message.hasOwnProperty("mainClass")) {
                                object.mainClass = message.mainClass;
                                if (options.oneofs)
                                    object.driver = "mainClass";
                            }
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this SparkJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkJob";
                        };
    
                        return SparkJob;
                    })();
    
                    v1.PySparkJob = (function() {
    
                        /**
                         * Properties of a PySparkJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IPySparkJob
                         * @property {string|null} [mainPythonFileUri] PySparkJob mainPythonFileUri
                         * @property {Array.<string>|null} [args] PySparkJob args
                         * @property {Array.<string>|null} [pythonFileUris] PySparkJob pythonFileUris
                         * @property {Array.<string>|null} [jarFileUris] PySparkJob jarFileUris
                         * @property {Array.<string>|null} [fileUris] PySparkJob fileUris
                         * @property {Array.<string>|null} [archiveUris] PySparkJob archiveUris
                         * @property {Object.<string,string>|null} [properties] PySparkJob properties
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] PySparkJob loggingConfig
                         */
    
                        /**
                         * Constructs a new PySparkJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a PySparkJob.
                         * @implements IPySparkJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IPySparkJob=} [properties] Properties to set
                         */
                        function PySparkJob(properties) {
                            this.args = [];
                            this.pythonFileUris = [];
                            this.jarFileUris = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PySparkJob mainPythonFileUri.
                         * @member {string} mainPythonFileUri
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.mainPythonFileUri = "";
    
                        /**
                         * PySparkJob args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.args = $util.emptyArray;
    
                        /**
                         * PySparkJob pythonFileUris.
                         * @member {Array.<string>} pythonFileUris
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.pythonFileUris = $util.emptyArray;
    
                        /**
                         * PySparkJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * PySparkJob fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * PySparkJob archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * PySparkJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * PySparkJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         */
                        PySparkJob.prototype.loggingConfig = null;
    
                        /**
                         * Creates a new PySparkJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.PySparkJob} PySparkJob instance
                         */
                        PySparkJob.create = function create(properties) {
                            return new PySparkJob(properties);
                        };
    
                        /**
                         * Encodes the specified PySparkJob message. Does not implicitly {@link google.cloud.dataproc.v1.PySparkJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkJob} message PySparkJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PySparkJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainPythonFileUri != null && Object.hasOwnProperty.call(message, "mainPythonFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainPythonFileUri);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.args[i]);
                            if (message.pythonFileUris != null && message.pythonFileUris.length)
                                for (var i = 0; i < message.pythonFileUris.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.pythonFileUris[i]);
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.jarFileUris[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.archiveUris[i]);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PySparkJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.PySparkJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPySparkJob} message PySparkJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PySparkJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PySparkJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.PySparkJob} PySparkJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PySparkJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.PySparkJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainPythonFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.pythonFileUris && message.pythonFileUris.length))
                                            message.pythonFileUris = [];
                                        message.pythonFileUris.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 8: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PySparkJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.PySparkJob} PySparkJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PySparkJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PySparkJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PySparkJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mainPythonFileUri != null && message.hasOwnProperty("mainPythonFileUri"))
                                if (!$util.isString(message.mainPythonFileUri))
                                    return "mainPythonFileUri: string expected";
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.pythonFileUris != null && message.hasOwnProperty("pythonFileUris")) {
                                if (!Array.isArray(message.pythonFileUris))
                                    return "pythonFileUris: array expected";
                                for (var i = 0; i < message.pythonFileUris.length; ++i)
                                    if (!$util.isString(message.pythonFileUris[i]))
                                        return "pythonFileUris: string[] expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PySparkJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.PySparkJob} PySparkJob
                         */
                        PySparkJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.PySparkJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.PySparkJob();
                            if (object.mainPythonFileUri != null)
                                message.mainPythonFileUri = String(object.mainPythonFileUri);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.pythonFileUris) {
                                if (!Array.isArray(object.pythonFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.pythonFileUris: array expected");
                                message.pythonFileUris = [];
                                for (var i = 0; i < object.pythonFileUris.length; ++i)
                                    message.pythonFileUris[i] = String(object.pythonFileUris[i]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PySparkJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PySparkJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {google.cloud.dataproc.v1.PySparkJob} message PySparkJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PySparkJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.pythonFileUris = [];
                                object.jarFileUris = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults) {
                                object.mainPythonFileUri = "";
                                object.loggingConfig = null;
                            }
                            if (message.mainPythonFileUri != null && message.hasOwnProperty("mainPythonFileUri"))
                                object.mainPythonFileUri = message.mainPythonFileUri;
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.pythonFileUris && message.pythonFileUris.length) {
                                object.pythonFileUris = [];
                                for (var j = 0; j < message.pythonFileUris.length; ++j)
                                    object.pythonFileUris[j] = message.pythonFileUris[j];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PySparkJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PySparkJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PySparkJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.PySparkJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PySparkJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.PySparkJob";
                        };
    
                        return PySparkJob;
                    })();
    
                    v1.QueryList = (function() {
    
                        /**
                         * Properties of a QueryList.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IQueryList
                         * @property {Array.<string>|null} [queries] QueryList queries
                         */
    
                        /**
                         * Constructs a new QueryList.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a QueryList.
                         * @implements IQueryList
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IQueryList=} [properties] Properties to set
                         */
                        function QueryList(properties) {
                            this.queries = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * QueryList queries.
                         * @member {Array.<string>} queries
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @instance
                         */
                        QueryList.prototype.queries = $util.emptyArray;
    
                        /**
                         * Creates a new QueryList instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {google.cloud.dataproc.v1.IQueryList=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.QueryList} QueryList instance
                         */
                        QueryList.create = function create(properties) {
                            return new QueryList(properties);
                        };
    
                        /**
                         * Encodes the specified QueryList message. Does not implicitly {@link google.cloud.dataproc.v1.QueryList.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {google.cloud.dataproc.v1.IQueryList} message QueryList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryList.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queries != null && message.queries.length)
                                for (var i = 0; i < message.queries.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.queries[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified QueryList message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.QueryList.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {google.cloud.dataproc.v1.IQueryList} message QueryList message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        QueryList.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a QueryList message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.QueryList} QueryList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryList.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.QueryList();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.queries && message.queries.length))
                                            message.queries = [];
                                        message.queries.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a QueryList message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.QueryList} QueryList
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        QueryList.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a QueryList message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        QueryList.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.queries != null && message.hasOwnProperty("queries")) {
                                if (!Array.isArray(message.queries))
                                    return "queries: array expected";
                                for (var i = 0; i < message.queries.length; ++i)
                                    if (!$util.isString(message.queries[i]))
                                        return "queries: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a QueryList message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.QueryList} QueryList
                         */
                        QueryList.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.QueryList)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.QueryList();
                            if (object.queries) {
                                if (!Array.isArray(object.queries))
                                    throw TypeError(".google.cloud.dataproc.v1.QueryList.queries: array expected");
                                message.queries = [];
                                for (var i = 0; i < object.queries.length; ++i)
                                    message.queries[i] = String(object.queries[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a QueryList message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {google.cloud.dataproc.v1.QueryList} message QueryList
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        QueryList.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.queries = [];
                            if (message.queries && message.queries.length) {
                                object.queries = [];
                                for (var j = 0; j < message.queries.length; ++j)
                                    object.queries[j] = message.queries[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this QueryList to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        QueryList.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for QueryList
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.QueryList
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        QueryList.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.QueryList";
                        };
    
                        return QueryList;
                    })();
    
                    v1.HiveJob = (function() {
    
                        /**
                         * Properties of a HiveJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IHiveJob
                         * @property {string|null} [queryFileUri] HiveJob queryFileUri
                         * @property {google.cloud.dataproc.v1.IQueryList|null} [queryList] HiveJob queryList
                         * @property {boolean|null} [continueOnFailure] HiveJob continueOnFailure
                         * @property {Object.<string,string>|null} [scriptVariables] HiveJob scriptVariables
                         * @property {Object.<string,string>|null} [properties] HiveJob properties
                         * @property {Array.<string>|null} [jarFileUris] HiveJob jarFileUris
                         */
    
                        /**
                         * Constructs a new HiveJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a HiveJob.
                         * @implements IHiveJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IHiveJob=} [properties] Properties to set
                         */
                        function HiveJob(properties) {
                            this.scriptVariables = {};
                            this.properties = {};
                            this.jarFileUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * HiveJob queryFileUri.
                         * @member {string|null|undefined} queryFileUri
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.queryFileUri = null;
    
                        /**
                         * HiveJob queryList.
                         * @member {google.cloud.dataproc.v1.IQueryList|null|undefined} queryList
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.queryList = null;
    
                        /**
                         * HiveJob continueOnFailure.
                         * @member {boolean} continueOnFailure
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.continueOnFailure = false;
    
                        /**
                         * HiveJob scriptVariables.
                         * @member {Object.<string,string>} scriptVariables
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.scriptVariables = $util.emptyObject;
    
                        /**
                         * HiveJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * HiveJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        HiveJob.prototype.jarFileUris = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * HiveJob queries.
                         * @member {"queryFileUri"|"queryList"|undefined} queries
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         */
                        Object.defineProperty(HiveJob.prototype, "queries", {
                            get: $util.oneOfGetter($oneOfFields = ["queryFileUri", "queryList"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new HiveJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHiveJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.HiveJob} HiveJob instance
                         */
                        HiveJob.create = function create(properties) {
                            return new HiveJob(properties);
                        };
    
                        /**
                         * Encodes the specified HiveJob message. Does not implicitly {@link google.cloud.dataproc.v1.HiveJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHiveJob} message HiveJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryFileUri != null && Object.hasOwnProperty.call(message, "queryFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryFileUri);
                            if (message.queryList != null && Object.hasOwnProperty.call(message, "queryList"))
                                $root.google.cloud.dataproc.v1.QueryList.encode(message.queryList, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.continueOnFailure != null && Object.hasOwnProperty.call(message, "continueOnFailure"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.continueOnFailure);
                            if (message.scriptVariables != null && Object.hasOwnProperty.call(message, "scriptVariables"))
                                for (var keys = Object.keys(message.scriptVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.scriptVariables[keys[i]]).ldelim();
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.jarFileUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified HiveJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.HiveJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IHiveJob} message HiveJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        HiveJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a HiveJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.HiveJob} HiveJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.HiveJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queryList = $root.google.cloud.dataproc.v1.QueryList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.continueOnFailure = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        if (message.scriptVariables === $util.emptyObject)
                                            message.scriptVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.scriptVariables[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 6: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a HiveJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.HiveJob} HiveJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        HiveJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a HiveJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        HiveJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                properties.queries = 1;
                                if (!$util.isString(message.queryFileUri))
                                    return "queryFileUri: string expected";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                if (properties.queries === 1)
                                    return "queries: multiple values";
                                properties.queries = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.QueryList.verify(message.queryList);
                                    if (error)
                                        return "queryList." + error;
                                }
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                if (typeof message.continueOnFailure !== "boolean")
                                    return "continueOnFailure: boolean expected";
                            if (message.scriptVariables != null && message.hasOwnProperty("scriptVariables")) {
                                if (!$util.isObject(message.scriptVariables))
                                    return "scriptVariables: object expected";
                                var key = Object.keys(message.scriptVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.scriptVariables[key[i]]))
                                        return "scriptVariables: string{k:string} expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a HiveJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.HiveJob} HiveJob
                         */
                        HiveJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.HiveJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.HiveJob();
                            if (object.queryFileUri != null)
                                message.queryFileUri = String(object.queryFileUri);
                            if (object.queryList != null) {
                                if (typeof object.queryList !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.HiveJob.queryList: object expected");
                                message.queryList = $root.google.cloud.dataproc.v1.QueryList.fromObject(object.queryList);
                            }
                            if (object.continueOnFailure != null)
                                message.continueOnFailure = Boolean(object.continueOnFailure);
                            if (object.scriptVariables) {
                                if (typeof object.scriptVariables !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.HiveJob.scriptVariables: object expected");
                                message.scriptVariables = {};
                                for (var keys = Object.keys(object.scriptVariables), i = 0; i < keys.length; ++i)
                                    message.scriptVariables[keys[i]] = String(object.scriptVariables[keys[i]]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.HiveJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.HiveJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a HiveJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {google.cloud.dataproc.v1.HiveJob} message HiveJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        HiveJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jarFileUris = [];
                            if (options.objects || options.defaults) {
                                object.scriptVariables = {};
                                object.properties = {};
                            }
                            if (options.defaults)
                                object.continueOnFailure = false;
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                object.queryFileUri = message.queryFileUri;
                                if (options.oneofs)
                                    object.queries = "queryFileUri";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                object.queryList = $root.google.cloud.dataproc.v1.QueryList.toObject(message.queryList, options);
                                if (options.oneofs)
                                    object.queries = "queryList";
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                object.continueOnFailure = message.continueOnFailure;
                            var keys2;
                            if (message.scriptVariables && (keys2 = Object.keys(message.scriptVariables)).length) {
                                object.scriptVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.scriptVariables[keys2[j]] = message.scriptVariables[keys2[j]];
                            }
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this HiveJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        HiveJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for HiveJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.HiveJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        HiveJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.HiveJob";
                        };
    
                        return HiveJob;
                    })();
    
                    v1.SparkSqlJob = (function() {
    
                        /**
                         * Properties of a SparkSqlJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkSqlJob
                         * @property {string|null} [queryFileUri] SparkSqlJob queryFileUri
                         * @property {google.cloud.dataproc.v1.IQueryList|null} [queryList] SparkSqlJob queryList
                         * @property {Object.<string,string>|null} [scriptVariables] SparkSqlJob scriptVariables
                         * @property {Object.<string,string>|null} [properties] SparkSqlJob properties
                         * @property {Array.<string>|null} [jarFileUris] SparkSqlJob jarFileUris
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] SparkSqlJob loggingConfig
                         */
    
                        /**
                         * Constructs a new SparkSqlJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkSqlJob.
                         * @implements ISparkSqlJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkSqlJob=} [properties] Properties to set
                         */
                        function SparkSqlJob(properties) {
                            this.scriptVariables = {};
                            this.properties = {};
                            this.jarFileUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkSqlJob queryFileUri.
                         * @member {string|null|undefined} queryFileUri
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.queryFileUri = null;
    
                        /**
                         * SparkSqlJob queryList.
                         * @member {google.cloud.dataproc.v1.IQueryList|null|undefined} queryList
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.queryList = null;
    
                        /**
                         * SparkSqlJob scriptVariables.
                         * @member {Object.<string,string>} scriptVariables
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.scriptVariables = $util.emptyObject;
    
                        /**
                         * SparkSqlJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * SparkSqlJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * SparkSqlJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        SparkSqlJob.prototype.loggingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * SparkSqlJob queries.
                         * @member {"queryFileUri"|"queryList"|undefined} queries
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         */
                        Object.defineProperty(SparkSqlJob.prototype, "queries", {
                            get: $util.oneOfGetter($oneOfFields = ["queryFileUri", "queryList"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new SparkSqlJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkSqlJob} SparkSqlJob instance
                         */
                        SparkSqlJob.create = function create(properties) {
                            return new SparkSqlJob(properties);
                        };
    
                        /**
                         * Encodes the specified SparkSqlJob message. Does not implicitly {@link google.cloud.dataproc.v1.SparkSqlJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlJob} message SparkSqlJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkSqlJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryFileUri != null && Object.hasOwnProperty.call(message, "queryFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryFileUri);
                            if (message.queryList != null && Object.hasOwnProperty.call(message, "queryList"))
                                $root.google.cloud.dataproc.v1.QueryList.encode(message.queryList, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.scriptVariables != null && Object.hasOwnProperty.call(message, "scriptVariables"))
                                for (var keys = Object.keys(message.scriptVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.scriptVariables[keys[i]]).ldelim();
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 56, wireType 2 =*/450).string(message.jarFileUris[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkSqlJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkSqlJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkSqlJob} message SparkSqlJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkSqlJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkSqlJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkSqlJob} SparkSqlJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkSqlJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkSqlJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queryList = $root.google.cloud.dataproc.v1.QueryList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (message.scriptVariables === $util.emptyObject)
                                            message.scriptVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.scriptVariables[key] = value;
                                        break;
                                    }
                                case 4: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 56: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkSqlJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkSqlJob} SparkSqlJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkSqlJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkSqlJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkSqlJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                properties.queries = 1;
                                if (!$util.isString(message.queryFileUri))
                                    return "queryFileUri: string expected";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                if (properties.queries === 1)
                                    return "queries: multiple values";
                                properties.queries = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.QueryList.verify(message.queryList);
                                    if (error)
                                        return "queryList." + error;
                                }
                            }
                            if (message.scriptVariables != null && message.hasOwnProperty("scriptVariables")) {
                                if (!$util.isObject(message.scriptVariables))
                                    return "scriptVariables: object expected";
                                var key = Object.keys(message.scriptVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.scriptVariables[key[i]]))
                                        return "scriptVariables: string{k:string} expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkSqlJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkSqlJob} SparkSqlJob
                         */
                        SparkSqlJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkSqlJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkSqlJob();
                            if (object.queryFileUri != null)
                                message.queryFileUri = String(object.queryFileUri);
                            if (object.queryList != null) {
                                if (typeof object.queryList !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlJob.queryList: object expected");
                                message.queryList = $root.google.cloud.dataproc.v1.QueryList.fromObject(object.queryList);
                            }
                            if (object.scriptVariables) {
                                if (typeof object.scriptVariables !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlJob.scriptVariables: object expected");
                                message.scriptVariables = {};
                                for (var keys = Object.keys(object.scriptVariables), i = 0; i < keys.length; ++i)
                                    message.scriptVariables[keys[i]] = String(object.scriptVariables[keys[i]]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkSqlJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkSqlJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkSqlJob} message SparkSqlJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkSqlJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jarFileUris = [];
                            if (options.objects || options.defaults) {
                                object.scriptVariables = {};
                                object.properties = {};
                            }
                            if (options.defaults)
                                object.loggingConfig = null;
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                object.queryFileUri = message.queryFileUri;
                                if (options.oneofs)
                                    object.queries = "queryFileUri";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                object.queryList = $root.google.cloud.dataproc.v1.QueryList.toObject(message.queryList, options);
                                if (options.oneofs)
                                    object.queries = "queryList";
                            }
                            var keys2;
                            if (message.scriptVariables && (keys2 = Object.keys(message.scriptVariables)).length) {
                                object.scriptVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.scriptVariables[keys2[j]] = message.scriptVariables[keys2[j]];
                            }
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this SparkSqlJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkSqlJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkSqlJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkSqlJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkSqlJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkSqlJob";
                        };
    
                        return SparkSqlJob;
                    })();
    
                    v1.PigJob = (function() {
    
                        /**
                         * Properties of a PigJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IPigJob
                         * @property {string|null} [queryFileUri] PigJob queryFileUri
                         * @property {google.cloud.dataproc.v1.IQueryList|null} [queryList] PigJob queryList
                         * @property {boolean|null} [continueOnFailure] PigJob continueOnFailure
                         * @property {Object.<string,string>|null} [scriptVariables] PigJob scriptVariables
                         * @property {Object.<string,string>|null} [properties] PigJob properties
                         * @property {Array.<string>|null} [jarFileUris] PigJob jarFileUris
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] PigJob loggingConfig
                         */
    
                        /**
                         * Constructs a new PigJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a PigJob.
                         * @implements IPigJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IPigJob=} [properties] Properties to set
                         */
                        function PigJob(properties) {
                            this.scriptVariables = {};
                            this.properties = {};
                            this.jarFileUris = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PigJob queryFileUri.
                         * @member {string|null|undefined} queryFileUri
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.queryFileUri = null;
    
                        /**
                         * PigJob queryList.
                         * @member {google.cloud.dataproc.v1.IQueryList|null|undefined} queryList
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.queryList = null;
    
                        /**
                         * PigJob continueOnFailure.
                         * @member {boolean} continueOnFailure
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.continueOnFailure = false;
    
                        /**
                         * PigJob scriptVariables.
                         * @member {Object.<string,string>} scriptVariables
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.scriptVariables = $util.emptyObject;
    
                        /**
                         * PigJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * PigJob jarFileUris.
                         * @member {Array.<string>} jarFileUris
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.jarFileUris = $util.emptyArray;
    
                        /**
                         * PigJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        PigJob.prototype.loggingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PigJob queries.
                         * @member {"queryFileUri"|"queryList"|undefined} queries
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         */
                        Object.defineProperty(PigJob.prototype, "queries", {
                            get: $util.oneOfGetter($oneOfFields = ["queryFileUri", "queryList"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PigJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPigJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.PigJob} PigJob instance
                         */
                        PigJob.create = function create(properties) {
                            return new PigJob(properties);
                        };
    
                        /**
                         * Encodes the specified PigJob message. Does not implicitly {@link google.cloud.dataproc.v1.PigJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPigJob} message PigJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PigJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryFileUri != null && Object.hasOwnProperty.call(message, "queryFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryFileUri);
                            if (message.queryList != null && Object.hasOwnProperty.call(message, "queryList"))
                                $root.google.cloud.dataproc.v1.QueryList.encode(message.queryList, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.continueOnFailure != null && Object.hasOwnProperty.call(message, "continueOnFailure"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.continueOnFailure);
                            if (message.scriptVariables != null && Object.hasOwnProperty.call(message, "scriptVariables"))
                                for (var keys = Object.keys(message.scriptVariables), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.scriptVariables[keys[i]]).ldelim();
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.jarFileUris != null && message.jarFileUris.length)
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.jarFileUris[i]);
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PigJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.PigJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPigJob} message PigJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PigJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PigJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.PigJob} PigJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PigJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.PigJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queryList = $root.google.cloud.dataproc.v1.QueryList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.continueOnFailure = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        if (message.scriptVariables === $util.emptyObject)
                                            message.scriptVariables = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.scriptVariables[key] = value;
                                        break;
                                    }
                                case 5: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 6: {
                                        if (!(message.jarFileUris && message.jarFileUris.length))
                                            message.jarFileUris = [];
                                        message.jarFileUris.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PigJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.PigJob} PigJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PigJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PigJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PigJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                properties.queries = 1;
                                if (!$util.isString(message.queryFileUri))
                                    return "queryFileUri: string expected";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                if (properties.queries === 1)
                                    return "queries: multiple values";
                                properties.queries = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.QueryList.verify(message.queryList);
                                    if (error)
                                        return "queryList." + error;
                                }
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                if (typeof message.continueOnFailure !== "boolean")
                                    return "continueOnFailure: boolean expected";
                            if (message.scriptVariables != null && message.hasOwnProperty("scriptVariables")) {
                                if (!$util.isObject(message.scriptVariables))
                                    return "scriptVariables: object expected";
                                var key = Object.keys(message.scriptVariables);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.scriptVariables[key[i]]))
                                        return "scriptVariables: string{k:string} expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.jarFileUris != null && message.hasOwnProperty("jarFileUris")) {
                                if (!Array.isArray(message.jarFileUris))
                                    return "jarFileUris: array expected";
                                for (var i = 0; i < message.jarFileUris.length; ++i)
                                    if (!$util.isString(message.jarFileUris[i]))
                                        return "jarFileUris: string[] expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PigJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.PigJob} PigJob
                         */
                        PigJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.PigJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.PigJob();
                            if (object.queryFileUri != null)
                                message.queryFileUri = String(object.queryFileUri);
                            if (object.queryList != null) {
                                if (typeof object.queryList !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PigJob.queryList: object expected");
                                message.queryList = $root.google.cloud.dataproc.v1.QueryList.fromObject(object.queryList);
                            }
                            if (object.continueOnFailure != null)
                                message.continueOnFailure = Boolean(object.continueOnFailure);
                            if (object.scriptVariables) {
                                if (typeof object.scriptVariables !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PigJob.scriptVariables: object expected");
                                message.scriptVariables = {};
                                for (var keys = Object.keys(object.scriptVariables), i = 0; i < keys.length; ++i)
                                    message.scriptVariables[keys[i]] = String(object.scriptVariables[keys[i]]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PigJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.jarFileUris) {
                                if (!Array.isArray(object.jarFileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.PigJob.jarFileUris: array expected");
                                message.jarFileUris = [];
                                for (var i = 0; i < object.jarFileUris.length; ++i)
                                    message.jarFileUris[i] = String(object.jarFileUris[i]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PigJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PigJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {google.cloud.dataproc.v1.PigJob} message PigJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PigJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jarFileUris = [];
                            if (options.objects || options.defaults) {
                                object.scriptVariables = {};
                                object.properties = {};
                            }
                            if (options.defaults) {
                                object.continueOnFailure = false;
                                object.loggingConfig = null;
                            }
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                object.queryFileUri = message.queryFileUri;
                                if (options.oneofs)
                                    object.queries = "queryFileUri";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                object.queryList = $root.google.cloud.dataproc.v1.QueryList.toObject(message.queryList, options);
                                if (options.oneofs)
                                    object.queries = "queryList";
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                object.continueOnFailure = message.continueOnFailure;
                            var keys2;
                            if (message.scriptVariables && (keys2 = Object.keys(message.scriptVariables)).length) {
                                object.scriptVariables = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.scriptVariables[keys2[j]] = message.scriptVariables[keys2[j]];
                            }
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.jarFileUris && message.jarFileUris.length) {
                                object.jarFileUris = [];
                                for (var j = 0; j < message.jarFileUris.length; ++j)
                                    object.jarFileUris[j] = message.jarFileUris[j];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PigJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PigJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PigJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.PigJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PigJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.PigJob";
                        };
    
                        return PigJob;
                    })();
    
                    v1.SparkRJob = (function() {
    
                        /**
                         * Properties of a SparkRJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISparkRJob
                         * @property {string|null} [mainRFileUri] SparkRJob mainRFileUri
                         * @property {Array.<string>|null} [args] SparkRJob args
                         * @property {Array.<string>|null} [fileUris] SparkRJob fileUris
                         * @property {Array.<string>|null} [archiveUris] SparkRJob archiveUris
                         * @property {Object.<string,string>|null} [properties] SparkRJob properties
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] SparkRJob loggingConfig
                         */
    
                        /**
                         * Constructs a new SparkRJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SparkRJob.
                         * @implements ISparkRJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISparkRJob=} [properties] Properties to set
                         */
                        function SparkRJob(properties) {
                            this.args = [];
                            this.fileUris = [];
                            this.archiveUris = [];
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SparkRJob mainRFileUri.
                         * @member {string} mainRFileUri
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.mainRFileUri = "";
    
                        /**
                         * SparkRJob args.
                         * @member {Array.<string>} args
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.args = $util.emptyArray;
    
                        /**
                         * SparkRJob fileUris.
                         * @member {Array.<string>} fileUris
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.fileUris = $util.emptyArray;
    
                        /**
                         * SparkRJob archiveUris.
                         * @member {Array.<string>} archiveUris
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.archiveUris = $util.emptyArray;
    
                        /**
                         * SparkRJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * SparkRJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         */
                        SparkRJob.prototype.loggingConfig = null;
    
                        /**
                         * Creates a new SparkRJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SparkRJob} SparkRJob instance
                         */
                        SparkRJob.create = function create(properties) {
                            return new SparkRJob(properties);
                        };
    
                        /**
                         * Encodes the specified SparkRJob message. Does not implicitly {@link google.cloud.dataproc.v1.SparkRJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRJob} message SparkRJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkRJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.mainRFileUri != null && Object.hasOwnProperty.call(message, "mainRFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.mainRFileUri);
                            if (message.args != null && message.args.length)
                                for (var i = 0; i < message.args.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.args[i]);
                            if (message.fileUris != null && message.fileUris.length)
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.fileUris[i]);
                            if (message.archiveUris != null && message.archiveUris.length)
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.archiveUris[i]);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SparkRJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SparkRJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {google.cloud.dataproc.v1.ISparkRJob} message SparkRJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SparkRJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SparkRJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SparkRJob} SparkRJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkRJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SparkRJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.mainRFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.args && message.args.length))
                                            message.args = [];
                                        message.args.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.fileUris && message.fileUris.length))
                                            message.fileUris = [];
                                        message.fileUris.push(reader.string());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.archiveUris && message.archiveUris.length))
                                            message.archiveUris = [];
                                        message.archiveUris.push(reader.string());
                                        break;
                                    }
                                case 5: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 6: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SparkRJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SparkRJob} SparkRJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SparkRJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SparkRJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SparkRJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.mainRFileUri != null && message.hasOwnProperty("mainRFileUri"))
                                if (!$util.isString(message.mainRFileUri))
                                    return "mainRFileUri: string expected";
                            if (message.args != null && message.hasOwnProperty("args")) {
                                if (!Array.isArray(message.args))
                                    return "args: array expected";
                                for (var i = 0; i < message.args.length; ++i)
                                    if (!$util.isString(message.args[i]))
                                        return "args: string[] expected";
                            }
                            if (message.fileUris != null && message.hasOwnProperty("fileUris")) {
                                if (!Array.isArray(message.fileUris))
                                    return "fileUris: array expected";
                                for (var i = 0; i < message.fileUris.length; ++i)
                                    if (!$util.isString(message.fileUris[i]))
                                        return "fileUris: string[] expected";
                            }
                            if (message.archiveUris != null && message.hasOwnProperty("archiveUris")) {
                                if (!Array.isArray(message.archiveUris))
                                    return "archiveUris: array expected";
                                for (var i = 0; i < message.archiveUris.length; ++i)
                                    if (!$util.isString(message.archiveUris[i]))
                                        return "archiveUris: string[] expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a SparkRJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SparkRJob} SparkRJob
                         */
                        SparkRJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SparkRJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SparkRJob();
                            if (object.mainRFileUri != null)
                                message.mainRFileUri = String(object.mainRFileUri);
                            if (object.args) {
                                if (!Array.isArray(object.args))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRJob.args: array expected");
                                message.args = [];
                                for (var i = 0; i < object.args.length; ++i)
                                    message.args[i] = String(object.args[i]);
                            }
                            if (object.fileUris) {
                                if (!Array.isArray(object.fileUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRJob.fileUris: array expected");
                                message.fileUris = [];
                                for (var i = 0; i < object.fileUris.length; ++i)
                                    message.fileUris[i] = String(object.fileUris[i]);
                            }
                            if (object.archiveUris) {
                                if (!Array.isArray(object.archiveUris))
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRJob.archiveUris: array expected");
                                message.archiveUris = [];
                                for (var i = 0; i < object.archiveUris.length; ++i)
                                    message.archiveUris[i] = String(object.archiveUris[i]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SparkRJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SparkRJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {google.cloud.dataproc.v1.SparkRJob} message SparkRJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SparkRJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.args = [];
                                object.fileUris = [];
                                object.archiveUris = [];
                            }
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults) {
                                object.mainRFileUri = "";
                                object.loggingConfig = null;
                            }
                            if (message.mainRFileUri != null && message.hasOwnProperty("mainRFileUri"))
                                object.mainRFileUri = message.mainRFileUri;
                            if (message.args && message.args.length) {
                                object.args = [];
                                for (var j = 0; j < message.args.length; ++j)
                                    object.args[j] = message.args[j];
                            }
                            if (message.fileUris && message.fileUris.length) {
                                object.fileUris = [];
                                for (var j = 0; j < message.fileUris.length; ++j)
                                    object.fileUris[j] = message.fileUris[j];
                            }
                            if (message.archiveUris && message.archiveUris.length) {
                                object.archiveUris = [];
                                for (var j = 0; j < message.archiveUris.length; ++j)
                                    object.archiveUris[j] = message.archiveUris[j];
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this SparkRJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SparkRJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SparkRJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SparkRJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SparkRJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SparkRJob";
                        };
    
                        return SparkRJob;
                    })();
    
                    v1.PrestoJob = (function() {
    
                        /**
                         * Properties of a PrestoJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IPrestoJob
                         * @property {string|null} [queryFileUri] PrestoJob queryFileUri
                         * @property {google.cloud.dataproc.v1.IQueryList|null} [queryList] PrestoJob queryList
                         * @property {boolean|null} [continueOnFailure] PrestoJob continueOnFailure
                         * @property {string|null} [outputFormat] PrestoJob outputFormat
                         * @property {Array.<string>|null} [clientTags] PrestoJob clientTags
                         * @property {Object.<string,string>|null} [properties] PrestoJob properties
                         * @property {google.cloud.dataproc.v1.ILoggingConfig|null} [loggingConfig] PrestoJob loggingConfig
                         */
    
                        /**
                         * Constructs a new PrestoJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a PrestoJob.
                         * @implements IPrestoJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IPrestoJob=} [properties] Properties to set
                         */
                        function PrestoJob(properties) {
                            this.clientTags = [];
                            this.properties = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * PrestoJob queryFileUri.
                         * @member {string|null|undefined} queryFileUri
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.queryFileUri = null;
    
                        /**
                         * PrestoJob queryList.
                         * @member {google.cloud.dataproc.v1.IQueryList|null|undefined} queryList
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.queryList = null;
    
                        /**
                         * PrestoJob continueOnFailure.
                         * @member {boolean} continueOnFailure
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.continueOnFailure = false;
    
                        /**
                         * PrestoJob outputFormat.
                         * @member {string} outputFormat
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.outputFormat = "";
    
                        /**
                         * PrestoJob clientTags.
                         * @member {Array.<string>} clientTags
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.clientTags = $util.emptyArray;
    
                        /**
                         * PrestoJob properties.
                         * @member {Object.<string,string>} properties
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.properties = $util.emptyObject;
    
                        /**
                         * PrestoJob loggingConfig.
                         * @member {google.cloud.dataproc.v1.ILoggingConfig|null|undefined} loggingConfig
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        PrestoJob.prototype.loggingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * PrestoJob queries.
                         * @member {"queryFileUri"|"queryList"|undefined} queries
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         */
                        Object.defineProperty(PrestoJob.prototype, "queries", {
                            get: $util.oneOfGetter($oneOfFields = ["queryFileUri", "queryList"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new PrestoJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPrestoJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.PrestoJob} PrestoJob instance
                         */
                        PrestoJob.create = function create(properties) {
                            return new PrestoJob(properties);
                        };
    
                        /**
                         * Encodes the specified PrestoJob message. Does not implicitly {@link google.cloud.dataproc.v1.PrestoJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPrestoJob} message PrestoJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrestoJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.queryFileUri != null && Object.hasOwnProperty.call(message, "queryFileUri"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.queryFileUri);
                            if (message.queryList != null && Object.hasOwnProperty.call(message, "queryList"))
                                $root.google.cloud.dataproc.v1.QueryList.encode(message.queryList, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.continueOnFailure != null && Object.hasOwnProperty.call(message, "continueOnFailure"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.continueOnFailure);
                            if (message.outputFormat != null && Object.hasOwnProperty.call(message, "outputFormat"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.outputFormat);
                            if (message.clientTags != null && message.clientTags.length)
                                for (var i = 0; i < message.clientTags.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.clientTags[i]);
                            if (message.properties != null && Object.hasOwnProperty.call(message, "properties"))
                                for (var keys = Object.keys(message.properties), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.properties[keys[i]]).ldelim();
                            if (message.loggingConfig != null && Object.hasOwnProperty.call(message, "loggingConfig"))
                                $root.google.cloud.dataproc.v1.LoggingConfig.encode(message.loggingConfig, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified PrestoJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.PrestoJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IPrestoJob} message PrestoJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrestoJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a PrestoJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.PrestoJob} PrestoJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrestoJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.PrestoJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.queryFileUri = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.queryList = $root.google.cloud.dataproc.v1.QueryList.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.continueOnFailure = reader.bool();
                                        break;
                                    }
                                case 4: {
                                        message.outputFormat = reader.string();
                                        break;
                                    }
                                case 5: {
                                        if (!(message.clientTags && message.clientTags.length))
                                            message.clientTags = [];
                                        message.clientTags.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (message.properties === $util.emptyObject)
                                            message.properties = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.properties[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a PrestoJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.PrestoJob} PrestoJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrestoJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a PrestoJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrestoJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                properties.queries = 1;
                                if (!$util.isString(message.queryFileUri))
                                    return "queryFileUri: string expected";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                if (properties.queries === 1)
                                    return "queries: multiple values";
                                properties.queries = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.QueryList.verify(message.queryList);
                                    if (error)
                                        return "queryList." + error;
                                }
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                if (typeof message.continueOnFailure !== "boolean")
                                    return "continueOnFailure: boolean expected";
                            if (message.outputFormat != null && message.hasOwnProperty("outputFormat"))
                                if (!$util.isString(message.outputFormat))
                                    return "outputFormat: string expected";
                            if (message.clientTags != null && message.hasOwnProperty("clientTags")) {
                                if (!Array.isArray(message.clientTags))
                                    return "clientTags: array expected";
                                for (var i = 0; i < message.clientTags.length; ++i)
                                    if (!$util.isString(message.clientTags[i]))
                                        return "clientTags: string[] expected";
                            }
                            if (message.properties != null && message.hasOwnProperty("properties")) {
                                if (!$util.isObject(message.properties))
                                    return "properties: object expected";
                                var key = Object.keys(message.properties);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.properties[key[i]]))
                                        return "properties: string{k:string} expected";
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.LoggingConfig.verify(message.loggingConfig);
                                if (error)
                                    return "loggingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a PrestoJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.PrestoJob} PrestoJob
                         */
                        PrestoJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.PrestoJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.PrestoJob();
                            if (object.queryFileUri != null)
                                message.queryFileUri = String(object.queryFileUri);
                            if (object.queryList != null) {
                                if (typeof object.queryList !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PrestoJob.queryList: object expected");
                                message.queryList = $root.google.cloud.dataproc.v1.QueryList.fromObject(object.queryList);
                            }
                            if (object.continueOnFailure != null)
                                message.continueOnFailure = Boolean(object.continueOnFailure);
                            if (object.outputFormat != null)
                                message.outputFormat = String(object.outputFormat);
                            if (object.clientTags) {
                                if (!Array.isArray(object.clientTags))
                                    throw TypeError(".google.cloud.dataproc.v1.PrestoJob.clientTags: array expected");
                                message.clientTags = [];
                                for (var i = 0; i < object.clientTags.length; ++i)
                                    message.clientTags[i] = String(object.clientTags[i]);
                            }
                            if (object.properties) {
                                if (typeof object.properties !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PrestoJob.properties: object expected");
                                message.properties = {};
                                for (var keys = Object.keys(object.properties), i = 0; i < keys.length; ++i)
                                    message.properties[keys[i]] = String(object.properties[keys[i]]);
                            }
                            if (object.loggingConfig != null) {
                                if (typeof object.loggingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.PrestoJob.loggingConfig: object expected");
                                message.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.fromObject(object.loggingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a PrestoJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {google.cloud.dataproc.v1.PrestoJob} message PrestoJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrestoJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.clientTags = [];
                            if (options.objects || options.defaults)
                                object.properties = {};
                            if (options.defaults) {
                                object.continueOnFailure = false;
                                object.outputFormat = "";
                                object.loggingConfig = null;
                            }
                            if (message.queryFileUri != null && message.hasOwnProperty("queryFileUri")) {
                                object.queryFileUri = message.queryFileUri;
                                if (options.oneofs)
                                    object.queries = "queryFileUri";
                            }
                            if (message.queryList != null && message.hasOwnProperty("queryList")) {
                                object.queryList = $root.google.cloud.dataproc.v1.QueryList.toObject(message.queryList, options);
                                if (options.oneofs)
                                    object.queries = "queryList";
                            }
                            if (message.continueOnFailure != null && message.hasOwnProperty("continueOnFailure"))
                                object.continueOnFailure = message.continueOnFailure;
                            if (message.outputFormat != null && message.hasOwnProperty("outputFormat"))
                                object.outputFormat = message.outputFormat;
                            if (message.clientTags && message.clientTags.length) {
                                object.clientTags = [];
                                for (var j = 0; j < message.clientTags.length; ++j)
                                    object.clientTags[j] = message.clientTags[j];
                            }
                            var keys2;
                            if (message.properties && (keys2 = Object.keys(message.properties)).length) {
                                object.properties = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.properties[keys2[j]] = message.properties[keys2[j]];
                            }
                            if (message.loggingConfig != null && message.hasOwnProperty("loggingConfig"))
                                object.loggingConfig = $root.google.cloud.dataproc.v1.LoggingConfig.toObject(message.loggingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this PrestoJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrestoJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for PrestoJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.PrestoJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrestoJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.PrestoJob";
                        };
    
                        return PrestoJob;
                    })();
    
                    v1.JobPlacement = (function() {
    
                        /**
                         * Properties of a JobPlacement.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJobPlacement
                         * @property {string|null} [clusterName] JobPlacement clusterName
                         * @property {string|null} [clusterUuid] JobPlacement clusterUuid
                         * @property {Object.<string,string>|null} [clusterLabels] JobPlacement clusterLabels
                         */
    
                        /**
                         * Constructs a new JobPlacement.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobPlacement.
                         * @implements IJobPlacement
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJobPlacement=} [properties] Properties to set
                         */
                        function JobPlacement(properties) {
                            this.clusterLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobPlacement clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @instance
                         */
                        JobPlacement.prototype.clusterName = "";
    
                        /**
                         * JobPlacement clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @instance
                         */
                        JobPlacement.prototype.clusterUuid = "";
    
                        /**
                         * JobPlacement clusterLabels.
                         * @member {Object.<string,string>} clusterLabels
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @instance
                         */
                        JobPlacement.prototype.clusterLabels = $util.emptyObject;
    
                        /**
                         * Creates a new JobPlacement instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobPlacement=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.JobPlacement} JobPlacement instance
                         */
                        JobPlacement.create = function create(properties) {
                            return new JobPlacement(properties);
                        };
    
                        /**
                         * Encodes the specified JobPlacement message. Does not implicitly {@link google.cloud.dataproc.v1.JobPlacement.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobPlacement} message JobPlacement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobPlacement.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.clusterName);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterUuid);
                            if (message.clusterLabels != null && Object.hasOwnProperty.call(message, "clusterLabels"))
                                for (var keys = Object.keys(message.clusterLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.clusterLabels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobPlacement message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.JobPlacement.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobPlacement} message JobPlacement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobPlacement.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobPlacement message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.JobPlacement} JobPlacement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobPlacement.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.JobPlacement(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        if (message.clusterLabels === $util.emptyObject)
                                            message.clusterLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.clusterLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobPlacement message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.JobPlacement} JobPlacement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobPlacement.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobPlacement message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobPlacement.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.clusterLabels != null && message.hasOwnProperty("clusterLabels")) {
                                if (!$util.isObject(message.clusterLabels))
                                    return "clusterLabels: object expected";
                                var key = Object.keys(message.clusterLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.clusterLabels[key[i]]))
                                        return "clusterLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a JobPlacement message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.JobPlacement} JobPlacement
                         */
                        JobPlacement.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.JobPlacement)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.JobPlacement();
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.clusterLabels) {
                                if (typeof object.clusterLabels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.JobPlacement.clusterLabels: object expected");
                                message.clusterLabels = {};
                                for (var keys = Object.keys(object.clusterLabels), i = 0; i < keys.length; ++i)
                                    message.clusterLabels[keys[i]] = String(object.clusterLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobPlacement message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.JobPlacement} message JobPlacement
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobPlacement.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.clusterLabels = {};
                            if (options.defaults) {
                                object.clusterName = "";
                                object.clusterUuid = "";
                            }
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            var keys2;
                            if (message.clusterLabels && (keys2 = Object.keys(message.clusterLabels)).length) {
                                object.clusterLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.clusterLabels[keys2[j]] = message.clusterLabels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this JobPlacement to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobPlacement.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobPlacement
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.JobPlacement
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobPlacement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.JobPlacement";
                        };
    
                        return JobPlacement;
                    })();
    
                    v1.JobStatus = (function() {
    
                        /**
                         * Properties of a JobStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJobStatus
                         * @property {google.cloud.dataproc.v1.JobStatus.State|null} [state] JobStatus state
                         * @property {string|null} [details] JobStatus details
                         * @property {google.protobuf.ITimestamp|null} [stateStartTime] JobStatus stateStartTime
                         * @property {google.cloud.dataproc.v1.JobStatus.Substate|null} [substate] JobStatus substate
                         */
    
                        /**
                         * Constructs a new JobStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobStatus.
                         * @implements IJobStatus
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJobStatus=} [properties] Properties to set
                         */
                        function JobStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobStatus state.
                         * @member {google.cloud.dataproc.v1.JobStatus.State} state
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @instance
                         */
                        JobStatus.prototype.state = 0;
    
                        /**
                         * JobStatus details.
                         * @member {string} details
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @instance
                         */
                        JobStatus.prototype.details = "";
    
                        /**
                         * JobStatus stateStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} stateStartTime
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @instance
                         */
                        JobStatus.prototype.stateStartTime = null;
    
                        /**
                         * JobStatus substate.
                         * @member {google.cloud.dataproc.v1.JobStatus.Substate} substate
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @instance
                         */
                        JobStatus.prototype.substate = 0;
    
                        /**
                         * Creates a new JobStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobStatus=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.JobStatus} JobStatus instance
                         */
                        JobStatus.create = function create(properties) {
                            return new JobStatus(properties);
                        };
    
                        /**
                         * Encodes the specified JobStatus message. Does not implicitly {@link google.cloud.dataproc.v1.JobStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobStatus} message JobStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.details);
                            if (message.stateStartTime != null && Object.hasOwnProperty.call(message, "stateStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.stateStartTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.substate != null && Object.hasOwnProperty.call(message, "substate"))
                                writer.uint32(/* id 7, wireType 0 =*/56).int32(message.substate);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobStatus message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.JobStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobStatus} message JobStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.JobStatus} JobStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.JobStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.details = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.stateStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.substate = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.JobStatus} JobStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobStatus message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 8:
                                case 2:
                                case 3:
                                case 7:
                                case 4:
                                case 5:
                                case 6:
                                case 9:
                                    break;
                                }
                            if (message.details != null && message.hasOwnProperty("details"))
                                if (!$util.isString(message.details))
                                    return "details: string expected";
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.stateStartTime);
                                if (error)
                                    return "stateStartTime." + error;
                            }
                            if (message.substate != null && message.hasOwnProperty("substate"))
                                switch (message.substate) {
                                default:
                                    return "substate: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a JobStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.JobStatus} JobStatus
                         */
                        JobStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.JobStatus)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.JobStatus();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "SETUP_DONE":
                            case 8:
                                message.state = 8;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "CANCEL_PENDING":
                            case 3:
                                message.state = 3;
                                break;
                            case "CANCEL_STARTED":
                            case 7:
                                message.state = 7;
                                break;
                            case "CANCELLED":
                            case 4:
                                message.state = 4;
                                break;
                            case "DONE":
                            case 5:
                                message.state = 5;
                                break;
                            case "ERROR":
                            case 6:
                                message.state = 6;
                                break;
                            case "ATTEMPT_FAILURE":
                            case 9:
                                message.state = 9;
                                break;
                            }
                            if (object.details != null)
                                message.details = String(object.details);
                            if (object.stateStartTime != null) {
                                if (typeof object.stateStartTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.JobStatus.stateStartTime: object expected");
                                message.stateStartTime = $root.google.protobuf.Timestamp.fromObject(object.stateStartTime);
                            }
                            switch (object.substate) {
                            default:
                                if (typeof object.substate === "number") {
                                    message.substate = object.substate;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.substate = 0;
                                break;
                            case "SUBMITTED":
                            case 1:
                                message.substate = 1;
                                break;
                            case "QUEUED":
                            case 2:
                                message.substate = 2;
                                break;
                            case "STALE_STATUS":
                            case 3:
                                message.substate = 3;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.JobStatus} message JobStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.details = "";
                                object.stateStartTime = null;
                                object.substate = options.enums === String ? "UNSPECIFIED" : 0;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.JobStatus.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.JobStatus.State[message.state] : message.state;
                            if (message.details != null && message.hasOwnProperty("details"))
                                object.details = message.details;
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime"))
                                object.stateStartTime = $root.google.protobuf.Timestamp.toObject(message.stateStartTime, options);
                            if (message.substate != null && message.hasOwnProperty("substate"))
                                object.substate = options.enums === String ? $root.google.cloud.dataproc.v1.JobStatus.Substate[message.substate] === undefined ? message.substate : $root.google.cloud.dataproc.v1.JobStatus.Substate[message.substate] : message.substate;
                            return object;
                        };
    
                        /**
                         * Converts this JobStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.JobStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.JobStatus";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.JobStatus.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} SETUP_DONE=8 SETUP_DONE value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} CANCEL_PENDING=3 CANCEL_PENDING value
                         * @property {number} CANCEL_STARTED=7 CANCEL_STARTED value
                         * @property {number} CANCELLED=4 CANCELLED value
                         * @property {number} DONE=5 DONE value
                         * @property {number} ERROR=6 ERROR value
                         * @property {number} ATTEMPT_FAILURE=9 ATTEMPT_FAILURE value
                         */
                        JobStatus.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[8] = "SETUP_DONE"] = 8;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "CANCEL_PENDING"] = 3;
                            values[valuesById[7] = "CANCEL_STARTED"] = 7;
                            values[valuesById[4] = "CANCELLED"] = 4;
                            values[valuesById[5] = "DONE"] = 5;
                            values[valuesById[6] = "ERROR"] = 6;
                            values[valuesById[9] = "ATTEMPT_FAILURE"] = 9;
                            return values;
                        })();
    
                        /**
                         * Substate enum.
                         * @name google.cloud.dataproc.v1.JobStatus.Substate
                         * @enum {number}
                         * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                         * @property {number} SUBMITTED=1 SUBMITTED value
                         * @property {number} QUEUED=2 QUEUED value
                         * @property {number} STALE_STATUS=3 STALE_STATUS value
                         */
                        JobStatus.Substate = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNSPECIFIED"] = 0;
                            values[valuesById[1] = "SUBMITTED"] = 1;
                            values[valuesById[2] = "QUEUED"] = 2;
                            values[valuesById[3] = "STALE_STATUS"] = 3;
                            return values;
                        })();
    
                        return JobStatus;
                    })();
    
                    v1.JobReference = (function() {
    
                        /**
                         * Properties of a JobReference.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJobReference
                         * @property {string|null} [projectId] JobReference projectId
                         * @property {string|null} [jobId] JobReference jobId
                         */
    
                        /**
                         * Constructs a new JobReference.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobReference.
                         * @implements IJobReference
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJobReference=} [properties] Properties to set
                         */
                        function JobReference(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobReference projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @instance
                         */
                        JobReference.prototype.projectId = "";
    
                        /**
                         * JobReference jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @instance
                         */
                        JobReference.prototype.jobId = "";
    
                        /**
                         * Creates a new JobReference instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobReference=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.JobReference} JobReference instance
                         */
                        JobReference.create = function create(properties) {
                            return new JobReference(properties);
                        };
    
                        /**
                         * Encodes the specified JobReference message. Does not implicitly {@link google.cloud.dataproc.v1.JobReference.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobReference} message JobReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobReference.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobReference message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.JobReference.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobReference} message JobReference message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobReference.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobReference message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.JobReference} JobReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobReference.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.JobReference();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobReference message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.JobReference} JobReference
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobReference.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobReference message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobReference.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a JobReference message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.JobReference} JobReference
                         */
                        JobReference.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.JobReference)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.JobReference();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobReference message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {google.cloud.dataproc.v1.JobReference} message JobReference
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobReference.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.jobId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            return object;
                        };
    
                        /**
                         * Converts this JobReference to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobReference.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobReference
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.JobReference
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.JobReference";
                        };
    
                        return JobReference;
                    })();
    
                    v1.YarnApplication = (function() {
    
                        /**
                         * Properties of a YarnApplication.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IYarnApplication
                         * @property {string|null} [name] YarnApplication name
                         * @property {google.cloud.dataproc.v1.YarnApplication.State|null} [state] YarnApplication state
                         * @property {number|null} [progress] YarnApplication progress
                         * @property {string|null} [trackingUrl] YarnApplication trackingUrl
                         */
    
                        /**
                         * Constructs a new YarnApplication.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a YarnApplication.
                         * @implements IYarnApplication
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IYarnApplication=} [properties] Properties to set
                         */
                        function YarnApplication(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * YarnApplication name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @instance
                         */
                        YarnApplication.prototype.name = "";
    
                        /**
                         * YarnApplication state.
                         * @member {google.cloud.dataproc.v1.YarnApplication.State} state
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @instance
                         */
                        YarnApplication.prototype.state = 0;
    
                        /**
                         * YarnApplication progress.
                         * @member {number} progress
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @instance
                         */
                        YarnApplication.prototype.progress = 0;
    
                        /**
                         * YarnApplication trackingUrl.
                         * @member {string} trackingUrl
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @instance
                         */
                        YarnApplication.prototype.trackingUrl = "";
    
                        /**
                         * Creates a new YarnApplication instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {google.cloud.dataproc.v1.IYarnApplication=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.YarnApplication} YarnApplication instance
                         */
                        YarnApplication.create = function create(properties) {
                            return new YarnApplication(properties);
                        };
    
                        /**
                         * Encodes the specified YarnApplication message. Does not implicitly {@link google.cloud.dataproc.v1.YarnApplication.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {google.cloud.dataproc.v1.IYarnApplication} message YarnApplication message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        YarnApplication.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.state);
                            if (message.progress != null && Object.hasOwnProperty.call(message, "progress"))
                                writer.uint32(/* id 3, wireType 5 =*/29).float(message.progress);
                            if (message.trackingUrl != null && Object.hasOwnProperty.call(message, "trackingUrl"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.trackingUrl);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified YarnApplication message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.YarnApplication.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {google.cloud.dataproc.v1.IYarnApplication} message YarnApplication message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        YarnApplication.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a YarnApplication message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.YarnApplication} YarnApplication
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        YarnApplication.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.YarnApplication();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.progress = reader.float();
                                        break;
                                    }
                                case 4: {
                                        message.trackingUrl = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a YarnApplication message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.YarnApplication} YarnApplication
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        YarnApplication.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a YarnApplication message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        YarnApplication.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                case 6:
                                case 7:
                                case 8:
                                    break;
                                }
                            if (message.progress != null && message.hasOwnProperty("progress"))
                                if (typeof message.progress !== "number")
                                    return "progress: number expected";
                            if (message.trackingUrl != null && message.hasOwnProperty("trackingUrl"))
                                if (!$util.isString(message.trackingUrl))
                                    return "trackingUrl: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a YarnApplication message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.YarnApplication} YarnApplication
                         */
                        YarnApplication.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.YarnApplication)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.YarnApplication();
                            if (object.name != null)
                                message.name = String(object.name);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "NEW":
                            case 1:
                                message.state = 1;
                                break;
                            case "NEW_SAVING":
                            case 2:
                                message.state = 2;
                                break;
                            case "SUBMITTED":
                            case 3:
                                message.state = 3;
                                break;
                            case "ACCEPTED":
                            case 4:
                                message.state = 4;
                                break;
                            case "RUNNING":
                            case 5:
                                message.state = 5;
                                break;
                            case "FINISHED":
                            case 6:
                                message.state = 6;
                                break;
                            case "FAILED":
                            case 7:
                                message.state = 7;
                                break;
                            case "KILLED":
                            case 8:
                                message.state = 8;
                                break;
                            }
                            if (object.progress != null)
                                message.progress = Number(object.progress);
                            if (object.trackingUrl != null)
                                message.trackingUrl = String(object.trackingUrl);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a YarnApplication message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {google.cloud.dataproc.v1.YarnApplication} message YarnApplication
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        YarnApplication.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                                object.progress = 0;
                                object.trackingUrl = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.YarnApplication.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.YarnApplication.State[message.state] : message.state;
                            if (message.progress != null && message.hasOwnProperty("progress"))
                                object.progress = options.json && !isFinite(message.progress) ? String(message.progress) : message.progress;
                            if (message.trackingUrl != null && message.hasOwnProperty("trackingUrl"))
                                object.trackingUrl = message.trackingUrl;
                            return object;
                        };
    
                        /**
                         * Converts this YarnApplication to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        YarnApplication.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for YarnApplication
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.YarnApplication
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        YarnApplication.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.YarnApplication";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.YarnApplication.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} NEW=1 NEW value
                         * @property {number} NEW_SAVING=2 NEW_SAVING value
                         * @property {number} SUBMITTED=3 SUBMITTED value
                         * @property {number} ACCEPTED=4 ACCEPTED value
                         * @property {number} RUNNING=5 RUNNING value
                         * @property {number} FINISHED=6 FINISHED value
                         * @property {number} FAILED=7 FAILED value
                         * @property {number} KILLED=8 KILLED value
                         */
                        YarnApplication.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NEW"] = 1;
                            values[valuesById[2] = "NEW_SAVING"] = 2;
                            values[valuesById[3] = "SUBMITTED"] = 3;
                            values[valuesById[4] = "ACCEPTED"] = 4;
                            values[valuesById[5] = "RUNNING"] = 5;
                            values[valuesById[6] = "FINISHED"] = 6;
                            values[valuesById[7] = "FAILED"] = 7;
                            values[valuesById[8] = "KILLED"] = 8;
                            return values;
                        })();
    
                        return YarnApplication;
                    })();
    
                    v1.Job = (function() {
    
                        /**
                         * Properties of a Job.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJob
                         * @property {google.cloud.dataproc.v1.IJobReference|null} [reference] Job reference
                         * @property {google.cloud.dataproc.v1.IJobPlacement|null} [placement] Job placement
                         * @property {google.cloud.dataproc.v1.IHadoopJob|null} [hadoopJob] Job hadoopJob
                         * @property {google.cloud.dataproc.v1.ISparkJob|null} [sparkJob] Job sparkJob
                         * @property {google.cloud.dataproc.v1.IPySparkJob|null} [pysparkJob] Job pysparkJob
                         * @property {google.cloud.dataproc.v1.IHiveJob|null} [hiveJob] Job hiveJob
                         * @property {google.cloud.dataproc.v1.IPigJob|null} [pigJob] Job pigJob
                         * @property {google.cloud.dataproc.v1.ISparkRJob|null} [sparkRJob] Job sparkRJob
                         * @property {google.cloud.dataproc.v1.ISparkSqlJob|null} [sparkSqlJob] Job sparkSqlJob
                         * @property {google.cloud.dataproc.v1.IPrestoJob|null} [prestoJob] Job prestoJob
                         * @property {google.cloud.dataproc.v1.IJobStatus|null} [status] Job status
                         * @property {Array.<google.cloud.dataproc.v1.IJobStatus>|null} [statusHistory] Job statusHistory
                         * @property {Array.<google.cloud.dataproc.v1.IYarnApplication>|null} [yarnApplications] Job yarnApplications
                         * @property {string|null} [driverOutputResourceUri] Job driverOutputResourceUri
                         * @property {string|null} [driverControlFilesUri] Job driverControlFilesUri
                         * @property {Object.<string,string>|null} [labels] Job labels
                         * @property {google.cloud.dataproc.v1.IJobScheduling|null} [scheduling] Job scheduling
                         * @property {string|null} [jobUuid] Job jobUuid
                         * @property {boolean|null} [done] Job done
                         * @property {google.cloud.dataproc.v1.IDriverSchedulingConfig|null} [driverSchedulingConfig] Job driverSchedulingConfig
                         */
    
                        /**
                         * Constructs a new Job.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a Job.
                         * @implements IJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJob=} [properties] Properties to set
                         */
                        function Job(properties) {
                            this.statusHistory = [];
                            this.yarnApplications = [];
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Job reference.
                         * @member {google.cloud.dataproc.v1.IJobReference|null|undefined} reference
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.reference = null;
    
                        /**
                         * Job placement.
                         * @member {google.cloud.dataproc.v1.IJobPlacement|null|undefined} placement
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.placement = null;
    
                        /**
                         * Job hadoopJob.
                         * @member {google.cloud.dataproc.v1.IHadoopJob|null|undefined} hadoopJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.hadoopJob = null;
    
                        /**
                         * Job sparkJob.
                         * @member {google.cloud.dataproc.v1.ISparkJob|null|undefined} sparkJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.sparkJob = null;
    
                        /**
                         * Job pysparkJob.
                         * @member {google.cloud.dataproc.v1.IPySparkJob|null|undefined} pysparkJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.pysparkJob = null;
    
                        /**
                         * Job hiveJob.
                         * @member {google.cloud.dataproc.v1.IHiveJob|null|undefined} hiveJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.hiveJob = null;
    
                        /**
                         * Job pigJob.
                         * @member {google.cloud.dataproc.v1.IPigJob|null|undefined} pigJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.pigJob = null;
    
                        /**
                         * Job sparkRJob.
                         * @member {google.cloud.dataproc.v1.ISparkRJob|null|undefined} sparkRJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.sparkRJob = null;
    
                        /**
                         * Job sparkSqlJob.
                         * @member {google.cloud.dataproc.v1.ISparkSqlJob|null|undefined} sparkSqlJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.sparkSqlJob = null;
    
                        /**
                         * Job prestoJob.
                         * @member {google.cloud.dataproc.v1.IPrestoJob|null|undefined} prestoJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.prestoJob = null;
    
                        /**
                         * Job status.
                         * @member {google.cloud.dataproc.v1.IJobStatus|null|undefined} status
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.status = null;
    
                        /**
                         * Job statusHistory.
                         * @member {Array.<google.cloud.dataproc.v1.IJobStatus>} statusHistory
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.statusHistory = $util.emptyArray;
    
                        /**
                         * Job yarnApplications.
                         * @member {Array.<google.cloud.dataproc.v1.IYarnApplication>} yarnApplications
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.yarnApplications = $util.emptyArray;
    
                        /**
                         * Job driverOutputResourceUri.
                         * @member {string} driverOutputResourceUri
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.driverOutputResourceUri = "";
    
                        /**
                         * Job driverControlFilesUri.
                         * @member {string} driverControlFilesUri
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.driverControlFilesUri = "";
    
                        /**
                         * Job labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.labels = $util.emptyObject;
    
                        /**
                         * Job scheduling.
                         * @member {google.cloud.dataproc.v1.IJobScheduling|null|undefined} scheduling
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.scheduling = null;
    
                        /**
                         * Job jobUuid.
                         * @member {string} jobUuid
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.jobUuid = "";
    
                        /**
                         * Job done.
                         * @member {boolean} done
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.done = false;
    
                        /**
                         * Job driverSchedulingConfig.
                         * @member {google.cloud.dataproc.v1.IDriverSchedulingConfig|null|undefined} driverSchedulingConfig
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Job.prototype.driverSchedulingConfig = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Job typeJob.
                         * @member {"hadoopJob"|"sparkJob"|"pysparkJob"|"hiveJob"|"pigJob"|"sparkRJob"|"sparkSqlJob"|"prestoJob"|undefined} typeJob
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         */
                        Object.defineProperty(Job.prototype, "typeJob", {
                            get: $util.oneOfGetter($oneOfFields = ["hadoopJob", "sparkJob", "pysparkJob", "hiveJob", "pigJob", "sparkRJob", "sparkSqlJob", "prestoJob"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Job instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {google.cloud.dataproc.v1.IJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.Job} Job instance
                         */
                        Job.create = function create(properties) {
                            return new Job(properties);
                        };
    
                        /**
                         * Encodes the specified Job message. Does not implicitly {@link google.cloud.dataproc.v1.Job.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {google.cloud.dataproc.v1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.reference != null && Object.hasOwnProperty.call(message, "reference"))
                                $root.google.cloud.dataproc.v1.JobReference.encode(message.reference, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.placement != null && Object.hasOwnProperty.call(message, "placement"))
                                $root.google.cloud.dataproc.v1.JobPlacement.encode(message.placement, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.hadoopJob != null && Object.hasOwnProperty.call(message, "hadoopJob"))
                                $root.google.cloud.dataproc.v1.HadoopJob.encode(message.hadoopJob, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.sparkJob != null && Object.hasOwnProperty.call(message, "sparkJob"))
                                $root.google.cloud.dataproc.v1.SparkJob.encode(message.sparkJob, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.pysparkJob != null && Object.hasOwnProperty.call(message, "pysparkJob"))
                                $root.google.cloud.dataproc.v1.PySparkJob.encode(message.pysparkJob, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.hiveJob != null && Object.hasOwnProperty.call(message, "hiveJob"))
                                $root.google.cloud.dataproc.v1.HiveJob.encode(message.hiveJob, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.pigJob != null && Object.hasOwnProperty.call(message, "pigJob"))
                                $root.google.cloud.dataproc.v1.PigJob.encode(message.pigJob, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.dataproc.v1.JobStatus.encode(message.status, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.yarnApplications != null && message.yarnApplications.length)
                                for (var i = 0; i < message.yarnApplications.length; ++i)
                                    $root.google.cloud.dataproc.v1.YarnApplication.encode(message.yarnApplications[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.sparkSqlJob != null && Object.hasOwnProperty.call(message, "sparkSqlJob"))
                                $root.google.cloud.dataproc.v1.SparkSqlJob.encode(message.sparkSqlJob, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.statusHistory != null && message.statusHistory.length)
                                for (var i = 0; i < message.statusHistory.length; ++i)
                                    $root.google.cloud.dataproc.v1.JobStatus.encode(message.statusHistory[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.driverControlFilesUri != null && Object.hasOwnProperty.call(message, "driverControlFilesUri"))
                                writer.uint32(/* id 15, wireType 2 =*/122).string(message.driverControlFilesUri);
                            if (message.driverOutputResourceUri != null && Object.hasOwnProperty.call(message, "driverOutputResourceUri"))
                                writer.uint32(/* id 17, wireType 2 =*/138).string(message.driverOutputResourceUri);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 18, wireType 2 =*/146).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.scheduling != null && Object.hasOwnProperty.call(message, "scheduling"))
                                $root.google.cloud.dataproc.v1.JobScheduling.encode(message.scheduling, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.sparkRJob != null && Object.hasOwnProperty.call(message, "sparkRJob"))
                                $root.google.cloud.dataproc.v1.SparkRJob.encode(message.sparkRJob, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.jobUuid != null && Object.hasOwnProperty.call(message, "jobUuid"))
                                writer.uint32(/* id 22, wireType 2 =*/178).string(message.jobUuid);
                            if (message.prestoJob != null && Object.hasOwnProperty.call(message, "prestoJob"))
                                $root.google.cloud.dataproc.v1.PrestoJob.encode(message.prestoJob, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                                writer.uint32(/* id 24, wireType 0 =*/192).bool(message.done);
                            if (message.driverSchedulingConfig != null && Object.hasOwnProperty.call(message, "driverSchedulingConfig"))
                                $root.google.cloud.dataproc.v1.DriverSchedulingConfig.encode(message.driverSchedulingConfig, writer.uint32(/* id 27, wireType 2 =*/218).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Job message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.Job.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {google.cloud.dataproc.v1.IJob} message Job message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Job.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.Job(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.reference = $root.google.cloud.dataproc.v1.JobReference.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.placement = $root.google.cloud.dataproc.v1.JobPlacement.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.pigJob = $root.google.cloud.dataproc.v1.PigJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 23: {
                                        message.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.status = $root.google.cloud.dataproc.v1.JobStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.statusHistory && message.statusHistory.length))
                                            message.statusHistory = [];
                                        message.statusHistory.push($root.google.cloud.dataproc.v1.JobStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        if (!(message.yarnApplications && message.yarnApplications.length))
                                            message.yarnApplications = [];
                                        message.yarnApplications.push($root.google.cloud.dataproc.v1.YarnApplication.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 17: {
                                        message.driverOutputResourceUri = reader.string();
                                        break;
                                    }
                                case 15: {
                                        message.driverControlFilesUri = reader.string();
                                        break;
                                    }
                                case 18: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 20: {
                                        message.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.jobUuid = reader.string();
                                        break;
                                    }
                                case 24: {
                                        message.done = reader.bool();
                                        break;
                                    }
                                case 27: {
                                        message.driverSchedulingConfig = $root.google.cloud.dataproc.v1.DriverSchedulingConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Job message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.Job} Job
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Job.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Job message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Job.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.reference != null && message.hasOwnProperty("reference")) {
                                var error = $root.google.cloud.dataproc.v1.JobReference.verify(message.reference);
                                if (error)
                                    return "reference." + error;
                            }
                            if (message.placement != null && message.hasOwnProperty("placement")) {
                                var error = $root.google.cloud.dataproc.v1.JobPlacement.verify(message.placement);
                                if (error)
                                    return "placement." + error;
                            }
                            if (message.hadoopJob != null && message.hasOwnProperty("hadoopJob")) {
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.HadoopJob.verify(message.hadoopJob);
                                    if (error)
                                        return "hadoopJob." + error;
                                }
                            }
                            if (message.sparkJob != null && message.hasOwnProperty("sparkJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkJob.verify(message.sparkJob);
                                    if (error)
                                        return "sparkJob." + error;
                                }
                            }
                            if (message.pysparkJob != null && message.hasOwnProperty("pysparkJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PySparkJob.verify(message.pysparkJob);
                                    if (error)
                                        return "pysparkJob." + error;
                                }
                            }
                            if (message.hiveJob != null && message.hasOwnProperty("hiveJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.HiveJob.verify(message.hiveJob);
                                    if (error)
                                        return "hiveJob." + error;
                                }
                            }
                            if (message.pigJob != null && message.hasOwnProperty("pigJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PigJob.verify(message.pigJob);
                                    if (error)
                                        return "pigJob." + error;
                                }
                            }
                            if (message.sparkRJob != null && message.hasOwnProperty("sparkRJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkRJob.verify(message.sparkRJob);
                                    if (error)
                                        return "sparkRJob." + error;
                                }
                            }
                            if (message.sparkSqlJob != null && message.hasOwnProperty("sparkSqlJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkSqlJob.verify(message.sparkSqlJob);
                                    if (error)
                                        return "sparkSqlJob." + error;
                                }
                            }
                            if (message.prestoJob != null && message.hasOwnProperty("prestoJob")) {
                                if (properties.typeJob === 1)
                                    return "typeJob: multiple values";
                                properties.typeJob = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PrestoJob.verify(message.prestoJob);
                                    if (error)
                                        return "prestoJob." + error;
                                }
                            }
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.dataproc.v1.JobStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.statusHistory != null && message.hasOwnProperty("statusHistory")) {
                                if (!Array.isArray(message.statusHistory))
                                    return "statusHistory: array expected";
                                for (var i = 0; i < message.statusHistory.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.JobStatus.verify(message.statusHistory[i]);
                                    if (error)
                                        return "statusHistory." + error;
                                }
                            }
                            if (message.yarnApplications != null && message.hasOwnProperty("yarnApplications")) {
                                if (!Array.isArray(message.yarnApplications))
                                    return "yarnApplications: array expected";
                                for (var i = 0; i < message.yarnApplications.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.YarnApplication.verify(message.yarnApplications[i]);
                                    if (error)
                                        return "yarnApplications." + error;
                                }
                            }
                            if (message.driverOutputResourceUri != null && message.hasOwnProperty("driverOutputResourceUri"))
                                if (!$util.isString(message.driverOutputResourceUri))
                                    return "driverOutputResourceUri: string expected";
                            if (message.driverControlFilesUri != null && message.hasOwnProperty("driverControlFilesUri"))
                                if (!$util.isString(message.driverControlFilesUri))
                                    return "driverControlFilesUri: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.scheduling != null && message.hasOwnProperty("scheduling")) {
                                var error = $root.google.cloud.dataproc.v1.JobScheduling.verify(message.scheduling);
                                if (error)
                                    return "scheduling." + error;
                            }
                            if (message.jobUuid != null && message.hasOwnProperty("jobUuid"))
                                if (!$util.isString(message.jobUuid))
                                    return "jobUuid: string expected";
                            if (message.done != null && message.hasOwnProperty("done"))
                                if (typeof message.done !== "boolean")
                                    return "done: boolean expected";
                            if (message.driverSchedulingConfig != null && message.hasOwnProperty("driverSchedulingConfig")) {
                                var error = $root.google.cloud.dataproc.v1.DriverSchedulingConfig.verify(message.driverSchedulingConfig);
                                if (error)
                                    return "driverSchedulingConfig." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Job message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.Job} Job
                         */
                        Job.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.Job)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.Job();
                            if (object.reference != null) {
                                if (typeof object.reference !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.reference: object expected");
                                message.reference = $root.google.cloud.dataproc.v1.JobReference.fromObject(object.reference);
                            }
                            if (object.placement != null) {
                                if (typeof object.placement !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.placement: object expected");
                                message.placement = $root.google.cloud.dataproc.v1.JobPlacement.fromObject(object.placement);
                            }
                            if (object.hadoopJob != null) {
                                if (typeof object.hadoopJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.hadoopJob: object expected");
                                message.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.fromObject(object.hadoopJob);
                            }
                            if (object.sparkJob != null) {
                                if (typeof object.sparkJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.sparkJob: object expected");
                                message.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.fromObject(object.sparkJob);
                            }
                            if (object.pysparkJob != null) {
                                if (typeof object.pysparkJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.pysparkJob: object expected");
                                message.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.fromObject(object.pysparkJob);
                            }
                            if (object.hiveJob != null) {
                                if (typeof object.hiveJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.hiveJob: object expected");
                                message.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.fromObject(object.hiveJob);
                            }
                            if (object.pigJob != null) {
                                if (typeof object.pigJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.pigJob: object expected");
                                message.pigJob = $root.google.cloud.dataproc.v1.PigJob.fromObject(object.pigJob);
                            }
                            if (object.sparkRJob != null) {
                                if (typeof object.sparkRJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.sparkRJob: object expected");
                                message.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.fromObject(object.sparkRJob);
                            }
                            if (object.sparkSqlJob != null) {
                                if (typeof object.sparkSqlJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.sparkSqlJob: object expected");
                                message.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.fromObject(object.sparkSqlJob);
                            }
                            if (object.prestoJob != null) {
                                if (typeof object.prestoJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.prestoJob: object expected");
                                message.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.fromObject(object.prestoJob);
                            }
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.status: object expected");
                                message.status = $root.google.cloud.dataproc.v1.JobStatus.fromObject(object.status);
                            }
                            if (object.statusHistory) {
                                if (!Array.isArray(object.statusHistory))
                                    throw TypeError(".google.cloud.dataproc.v1.Job.statusHistory: array expected");
                                message.statusHistory = [];
                                for (var i = 0; i < object.statusHistory.length; ++i) {
                                    if (typeof object.statusHistory[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.Job.statusHistory: object expected");
                                    message.statusHistory[i] = $root.google.cloud.dataproc.v1.JobStatus.fromObject(object.statusHistory[i]);
                                }
                            }
                            if (object.yarnApplications) {
                                if (!Array.isArray(object.yarnApplications))
                                    throw TypeError(".google.cloud.dataproc.v1.Job.yarnApplications: array expected");
                                message.yarnApplications = [];
                                for (var i = 0; i < object.yarnApplications.length; ++i) {
                                    if (typeof object.yarnApplications[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.Job.yarnApplications: object expected");
                                    message.yarnApplications[i] = $root.google.cloud.dataproc.v1.YarnApplication.fromObject(object.yarnApplications[i]);
                                }
                            }
                            if (object.driverOutputResourceUri != null)
                                message.driverOutputResourceUri = String(object.driverOutputResourceUri);
                            if (object.driverControlFilesUri != null)
                                message.driverControlFilesUri = String(object.driverControlFilesUri);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.scheduling != null) {
                                if (typeof object.scheduling !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.scheduling: object expected");
                                message.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.fromObject(object.scheduling);
                            }
                            if (object.jobUuid != null)
                                message.jobUuid = String(object.jobUuid);
                            if (object.done != null)
                                message.done = Boolean(object.done);
                            if (object.driverSchedulingConfig != null) {
                                if (typeof object.driverSchedulingConfig !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.Job.driverSchedulingConfig: object expected");
                                message.driverSchedulingConfig = $root.google.cloud.dataproc.v1.DriverSchedulingConfig.fromObject(object.driverSchedulingConfig);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Job message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {google.cloud.dataproc.v1.Job} message Job
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Job.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.yarnApplications = [];
                                object.statusHistory = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.reference = null;
                                object.placement = null;
                                object.status = null;
                                object.driverControlFilesUri = "";
                                object.driverOutputResourceUri = "";
                                object.scheduling = null;
                                object.jobUuid = "";
                                object.done = false;
                                object.driverSchedulingConfig = null;
                            }
                            if (message.reference != null && message.hasOwnProperty("reference"))
                                object.reference = $root.google.cloud.dataproc.v1.JobReference.toObject(message.reference, options);
                            if (message.placement != null && message.hasOwnProperty("placement"))
                                object.placement = $root.google.cloud.dataproc.v1.JobPlacement.toObject(message.placement, options);
                            if (message.hadoopJob != null && message.hasOwnProperty("hadoopJob")) {
                                object.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.toObject(message.hadoopJob, options);
                                if (options.oneofs)
                                    object.typeJob = "hadoopJob";
                            }
                            if (message.sparkJob != null && message.hasOwnProperty("sparkJob")) {
                                object.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.toObject(message.sparkJob, options);
                                if (options.oneofs)
                                    object.typeJob = "sparkJob";
                            }
                            if (message.pysparkJob != null && message.hasOwnProperty("pysparkJob")) {
                                object.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.toObject(message.pysparkJob, options);
                                if (options.oneofs)
                                    object.typeJob = "pysparkJob";
                            }
                            if (message.hiveJob != null && message.hasOwnProperty("hiveJob")) {
                                object.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.toObject(message.hiveJob, options);
                                if (options.oneofs)
                                    object.typeJob = "hiveJob";
                            }
                            if (message.pigJob != null && message.hasOwnProperty("pigJob")) {
                                object.pigJob = $root.google.cloud.dataproc.v1.PigJob.toObject(message.pigJob, options);
                                if (options.oneofs)
                                    object.typeJob = "pigJob";
                            }
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.dataproc.v1.JobStatus.toObject(message.status, options);
                            if (message.yarnApplications && message.yarnApplications.length) {
                                object.yarnApplications = [];
                                for (var j = 0; j < message.yarnApplications.length; ++j)
                                    object.yarnApplications[j] = $root.google.cloud.dataproc.v1.YarnApplication.toObject(message.yarnApplications[j], options);
                            }
                            if (message.sparkSqlJob != null && message.hasOwnProperty("sparkSqlJob")) {
                                object.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.toObject(message.sparkSqlJob, options);
                                if (options.oneofs)
                                    object.typeJob = "sparkSqlJob";
                            }
                            if (message.statusHistory && message.statusHistory.length) {
                                object.statusHistory = [];
                                for (var j = 0; j < message.statusHistory.length; ++j)
                                    object.statusHistory[j] = $root.google.cloud.dataproc.v1.JobStatus.toObject(message.statusHistory[j], options);
                            }
                            if (message.driverControlFilesUri != null && message.hasOwnProperty("driverControlFilesUri"))
                                object.driverControlFilesUri = message.driverControlFilesUri;
                            if (message.driverOutputResourceUri != null && message.hasOwnProperty("driverOutputResourceUri"))
                                object.driverOutputResourceUri = message.driverOutputResourceUri;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.scheduling != null && message.hasOwnProperty("scheduling"))
                                object.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.toObject(message.scheduling, options);
                            if (message.sparkRJob != null && message.hasOwnProperty("sparkRJob")) {
                                object.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.toObject(message.sparkRJob, options);
                                if (options.oneofs)
                                    object.typeJob = "sparkRJob";
                            }
                            if (message.jobUuid != null && message.hasOwnProperty("jobUuid"))
                                object.jobUuid = message.jobUuid;
                            if (message.prestoJob != null && message.hasOwnProperty("prestoJob")) {
                                object.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.toObject(message.prestoJob, options);
                                if (options.oneofs)
                                    object.typeJob = "prestoJob";
                            }
                            if (message.done != null && message.hasOwnProperty("done"))
                                object.done = message.done;
                            if (message.driverSchedulingConfig != null && message.hasOwnProperty("driverSchedulingConfig"))
                                object.driverSchedulingConfig = $root.google.cloud.dataproc.v1.DriverSchedulingConfig.toObject(message.driverSchedulingConfig, options);
                            return object;
                        };
    
                        /**
                         * Converts this Job to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.Job
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Job.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for Job
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.Job
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Job.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.Job";
                        };
    
                        return Job;
                    })();
    
                    v1.DriverSchedulingConfig = (function() {
    
                        /**
                         * Properties of a DriverSchedulingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDriverSchedulingConfig
                         * @property {number|null} [memoryMb] DriverSchedulingConfig memoryMb
                         * @property {number|null} [vcores] DriverSchedulingConfig vcores
                         */
    
                        /**
                         * Constructs a new DriverSchedulingConfig.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DriverSchedulingConfig.
                         * @implements IDriverSchedulingConfig
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDriverSchedulingConfig=} [properties] Properties to set
                         */
                        function DriverSchedulingConfig(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DriverSchedulingConfig memoryMb.
                         * @member {number} memoryMb
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @instance
                         */
                        DriverSchedulingConfig.prototype.memoryMb = 0;
    
                        /**
                         * DriverSchedulingConfig vcores.
                         * @member {number} vcores
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @instance
                         */
                        DriverSchedulingConfig.prototype.vcores = 0;
    
                        /**
                         * Creates a new DriverSchedulingConfig instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDriverSchedulingConfig=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DriverSchedulingConfig} DriverSchedulingConfig instance
                         */
                        DriverSchedulingConfig.create = function create(properties) {
                            return new DriverSchedulingConfig(properties);
                        };
    
                        /**
                         * Encodes the specified DriverSchedulingConfig message. Does not implicitly {@link google.cloud.dataproc.v1.DriverSchedulingConfig.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDriverSchedulingConfig} message DriverSchedulingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DriverSchedulingConfig.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.memoryMb != null && Object.hasOwnProperty.call(message, "memoryMb"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.memoryMb);
                            if (message.vcores != null && Object.hasOwnProperty.call(message, "vcores"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.vcores);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DriverSchedulingConfig message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DriverSchedulingConfig.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.IDriverSchedulingConfig} message DriverSchedulingConfig message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DriverSchedulingConfig.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DriverSchedulingConfig message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DriverSchedulingConfig} DriverSchedulingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DriverSchedulingConfig.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DriverSchedulingConfig();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.memoryMb = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.vcores = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DriverSchedulingConfig message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DriverSchedulingConfig} DriverSchedulingConfig
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DriverSchedulingConfig.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DriverSchedulingConfig message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DriverSchedulingConfig.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                if (!$util.isInteger(message.memoryMb))
                                    return "memoryMb: integer expected";
                            if (message.vcores != null && message.hasOwnProperty("vcores"))
                                if (!$util.isInteger(message.vcores))
                                    return "vcores: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a DriverSchedulingConfig message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DriverSchedulingConfig} DriverSchedulingConfig
                         */
                        DriverSchedulingConfig.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DriverSchedulingConfig)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DriverSchedulingConfig();
                            if (object.memoryMb != null)
                                message.memoryMb = object.memoryMb | 0;
                            if (object.vcores != null)
                                message.vcores = object.vcores | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DriverSchedulingConfig message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {google.cloud.dataproc.v1.DriverSchedulingConfig} message DriverSchedulingConfig
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DriverSchedulingConfig.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.memoryMb = 0;
                                object.vcores = 0;
                            }
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                object.memoryMb = message.memoryMb;
                            if (message.vcores != null && message.hasOwnProperty("vcores"))
                                object.vcores = message.vcores;
                            return object;
                        };
    
                        /**
                         * Converts this DriverSchedulingConfig to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DriverSchedulingConfig.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DriverSchedulingConfig
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DriverSchedulingConfig
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DriverSchedulingConfig.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DriverSchedulingConfig";
                        };
    
                        return DriverSchedulingConfig;
                    })();
    
                    v1.JobScheduling = (function() {
    
                        /**
                         * Properties of a JobScheduling.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJobScheduling
                         * @property {number|null} [maxFailuresPerHour] JobScheduling maxFailuresPerHour
                         * @property {number|null} [maxFailuresTotal] JobScheduling maxFailuresTotal
                         */
    
                        /**
                         * Constructs a new JobScheduling.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobScheduling.
                         * @implements IJobScheduling
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJobScheduling=} [properties] Properties to set
                         */
                        function JobScheduling(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobScheduling maxFailuresPerHour.
                         * @member {number} maxFailuresPerHour
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @instance
                         */
                        JobScheduling.prototype.maxFailuresPerHour = 0;
    
                        /**
                         * JobScheduling maxFailuresTotal.
                         * @member {number} maxFailuresTotal
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @instance
                         */
                        JobScheduling.prototype.maxFailuresTotal = 0;
    
                        /**
                         * Creates a new JobScheduling instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobScheduling=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.JobScheduling} JobScheduling instance
                         */
                        JobScheduling.create = function create(properties) {
                            return new JobScheduling(properties);
                        };
    
                        /**
                         * Encodes the specified JobScheduling message. Does not implicitly {@link google.cloud.dataproc.v1.JobScheduling.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobScheduling} message JobScheduling message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobScheduling.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.maxFailuresPerHour != null && Object.hasOwnProperty.call(message, "maxFailuresPerHour"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.maxFailuresPerHour);
                            if (message.maxFailuresTotal != null && Object.hasOwnProperty.call(message, "maxFailuresTotal"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.maxFailuresTotal);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobScheduling message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.JobScheduling.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobScheduling} message JobScheduling message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobScheduling.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobScheduling message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.JobScheduling} JobScheduling
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobScheduling.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.JobScheduling();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.maxFailuresPerHour = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.maxFailuresTotal = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobScheduling message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.JobScheduling} JobScheduling
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobScheduling.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobScheduling message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobScheduling.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.maxFailuresPerHour != null && message.hasOwnProperty("maxFailuresPerHour"))
                                if (!$util.isInteger(message.maxFailuresPerHour))
                                    return "maxFailuresPerHour: integer expected";
                            if (message.maxFailuresTotal != null && message.hasOwnProperty("maxFailuresTotal"))
                                if (!$util.isInteger(message.maxFailuresTotal))
                                    return "maxFailuresTotal: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a JobScheduling message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.JobScheduling} JobScheduling
                         */
                        JobScheduling.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.JobScheduling)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.JobScheduling();
                            if (object.maxFailuresPerHour != null)
                                message.maxFailuresPerHour = object.maxFailuresPerHour | 0;
                            if (object.maxFailuresTotal != null)
                                message.maxFailuresTotal = object.maxFailuresTotal | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobScheduling message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {google.cloud.dataproc.v1.JobScheduling} message JobScheduling
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobScheduling.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.maxFailuresPerHour = 0;
                                object.maxFailuresTotal = 0;
                            }
                            if (message.maxFailuresPerHour != null && message.hasOwnProperty("maxFailuresPerHour"))
                                object.maxFailuresPerHour = message.maxFailuresPerHour;
                            if (message.maxFailuresTotal != null && message.hasOwnProperty("maxFailuresTotal"))
                                object.maxFailuresTotal = message.maxFailuresTotal;
                            return object;
                        };
    
                        /**
                         * Converts this JobScheduling to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobScheduling.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobScheduling
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.JobScheduling
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobScheduling.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.JobScheduling";
                        };
    
                        return JobScheduling;
                    })();
    
                    v1.SubmitJobRequest = (function() {
    
                        /**
                         * Properties of a SubmitJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ISubmitJobRequest
                         * @property {string|null} [projectId] SubmitJobRequest projectId
                         * @property {string|null} [region] SubmitJobRequest region
                         * @property {google.cloud.dataproc.v1.IJob|null} [job] SubmitJobRequest job
                         * @property {string|null} [requestId] SubmitJobRequest requestId
                         */
    
                        /**
                         * Constructs a new SubmitJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a SubmitJobRequest.
                         * @implements ISubmitJobRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest=} [properties] Properties to set
                         */
                        function SubmitJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * SubmitJobRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @instance
                         */
                        SubmitJobRequest.prototype.projectId = "";
    
                        /**
                         * SubmitJobRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @instance
                         */
                        SubmitJobRequest.prototype.region = "";
    
                        /**
                         * SubmitJobRequest job.
                         * @member {google.cloud.dataproc.v1.IJob|null|undefined} job
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @instance
                         */
                        SubmitJobRequest.prototype.job = null;
    
                        /**
                         * SubmitJobRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @instance
                         */
                        SubmitJobRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new SubmitJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.SubmitJobRequest} SubmitJobRequest instance
                         */
                        SubmitJobRequest.create = function create(properties) {
                            return new SubmitJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified SubmitJobRequest message. Does not implicitly {@link google.cloud.dataproc.v1.SubmitJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} message SubmitJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SubmitJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                $root.google.cloud.dataproc.v1.Job.encode(message.job, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified SubmitJobRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.SubmitJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ISubmitJobRequest} message SubmitJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SubmitJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a SubmitJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.SubmitJobRequest} SubmitJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SubmitJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.SubmitJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.job = $root.google.cloud.dataproc.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a SubmitJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.SubmitJobRequest} SubmitJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SubmitJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a SubmitJobRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SubmitJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.dataproc.v1.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a SubmitJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.SubmitJobRequest} SubmitJobRequest
                         */
                        SubmitJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.SubmitJobRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.SubmitJobRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.SubmitJobRequest.job: object expected");
                                message.job = $root.google.cloud.dataproc.v1.Job.fromObject(object.job);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a SubmitJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.SubmitJobRequest} message SubmitJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SubmitJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.job = null;
                                object.region = "";
                                object.requestId = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.dataproc.v1.Job.toObject(message.job, options);
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this SubmitJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SubmitJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for SubmitJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.SubmitJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SubmitJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.SubmitJobRequest";
                        };
    
                        return SubmitJobRequest;
                    })();
    
                    v1.JobMetadata = (function() {
    
                        /**
                         * Properties of a JobMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IJobMetadata
                         * @property {string|null} [jobId] JobMetadata jobId
                         * @property {google.cloud.dataproc.v1.IJobStatus|null} [status] JobMetadata status
                         * @property {string|null} [operationType] JobMetadata operationType
                         * @property {google.protobuf.ITimestamp|null} [startTime] JobMetadata startTime
                         */
    
                        /**
                         * Constructs a new JobMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a JobMetadata.
                         * @implements IJobMetadata
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IJobMetadata=} [properties] Properties to set
                         */
                        function JobMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * JobMetadata jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @instance
                         */
                        JobMetadata.prototype.jobId = "";
    
                        /**
                         * JobMetadata status.
                         * @member {google.cloud.dataproc.v1.IJobStatus|null|undefined} status
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @instance
                         */
                        JobMetadata.prototype.status = null;
    
                        /**
                         * JobMetadata operationType.
                         * @member {string} operationType
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @instance
                         */
                        JobMetadata.prototype.operationType = "";
    
                        /**
                         * JobMetadata startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @instance
                         */
                        JobMetadata.prototype.startTime = null;
    
                        /**
                         * Creates a new JobMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobMetadata=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.JobMetadata} JobMetadata instance
                         */
                        JobMetadata.create = function create(properties) {
                            return new JobMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified JobMetadata message. Does not implicitly {@link google.cloud.dataproc.v1.JobMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobMetadata} message JobMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.jobId);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.dataproc.v1.JobStatus.encode(message.status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.operationType);
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified JobMetadata message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.JobMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IJobMetadata} message JobMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        JobMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a JobMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.JobMetadata} JobMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.JobMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.status = $root.google.cloud.dataproc.v1.JobStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.operationType = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a JobMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.JobMetadata} JobMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        JobMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a JobMetadata message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        JobMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.dataproc.v1.JobStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                if (!$util.isString(message.operationType))
                                    return "operationType: string expected";
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a JobMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.JobMetadata} JobMetadata
                         */
                        JobMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.JobMetadata)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.JobMetadata();
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.JobMetadata.status: object expected");
                                message.status = $root.google.cloud.dataproc.v1.JobStatus.fromObject(object.status);
                            }
                            if (object.operationType != null)
                                message.operationType = String(object.operationType);
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.JobMetadata.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a JobMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.JobMetadata} message JobMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        JobMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.jobId = "";
                                object.status = null;
                                object.operationType = "";
                                object.startTime = null;
                            }
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.dataproc.v1.JobStatus.toObject(message.status, options);
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = message.operationType;
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this JobMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        JobMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for JobMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.JobMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        JobMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.JobMetadata";
                        };
    
                        return JobMetadata;
                    })();
    
                    v1.GetJobRequest = (function() {
    
                        /**
                         * Properties of a GetJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetJobRequest
                         * @property {string|null} [projectId] GetJobRequest projectId
                         * @property {string|null} [region] GetJobRequest region
                         * @property {string|null} [jobId] GetJobRequest jobId
                         */
    
                        /**
                         * Constructs a new GetJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetJobRequest.
                         * @implements IGetJobRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetJobRequest=} [properties] Properties to set
                         */
                        function GetJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetJobRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @instance
                         */
                        GetJobRequest.prototype.projectId = "";
    
                        /**
                         * GetJobRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @instance
                         */
                        GetJobRequest.prototype.region = "";
    
                        /**
                         * GetJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @instance
                         */
                        GetJobRequest.prototype.jobId = "";
    
                        /**
                         * Creates a new GetJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetJobRequest} GetJobRequest instance
                         */
                        GetJobRequest.create = function create(properties) {
                            return new GetJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetJobRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetJobRequest} message GetJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetJobRequest} GetJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetJobRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetJobRequest} GetJobRequest
                         */
                        GetJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetJobRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetJobRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetJobRequest} message GetJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.jobId = "";
                                object.region = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this GetJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetJobRequest";
                        };
    
                        return GetJobRequest;
                    })();
    
                    v1.ListJobsRequest = (function() {
    
                        /**
                         * Properties of a ListJobsRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListJobsRequest
                         * @property {string|null} [projectId] ListJobsRequest projectId
                         * @property {string|null} [region] ListJobsRequest region
                         * @property {number|null} [pageSize] ListJobsRequest pageSize
                         * @property {string|null} [pageToken] ListJobsRequest pageToken
                         * @property {string|null} [clusterName] ListJobsRequest clusterName
                         * @property {google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher|null} [jobStateMatcher] ListJobsRequest jobStateMatcher
                         * @property {string|null} [filter] ListJobsRequest filter
                         */
    
                        /**
                         * Constructs a new ListJobsRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListJobsRequest.
                         * @implements IListJobsRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListJobsRequest=} [properties] Properties to set
                         */
                        function ListJobsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.projectId = "";
    
                        /**
                         * ListJobsRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.region = "";
    
                        /**
                         * ListJobsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListJobsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.pageToken = "";
    
                        /**
                         * ListJobsRequest clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.clusterName = "";
    
                        /**
                         * ListJobsRequest jobStateMatcher.
                         * @member {google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher} jobStateMatcher
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.jobStateMatcher = 0;
    
                        /**
                         * ListJobsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         */
                        ListJobsRequest.prototype.filter = "";
    
                        /**
                         * Creates a new ListJobsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListJobsRequest} ListJobsRequest instance
                         */
                        ListJobsRequest.create = function create(properties) {
                            return new ListJobsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ListJobsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.clusterName);
                            if (message.jobStateMatcher != null && Object.hasOwnProperty.call(message, "jobStateMatcher"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.jobStateMatcher);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.region);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.filter);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListJobsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsRequest} message ListJobsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListJobsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.jobStateMatcher = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.filter = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListJobsRequest} ListJobsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.jobStateMatcher != null && message.hasOwnProperty("jobStateMatcher"))
                                switch (message.jobStateMatcher) {
                                default:
                                    return "jobStateMatcher: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListJobsRequest} ListJobsRequest
                         */
                        ListJobsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListJobsRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListJobsRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            switch (object.jobStateMatcher) {
                            default:
                                if (typeof object.jobStateMatcher === "number") {
                                    message.jobStateMatcher = object.jobStateMatcher;
                                    break;
                                }
                                break;
                            case "ALL":
                            case 0:
                                message.jobStateMatcher = 0;
                                break;
                            case "ACTIVE":
                            case 1:
                                message.jobStateMatcher = 1;
                                break;
                            case "NON_ACTIVE":
                            case 2:
                                message.jobStateMatcher = 2;
                                break;
                            }
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ListJobsRequest} message ListJobsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.clusterName = "";
                                object.jobStateMatcher = options.enums === String ? "ALL" : 0;
                                object.region = "";
                                object.filter = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.jobStateMatcher != null && message.hasOwnProperty("jobStateMatcher"))
                                object.jobStateMatcher = options.enums === String ? $root.google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher[message.jobStateMatcher] === undefined ? message.jobStateMatcher : $root.google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher[message.jobStateMatcher] : message.jobStateMatcher;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobsRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListJobsRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListJobsRequest";
                        };
    
                        /**
                         * JobStateMatcher enum.
                         * @name google.cloud.dataproc.v1.ListJobsRequest.JobStateMatcher
                         * @enum {number}
                         * @property {number} ALL=0 ALL value
                         * @property {number} ACTIVE=1 ACTIVE value
                         * @property {number} NON_ACTIVE=2 NON_ACTIVE value
                         */
                        ListJobsRequest.JobStateMatcher = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "ALL"] = 0;
                            values[valuesById[1] = "ACTIVE"] = 1;
                            values[valuesById[2] = "NON_ACTIVE"] = 2;
                            return values;
                        })();
    
                        return ListJobsRequest;
                    })();
    
                    v1.UpdateJobRequest = (function() {
    
                        /**
                         * Properties of an UpdateJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IUpdateJobRequest
                         * @property {string|null} [projectId] UpdateJobRequest projectId
                         * @property {string|null} [region] UpdateJobRequest region
                         * @property {string|null} [jobId] UpdateJobRequest jobId
                         * @property {google.cloud.dataproc.v1.IJob|null} [job] UpdateJobRequest job
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateJobRequest updateMask
                         */
    
                        /**
                         * Constructs a new UpdateJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an UpdateJobRequest.
                         * @implements IUpdateJobRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest=} [properties] Properties to set
                         */
                        function UpdateJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateJobRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.projectId = "";
    
                        /**
                         * UpdateJobRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.region = "";
    
                        /**
                         * UpdateJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.jobId = "";
    
                        /**
                         * UpdateJobRequest job.
                         * @member {google.cloud.dataproc.v1.IJob|null|undefined} job
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.job = null;
    
                        /**
                         * UpdateJobRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         */
                        UpdateJobRequest.prototype.updateMask = null;
    
                        /**
                         * Creates a new UpdateJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.UpdateJobRequest} UpdateJobRequest instance
                         */
                        UpdateJobRequest.create = function create(properties) {
                            return new UpdateJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message. Does not implicitly {@link google.cloud.dataproc.v1.UpdateJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.region);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobId);
                            if (message.job != null && Object.hasOwnProperty.call(message, "job"))
                                $root.google.cloud.dataproc.v1.Job.encode(message.job, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateJobRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.UpdateJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateJobRequest} message UpdateJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.UpdateJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.job = $root.google.cloud.dataproc.v1.Job.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.UpdateJobRequest} UpdateJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateJobRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            if (message.job != null && message.hasOwnProperty("job")) {
                                var error = $root.google.cloud.dataproc.v1.Job.verify(message.job);
                                if (error)
                                    return "job." + error;
                            }
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.UpdateJobRequest} UpdateJobRequest
                         */
                        UpdateJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.UpdateJobRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.UpdateJobRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            if (object.job != null) {
                                if (typeof object.job !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateJobRequest.job: object expected");
                                message.job = $root.google.cloud.dataproc.v1.Job.fromObject(object.job);
                            }
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateJobRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.UpdateJobRequest} message UpdateJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.region = "";
                                object.jobId = "";
                                object.job = null;
                                object.updateMask = null;
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.job != null && message.hasOwnProperty("job"))
                                object.job = $root.google.cloud.dataproc.v1.Job.toObject(message.job, options);
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.UpdateJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.UpdateJobRequest";
                        };
    
                        return UpdateJobRequest;
                    })();
    
                    v1.ListJobsResponse = (function() {
    
                        /**
                         * Properties of a ListJobsResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListJobsResponse
                         * @property {Array.<google.cloud.dataproc.v1.IJob>|null} [jobs] ListJobsResponse jobs
                         * @property {string|null} [nextPageToken] ListJobsResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListJobsResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListJobsResponse.
                         * @implements IListJobsResponse
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListJobsResponse=} [properties] Properties to set
                         */
                        function ListJobsResponse(properties) {
                            this.jobs = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListJobsResponse jobs.
                         * @member {Array.<google.cloud.dataproc.v1.IJob>} jobs
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.jobs = $util.emptyArray;
    
                        /**
                         * ListJobsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @instance
                         */
                        ListJobsResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListJobsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsResponse=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListJobsResponse} ListJobsResponse instance
                         */
                        ListJobsResponse.create = function create(properties) {
                            return new ListJobsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message. Does not implicitly {@link google.cloud.dataproc.v1.ListJobsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.dataproc.v1.Job.encode(message.jobs[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListJobsResponse message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListJobsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListJobsResponse} message ListJobsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListJobsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListJobsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.jobs && message.jobs.length))
                                            message.jobs = [];
                                        message.jobs.push($root.google.cloud.dataproc.v1.Job.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListJobsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListJobsResponse} ListJobsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListJobsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListJobsResponse message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListJobsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.Job.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListJobsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListJobsResponse} ListJobsResponse
                         */
                        ListJobsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListJobsResponse)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListJobsResponse();
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.dataproc.v1.ListJobsResponse.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ListJobsResponse.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.dataproc.v1.Job.fromObject(object.jobs[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListJobsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.ListJobsResponse} message ListJobsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListJobsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.jobs = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.dataproc.v1.Job.toObject(message.jobs[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListJobsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListJobsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListJobsResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListJobsResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListJobsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListJobsResponse";
                        };
    
                        return ListJobsResponse;
                    })();
    
                    v1.CancelJobRequest = (function() {
    
                        /**
                         * Properties of a CancelJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICancelJobRequest
                         * @property {string|null} [projectId] CancelJobRequest projectId
                         * @property {string|null} [region] CancelJobRequest region
                         * @property {string|null} [jobId] CancelJobRequest jobId
                         */
    
                        /**
                         * Constructs a new CancelJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CancelJobRequest.
                         * @implements ICancelJobRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest=} [properties] Properties to set
                         */
                        function CancelJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CancelJobRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @instance
                         */
                        CancelJobRequest.prototype.projectId = "";
    
                        /**
                         * CancelJobRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @instance
                         */
                        CancelJobRequest.prototype.region = "";
    
                        /**
                         * CancelJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @instance
                         */
                        CancelJobRequest.prototype.jobId = "";
    
                        /**
                         * Creates a new CancelJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CancelJobRequest} CancelJobRequest instance
                         */
                        CancelJobRequest.create = function create(properties) {
                            return new CancelJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CancelJobRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CancelJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest} message CancelJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CancelJobRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CancelJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICancelJobRequest} message CancelJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CancelJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CancelJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CancelJobRequest} CancelJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CancelJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CancelJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CancelJobRequest} CancelJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CancelJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CancelJobRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CancelJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CancelJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CancelJobRequest} CancelJobRequest
                         */
                        CancelJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CancelJobRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CancelJobRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CancelJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CancelJobRequest} message CancelJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CancelJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.jobId = "";
                                object.region = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this CancelJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CancelJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CancelJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CancelJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CancelJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CancelJobRequest";
                        };
    
                        return CancelJobRequest;
                    })();
    
                    v1.DeleteJobRequest = (function() {
    
                        /**
                         * Properties of a DeleteJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDeleteJobRequest
                         * @property {string|null} [projectId] DeleteJobRequest projectId
                         * @property {string|null} [region] DeleteJobRequest region
                         * @property {string|null} [jobId] DeleteJobRequest jobId
                         */
    
                        /**
                         * Constructs a new DeleteJobRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DeleteJobRequest.
                         * @implements IDeleteJobRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest=} [properties] Properties to set
                         */
                        function DeleteJobRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteJobRequest projectId.
                         * @member {string} projectId
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.projectId = "";
    
                        /**
                         * DeleteJobRequest region.
                         * @member {string} region
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.region = "";
    
                        /**
                         * DeleteJobRequest jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @instance
                         */
                        DeleteJobRequest.prototype.jobId = "";
    
                        /**
                         * Creates a new DeleteJobRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DeleteJobRequest} DeleteJobRequest instance
                         */
                        DeleteJobRequest.create = function create(properties) {
                            return new DeleteJobRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DeleteJobRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.projectId != null && Object.hasOwnProperty.call(message, "projectId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.projectId);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.jobId);
                            if (message.region != null && Object.hasOwnProperty.call(message, "region"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.region);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteJobRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DeleteJobRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteJobRequest} message DeleteJobRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteJobRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DeleteJobRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.projectId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.region = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteJobRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DeleteJobRequest} DeleteJobRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteJobRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteJobRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteJobRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                if (!$util.isString(message.projectId))
                                    return "projectId: string expected";
                            if (message.region != null && message.hasOwnProperty("region"))
                                if (!$util.isString(message.region))
                                    return "region: string expected";
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteJobRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DeleteJobRequest} DeleteJobRequest
                         */
                        DeleteJobRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DeleteJobRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DeleteJobRequest();
                            if (object.projectId != null)
                                message.projectId = String(object.projectId);
                            if (object.region != null)
                                message.region = String(object.region);
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteJobRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DeleteJobRequest} message DeleteJobRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteJobRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.projectId = "";
                                object.jobId = "";
                                object.region = "";
                            }
                            if (message.projectId != null && message.hasOwnProperty("projectId"))
                                object.projectId = message.projectId;
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.region != null && message.hasOwnProperty("region"))
                                object.region = message.region;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteJobRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteJobRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteJobRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DeleteJobRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteJobRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DeleteJobRequest";
                        };
    
                        return DeleteJobRequest;
                    })();
    
                    v1.NodeGroupController = (function() {
    
                        /**
                         * Constructs a new NodeGroupController service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a NodeGroupController
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function NodeGroupController(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (NodeGroupController.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = NodeGroupController;
    
                        /**
                         * Creates new NodeGroupController service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {NodeGroupController} RPC service. Useful where requests and/or responses are streamed.
                         */
                        NodeGroupController.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.NodeGroupController|createNodeGroup}.
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @typedef CreateNodeGroupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateNodeGroup.
                         * @function createNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest} request CreateNodeGroupRequest message or plain object
                         * @param {google.cloud.dataproc.v1.NodeGroupController.CreateNodeGroupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NodeGroupController.prototype.createNodeGroup = function createNodeGroup(request, callback) {
                            return this.rpcCall(createNodeGroup, $root.google.cloud.dataproc.v1.CreateNodeGroupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateNodeGroup" });
    
                        /**
                         * Calls CreateNodeGroup.
                         * @function createNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest} request CreateNodeGroupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.NodeGroupController|resizeNodeGroup}.
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @typedef ResizeNodeGroupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls ResizeNodeGroup.
                         * @function resizeNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest} request ResizeNodeGroupRequest message or plain object
                         * @param {google.cloud.dataproc.v1.NodeGroupController.ResizeNodeGroupCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NodeGroupController.prototype.resizeNodeGroup = function resizeNodeGroup(request, callback) {
                            return this.rpcCall(resizeNodeGroup, $root.google.cloud.dataproc.v1.ResizeNodeGroupRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "ResizeNodeGroup" });
    
                        /**
                         * Calls ResizeNodeGroup.
                         * @function resizeNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest} request ResizeNodeGroupRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.NodeGroupController|getNodeGroup}.
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @typedef GetNodeGroupCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.NodeGroup} [response] NodeGroup
                         */
    
                        /**
                         * Calls GetNodeGroup.
                         * @function getNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest} request GetNodeGroupRequest message or plain object
                         * @param {google.cloud.dataproc.v1.NodeGroupController.GetNodeGroupCallback} callback Node-style callback called with the error, if any, and NodeGroup
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(NodeGroupController.prototype.getNodeGroup = function getNodeGroup(request, callback) {
                            return this.rpcCall(getNodeGroup, $root.google.cloud.dataproc.v1.GetNodeGroupRequest, $root.google.cloud.dataproc.v1.NodeGroup, request, callback);
                        }, "name", { value: "GetNodeGroup" });
    
                        /**
                         * Calls GetNodeGroup.
                         * @function getNodeGroup
                         * @memberof google.cloud.dataproc.v1.NodeGroupController
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest} request GetNodeGroupRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.NodeGroup>} Promise
                         * @variation 2
                         */
    
                        return NodeGroupController;
                    })();
    
                    v1.CreateNodeGroupRequest = (function() {
    
                        /**
                         * Properties of a CreateNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICreateNodeGroupRequest
                         * @property {string|null} [parent] CreateNodeGroupRequest parent
                         * @property {google.cloud.dataproc.v1.INodeGroup|null} [nodeGroup] CreateNodeGroupRequest nodeGroup
                         * @property {string|null} [nodeGroupId] CreateNodeGroupRequest nodeGroupId
                         * @property {string|null} [requestId] CreateNodeGroupRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CreateNodeGroupRequest.
                         * @implements ICreateNodeGroupRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest=} [properties] Properties to set
                         */
                        function CreateNodeGroupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateNodeGroupRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @instance
                         */
                        CreateNodeGroupRequest.prototype.parent = "";
    
                        /**
                         * CreateNodeGroupRequest nodeGroup.
                         * @member {google.cloud.dataproc.v1.INodeGroup|null|undefined} nodeGroup
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @instance
                         */
                        CreateNodeGroupRequest.prototype.nodeGroup = null;
    
                        /**
                         * CreateNodeGroupRequest nodeGroupId.
                         * @member {string} nodeGroupId
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @instance
                         */
                        CreateNodeGroupRequest.prototype.nodeGroupId = "";
    
                        /**
                         * CreateNodeGroupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @instance
                         */
                        CreateNodeGroupRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateNodeGroupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CreateNodeGroupRequest} CreateNodeGroupRequest instance
                         */
                        CreateNodeGroupRequest.create = function create(properties) {
                            return new CreateNodeGroupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateNodeGroupRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CreateNodeGroupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest} message CreateNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateNodeGroupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.nodeGroup != null && Object.hasOwnProperty.call(message, "nodeGroup"))
                                $root.google.cloud.dataproc.v1.NodeGroup.encode(message.nodeGroup, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.nodeGroupId != null && Object.hasOwnProperty.call(message, "nodeGroupId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.nodeGroupId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateNodeGroupRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CreateNodeGroupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateNodeGroupRequest} message CreateNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateNodeGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateNodeGroupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CreateNodeGroupRequest} CreateNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateNodeGroupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CreateNodeGroupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.nodeGroupId = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateNodeGroupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CreateNodeGroupRequest} CreateNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateNodeGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateNodeGroupRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateNodeGroupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup")) {
                                var error = $root.google.cloud.dataproc.v1.NodeGroup.verify(message.nodeGroup);
                                if (error)
                                    return "nodeGroup." + error;
                            }
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                if (!$util.isString(message.nodeGroupId))
                                    return "nodeGroupId: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateNodeGroupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CreateNodeGroupRequest} CreateNodeGroupRequest
                         */
                        CreateNodeGroupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CreateNodeGroupRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CreateNodeGroupRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.nodeGroup != null) {
                                if (typeof object.nodeGroup !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.CreateNodeGroupRequest.nodeGroup: object expected");
                                message.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.fromObject(object.nodeGroup);
                            }
                            if (object.nodeGroupId != null)
                                message.nodeGroupId = String(object.nodeGroupId);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateNodeGroupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CreateNodeGroupRequest} message CreateNodeGroupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateNodeGroupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.nodeGroup = null;
                                object.requestId = "";
                                object.nodeGroupId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.nodeGroup != null && message.hasOwnProperty("nodeGroup"))
                                object.nodeGroup = $root.google.cloud.dataproc.v1.NodeGroup.toObject(message.nodeGroup, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                object.nodeGroupId = message.nodeGroupId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateNodeGroupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateNodeGroupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateNodeGroupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CreateNodeGroupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateNodeGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CreateNodeGroupRequest";
                        };
    
                        return CreateNodeGroupRequest;
                    })();
    
                    v1.ResizeNodeGroupRequest = (function() {
    
                        /**
                         * Properties of a ResizeNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IResizeNodeGroupRequest
                         * @property {string|null} [name] ResizeNodeGroupRequest name
                         * @property {number|null} [size] ResizeNodeGroupRequest size
                         * @property {string|null} [requestId] ResizeNodeGroupRequest requestId
                         * @property {google.protobuf.IDuration|null} [gracefulDecommissionTimeout] ResizeNodeGroupRequest gracefulDecommissionTimeout
                         */
    
                        /**
                         * Constructs a new ResizeNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ResizeNodeGroupRequest.
                         * @implements IResizeNodeGroupRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest=} [properties] Properties to set
                         */
                        function ResizeNodeGroupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResizeNodeGroupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @instance
                         */
                        ResizeNodeGroupRequest.prototype.name = "";
    
                        /**
                         * ResizeNodeGroupRequest size.
                         * @member {number} size
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @instance
                         */
                        ResizeNodeGroupRequest.prototype.size = 0;
    
                        /**
                         * ResizeNodeGroupRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @instance
                         */
                        ResizeNodeGroupRequest.prototype.requestId = "";
    
                        /**
                         * ResizeNodeGroupRequest gracefulDecommissionTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} gracefulDecommissionTimeout
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @instance
                         */
                        ResizeNodeGroupRequest.prototype.gracefulDecommissionTimeout = null;
    
                        /**
                         * Creates a new ResizeNodeGroupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ResizeNodeGroupRequest} ResizeNodeGroupRequest instance
                         */
                        ResizeNodeGroupRequest.create = function create(properties) {
                            return new ResizeNodeGroupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ResizeNodeGroupRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ResizeNodeGroupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest} message ResizeNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResizeNodeGroupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.size != null && Object.hasOwnProperty.call(message, "size"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.size);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            if (message.gracefulDecommissionTimeout != null && Object.hasOwnProperty.call(message, "gracefulDecommissionTimeout"))
                                $root.google.protobuf.Duration.encode(message.gracefulDecommissionTimeout, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResizeNodeGroupRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ResizeNodeGroupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IResizeNodeGroupRequest} message ResizeNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResizeNodeGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResizeNodeGroupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ResizeNodeGroupRequest} ResizeNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResizeNodeGroupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ResizeNodeGroupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.size = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResizeNodeGroupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ResizeNodeGroupRequest} ResizeNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResizeNodeGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResizeNodeGroupRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResizeNodeGroupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.size != null && message.hasOwnProperty("size"))
                                if (!$util.isInteger(message.size))
                                    return "size: integer expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.gracefulDecommissionTimeout);
                                if (error)
                                    return "gracefulDecommissionTimeout." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ResizeNodeGroupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ResizeNodeGroupRequest} ResizeNodeGroupRequest
                         */
                        ResizeNodeGroupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ResizeNodeGroupRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ResizeNodeGroupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.size != null)
                                message.size = object.size | 0;
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.gracefulDecommissionTimeout != null) {
                                if (typeof object.gracefulDecommissionTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ResizeNodeGroupRequest.gracefulDecommissionTimeout: object expected");
                                message.gracefulDecommissionTimeout = $root.google.protobuf.Duration.fromObject(object.gracefulDecommissionTimeout);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResizeNodeGroupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ResizeNodeGroupRequest} message ResizeNodeGroupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResizeNodeGroupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.size = 0;
                                object.requestId = "";
                                object.gracefulDecommissionTimeout = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.size != null && message.hasOwnProperty("size"))
                                object.size = message.size;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            if (message.gracefulDecommissionTimeout != null && message.hasOwnProperty("gracefulDecommissionTimeout"))
                                object.gracefulDecommissionTimeout = $root.google.protobuf.Duration.toObject(message.gracefulDecommissionTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this ResizeNodeGroupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResizeNodeGroupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ResizeNodeGroupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ResizeNodeGroupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ResizeNodeGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ResizeNodeGroupRequest";
                        };
    
                        return ResizeNodeGroupRequest;
                    })();
    
                    v1.GetNodeGroupRequest = (function() {
    
                        /**
                         * Properties of a GetNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetNodeGroupRequest
                         * @property {string|null} [name] GetNodeGroupRequest name
                         */
    
                        /**
                         * Constructs a new GetNodeGroupRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetNodeGroupRequest.
                         * @implements IGetNodeGroupRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest=} [properties] Properties to set
                         */
                        function GetNodeGroupRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetNodeGroupRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @instance
                         */
                        GetNodeGroupRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetNodeGroupRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetNodeGroupRequest} GetNodeGroupRequest instance
                         */
                        GetNodeGroupRequest.create = function create(properties) {
                            return new GetNodeGroupRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetNodeGroupRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetNodeGroupRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest} message GetNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNodeGroupRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetNodeGroupRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetNodeGroupRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetNodeGroupRequest} message GetNodeGroupRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetNodeGroupRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetNodeGroupRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetNodeGroupRequest} GetNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNodeGroupRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetNodeGroupRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetNodeGroupRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetNodeGroupRequest} GetNodeGroupRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetNodeGroupRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetNodeGroupRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetNodeGroupRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetNodeGroupRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetNodeGroupRequest} GetNodeGroupRequest
                         */
                        GetNodeGroupRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetNodeGroupRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetNodeGroupRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetNodeGroupRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetNodeGroupRequest} message GetNodeGroupRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetNodeGroupRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetNodeGroupRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetNodeGroupRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetNodeGroupRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetNodeGroupRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetNodeGroupRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetNodeGroupRequest";
                        };
    
                        return GetNodeGroupRequest;
                    })();
    
                    v1.BatchOperationMetadata = (function() {
    
                        /**
                         * Properties of a BatchOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IBatchOperationMetadata
                         * @property {string|null} [batch] BatchOperationMetadata batch
                         * @property {string|null} [batchUuid] BatchOperationMetadata batchUuid
                         * @property {google.protobuf.ITimestamp|null} [createTime] BatchOperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [doneTime] BatchOperationMetadata doneTime
                         * @property {google.cloud.dataproc.v1.BatchOperationMetadata.BatchOperationType|null} [operationType] BatchOperationMetadata operationType
                         * @property {string|null} [description] BatchOperationMetadata description
                         * @property {Object.<string,string>|null} [labels] BatchOperationMetadata labels
                         * @property {Array.<string>|null} [warnings] BatchOperationMetadata warnings
                         */
    
                        /**
                         * Constructs a new BatchOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a BatchOperationMetadata.
                         * @implements IBatchOperationMetadata
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IBatchOperationMetadata=} [properties] Properties to set
                         */
                        function BatchOperationMetadata(properties) {
                            this.labels = {};
                            this.warnings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * BatchOperationMetadata batch.
                         * @member {string} batch
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.batch = "";
    
                        /**
                         * BatchOperationMetadata batchUuid.
                         * @member {string} batchUuid
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.batchUuid = "";
    
                        /**
                         * BatchOperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.createTime = null;
    
                        /**
                         * BatchOperationMetadata doneTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} doneTime
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.doneTime = null;
    
                        /**
                         * BatchOperationMetadata operationType.
                         * @member {google.cloud.dataproc.v1.BatchOperationMetadata.BatchOperationType} operationType
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.operationType = 0;
    
                        /**
                         * BatchOperationMetadata description.
                         * @member {string} description
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.description = "";
    
                        /**
                         * BatchOperationMetadata labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.labels = $util.emptyObject;
    
                        /**
                         * BatchOperationMetadata warnings.
                         * @member {Array.<string>} warnings
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         */
                        BatchOperationMetadata.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Creates a new BatchOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatchOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.BatchOperationMetadata} BatchOperationMetadata instance
                         */
                        BatchOperationMetadata.create = function create(properties) {
                            return new BatchOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified BatchOperationMetadata message. Does not implicitly {@link google.cloud.dataproc.v1.BatchOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatchOperationMetadata} message BatchOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.batch != null && Object.hasOwnProperty.call(message, "batch"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.batch);
                            if (message.batchUuid != null && Object.hasOwnProperty.call(message, "batchUuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.batchUuid);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.doneTime != null && Object.hasOwnProperty.call(message, "doneTime"))
                                $root.google.protobuf.Timestamp.encode(message.doneTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.operationType);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.description);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    writer.uint32(/* id 9, wireType 2 =*/74).string(message.warnings[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified BatchOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.BatchOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IBatchOperationMetadata} message BatchOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        BatchOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a BatchOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.BatchOperationMetadata} BatchOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.BatchOperationMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.batch = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.batchUuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.doneTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.operationType = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 9: {
                                        if (!(message.warnings && message.warnings.length))
                                            message.warnings = [];
                                        message.warnings.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a BatchOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.BatchOperationMetadata} BatchOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        BatchOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a BatchOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        BatchOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.batch != null && message.hasOwnProperty("batch"))
                                if (!$util.isString(message.batch))
                                    return "batch: string expected";
                            if (message.batchUuid != null && message.hasOwnProperty("batchUuid"))
                                if (!$util.isString(message.batchUuid))
                                    return "batchUuid: string expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.doneTime != null && message.hasOwnProperty("doneTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.doneTime);
                                if (error)
                                    return "doneTime." + error;
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                switch (message.operationType) {
                                default:
                                    return "operationType: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i)
                                    if (!$util.isString(message.warnings[i]))
                                        return "warnings: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a BatchOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.BatchOperationMetadata} BatchOperationMetadata
                         */
                        BatchOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.BatchOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.BatchOperationMetadata();
                            if (object.batch != null)
                                message.batch = String(object.batch);
                            if (object.batchUuid != null)
                                message.batchUuid = String(object.batchUuid);
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BatchOperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.doneTime != null) {
                                if (typeof object.doneTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BatchOperationMetadata.doneTime: object expected");
                                message.doneTime = $root.google.protobuf.Timestamp.fromObject(object.doneTime);
                            }
                            switch (object.operationType) {
                            default:
                                if (typeof object.operationType === "number") {
                                    message.operationType = object.operationType;
                                    break;
                                }
                                break;
                            case "BATCH_OPERATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.operationType = 0;
                                break;
                            case "BATCH":
                            case 1:
                                message.operationType = 1;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.BatchOperationMetadata.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.cloud.dataproc.v1.BatchOperationMetadata.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i)
                                    message.warnings[i] = String(object.warnings[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a BatchOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.BatchOperationMetadata} message BatchOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        BatchOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.warnings = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.batch = "";
                                object.batchUuid = "";
                                object.createTime = null;
                                object.doneTime = null;
                                object.operationType = options.enums === String ? "BATCH_OPERATION_TYPE_UNSPECIFIED" : 0;
                                object.description = "";
                            }
                            if (message.batch != null && message.hasOwnProperty("batch"))
                                object.batch = message.batch;
                            if (message.batchUuid != null && message.hasOwnProperty("batchUuid"))
                                object.batchUuid = message.batchUuid;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.doneTime != null && message.hasOwnProperty("doneTime"))
                                object.doneTime = $root.google.protobuf.Timestamp.toObject(message.doneTime, options);
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = options.enums === String ? $root.google.cloud.dataproc.v1.BatchOperationMetadata.BatchOperationType[message.operationType] === undefined ? message.operationType : $root.google.cloud.dataproc.v1.BatchOperationMetadata.BatchOperationType[message.operationType] : message.operationType;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = message.warnings[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this BatchOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        BatchOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for BatchOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.BatchOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        BatchOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.BatchOperationMetadata";
                        };
    
                        /**
                         * BatchOperationType enum.
                         * @name google.cloud.dataproc.v1.BatchOperationMetadata.BatchOperationType
                         * @enum {number}
                         * @property {number} BATCH_OPERATION_TYPE_UNSPECIFIED=0 BATCH_OPERATION_TYPE_UNSPECIFIED value
                         * @property {number} BATCH=1 BATCH value
                         */
                        BatchOperationMetadata.BatchOperationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BATCH_OPERATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BATCH"] = 1;
                            return values;
                        })();
    
                        return BatchOperationMetadata;
                    })();
    
                    v1.ClusterOperationStatus = (function() {
    
                        /**
                         * Properties of a ClusterOperationStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterOperationStatus
                         * @property {google.cloud.dataproc.v1.ClusterOperationStatus.State|null} [state] ClusterOperationStatus state
                         * @property {string|null} [innerState] ClusterOperationStatus innerState
                         * @property {string|null} [details] ClusterOperationStatus details
                         * @property {google.protobuf.ITimestamp|null} [stateStartTime] ClusterOperationStatus stateStartTime
                         */
    
                        /**
                         * Constructs a new ClusterOperationStatus.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterOperationStatus.
                         * @implements IClusterOperationStatus
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterOperationStatus=} [properties] Properties to set
                         */
                        function ClusterOperationStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterOperationStatus state.
                         * @member {google.cloud.dataproc.v1.ClusterOperationStatus.State} state
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @instance
                         */
                        ClusterOperationStatus.prototype.state = 0;
    
                        /**
                         * ClusterOperationStatus innerState.
                         * @member {string} innerState
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @instance
                         */
                        ClusterOperationStatus.prototype.innerState = "";
    
                        /**
                         * ClusterOperationStatus details.
                         * @member {string} details
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @instance
                         */
                        ClusterOperationStatus.prototype.details = "";
    
                        /**
                         * ClusterOperationStatus stateStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} stateStartTime
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @instance
                         */
                        ClusterOperationStatus.prototype.stateStartTime = null;
    
                        /**
                         * Creates a new ClusterOperationStatus instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationStatus=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterOperationStatus} ClusterOperationStatus instance
                         */
                        ClusterOperationStatus.create = function create(properties) {
                            return new ClusterOperationStatus(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterOperationStatus message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperationStatus.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationStatus} message ClusterOperationStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperationStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            if (message.innerState != null && Object.hasOwnProperty.call(message, "innerState"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.innerState);
                            if (message.details != null && Object.hasOwnProperty.call(message, "details"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.details);
                            if (message.stateStartTime != null && Object.hasOwnProperty.call(message, "stateStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.stateStartTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterOperationStatus message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperationStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationStatus} message ClusterOperationStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperationStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterOperationStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterOperationStatus} ClusterOperationStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperationStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterOperationStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.innerState = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.details = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.stateStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterOperationStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterOperationStatus} ClusterOperationStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperationStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterOperationStatus message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterOperationStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.innerState != null && message.hasOwnProperty("innerState"))
                                if (!$util.isString(message.innerState))
                                    return "innerState: string expected";
                            if (message.details != null && message.hasOwnProperty("details"))
                                if (!$util.isString(message.details))
                                    return "details: string expected";
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.stateStartTime);
                                if (error)
                                    return "stateStartTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterOperationStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterOperationStatus} ClusterOperationStatus
                         */
                        ClusterOperationStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterOperationStatus)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterOperationStatus();
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "DONE":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.innerState != null)
                                message.innerState = String(object.innerState);
                            if (object.details != null)
                                message.details = String(object.details);
                            if (object.stateStartTime != null) {
                                if (typeof object.stateStartTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterOperationStatus.stateStartTime: object expected");
                                message.stateStartTime = $root.google.protobuf.Timestamp.fromObject(object.stateStartTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterOperationStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterOperationStatus} message ClusterOperationStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterOperationStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.state = options.enums === String ? "UNKNOWN" : 0;
                                object.innerState = "";
                                object.details = "";
                                object.stateStartTime = null;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.ClusterOperationStatus.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.ClusterOperationStatus.State[message.state] : message.state;
                            if (message.innerState != null && message.hasOwnProperty("innerState"))
                                object.innerState = message.innerState;
                            if (message.details != null && message.hasOwnProperty("details"))
                                object.details = message.details;
                            if (message.stateStartTime != null && message.hasOwnProperty("stateStartTime"))
                                object.stateStartTime = $root.google.protobuf.Timestamp.toObject(message.stateStartTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this ClusterOperationStatus to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterOperationStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterOperationStatus
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterOperationStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterOperationStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterOperationStatus";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.ClusterOperationStatus.State
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} DONE=3 DONE value
                         */
                        ClusterOperationStatus.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "DONE"] = 3;
                            return values;
                        })();
    
                        return ClusterOperationStatus;
                    })();
    
                    v1.ClusterOperationMetadata = (function() {
    
                        /**
                         * Properties of a ClusterOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterOperationMetadata
                         * @property {string|null} [clusterName] ClusterOperationMetadata clusterName
                         * @property {string|null} [clusterUuid] ClusterOperationMetadata clusterUuid
                         * @property {google.cloud.dataproc.v1.IClusterOperationStatus|null} [status] ClusterOperationMetadata status
                         * @property {Array.<google.cloud.dataproc.v1.IClusterOperationStatus>|null} [statusHistory] ClusterOperationMetadata statusHistory
                         * @property {string|null} [operationType] ClusterOperationMetadata operationType
                         * @property {string|null} [description] ClusterOperationMetadata description
                         * @property {Object.<string,string>|null} [labels] ClusterOperationMetadata labels
                         * @property {Array.<string>|null} [warnings] ClusterOperationMetadata warnings
                         */
    
                        /**
                         * Constructs a new ClusterOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterOperationMetadata.
                         * @implements IClusterOperationMetadata
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterOperationMetadata=} [properties] Properties to set
                         */
                        function ClusterOperationMetadata(properties) {
                            this.statusHistory = [];
                            this.labels = {};
                            this.warnings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterOperationMetadata clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.clusterName = "";
    
                        /**
                         * ClusterOperationMetadata clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.clusterUuid = "";
    
                        /**
                         * ClusterOperationMetadata status.
                         * @member {google.cloud.dataproc.v1.IClusterOperationStatus|null|undefined} status
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.status = null;
    
                        /**
                         * ClusterOperationMetadata statusHistory.
                         * @member {Array.<google.cloud.dataproc.v1.IClusterOperationStatus>} statusHistory
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.statusHistory = $util.emptyArray;
    
                        /**
                         * ClusterOperationMetadata operationType.
                         * @member {string} operationType
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.operationType = "";
    
                        /**
                         * ClusterOperationMetadata description.
                         * @member {string} description
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.description = "";
    
                        /**
                         * ClusterOperationMetadata labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.labels = $util.emptyObject;
    
                        /**
                         * ClusterOperationMetadata warnings.
                         * @member {Array.<string>} warnings
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         */
                        ClusterOperationMetadata.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Creates a new ClusterOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterOperationMetadata} ClusterOperationMetadata instance
                         */
                        ClusterOperationMetadata.create = function create(properties) {
                            return new ClusterOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterOperationMetadata message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationMetadata} message ClusterOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.clusterName);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 8, wireType 2 =*/66).string(message.clusterUuid);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.dataproc.v1.ClusterOperationStatus.encode(message.status, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.statusHistory != null && message.statusHistory.length)
                                for (var i = 0; i < message.statusHistory.length; ++i)
                                    $root.google.cloud.dataproc.v1.ClusterOperationStatus.encode(message.statusHistory[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.operationType);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.description);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 13, wireType 2 =*/106).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    writer.uint32(/* id 14, wireType 2 =*/114).string(message.warnings[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperationMetadata} message ClusterOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterOperationMetadata} ClusterOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterOperationMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 7: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 8: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 9: {
                                        message.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.statusHistory && message.statusHistory.length))
                                            message.statusHistory = [];
                                        message.statusHistory.push($root.google.cloud.dataproc.v1.ClusterOperationStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 11: {
                                        message.operationType = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 13: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 14: {
                                        if (!(message.warnings && message.warnings.length))
                                            message.warnings = [];
                                        message.warnings.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterOperationMetadata} ClusterOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterOperationStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.statusHistory != null && message.hasOwnProperty("statusHistory")) {
                                if (!Array.isArray(message.statusHistory))
                                    return "statusHistory: array expected";
                                for (var i = 0; i < message.statusHistory.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.ClusterOperationStatus.verify(message.statusHistory[i]);
                                    if (error)
                                        return "statusHistory." + error;
                                }
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                if (!$util.isString(message.operationType))
                                    return "operationType: string expected";
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i)
                                    if (!$util.isString(message.warnings[i]))
                                        return "warnings: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterOperationMetadata} ClusterOperationMetadata
                         */
                        ClusterOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterOperationMetadata();
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterOperationMetadata.status: object expected");
                                message.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.fromObject(object.status);
                            }
                            if (object.statusHistory) {
                                if (!Array.isArray(object.statusHistory))
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterOperationMetadata.statusHistory: array expected");
                                message.statusHistory = [];
                                for (var i = 0; i < object.statusHistory.length; ++i) {
                                    if (typeof object.statusHistory[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ClusterOperationMetadata.statusHistory: object expected");
                                    message.statusHistory[i] = $root.google.cloud.dataproc.v1.ClusterOperationStatus.fromObject(object.statusHistory[i]);
                                }
                            }
                            if (object.operationType != null)
                                message.operationType = String(object.operationType);
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterOperationMetadata.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterOperationMetadata.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i)
                                    message.warnings[i] = String(object.warnings[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterOperationMetadata} message ClusterOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.statusHistory = [];
                                object.warnings = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.clusterName = "";
                                object.clusterUuid = "";
                                object.status = null;
                                object.operationType = "";
                                object.description = "";
                            }
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.toObject(message.status, options);
                            if (message.statusHistory && message.statusHistory.length) {
                                object.statusHistory = [];
                                for (var j = 0; j < message.statusHistory.length; ++j)
                                    object.statusHistory[j] = $root.google.cloud.dataproc.v1.ClusterOperationStatus.toObject(message.statusHistory[j], options);
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = message.operationType;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = message.warnings[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ClusterOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterOperationMetadata";
                        };
    
                        return ClusterOperationMetadata;
                    })();
    
                    v1.NodeGroupOperationMetadata = (function() {
    
                        /**
                         * Properties of a NodeGroupOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @interface INodeGroupOperationMetadata
                         * @property {string|null} [nodeGroupId] NodeGroupOperationMetadata nodeGroupId
                         * @property {string|null} [clusterUuid] NodeGroupOperationMetadata clusterUuid
                         * @property {google.cloud.dataproc.v1.IClusterOperationStatus|null} [status] NodeGroupOperationMetadata status
                         * @property {Array.<google.cloud.dataproc.v1.IClusterOperationStatus>|null} [statusHistory] NodeGroupOperationMetadata statusHistory
                         * @property {google.cloud.dataproc.v1.NodeGroupOperationMetadata.NodeGroupOperationType|null} [operationType] NodeGroupOperationMetadata operationType
                         * @property {string|null} [description] NodeGroupOperationMetadata description
                         * @property {Object.<string,string>|null} [labels] NodeGroupOperationMetadata labels
                         * @property {Array.<string>|null} [warnings] NodeGroupOperationMetadata warnings
                         */
    
                        /**
                         * Constructs a new NodeGroupOperationMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a NodeGroupOperationMetadata.
                         * @implements INodeGroupOperationMetadata
                         * @constructor
                         * @param {google.cloud.dataproc.v1.INodeGroupOperationMetadata=} [properties] Properties to set
                         */
                        function NodeGroupOperationMetadata(properties) {
                            this.statusHistory = [];
                            this.labels = {};
                            this.warnings = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * NodeGroupOperationMetadata nodeGroupId.
                         * @member {string} nodeGroupId
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.nodeGroupId = "";
    
                        /**
                         * NodeGroupOperationMetadata clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.clusterUuid = "";
    
                        /**
                         * NodeGroupOperationMetadata status.
                         * @member {google.cloud.dataproc.v1.IClusterOperationStatus|null|undefined} status
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.status = null;
    
                        /**
                         * NodeGroupOperationMetadata statusHistory.
                         * @member {Array.<google.cloud.dataproc.v1.IClusterOperationStatus>} statusHistory
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.statusHistory = $util.emptyArray;
    
                        /**
                         * NodeGroupOperationMetadata operationType.
                         * @member {google.cloud.dataproc.v1.NodeGroupOperationMetadata.NodeGroupOperationType} operationType
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.operationType = 0;
    
                        /**
                         * NodeGroupOperationMetadata description.
                         * @member {string} description
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.description = "";
    
                        /**
                         * NodeGroupOperationMetadata labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.labels = $util.emptyObject;
    
                        /**
                         * NodeGroupOperationMetadata warnings.
                         * @member {Array.<string>} warnings
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         */
                        NodeGroupOperationMetadata.prototype.warnings = $util.emptyArray;
    
                        /**
                         * Creates a new NodeGroupOperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.NodeGroupOperationMetadata} NodeGroupOperationMetadata instance
                         */
                        NodeGroupOperationMetadata.create = function create(properties) {
                            return new NodeGroupOperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified NodeGroupOperationMetadata message. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroupOperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupOperationMetadata} message NodeGroupOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroupOperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodeGroupId != null && Object.hasOwnProperty.call(message, "nodeGroupId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.nodeGroupId);
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterUuid);
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.cloud.dataproc.v1.ClusterOperationStatus.encode(message.status, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.statusHistory != null && message.statusHistory.length)
                                for (var i = 0; i < message.statusHistory.length; ++i)
                                    $root.google.cloud.dataproc.v1.ClusterOperationStatus.encode(message.statusHistory[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.operationType != null && Object.hasOwnProperty.call(message, "operationType"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.operationType);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.description);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.warnings != null && message.warnings.length)
                                for (var i = 0; i < message.warnings.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.warnings[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified NodeGroupOperationMetadata message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.NodeGroupOperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.INodeGroupOperationMetadata} message NodeGroupOperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NodeGroupOperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a NodeGroupOperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.NodeGroupOperationMetadata} NodeGroupOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroupOperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.NodeGroupOperationMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nodeGroupId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (!(message.statusHistory && message.statusHistory.length))
                                            message.statusHistory = [];
                                        message.statusHistory.push($root.google.cloud.dataproc.v1.ClusterOperationStatus.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 5: {
                                        message.operationType = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 7: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 8: {
                                        if (!(message.warnings && message.warnings.length))
                                            message.warnings = [];
                                        message.warnings.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a NodeGroupOperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.NodeGroupOperationMetadata} NodeGroupOperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NodeGroupOperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a NodeGroupOperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NodeGroupOperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                if (!$util.isString(message.nodeGroupId))
                                    return "nodeGroupId: string expected";
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterOperationStatus.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            if (message.statusHistory != null && message.hasOwnProperty("statusHistory")) {
                                if (!Array.isArray(message.statusHistory))
                                    return "statusHistory: array expected";
                                for (var i = 0; i < message.statusHistory.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.ClusterOperationStatus.verify(message.statusHistory[i]);
                                    if (error)
                                        return "statusHistory." + error;
                                }
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                switch (message.operationType) {
                                default:
                                    return "operationType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.warnings != null && message.hasOwnProperty("warnings")) {
                                if (!Array.isArray(message.warnings))
                                    return "warnings: array expected";
                                for (var i = 0; i < message.warnings.length; ++i)
                                    if (!$util.isString(message.warnings[i]))
                                        return "warnings: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a NodeGroupOperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.NodeGroupOperationMetadata} NodeGroupOperationMetadata
                         */
                        NodeGroupOperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.NodeGroupOperationMetadata)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.NodeGroupOperationMetadata();
                            if (object.nodeGroupId != null)
                                message.nodeGroupId = String(object.nodeGroupId);
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroupOperationMetadata.status: object expected");
                                message.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.fromObject(object.status);
                            }
                            if (object.statusHistory) {
                                if (!Array.isArray(object.statusHistory))
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroupOperationMetadata.statusHistory: array expected");
                                message.statusHistory = [];
                                for (var i = 0; i < object.statusHistory.length; ++i) {
                                    if (typeof object.statusHistory[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.NodeGroupOperationMetadata.statusHistory: object expected");
                                    message.statusHistory[i] = $root.google.cloud.dataproc.v1.ClusterOperationStatus.fromObject(object.statusHistory[i]);
                                }
                            }
                            switch (object.operationType) {
                            default:
                                if (typeof object.operationType === "number") {
                                    message.operationType = object.operationType;
                                    break;
                                }
                                break;
                            case "NODE_GROUP_OPERATION_TYPE_UNSPECIFIED":
                            case 0:
                                message.operationType = 0;
                                break;
                            case "CREATE":
                            case 1:
                                message.operationType = 1;
                                break;
                            case "UPDATE":
                            case 2:
                                message.operationType = 2;
                                break;
                            case "DELETE":
                            case 3:
                                message.operationType = 3;
                                break;
                            case "RESIZE":
                            case 4:
                                message.operationType = 4;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroupOperationMetadata.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.warnings) {
                                if (!Array.isArray(object.warnings))
                                    throw TypeError(".google.cloud.dataproc.v1.NodeGroupOperationMetadata.warnings: array expected");
                                message.warnings = [];
                                for (var i = 0; i < object.warnings.length; ++i)
                                    message.warnings[i] = String(object.warnings[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a NodeGroupOperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.NodeGroupOperationMetadata} message NodeGroupOperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NodeGroupOperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.statusHistory = [];
                                object.warnings = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.nodeGroupId = "";
                                object.clusterUuid = "";
                                object.status = null;
                                object.operationType = options.enums === String ? "NODE_GROUP_OPERATION_TYPE_UNSPECIFIED" : 0;
                                object.description = "";
                            }
                            if (message.nodeGroupId != null && message.hasOwnProperty("nodeGroupId"))
                                object.nodeGroupId = message.nodeGroupId;
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.cloud.dataproc.v1.ClusterOperationStatus.toObject(message.status, options);
                            if (message.statusHistory && message.statusHistory.length) {
                                object.statusHistory = [];
                                for (var j = 0; j < message.statusHistory.length; ++j)
                                    object.statusHistory[j] = $root.google.cloud.dataproc.v1.ClusterOperationStatus.toObject(message.statusHistory[j], options);
                            }
                            if (message.operationType != null && message.hasOwnProperty("operationType"))
                                object.operationType = options.enums === String ? $root.google.cloud.dataproc.v1.NodeGroupOperationMetadata.NodeGroupOperationType[message.operationType] === undefined ? message.operationType : $root.google.cloud.dataproc.v1.NodeGroupOperationMetadata.NodeGroupOperationType[message.operationType] : message.operationType;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.warnings && message.warnings.length) {
                                object.warnings = [];
                                for (var j = 0; j < message.warnings.length; ++j)
                                    object.warnings[j] = message.warnings[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this NodeGroupOperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NodeGroupOperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for NodeGroupOperationMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.NodeGroupOperationMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NodeGroupOperationMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.NodeGroupOperationMetadata";
                        };
    
                        /**
                         * NodeGroupOperationType enum.
                         * @name google.cloud.dataproc.v1.NodeGroupOperationMetadata.NodeGroupOperationType
                         * @enum {number}
                         * @property {number} NODE_GROUP_OPERATION_TYPE_UNSPECIFIED=0 NODE_GROUP_OPERATION_TYPE_UNSPECIFIED value
                         * @property {number} CREATE=1 CREATE value
                         * @property {number} UPDATE=2 UPDATE value
                         * @property {number} DELETE=3 DELETE value
                         * @property {number} RESIZE=4 RESIZE value
                         */
                        NodeGroupOperationMetadata.NodeGroupOperationType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NODE_GROUP_OPERATION_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATE"] = 1;
                            values[valuesById[2] = "UPDATE"] = 2;
                            values[valuesById[3] = "DELETE"] = 3;
                            values[valuesById[4] = "RESIZE"] = 4;
                            return values;
                        })();
    
                        return NodeGroupOperationMetadata;
                    })();
    
                    v1.WorkflowTemplateService = (function() {
    
                        /**
                         * Constructs a new WorkflowTemplateService service.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowTemplateService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function WorkflowTemplateService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (WorkflowTemplateService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = WorkflowTemplateService;
    
                        /**
                         * Creates new WorkflowTemplateService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {WorkflowTemplateService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        WorkflowTemplateService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|createWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef CreateWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.WorkflowTemplate} [response] WorkflowTemplate
                         */
    
                        /**
                         * Calls CreateWorkflowTemplate.
                         * @function createWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest} request CreateWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.CreateWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and WorkflowTemplate
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.createWorkflowTemplate = function createWorkflowTemplate(request, callback) {
                            return this.rpcCall(createWorkflowTemplate, $root.google.cloud.dataproc.v1.CreateWorkflowTemplateRequest, $root.google.cloud.dataproc.v1.WorkflowTemplate, request, callback);
                        }, "name", { value: "CreateWorkflowTemplate" });
    
                        /**
                         * Calls CreateWorkflowTemplate.
                         * @function createWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest} request CreateWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.WorkflowTemplate>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|getWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef GetWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.WorkflowTemplate} [response] WorkflowTemplate
                         */
    
                        /**
                         * Calls GetWorkflowTemplate.
                         * @function getWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest} request GetWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.GetWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and WorkflowTemplate
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.getWorkflowTemplate = function getWorkflowTemplate(request, callback) {
                            return this.rpcCall(getWorkflowTemplate, $root.google.cloud.dataproc.v1.GetWorkflowTemplateRequest, $root.google.cloud.dataproc.v1.WorkflowTemplate, request, callback);
                        }, "name", { value: "GetWorkflowTemplate" });
    
                        /**
                         * Calls GetWorkflowTemplate.
                         * @function getWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest} request GetWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.WorkflowTemplate>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|instantiateWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef InstantiateWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls InstantiateWorkflowTemplate.
                         * @function instantiateWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest} request InstantiateWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.InstantiateWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.instantiateWorkflowTemplate = function instantiateWorkflowTemplate(request, callback) {
                            return this.rpcCall(instantiateWorkflowTemplate, $root.google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "InstantiateWorkflowTemplate" });
    
                        /**
                         * Calls InstantiateWorkflowTemplate.
                         * @function instantiateWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest} request InstantiateWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|instantiateInlineWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef InstantiateInlineWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls InstantiateInlineWorkflowTemplate.
                         * @function instantiateInlineWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest} request InstantiateInlineWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.InstantiateInlineWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.instantiateInlineWorkflowTemplate = function instantiateInlineWorkflowTemplate(request, callback) {
                            return this.rpcCall(instantiateInlineWorkflowTemplate, $root.google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "InstantiateInlineWorkflowTemplate" });
    
                        /**
                         * Calls InstantiateInlineWorkflowTemplate.
                         * @function instantiateInlineWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest} request InstantiateInlineWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|updateWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef UpdateWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.WorkflowTemplate} [response] WorkflowTemplate
                         */
    
                        /**
                         * Calls UpdateWorkflowTemplate.
                         * @function updateWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest} request UpdateWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.UpdateWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and WorkflowTemplate
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.updateWorkflowTemplate = function updateWorkflowTemplate(request, callback) {
                            return this.rpcCall(updateWorkflowTemplate, $root.google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest, $root.google.cloud.dataproc.v1.WorkflowTemplate, request, callback);
                        }, "name", { value: "UpdateWorkflowTemplate" });
    
                        /**
                         * Calls UpdateWorkflowTemplate.
                         * @function updateWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest} request UpdateWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.WorkflowTemplate>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|listWorkflowTemplates}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef ListWorkflowTemplatesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} [response] ListWorkflowTemplatesResponse
                         */
    
                        /**
                         * Calls ListWorkflowTemplates.
                         * @function listWorkflowTemplates
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest} request ListWorkflowTemplatesRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.ListWorkflowTemplatesCallback} callback Node-style callback called with the error, if any, and ListWorkflowTemplatesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.listWorkflowTemplates = function listWorkflowTemplates(request, callback) {
                            return this.rpcCall(listWorkflowTemplates, $root.google.cloud.dataproc.v1.ListWorkflowTemplatesRequest, $root.google.cloud.dataproc.v1.ListWorkflowTemplatesResponse, request, callback);
                        }, "name", { value: "ListWorkflowTemplates" });
    
                        /**
                         * Calls ListWorkflowTemplates.
                         * @function listWorkflowTemplates
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest} request ListWorkflowTemplatesRequest message or plain object
                         * @returns {Promise<google.cloud.dataproc.v1.ListWorkflowTemplatesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.dataproc.v1.WorkflowTemplateService|deleteWorkflowTemplate}.
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @typedef DeleteWorkflowTemplateCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.protobuf.Empty} [response] Empty
                         */
    
                        /**
                         * Calls DeleteWorkflowTemplate.
                         * @function deleteWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest} request DeleteWorkflowTemplateRequest message or plain object
                         * @param {google.cloud.dataproc.v1.WorkflowTemplateService.DeleteWorkflowTemplateCallback} callback Node-style callback called with the error, if any, and Empty
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(WorkflowTemplateService.prototype.deleteWorkflowTemplate = function deleteWorkflowTemplate(request, callback) {
                            return this.rpcCall(deleteWorkflowTemplate, $root.google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest, $root.google.protobuf.Empty, request, callback);
                        }, "name", { value: "DeleteWorkflowTemplate" });
    
                        /**
                         * Calls DeleteWorkflowTemplate.
                         * @function deleteWorkflowTemplate
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplateService
                         * @instance
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest} request DeleteWorkflowTemplateRequest message or plain object
                         * @returns {Promise<google.protobuf.Empty>} Promise
                         * @variation 2
                         */
    
                        return WorkflowTemplateService;
                    })();
    
                    v1.WorkflowTemplate = (function() {
    
                        /**
                         * Properties of a WorkflowTemplate.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IWorkflowTemplate
                         * @property {string|null} [id] WorkflowTemplate id
                         * @property {string|null} [name] WorkflowTemplate name
                         * @property {number|null} [version] WorkflowTemplate version
                         * @property {google.protobuf.ITimestamp|null} [createTime] WorkflowTemplate createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] WorkflowTemplate updateTime
                         * @property {Object.<string,string>|null} [labels] WorkflowTemplate labels
                         * @property {google.cloud.dataproc.v1.IWorkflowTemplatePlacement|null} [placement] WorkflowTemplate placement
                         * @property {Array.<google.cloud.dataproc.v1.IOrderedJob>|null} [jobs] WorkflowTemplate jobs
                         * @property {Array.<google.cloud.dataproc.v1.ITemplateParameter>|null} [parameters] WorkflowTemplate parameters
                         * @property {google.protobuf.IDuration|null} [dagTimeout] WorkflowTemplate dagTimeout
                         */
    
                        /**
                         * Constructs a new WorkflowTemplate.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowTemplate.
                         * @implements IWorkflowTemplate
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplate=} [properties] Properties to set
                         */
                        function WorkflowTemplate(properties) {
                            this.labels = {};
                            this.jobs = [];
                            this.parameters = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkflowTemplate id.
                         * @member {string} id
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.id = "";
    
                        /**
                         * WorkflowTemplate name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.name = "";
    
                        /**
                         * WorkflowTemplate version.
                         * @member {number} version
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.version = 0;
    
                        /**
                         * WorkflowTemplate createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.createTime = null;
    
                        /**
                         * WorkflowTemplate updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.updateTime = null;
    
                        /**
                         * WorkflowTemplate labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.labels = $util.emptyObject;
    
                        /**
                         * WorkflowTemplate placement.
                         * @member {google.cloud.dataproc.v1.IWorkflowTemplatePlacement|null|undefined} placement
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.placement = null;
    
                        /**
                         * WorkflowTemplate jobs.
                         * @member {Array.<google.cloud.dataproc.v1.IOrderedJob>} jobs
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.jobs = $util.emptyArray;
    
                        /**
                         * WorkflowTemplate parameters.
                         * @member {Array.<google.cloud.dataproc.v1.ITemplateParameter>} parameters
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.parameters = $util.emptyArray;
    
                        /**
                         * WorkflowTemplate dagTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} dagTimeout
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         */
                        WorkflowTemplate.prototype.dagTimeout = null;
    
                        /**
                         * Creates a new WorkflowTemplate instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplate=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplate} WorkflowTemplate instance
                         */
                        WorkflowTemplate.create = function create(properties) {
                            return new WorkflowTemplate(properties);
                        };
    
                        /**
                         * Encodes the specified WorkflowTemplate message. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowTemplate.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplate} message WorkflowTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowTemplate.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.id);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.version);
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.placement != null && Object.hasOwnProperty.call(message, "placement"))
                                $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement.encode(message.placement, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.jobs != null && message.jobs.length)
                                for (var i = 0; i < message.jobs.length; ++i)
                                    $root.google.cloud.dataproc.v1.OrderedJob.encode(message.jobs[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.parameters != null && message.parameters.length)
                                for (var i = 0; i < message.parameters.length; ++i)
                                    $root.google.cloud.dataproc.v1.TemplateParameter.encode(message.parameters[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.dagTimeout != null && Object.hasOwnProperty.call(message, "dagTimeout"))
                                $root.google.protobuf.Duration.encode(message.dagTimeout, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkflowTemplate message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowTemplate.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplate} message WorkflowTemplate message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowTemplate.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkflowTemplate message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplate} WorkflowTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowTemplate.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.WorkflowTemplate(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.id = reader.string();
                                        break;
                                    }
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.version = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 7: {
                                        message.placement = $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (!(message.jobs && message.jobs.length))
                                            message.jobs = [];
                                        message.jobs.push($root.google.cloud.dataproc.v1.OrderedJob.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 9: {
                                        if (!(message.parameters && message.parameters.length))
                                            message.parameters = [];
                                        message.parameters.push($root.google.cloud.dataproc.v1.TemplateParameter.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 10: {
                                        message.dagTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkflowTemplate message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplate} WorkflowTemplate
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowTemplate.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkflowTemplate message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkflowTemplate.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isString(message.id))
                                    return "id: string expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isInteger(message.version))
                                    return "version: integer expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.placement != null && message.hasOwnProperty("placement")) {
                                var error = $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement.verify(message.placement);
                                if (error)
                                    return "placement." + error;
                            }
                            if (message.jobs != null && message.hasOwnProperty("jobs")) {
                                if (!Array.isArray(message.jobs))
                                    return "jobs: array expected";
                                for (var i = 0; i < message.jobs.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.OrderedJob.verify(message.jobs[i]);
                                    if (error)
                                        return "jobs." + error;
                                }
                            }
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!Array.isArray(message.parameters))
                                    return "parameters: array expected";
                                for (var i = 0; i < message.parameters.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.TemplateParameter.verify(message.parameters[i]);
                                    if (error)
                                        return "parameters." + error;
                                }
                            }
                            if (message.dagTimeout != null && message.hasOwnProperty("dagTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.dagTimeout);
                                if (error)
                                    return "dagTimeout." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WorkflowTemplate message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplate} WorkflowTemplate
                         */
                        WorkflowTemplate.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.WorkflowTemplate)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.WorkflowTemplate();
                            if (object.id != null)
                                message.id = String(object.id);
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = object.version | 0;
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.placement != null) {
                                if (typeof object.placement !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.placement: object expected");
                                message.placement = $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement.fromObject(object.placement);
                            }
                            if (object.jobs) {
                                if (!Array.isArray(object.jobs))
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.jobs: array expected");
                                message.jobs = [];
                                for (var i = 0; i < object.jobs.length; ++i) {
                                    if (typeof object.jobs[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.jobs: object expected");
                                    message.jobs[i] = $root.google.cloud.dataproc.v1.OrderedJob.fromObject(object.jobs[i]);
                                }
                            }
                            if (object.parameters) {
                                if (!Array.isArray(object.parameters))
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.parameters: array expected");
                                message.parameters = [];
                                for (var i = 0; i < object.parameters.length; ++i) {
                                    if (typeof object.parameters[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.parameters: object expected");
                                    message.parameters[i] = $root.google.cloud.dataproc.v1.TemplateParameter.fromObject(object.parameters[i]);
                                }
                            }
                            if (object.dagTimeout != null) {
                                if (typeof object.dagTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplate.dagTimeout: object expected");
                                message.dagTimeout = $root.google.protobuf.Duration.fromObject(object.dagTimeout);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkflowTemplate message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {google.cloud.dataproc.v1.WorkflowTemplate} message WorkflowTemplate
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkflowTemplate.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.jobs = [];
                                object.parameters = [];
                            }
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.id = "";
                                object.version = 0;
                                object.createTime = null;
                                object.updateTime = null;
                                object.placement = null;
                                object.dagTimeout = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.id != null && message.hasOwnProperty("id"))
                                object.id = message.id;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.placement != null && message.hasOwnProperty("placement"))
                                object.placement = $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement.toObject(message.placement, options);
                            if (message.jobs && message.jobs.length) {
                                object.jobs = [];
                                for (var j = 0; j < message.jobs.length; ++j)
                                    object.jobs[j] = $root.google.cloud.dataproc.v1.OrderedJob.toObject(message.jobs[j], options);
                            }
                            if (message.parameters && message.parameters.length) {
                                object.parameters = [];
                                for (var j = 0; j < message.parameters.length; ++j)
                                    object.parameters[j] = $root.google.cloud.dataproc.v1.TemplateParameter.toObject(message.parameters[j], options);
                            }
                            if (message.dagTimeout != null && message.hasOwnProperty("dagTimeout"))
                                object.dagTimeout = $root.google.protobuf.Duration.toObject(message.dagTimeout, options);
                            return object;
                        };
    
                        /**
                         * Converts this WorkflowTemplate to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkflowTemplate.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkflowTemplate
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplate
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkflowTemplate.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.WorkflowTemplate";
                        };
    
                        return WorkflowTemplate;
                    })();
    
                    v1.WorkflowTemplatePlacement = (function() {
    
                        /**
                         * Properties of a WorkflowTemplatePlacement.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IWorkflowTemplatePlacement
                         * @property {google.cloud.dataproc.v1.IManagedCluster|null} [managedCluster] WorkflowTemplatePlacement managedCluster
                         * @property {google.cloud.dataproc.v1.IClusterSelector|null} [clusterSelector] WorkflowTemplatePlacement clusterSelector
                         */
    
                        /**
                         * Constructs a new WorkflowTemplatePlacement.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowTemplatePlacement.
                         * @implements IWorkflowTemplatePlacement
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplatePlacement=} [properties] Properties to set
                         */
                        function WorkflowTemplatePlacement(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkflowTemplatePlacement managedCluster.
                         * @member {google.cloud.dataproc.v1.IManagedCluster|null|undefined} managedCluster
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @instance
                         */
                        WorkflowTemplatePlacement.prototype.managedCluster = null;
    
                        /**
                         * WorkflowTemplatePlacement clusterSelector.
                         * @member {google.cloud.dataproc.v1.IClusterSelector|null|undefined} clusterSelector
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @instance
                         */
                        WorkflowTemplatePlacement.prototype.clusterSelector = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * WorkflowTemplatePlacement placement.
                         * @member {"managedCluster"|"clusterSelector"|undefined} placement
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @instance
                         */
                        Object.defineProperty(WorkflowTemplatePlacement.prototype, "placement", {
                            get: $util.oneOfGetter($oneOfFields = ["managedCluster", "clusterSelector"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new WorkflowTemplatePlacement instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplatePlacement=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplatePlacement} WorkflowTemplatePlacement instance
                         */
                        WorkflowTemplatePlacement.create = function create(properties) {
                            return new WorkflowTemplatePlacement(properties);
                        };
    
                        /**
                         * Encodes the specified WorkflowTemplatePlacement message. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowTemplatePlacement.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplatePlacement} message WorkflowTemplatePlacement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowTemplatePlacement.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.managedCluster != null && Object.hasOwnProperty.call(message, "managedCluster"))
                                $root.google.cloud.dataproc.v1.ManagedCluster.encode(message.managedCluster, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.clusterSelector != null && Object.hasOwnProperty.call(message, "clusterSelector"))
                                $root.google.cloud.dataproc.v1.ClusterSelector.encode(message.clusterSelector, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkflowTemplatePlacement message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowTemplatePlacement.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowTemplatePlacement} message WorkflowTemplatePlacement message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowTemplatePlacement.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkflowTemplatePlacement message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplatePlacement} WorkflowTemplatePlacement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowTemplatePlacement.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.managedCluster = $root.google.cloud.dataproc.v1.ManagedCluster.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.clusterSelector = $root.google.cloud.dataproc.v1.ClusterSelector.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkflowTemplatePlacement message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplatePlacement} WorkflowTemplatePlacement
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowTemplatePlacement.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkflowTemplatePlacement message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkflowTemplatePlacement.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.managedCluster != null && message.hasOwnProperty("managedCluster")) {
                                properties.placement = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.ManagedCluster.verify(message.managedCluster);
                                    if (error)
                                        return "managedCluster." + error;
                                }
                            }
                            if (message.clusterSelector != null && message.hasOwnProperty("clusterSelector")) {
                                if (properties.placement === 1)
                                    return "placement: multiple values";
                                properties.placement = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.ClusterSelector.verify(message.clusterSelector);
                                    if (error)
                                        return "clusterSelector." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WorkflowTemplatePlacement message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.WorkflowTemplatePlacement} WorkflowTemplatePlacement
                         */
                        WorkflowTemplatePlacement.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.WorkflowTemplatePlacement();
                            if (object.managedCluster != null) {
                                if (typeof object.managedCluster !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplatePlacement.managedCluster: object expected");
                                message.managedCluster = $root.google.cloud.dataproc.v1.ManagedCluster.fromObject(object.managedCluster);
                            }
                            if (object.clusterSelector != null) {
                                if (typeof object.clusterSelector !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowTemplatePlacement.clusterSelector: object expected");
                                message.clusterSelector = $root.google.cloud.dataproc.v1.ClusterSelector.fromObject(object.clusterSelector);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkflowTemplatePlacement message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {google.cloud.dataproc.v1.WorkflowTemplatePlacement} message WorkflowTemplatePlacement
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkflowTemplatePlacement.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.managedCluster != null && message.hasOwnProperty("managedCluster")) {
                                object.managedCluster = $root.google.cloud.dataproc.v1.ManagedCluster.toObject(message.managedCluster, options);
                                if (options.oneofs)
                                    object.placement = "managedCluster";
                            }
                            if (message.clusterSelector != null && message.hasOwnProperty("clusterSelector")) {
                                object.clusterSelector = $root.google.cloud.dataproc.v1.ClusterSelector.toObject(message.clusterSelector, options);
                                if (options.oneofs)
                                    object.placement = "clusterSelector";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this WorkflowTemplatePlacement to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkflowTemplatePlacement.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkflowTemplatePlacement
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.WorkflowTemplatePlacement
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkflowTemplatePlacement.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.WorkflowTemplatePlacement";
                        };
    
                        return WorkflowTemplatePlacement;
                    })();
    
                    v1.ManagedCluster = (function() {
    
                        /**
                         * Properties of a ManagedCluster.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IManagedCluster
                         * @property {string|null} [clusterName] ManagedCluster clusterName
                         * @property {google.cloud.dataproc.v1.IClusterConfig|null} [config] ManagedCluster config
                         * @property {Object.<string,string>|null} [labels] ManagedCluster labels
                         */
    
                        /**
                         * Constructs a new ManagedCluster.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ManagedCluster.
                         * @implements IManagedCluster
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IManagedCluster=} [properties] Properties to set
                         */
                        function ManagedCluster(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ManagedCluster clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @instance
                         */
                        ManagedCluster.prototype.clusterName = "";
    
                        /**
                         * ManagedCluster config.
                         * @member {google.cloud.dataproc.v1.IClusterConfig|null|undefined} config
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @instance
                         */
                        ManagedCluster.prototype.config = null;
    
                        /**
                         * ManagedCluster labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @instance
                         */
                        ManagedCluster.prototype.labels = $util.emptyObject;
    
                        /**
                         * Creates a new ManagedCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedCluster=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ManagedCluster} ManagedCluster instance
                         */
                        ManagedCluster.create = function create(properties) {
                            return new ManagedCluster(properties);
                        };
    
                        /**
                         * Encodes the specified ManagedCluster message. Does not implicitly {@link google.cloud.dataproc.v1.ManagedCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedCluster} message ManagedCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagedCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.clusterName);
                            if (message.config != null && Object.hasOwnProperty.call(message, "config"))
                                $root.google.cloud.dataproc.v1.ClusterConfig.encode(message.config, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 4, wireType 2 =*/34).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ManagedCluster message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ManagedCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {google.cloud.dataproc.v1.IManagedCluster} message ManagedCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ManagedCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ManagedCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ManagedCluster} ManagedCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagedCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ManagedCluster(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 2: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.config = $root.google.cloud.dataproc.v1.ClusterConfig.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ManagedCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ManagedCluster} ManagedCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ManagedCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ManagedCluster message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ManagedCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.config != null && message.hasOwnProperty("config")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterConfig.verify(message.config);
                                if (error)
                                    return "config." + error;
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ManagedCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ManagedCluster} ManagedCluster
                         */
                        ManagedCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ManagedCluster)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ManagedCluster();
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.config != null) {
                                if (typeof object.config !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ManagedCluster.config: object expected");
                                message.config = $root.google.cloud.dataproc.v1.ClusterConfig.fromObject(object.config);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ManagedCluster.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ManagedCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {google.cloud.dataproc.v1.ManagedCluster} message ManagedCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ManagedCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.clusterName = "";
                                object.config = null;
                            }
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            if (message.config != null && message.hasOwnProperty("config"))
                                object.config = $root.google.cloud.dataproc.v1.ClusterConfig.toObject(message.config, options);
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ManagedCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ManagedCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ManagedCluster
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ManagedCluster
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ManagedCluster.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ManagedCluster";
                        };
    
                        return ManagedCluster;
                    })();
    
                    v1.ClusterSelector = (function() {
    
                        /**
                         * Properties of a ClusterSelector.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterSelector
                         * @property {string|null} [zone] ClusterSelector zone
                         * @property {Object.<string,string>|null} [clusterLabels] ClusterSelector clusterLabels
                         */
    
                        /**
                         * Constructs a new ClusterSelector.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterSelector.
                         * @implements IClusterSelector
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterSelector=} [properties] Properties to set
                         */
                        function ClusterSelector(properties) {
                            this.clusterLabels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterSelector zone.
                         * @member {string} zone
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @instance
                         */
                        ClusterSelector.prototype.zone = "";
    
                        /**
                         * ClusterSelector clusterLabels.
                         * @member {Object.<string,string>} clusterLabels
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @instance
                         */
                        ClusterSelector.prototype.clusterLabels = $util.emptyObject;
    
                        /**
                         * Creates a new ClusterSelector instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterSelector=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterSelector} ClusterSelector instance
                         */
                        ClusterSelector.create = function create(properties) {
                            return new ClusterSelector(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterSelector message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterSelector.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterSelector} message ClusterSelector message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterSelector.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.zone != null && Object.hasOwnProperty.call(message, "zone"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.zone);
                            if (message.clusterLabels != null && Object.hasOwnProperty.call(message, "clusterLabels"))
                                for (var keys = Object.keys(message.clusterLabels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.clusterLabels[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterSelector message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterSelector.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterSelector} message ClusterSelector message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterSelector.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterSelector message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterSelector} ClusterSelector
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterSelector.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterSelector(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.zone = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (message.clusterLabels === $util.emptyObject)
                                            message.clusterLabels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.clusterLabels[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterSelector message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterSelector} ClusterSelector
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterSelector.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterSelector message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterSelector.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                if (!$util.isString(message.zone))
                                    return "zone: string expected";
                            if (message.clusterLabels != null && message.hasOwnProperty("clusterLabels")) {
                                if (!$util.isObject(message.clusterLabels))
                                    return "clusterLabels: object expected";
                                var key = Object.keys(message.clusterLabels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.clusterLabels[key[i]]))
                                        return "clusterLabels: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ClusterSelector message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterSelector} ClusterSelector
                         */
                        ClusterSelector.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterSelector)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterSelector();
                            if (object.zone != null)
                                message.zone = String(object.zone);
                            if (object.clusterLabels) {
                                if (typeof object.clusterLabels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ClusterSelector.clusterLabels: object expected");
                                message.clusterLabels = {};
                                for (var keys = Object.keys(object.clusterLabels), i = 0; i < keys.length; ++i)
                                    message.clusterLabels[keys[i]] = String(object.clusterLabels[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterSelector message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterSelector} message ClusterSelector
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterSelector.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.clusterLabels = {};
                            if (options.defaults)
                                object.zone = "";
                            if (message.zone != null && message.hasOwnProperty("zone"))
                                object.zone = message.zone;
                            var keys2;
                            if (message.clusterLabels && (keys2 = Object.keys(message.clusterLabels)).length) {
                                object.clusterLabels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.clusterLabels[keys2[j]] = message.clusterLabels[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ClusterSelector to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterSelector.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterSelector
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterSelector
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterSelector.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterSelector";
                        };
    
                        return ClusterSelector;
                    })();
    
                    v1.OrderedJob = (function() {
    
                        /**
                         * Properties of an OrderedJob.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IOrderedJob
                         * @property {string|null} [stepId] OrderedJob stepId
                         * @property {google.cloud.dataproc.v1.IHadoopJob|null} [hadoopJob] OrderedJob hadoopJob
                         * @property {google.cloud.dataproc.v1.ISparkJob|null} [sparkJob] OrderedJob sparkJob
                         * @property {google.cloud.dataproc.v1.IPySparkJob|null} [pysparkJob] OrderedJob pysparkJob
                         * @property {google.cloud.dataproc.v1.IHiveJob|null} [hiveJob] OrderedJob hiveJob
                         * @property {google.cloud.dataproc.v1.IPigJob|null} [pigJob] OrderedJob pigJob
                         * @property {google.cloud.dataproc.v1.ISparkRJob|null} [sparkRJob] OrderedJob sparkRJob
                         * @property {google.cloud.dataproc.v1.ISparkSqlJob|null} [sparkSqlJob] OrderedJob sparkSqlJob
                         * @property {google.cloud.dataproc.v1.IPrestoJob|null} [prestoJob] OrderedJob prestoJob
                         * @property {Object.<string,string>|null} [labels] OrderedJob labels
                         * @property {google.cloud.dataproc.v1.IJobScheduling|null} [scheduling] OrderedJob scheduling
                         * @property {Array.<string>|null} [prerequisiteStepIds] OrderedJob prerequisiteStepIds
                         */
    
                        /**
                         * Constructs a new OrderedJob.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an OrderedJob.
                         * @implements IOrderedJob
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IOrderedJob=} [properties] Properties to set
                         */
                        function OrderedJob(properties) {
                            this.labels = {};
                            this.prerequisiteStepIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OrderedJob stepId.
                         * @member {string} stepId
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.stepId = "";
    
                        /**
                         * OrderedJob hadoopJob.
                         * @member {google.cloud.dataproc.v1.IHadoopJob|null|undefined} hadoopJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.hadoopJob = null;
    
                        /**
                         * OrderedJob sparkJob.
                         * @member {google.cloud.dataproc.v1.ISparkJob|null|undefined} sparkJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.sparkJob = null;
    
                        /**
                         * OrderedJob pysparkJob.
                         * @member {google.cloud.dataproc.v1.IPySparkJob|null|undefined} pysparkJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.pysparkJob = null;
    
                        /**
                         * OrderedJob hiveJob.
                         * @member {google.cloud.dataproc.v1.IHiveJob|null|undefined} hiveJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.hiveJob = null;
    
                        /**
                         * OrderedJob pigJob.
                         * @member {google.cloud.dataproc.v1.IPigJob|null|undefined} pigJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.pigJob = null;
    
                        /**
                         * OrderedJob sparkRJob.
                         * @member {google.cloud.dataproc.v1.ISparkRJob|null|undefined} sparkRJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.sparkRJob = null;
    
                        /**
                         * OrderedJob sparkSqlJob.
                         * @member {google.cloud.dataproc.v1.ISparkSqlJob|null|undefined} sparkSqlJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.sparkSqlJob = null;
    
                        /**
                         * OrderedJob prestoJob.
                         * @member {google.cloud.dataproc.v1.IPrestoJob|null|undefined} prestoJob
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.prestoJob = null;
    
                        /**
                         * OrderedJob labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.labels = $util.emptyObject;
    
                        /**
                         * OrderedJob scheduling.
                         * @member {google.cloud.dataproc.v1.IJobScheduling|null|undefined} scheduling
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.scheduling = null;
    
                        /**
                         * OrderedJob prerequisiteStepIds.
                         * @member {Array.<string>} prerequisiteStepIds
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        OrderedJob.prototype.prerequisiteStepIds = $util.emptyArray;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * OrderedJob jobType.
                         * @member {"hadoopJob"|"sparkJob"|"pysparkJob"|"hiveJob"|"pigJob"|"sparkRJob"|"sparkSqlJob"|"prestoJob"|undefined} jobType
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         */
                        Object.defineProperty(OrderedJob.prototype, "jobType", {
                            get: $util.oneOfGetter($oneOfFields = ["hadoopJob", "sparkJob", "pysparkJob", "hiveJob", "pigJob", "sparkRJob", "sparkSqlJob", "prestoJob"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new OrderedJob instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IOrderedJob=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.OrderedJob} OrderedJob instance
                         */
                        OrderedJob.create = function create(properties) {
                            return new OrderedJob(properties);
                        };
    
                        /**
                         * Encodes the specified OrderedJob message. Does not implicitly {@link google.cloud.dataproc.v1.OrderedJob.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IOrderedJob} message OrderedJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OrderedJob.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stepId != null && Object.hasOwnProperty.call(message, "stepId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.stepId);
                            if (message.hadoopJob != null && Object.hasOwnProperty.call(message, "hadoopJob"))
                                $root.google.cloud.dataproc.v1.HadoopJob.encode(message.hadoopJob, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.sparkJob != null && Object.hasOwnProperty.call(message, "sparkJob"))
                                $root.google.cloud.dataproc.v1.SparkJob.encode(message.sparkJob, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.pysparkJob != null && Object.hasOwnProperty.call(message, "pysparkJob"))
                                $root.google.cloud.dataproc.v1.PySparkJob.encode(message.pysparkJob, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.hiveJob != null && Object.hasOwnProperty.call(message, "hiveJob"))
                                $root.google.cloud.dataproc.v1.HiveJob.encode(message.hiveJob, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.pigJob != null && Object.hasOwnProperty.call(message, "pigJob"))
                                $root.google.cloud.dataproc.v1.PigJob.encode(message.pigJob, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.sparkSqlJob != null && Object.hasOwnProperty.call(message, "sparkSqlJob"))
                                $root.google.cloud.dataproc.v1.SparkSqlJob.encode(message.sparkSqlJob, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.scheduling != null && Object.hasOwnProperty.call(message, "scheduling"))
                                $root.google.cloud.dataproc.v1.JobScheduling.encode(message.scheduling, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.prerequisiteStepIds != null && message.prerequisiteStepIds.length)
                                for (var i = 0; i < message.prerequisiteStepIds.length; ++i)
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.prerequisiteStepIds[i]);
                            if (message.sparkRJob != null && Object.hasOwnProperty.call(message, "sparkRJob"))
                                $root.google.cloud.dataproc.v1.SparkRJob.encode(message.sparkRJob, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.prestoJob != null && Object.hasOwnProperty.call(message, "prestoJob"))
                                $root.google.cloud.dataproc.v1.PrestoJob.encode(message.prestoJob, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OrderedJob message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.OrderedJob.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {google.cloud.dataproc.v1.IOrderedJob} message OrderedJob message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OrderedJob.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OrderedJob message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.OrderedJob} OrderedJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OrderedJob.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.OrderedJob(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stepId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.pigJob = $root.google.cloud.dataproc.v1.PigJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        if (message.labels === $util.emptyObject)
                                            message.labels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.labels[key] = value;
                                        break;
                                    }
                                case 9: {
                                        message.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        if (!(message.prerequisiteStepIds && message.prerequisiteStepIds.length))
                                            message.prerequisiteStepIds = [];
                                        message.prerequisiteStepIds.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OrderedJob message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.OrderedJob} OrderedJob
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OrderedJob.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OrderedJob message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OrderedJob.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.stepId != null && message.hasOwnProperty("stepId"))
                                if (!$util.isString(message.stepId))
                                    return "stepId: string expected";
                            if (message.hadoopJob != null && message.hasOwnProperty("hadoopJob")) {
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.HadoopJob.verify(message.hadoopJob);
                                    if (error)
                                        return "hadoopJob." + error;
                                }
                            }
                            if (message.sparkJob != null && message.hasOwnProperty("sparkJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkJob.verify(message.sparkJob);
                                    if (error)
                                        return "sparkJob." + error;
                                }
                            }
                            if (message.pysparkJob != null && message.hasOwnProperty("pysparkJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PySparkJob.verify(message.pysparkJob);
                                    if (error)
                                        return "pysparkJob." + error;
                                }
                            }
                            if (message.hiveJob != null && message.hasOwnProperty("hiveJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.HiveJob.verify(message.hiveJob);
                                    if (error)
                                        return "hiveJob." + error;
                                }
                            }
                            if (message.pigJob != null && message.hasOwnProperty("pigJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PigJob.verify(message.pigJob);
                                    if (error)
                                        return "pigJob." + error;
                                }
                            }
                            if (message.sparkRJob != null && message.hasOwnProperty("sparkRJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkRJob.verify(message.sparkRJob);
                                    if (error)
                                        return "sparkRJob." + error;
                                }
                            }
                            if (message.sparkSqlJob != null && message.hasOwnProperty("sparkSqlJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.SparkSqlJob.verify(message.sparkSqlJob);
                                    if (error)
                                        return "sparkSqlJob." + error;
                                }
                            }
                            if (message.prestoJob != null && message.hasOwnProperty("prestoJob")) {
                                if (properties.jobType === 1)
                                    return "jobType: multiple values";
                                properties.jobType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.PrestoJob.verify(message.prestoJob);
                                    if (error)
                                        return "prestoJob." + error;
                                }
                            }
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.scheduling != null && message.hasOwnProperty("scheduling")) {
                                var error = $root.google.cloud.dataproc.v1.JobScheduling.verify(message.scheduling);
                                if (error)
                                    return "scheduling." + error;
                            }
                            if (message.prerequisiteStepIds != null && message.hasOwnProperty("prerequisiteStepIds")) {
                                if (!Array.isArray(message.prerequisiteStepIds))
                                    return "prerequisiteStepIds: array expected";
                                for (var i = 0; i < message.prerequisiteStepIds.length; ++i)
                                    if (!$util.isString(message.prerequisiteStepIds[i]))
                                        return "prerequisiteStepIds: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an OrderedJob message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.OrderedJob} OrderedJob
                         */
                        OrderedJob.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.OrderedJob)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.OrderedJob();
                            if (object.stepId != null)
                                message.stepId = String(object.stepId);
                            if (object.hadoopJob != null) {
                                if (typeof object.hadoopJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.hadoopJob: object expected");
                                message.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.fromObject(object.hadoopJob);
                            }
                            if (object.sparkJob != null) {
                                if (typeof object.sparkJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.sparkJob: object expected");
                                message.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.fromObject(object.sparkJob);
                            }
                            if (object.pysparkJob != null) {
                                if (typeof object.pysparkJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.pysparkJob: object expected");
                                message.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.fromObject(object.pysparkJob);
                            }
                            if (object.hiveJob != null) {
                                if (typeof object.hiveJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.hiveJob: object expected");
                                message.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.fromObject(object.hiveJob);
                            }
                            if (object.pigJob != null) {
                                if (typeof object.pigJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.pigJob: object expected");
                                message.pigJob = $root.google.cloud.dataproc.v1.PigJob.fromObject(object.pigJob);
                            }
                            if (object.sparkRJob != null) {
                                if (typeof object.sparkRJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.sparkRJob: object expected");
                                message.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.fromObject(object.sparkRJob);
                            }
                            if (object.sparkSqlJob != null) {
                                if (typeof object.sparkSqlJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.sparkSqlJob: object expected");
                                message.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.fromObject(object.sparkSqlJob);
                            }
                            if (object.prestoJob != null) {
                                if (typeof object.prestoJob !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.prestoJob: object expected");
                                message.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.fromObject(object.prestoJob);
                            }
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.scheduling != null) {
                                if (typeof object.scheduling !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.scheduling: object expected");
                                message.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.fromObject(object.scheduling);
                            }
                            if (object.prerequisiteStepIds) {
                                if (!Array.isArray(object.prerequisiteStepIds))
                                    throw TypeError(".google.cloud.dataproc.v1.OrderedJob.prerequisiteStepIds: array expected");
                                message.prerequisiteStepIds = [];
                                for (var i = 0; i < object.prerequisiteStepIds.length; ++i)
                                    message.prerequisiteStepIds[i] = String(object.prerequisiteStepIds[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OrderedJob message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {google.cloud.dataproc.v1.OrderedJob} message OrderedJob
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OrderedJob.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.prerequisiteStepIds = [];
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.stepId = "";
                                object.scheduling = null;
                            }
                            if (message.stepId != null && message.hasOwnProperty("stepId"))
                                object.stepId = message.stepId;
                            if (message.hadoopJob != null && message.hasOwnProperty("hadoopJob")) {
                                object.hadoopJob = $root.google.cloud.dataproc.v1.HadoopJob.toObject(message.hadoopJob, options);
                                if (options.oneofs)
                                    object.jobType = "hadoopJob";
                            }
                            if (message.sparkJob != null && message.hasOwnProperty("sparkJob")) {
                                object.sparkJob = $root.google.cloud.dataproc.v1.SparkJob.toObject(message.sparkJob, options);
                                if (options.oneofs)
                                    object.jobType = "sparkJob";
                            }
                            if (message.pysparkJob != null && message.hasOwnProperty("pysparkJob")) {
                                object.pysparkJob = $root.google.cloud.dataproc.v1.PySparkJob.toObject(message.pysparkJob, options);
                                if (options.oneofs)
                                    object.jobType = "pysparkJob";
                            }
                            if (message.hiveJob != null && message.hasOwnProperty("hiveJob")) {
                                object.hiveJob = $root.google.cloud.dataproc.v1.HiveJob.toObject(message.hiveJob, options);
                                if (options.oneofs)
                                    object.jobType = "hiveJob";
                            }
                            if (message.pigJob != null && message.hasOwnProperty("pigJob")) {
                                object.pigJob = $root.google.cloud.dataproc.v1.PigJob.toObject(message.pigJob, options);
                                if (options.oneofs)
                                    object.jobType = "pigJob";
                            }
                            if (message.sparkSqlJob != null && message.hasOwnProperty("sparkSqlJob")) {
                                object.sparkSqlJob = $root.google.cloud.dataproc.v1.SparkSqlJob.toObject(message.sparkSqlJob, options);
                                if (options.oneofs)
                                    object.jobType = "sparkSqlJob";
                            }
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.scheduling != null && message.hasOwnProperty("scheduling"))
                                object.scheduling = $root.google.cloud.dataproc.v1.JobScheduling.toObject(message.scheduling, options);
                            if (message.prerequisiteStepIds && message.prerequisiteStepIds.length) {
                                object.prerequisiteStepIds = [];
                                for (var j = 0; j < message.prerequisiteStepIds.length; ++j)
                                    object.prerequisiteStepIds[j] = message.prerequisiteStepIds[j];
                            }
                            if (message.sparkRJob != null && message.hasOwnProperty("sparkRJob")) {
                                object.sparkRJob = $root.google.cloud.dataproc.v1.SparkRJob.toObject(message.sparkRJob, options);
                                if (options.oneofs)
                                    object.jobType = "sparkRJob";
                            }
                            if (message.prestoJob != null && message.hasOwnProperty("prestoJob")) {
                                object.prestoJob = $root.google.cloud.dataproc.v1.PrestoJob.toObject(message.prestoJob, options);
                                if (options.oneofs)
                                    object.jobType = "prestoJob";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this OrderedJob to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OrderedJob.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for OrderedJob
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.OrderedJob
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        OrderedJob.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.OrderedJob";
                        };
    
                        return OrderedJob;
                    })();
    
                    v1.TemplateParameter = (function() {
    
                        /**
                         * Properties of a TemplateParameter.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ITemplateParameter
                         * @property {string|null} [name] TemplateParameter name
                         * @property {Array.<string>|null} [fields] TemplateParameter fields
                         * @property {string|null} [description] TemplateParameter description
                         * @property {google.cloud.dataproc.v1.IParameterValidation|null} [validation] TemplateParameter validation
                         */
    
                        /**
                         * Constructs a new TemplateParameter.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a TemplateParameter.
                         * @implements ITemplateParameter
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ITemplateParameter=} [properties] Properties to set
                         */
                        function TemplateParameter(properties) {
                            this.fields = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TemplateParameter name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @instance
                         */
                        TemplateParameter.prototype.name = "";
    
                        /**
                         * TemplateParameter fields.
                         * @member {Array.<string>} fields
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @instance
                         */
                        TemplateParameter.prototype.fields = $util.emptyArray;
    
                        /**
                         * TemplateParameter description.
                         * @member {string} description
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @instance
                         */
                        TemplateParameter.prototype.description = "";
    
                        /**
                         * TemplateParameter validation.
                         * @member {google.cloud.dataproc.v1.IParameterValidation|null|undefined} validation
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @instance
                         */
                        TemplateParameter.prototype.validation = null;
    
                        /**
                         * Creates a new TemplateParameter instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {google.cloud.dataproc.v1.ITemplateParameter=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.TemplateParameter} TemplateParameter instance
                         */
                        TemplateParameter.create = function create(properties) {
                            return new TemplateParameter(properties);
                        };
    
                        /**
                         * Encodes the specified TemplateParameter message. Does not implicitly {@link google.cloud.dataproc.v1.TemplateParameter.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {google.cloud.dataproc.v1.ITemplateParameter} message TemplateParameter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TemplateParameter.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.fields != null && message.fields.length)
                                for (var i = 0; i < message.fields.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.fields[i]);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.validation != null && Object.hasOwnProperty.call(message, "validation"))
                                $root.google.cloud.dataproc.v1.ParameterValidation.encode(message.validation, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TemplateParameter message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.TemplateParameter.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {google.cloud.dataproc.v1.ITemplateParameter} message TemplateParameter message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TemplateParameter.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TemplateParameter message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.TemplateParameter} TemplateParameter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TemplateParameter.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.TemplateParameter();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.fields && message.fields.length))
                                            message.fields = [];
                                        message.fields.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.description = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.validation = $root.google.cloud.dataproc.v1.ParameterValidation.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TemplateParameter message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.TemplateParameter} TemplateParameter
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TemplateParameter.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TemplateParameter message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TemplateParameter.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.fields != null && message.hasOwnProperty("fields")) {
                                if (!Array.isArray(message.fields))
                                    return "fields: array expected";
                                for (var i = 0; i < message.fields.length; ++i)
                                    if (!$util.isString(message.fields[i]))
                                        return "fields: string[] expected";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.validation != null && message.hasOwnProperty("validation")) {
                                var error = $root.google.cloud.dataproc.v1.ParameterValidation.verify(message.validation);
                                if (error)
                                    return "validation." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a TemplateParameter message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.TemplateParameter} TemplateParameter
                         */
                        TemplateParameter.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.TemplateParameter)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.TemplateParameter();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.fields) {
                                if (!Array.isArray(object.fields))
                                    throw TypeError(".google.cloud.dataproc.v1.TemplateParameter.fields: array expected");
                                message.fields = [];
                                for (var i = 0; i < object.fields.length; ++i)
                                    message.fields[i] = String(object.fields[i]);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.validation != null) {
                                if (typeof object.validation !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.TemplateParameter.validation: object expected");
                                message.validation = $root.google.cloud.dataproc.v1.ParameterValidation.fromObject(object.validation);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TemplateParameter message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {google.cloud.dataproc.v1.TemplateParameter} message TemplateParameter
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TemplateParameter.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.fields = [];
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.validation = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.fields && message.fields.length) {
                                object.fields = [];
                                for (var j = 0; j < message.fields.length; ++j)
                                    object.fields[j] = message.fields[j];
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.validation != null && message.hasOwnProperty("validation"))
                                object.validation = $root.google.cloud.dataproc.v1.ParameterValidation.toObject(message.validation, options);
                            return object;
                        };
    
                        /**
                         * Converts this TemplateParameter to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TemplateParameter.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for TemplateParameter
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.TemplateParameter
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TemplateParameter.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.TemplateParameter";
                        };
    
                        return TemplateParameter;
                    })();
    
                    v1.ParameterValidation = (function() {
    
                        /**
                         * Properties of a ParameterValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IParameterValidation
                         * @property {google.cloud.dataproc.v1.IRegexValidation|null} [regex] ParameterValidation regex
                         * @property {google.cloud.dataproc.v1.IValueValidation|null} [values] ParameterValidation values
                         */
    
                        /**
                         * Constructs a new ParameterValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ParameterValidation.
                         * @implements IParameterValidation
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IParameterValidation=} [properties] Properties to set
                         */
                        function ParameterValidation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ParameterValidation regex.
                         * @member {google.cloud.dataproc.v1.IRegexValidation|null|undefined} regex
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @instance
                         */
                        ParameterValidation.prototype.regex = null;
    
                        /**
                         * ParameterValidation values.
                         * @member {google.cloud.dataproc.v1.IValueValidation|null|undefined} values
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @instance
                         */
                        ParameterValidation.prototype.values = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * ParameterValidation validationType.
                         * @member {"regex"|"values"|undefined} validationType
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @instance
                         */
                        Object.defineProperty(ParameterValidation.prototype, "validationType", {
                            get: $util.oneOfGetter($oneOfFields = ["regex", "values"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new ParameterValidation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IParameterValidation=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ParameterValidation} ParameterValidation instance
                         */
                        ParameterValidation.create = function create(properties) {
                            return new ParameterValidation(properties);
                        };
    
                        /**
                         * Encodes the specified ParameterValidation message. Does not implicitly {@link google.cloud.dataproc.v1.ParameterValidation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IParameterValidation} message ParameterValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterValidation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.regex != null && Object.hasOwnProperty.call(message, "regex"))
                                $root.google.cloud.dataproc.v1.RegexValidation.encode(message.regex, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.values != null && Object.hasOwnProperty.call(message, "values"))
                                $root.google.cloud.dataproc.v1.ValueValidation.encode(message.values, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ParameterValidation message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ParameterValidation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IParameterValidation} message ParameterValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ParameterValidation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ParameterValidation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ParameterValidation} ParameterValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterValidation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ParameterValidation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.regex = $root.google.cloud.dataproc.v1.RegexValidation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.values = $root.google.cloud.dataproc.v1.ValueValidation.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ParameterValidation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ParameterValidation} ParameterValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ParameterValidation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ParameterValidation message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ParameterValidation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.regex != null && message.hasOwnProperty("regex")) {
                                properties.validationType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.RegexValidation.verify(message.regex);
                                    if (error)
                                        return "regex." + error;
                                }
                            }
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (properties.validationType === 1)
                                    return "validationType: multiple values";
                                properties.validationType = 1;
                                {
                                    var error = $root.google.cloud.dataproc.v1.ValueValidation.verify(message.values);
                                    if (error)
                                        return "values." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ParameterValidation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ParameterValidation} ParameterValidation
                         */
                        ParameterValidation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ParameterValidation)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ParameterValidation();
                            if (object.regex != null) {
                                if (typeof object.regex !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ParameterValidation.regex: object expected");
                                message.regex = $root.google.cloud.dataproc.v1.RegexValidation.fromObject(object.regex);
                            }
                            if (object.values != null) {
                                if (typeof object.values !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.ParameterValidation.values: object expected");
                                message.values = $root.google.cloud.dataproc.v1.ValueValidation.fromObject(object.values);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ParameterValidation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.ParameterValidation} message ParameterValidation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ParameterValidation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.regex != null && message.hasOwnProperty("regex")) {
                                object.regex = $root.google.cloud.dataproc.v1.RegexValidation.toObject(message.regex, options);
                                if (options.oneofs)
                                    object.validationType = "regex";
                            }
                            if (message.values != null && message.hasOwnProperty("values")) {
                                object.values = $root.google.cloud.dataproc.v1.ValueValidation.toObject(message.values, options);
                                if (options.oneofs)
                                    object.validationType = "values";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ParameterValidation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ParameterValidation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ParameterValidation
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ParameterValidation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ParameterValidation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ParameterValidation";
                        };
    
                        return ParameterValidation;
                    })();
    
                    v1.RegexValidation = (function() {
    
                        /**
                         * Properties of a RegexValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IRegexValidation
                         * @property {Array.<string>|null} [regexes] RegexValidation regexes
                         */
    
                        /**
                         * Constructs a new RegexValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a RegexValidation.
                         * @implements IRegexValidation
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IRegexValidation=} [properties] Properties to set
                         */
                        function RegexValidation(properties) {
                            this.regexes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * RegexValidation regexes.
                         * @member {Array.<string>} regexes
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @instance
                         */
                        RegexValidation.prototype.regexes = $util.emptyArray;
    
                        /**
                         * Creates a new RegexValidation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IRegexValidation=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.RegexValidation} RegexValidation instance
                         */
                        RegexValidation.create = function create(properties) {
                            return new RegexValidation(properties);
                        };
    
                        /**
                         * Encodes the specified RegexValidation message. Does not implicitly {@link google.cloud.dataproc.v1.RegexValidation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IRegexValidation} message RegexValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegexValidation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.regexes != null && message.regexes.length)
                                for (var i = 0; i < message.regexes.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.regexes[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified RegexValidation message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.RegexValidation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IRegexValidation} message RegexValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        RegexValidation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a RegexValidation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.RegexValidation} RegexValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegexValidation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.RegexValidation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.regexes && message.regexes.length))
                                            message.regexes = [];
                                        message.regexes.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a RegexValidation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.RegexValidation} RegexValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        RegexValidation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a RegexValidation message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        RegexValidation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.regexes != null && message.hasOwnProperty("regexes")) {
                                if (!Array.isArray(message.regexes))
                                    return "regexes: array expected";
                                for (var i = 0; i < message.regexes.length; ++i)
                                    if (!$util.isString(message.regexes[i]))
                                        return "regexes: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a RegexValidation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.RegexValidation} RegexValidation
                         */
                        RegexValidation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.RegexValidation)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.RegexValidation();
                            if (object.regexes) {
                                if (!Array.isArray(object.regexes))
                                    throw TypeError(".google.cloud.dataproc.v1.RegexValidation.regexes: array expected");
                                message.regexes = [];
                                for (var i = 0; i < object.regexes.length; ++i)
                                    message.regexes[i] = String(object.regexes[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a RegexValidation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.RegexValidation} message RegexValidation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        RegexValidation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.regexes = [];
                            if (message.regexes && message.regexes.length) {
                                object.regexes = [];
                                for (var j = 0; j < message.regexes.length; ++j)
                                    object.regexes[j] = message.regexes[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this RegexValidation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        RegexValidation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for RegexValidation
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.RegexValidation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        RegexValidation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.RegexValidation";
                        };
    
                        return RegexValidation;
                    })();
    
                    v1.ValueValidation = (function() {
    
                        /**
                         * Properties of a ValueValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IValueValidation
                         * @property {Array.<string>|null} [values] ValueValidation values
                         */
    
                        /**
                         * Constructs a new ValueValidation.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ValueValidation.
                         * @implements IValueValidation
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IValueValidation=} [properties] Properties to set
                         */
                        function ValueValidation(properties) {
                            this.values = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValueValidation values.
                         * @member {Array.<string>} values
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @instance
                         */
                        ValueValidation.prototype.values = $util.emptyArray;
    
                        /**
                         * Creates a new ValueValidation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IValueValidation=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ValueValidation} ValueValidation instance
                         */
                        ValueValidation.create = function create(properties) {
                            return new ValueValidation(properties);
                        };
    
                        /**
                         * Encodes the specified ValueValidation message. Does not implicitly {@link google.cloud.dataproc.v1.ValueValidation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IValueValidation} message ValueValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValueValidation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.values != null && message.values.length)
                                for (var i = 0; i < message.values.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.values[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValueValidation message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ValueValidation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.IValueValidation} message ValueValidation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValueValidation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValueValidation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ValueValidation} ValueValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValueValidation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ValueValidation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.values && message.values.length))
                                            message.values = [];
                                        message.values.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValueValidation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ValueValidation} ValueValidation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValueValidation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValueValidation message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValueValidation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.values != null && message.hasOwnProperty("values")) {
                                if (!Array.isArray(message.values))
                                    return "values: array expected";
                                for (var i = 0; i < message.values.length; ++i)
                                    if (!$util.isString(message.values[i]))
                                        return "values: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ValueValidation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ValueValidation} ValueValidation
                         */
                        ValueValidation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ValueValidation)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ValueValidation();
                            if (object.values) {
                                if (!Array.isArray(object.values))
                                    throw TypeError(".google.cloud.dataproc.v1.ValueValidation.values: array expected");
                                message.values = [];
                                for (var i = 0; i < object.values.length; ++i)
                                    message.values[i] = String(object.values[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValueValidation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {google.cloud.dataproc.v1.ValueValidation} message ValueValidation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValueValidation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.values = [];
                            if (message.values && message.values.length) {
                                object.values = [];
                                for (var j = 0; j < message.values.length; ++j)
                                    object.values[j] = message.values[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ValueValidation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValueValidation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ValueValidation
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ValueValidation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ValueValidation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ValueValidation";
                        };
    
                        return ValueValidation;
                    })();
    
                    v1.WorkflowMetadata = (function() {
    
                        /**
                         * Properties of a WorkflowMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IWorkflowMetadata
                         * @property {string|null} [template] WorkflowMetadata template
                         * @property {number|null} [version] WorkflowMetadata version
                         * @property {google.cloud.dataproc.v1.IClusterOperation|null} [createCluster] WorkflowMetadata createCluster
                         * @property {google.cloud.dataproc.v1.IWorkflowGraph|null} [graph] WorkflowMetadata graph
                         * @property {google.cloud.dataproc.v1.IClusterOperation|null} [deleteCluster] WorkflowMetadata deleteCluster
                         * @property {google.cloud.dataproc.v1.WorkflowMetadata.State|null} [state] WorkflowMetadata state
                         * @property {string|null} [clusterName] WorkflowMetadata clusterName
                         * @property {Object.<string,string>|null} [parameters] WorkflowMetadata parameters
                         * @property {google.protobuf.ITimestamp|null} [startTime] WorkflowMetadata startTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] WorkflowMetadata endTime
                         * @property {string|null} [clusterUuid] WorkflowMetadata clusterUuid
                         * @property {google.protobuf.IDuration|null} [dagTimeout] WorkflowMetadata dagTimeout
                         * @property {google.protobuf.ITimestamp|null} [dagStartTime] WorkflowMetadata dagStartTime
                         * @property {google.protobuf.ITimestamp|null} [dagEndTime] WorkflowMetadata dagEndTime
                         */
    
                        /**
                         * Constructs a new WorkflowMetadata.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowMetadata.
                         * @implements IWorkflowMetadata
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IWorkflowMetadata=} [properties] Properties to set
                         */
                        function WorkflowMetadata(properties) {
                            this.parameters = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkflowMetadata template.
                         * @member {string} template
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.template = "";
    
                        /**
                         * WorkflowMetadata version.
                         * @member {number} version
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.version = 0;
    
                        /**
                         * WorkflowMetadata createCluster.
                         * @member {google.cloud.dataproc.v1.IClusterOperation|null|undefined} createCluster
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.createCluster = null;
    
                        /**
                         * WorkflowMetadata graph.
                         * @member {google.cloud.dataproc.v1.IWorkflowGraph|null|undefined} graph
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.graph = null;
    
                        /**
                         * WorkflowMetadata deleteCluster.
                         * @member {google.cloud.dataproc.v1.IClusterOperation|null|undefined} deleteCluster
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.deleteCluster = null;
    
                        /**
                         * WorkflowMetadata state.
                         * @member {google.cloud.dataproc.v1.WorkflowMetadata.State} state
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.state = 0;
    
                        /**
                         * WorkflowMetadata clusterName.
                         * @member {string} clusterName
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.clusterName = "";
    
                        /**
                         * WorkflowMetadata parameters.
                         * @member {Object.<string,string>} parameters
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.parameters = $util.emptyObject;
    
                        /**
                         * WorkflowMetadata startTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} startTime
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.startTime = null;
    
                        /**
                         * WorkflowMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.endTime = null;
    
                        /**
                         * WorkflowMetadata clusterUuid.
                         * @member {string} clusterUuid
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.clusterUuid = "";
    
                        /**
                         * WorkflowMetadata dagTimeout.
                         * @member {google.protobuf.IDuration|null|undefined} dagTimeout
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.dagTimeout = null;
    
                        /**
                         * WorkflowMetadata dagStartTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dagStartTime
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.dagStartTime = null;
    
                        /**
                         * WorkflowMetadata dagEndTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} dagEndTime
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         */
                        WorkflowMetadata.prototype.dagEndTime = null;
    
                        /**
                         * Creates a new WorkflowMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowMetadata=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.WorkflowMetadata} WorkflowMetadata instance
                         */
                        WorkflowMetadata.create = function create(properties) {
                            return new WorkflowMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified WorkflowMetadata message. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowMetadata} message WorkflowMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.template);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.version);
                            if (message.createCluster != null && Object.hasOwnProperty.call(message, "createCluster"))
                                $root.google.cloud.dataproc.v1.ClusterOperation.encode(message.createCluster, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.graph != null && Object.hasOwnProperty.call(message, "graph"))
                                $root.google.cloud.dataproc.v1.WorkflowGraph.encode(message.graph, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.deleteCluster != null && Object.hasOwnProperty.call(message, "deleteCluster"))
                                $root.google.cloud.dataproc.v1.ClusterOperation.encode(message.deleteCluster, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 6, wireType 0 =*/48).int32(message.state);
                            if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.clusterName);
                            if (message.parameters != null && Object.hasOwnProperty.call(message, "parameters"))
                                for (var keys = Object.keys(message.parameters), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 8, wireType 2 =*/66).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.parameters[keys[i]]).ldelim();
                            if (message.startTime != null && Object.hasOwnProperty.call(message, "startTime"))
                                $root.google.protobuf.Timestamp.encode(message.startTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.clusterUuid != null && Object.hasOwnProperty.call(message, "clusterUuid"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.clusterUuid);
                            if (message.dagTimeout != null && Object.hasOwnProperty.call(message, "dagTimeout"))
                                $root.google.protobuf.Duration.encode(message.dagTimeout, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.dagStartTime != null && Object.hasOwnProperty.call(message, "dagStartTime"))
                                $root.google.protobuf.Timestamp.encode(message.dagStartTime, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.dagEndTime != null && Object.hasOwnProperty.call(message, "dagEndTime"))
                                $root.google.protobuf.Timestamp.encode(message.dagEndTime, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkflowMetadata message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowMetadata} message WorkflowMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkflowMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.WorkflowMetadata} WorkflowMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.WorkflowMetadata(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.template = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.createCluster = $root.google.cloud.dataproc.v1.ClusterOperation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.graph = $root.google.cloud.dataproc.v1.WorkflowGraph.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.deleteCluster = $root.google.cloud.dataproc.v1.ClusterOperation.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 7: {
                                        message.clusterName = reader.string();
                                        break;
                                    }
                                case 8: {
                                        if (message.parameters === $util.emptyObject)
                                            message.parameters = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.parameters[key] = value;
                                        break;
                                    }
                                case 9: {
                                        message.startTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.clusterUuid = reader.string();
                                        break;
                                    }
                                case 12: {
                                        message.dagTimeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.dagStartTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.dagEndTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkflowMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.WorkflowMetadata} WorkflowMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkflowMetadata message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkflowMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.template != null && message.hasOwnProperty("template"))
                                if (!$util.isString(message.template))
                                    return "template: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isInteger(message.version))
                                    return "version: integer expected";
                            if (message.createCluster != null && message.hasOwnProperty("createCluster")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterOperation.verify(message.createCluster);
                                if (error)
                                    return "createCluster." + error;
                            }
                            if (message.graph != null && message.hasOwnProperty("graph")) {
                                var error = $root.google.cloud.dataproc.v1.WorkflowGraph.verify(message.graph);
                                if (error)
                                    return "graph." + error;
                            }
                            if (message.deleteCluster != null && message.hasOwnProperty("deleteCluster")) {
                                var error = $root.google.cloud.dataproc.v1.ClusterOperation.verify(message.deleteCluster);
                                if (error)
                                    return "deleteCluster." + error;
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                if (!$util.isString(message.clusterName))
                                    return "clusterName: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!$util.isObject(message.parameters))
                                    return "parameters: object expected";
                                var key = Object.keys(message.parameters);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.parameters[key[i]]))
                                        return "parameters: string{k:string} expected";
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.startTime);
                                if (error)
                                    return "startTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                if (!$util.isString(message.clusterUuid))
                                    return "clusterUuid: string expected";
                            if (message.dagTimeout != null && message.hasOwnProperty("dagTimeout")) {
                                var error = $root.google.protobuf.Duration.verify(message.dagTimeout);
                                if (error)
                                    return "dagTimeout." + error;
                            }
                            if (message.dagStartTime != null && message.hasOwnProperty("dagStartTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dagStartTime);
                                if (error)
                                    return "dagStartTime." + error;
                            }
                            if (message.dagEndTime != null && message.hasOwnProperty("dagEndTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.dagEndTime);
                                if (error)
                                    return "dagEndTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WorkflowMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.WorkflowMetadata} WorkflowMetadata
                         */
                        WorkflowMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.WorkflowMetadata)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.WorkflowMetadata();
                            if (object.template != null)
                                message.template = String(object.template);
                            if (object.version != null)
                                message.version = object.version | 0;
                            if (object.createCluster != null) {
                                if (typeof object.createCluster !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.createCluster: object expected");
                                message.createCluster = $root.google.cloud.dataproc.v1.ClusterOperation.fromObject(object.createCluster);
                            }
                            if (object.graph != null) {
                                if (typeof object.graph !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.graph: object expected");
                                message.graph = $root.google.cloud.dataproc.v1.WorkflowGraph.fromObject(object.graph);
                            }
                            if (object.deleteCluster != null) {
                                if (typeof object.deleteCluster !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.deleteCluster: object expected");
                                message.deleteCluster = $root.google.cloud.dataproc.v1.ClusterOperation.fromObject(object.deleteCluster);
                            }
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "UNKNOWN":
                            case 0:
                                message.state = 0;
                                break;
                            case "PENDING":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNING":
                            case 2:
                                message.state = 2;
                                break;
                            case "DONE":
                            case 3:
                                message.state = 3;
                                break;
                            }
                            if (object.clusterName != null)
                                message.clusterName = String(object.clusterName);
                            if (object.parameters) {
                                if (typeof object.parameters !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.parameters: object expected");
                                message.parameters = {};
                                for (var keys = Object.keys(object.parameters), i = 0; i < keys.length; ++i)
                                    message.parameters[keys[i]] = String(object.parameters[keys[i]]);
                            }
                            if (object.startTime != null) {
                                if (typeof object.startTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.startTime: object expected");
                                message.startTime = $root.google.protobuf.Timestamp.fromObject(object.startTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.clusterUuid != null)
                                message.clusterUuid = String(object.clusterUuid);
                            if (object.dagTimeout != null) {
                                if (typeof object.dagTimeout !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.dagTimeout: object expected");
                                message.dagTimeout = $root.google.protobuf.Duration.fromObject(object.dagTimeout);
                            }
                            if (object.dagStartTime != null) {
                                if (typeof object.dagStartTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.dagStartTime: object expected");
                                message.dagStartTime = $root.google.protobuf.Timestamp.fromObject(object.dagStartTime);
                            }
                            if (object.dagEndTime != null) {
                                if (typeof object.dagEndTime !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowMetadata.dagEndTime: object expected");
                                message.dagEndTime = $root.google.protobuf.Timestamp.fromObject(object.dagEndTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkflowMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {google.cloud.dataproc.v1.WorkflowMetadata} message WorkflowMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkflowMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.parameters = {};
                            if (options.defaults) {
                                object.template = "";
                                object.version = 0;
                                object.createCluster = null;
                                object.graph = null;
                                object.deleteCluster = null;
                                object.state = options.enums === String ? "UNKNOWN" : 0;
                                object.clusterName = "";
                                object.startTime = null;
                                object.endTime = null;
                                object.clusterUuid = "";
                                object.dagTimeout = null;
                                object.dagStartTime = null;
                                object.dagEndTime = null;
                            }
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = message.template;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.createCluster != null && message.hasOwnProperty("createCluster"))
                                object.createCluster = $root.google.cloud.dataproc.v1.ClusterOperation.toObject(message.createCluster, options);
                            if (message.graph != null && message.hasOwnProperty("graph"))
                                object.graph = $root.google.cloud.dataproc.v1.WorkflowGraph.toObject(message.graph, options);
                            if (message.deleteCluster != null && message.hasOwnProperty("deleteCluster"))
                                object.deleteCluster = $root.google.cloud.dataproc.v1.ClusterOperation.toObject(message.deleteCluster, options);
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.WorkflowMetadata.State[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.WorkflowMetadata.State[message.state] : message.state;
                            if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                object.clusterName = message.clusterName;
                            var keys2;
                            if (message.parameters && (keys2 = Object.keys(message.parameters)).length) {
                                object.parameters = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.parameters[keys2[j]] = message.parameters[keys2[j]];
                            }
                            if (message.startTime != null && message.hasOwnProperty("startTime"))
                                object.startTime = $root.google.protobuf.Timestamp.toObject(message.startTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.clusterUuid != null && message.hasOwnProperty("clusterUuid"))
                                object.clusterUuid = message.clusterUuid;
                            if (message.dagTimeout != null && message.hasOwnProperty("dagTimeout"))
                                object.dagTimeout = $root.google.protobuf.Duration.toObject(message.dagTimeout, options);
                            if (message.dagStartTime != null && message.hasOwnProperty("dagStartTime"))
                                object.dagStartTime = $root.google.protobuf.Timestamp.toObject(message.dagStartTime, options);
                            if (message.dagEndTime != null && message.hasOwnProperty("dagEndTime"))
                                object.dagEndTime = $root.google.protobuf.Timestamp.toObject(message.dagEndTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this WorkflowMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkflowMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkflowMetadata
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.WorkflowMetadata
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkflowMetadata.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.WorkflowMetadata";
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.dataproc.v1.WorkflowMetadata.State
                         * @enum {number}
                         * @property {number} UNKNOWN=0 UNKNOWN value
                         * @property {number} PENDING=1 PENDING value
                         * @property {number} RUNNING=2 RUNNING value
                         * @property {number} DONE=3 DONE value
                         */
                        WorkflowMetadata.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "UNKNOWN"] = 0;
                            values[valuesById[1] = "PENDING"] = 1;
                            values[valuesById[2] = "RUNNING"] = 2;
                            values[valuesById[3] = "DONE"] = 3;
                            return values;
                        })();
    
                        return WorkflowMetadata;
                    })();
    
                    v1.ClusterOperation = (function() {
    
                        /**
                         * Properties of a ClusterOperation.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IClusterOperation
                         * @property {string|null} [operationId] ClusterOperation operationId
                         * @property {string|null} [error] ClusterOperation error
                         * @property {boolean|null} [done] ClusterOperation done
                         */
    
                        /**
                         * Constructs a new ClusterOperation.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ClusterOperation.
                         * @implements IClusterOperation
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IClusterOperation=} [properties] Properties to set
                         */
                        function ClusterOperation(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ClusterOperation operationId.
                         * @member {string} operationId
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @instance
                         */
                        ClusterOperation.prototype.operationId = "";
    
                        /**
                         * ClusterOperation error.
                         * @member {string} error
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @instance
                         */
                        ClusterOperation.prototype.error = "";
    
                        /**
                         * ClusterOperation done.
                         * @member {boolean} done
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @instance
                         */
                        ClusterOperation.prototype.done = false;
    
                        /**
                         * Creates a new ClusterOperation instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperation=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ClusterOperation} ClusterOperation instance
                         */
                        ClusterOperation.create = function create(properties) {
                            return new ClusterOperation(properties);
                        };
    
                        /**
                         * Encodes the specified ClusterOperation message. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperation.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperation} message ClusterOperation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperation.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.operationId != null && Object.hasOwnProperty.call(message, "operationId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.operationId);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.error);
                            if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ClusterOperation message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ClusterOperation.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {google.cloud.dataproc.v1.IClusterOperation} message ClusterOperation message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClusterOperation.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ClusterOperation message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ClusterOperation} ClusterOperation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperation.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ClusterOperation();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.operationId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.error = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.done = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ClusterOperation message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ClusterOperation} ClusterOperation
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClusterOperation.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ClusterOperation message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClusterOperation.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.operationId != null && message.hasOwnProperty("operationId"))
                                if (!$util.isString(message.operationId))
                                    return "operationId: string expected";
                            if (message.error != null && message.hasOwnProperty("error"))
                                if (!$util.isString(message.error))
                                    return "error: string expected";
                            if (message.done != null && message.hasOwnProperty("done"))
                                if (typeof message.done !== "boolean")
                                    return "done: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ClusterOperation message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ClusterOperation} ClusterOperation
                         */
                        ClusterOperation.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ClusterOperation)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ClusterOperation();
                            if (object.operationId != null)
                                message.operationId = String(object.operationId);
                            if (object.error != null)
                                message.error = String(object.error);
                            if (object.done != null)
                                message.done = Boolean(object.done);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ClusterOperation message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {google.cloud.dataproc.v1.ClusterOperation} message ClusterOperation
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClusterOperation.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.operationId = "";
                                object.error = "";
                                object.done = false;
                            }
                            if (message.operationId != null && message.hasOwnProperty("operationId"))
                                object.operationId = message.operationId;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = message.error;
                            if (message.done != null && message.hasOwnProperty("done"))
                                object.done = message.done;
                            return object;
                        };
    
                        /**
                         * Converts this ClusterOperation to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClusterOperation.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ClusterOperation
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ClusterOperation
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClusterOperation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ClusterOperation";
                        };
    
                        return ClusterOperation;
                    })();
    
                    v1.WorkflowGraph = (function() {
    
                        /**
                         * Properties of a WorkflowGraph.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IWorkflowGraph
                         * @property {Array.<google.cloud.dataproc.v1.IWorkflowNode>|null} [nodes] WorkflowGraph nodes
                         */
    
                        /**
                         * Constructs a new WorkflowGraph.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowGraph.
                         * @implements IWorkflowGraph
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IWorkflowGraph=} [properties] Properties to set
                         */
                        function WorkflowGraph(properties) {
                            this.nodes = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkflowGraph nodes.
                         * @member {Array.<google.cloud.dataproc.v1.IWorkflowNode>} nodes
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @instance
                         */
                        WorkflowGraph.prototype.nodes = $util.emptyArray;
    
                        /**
                         * Creates a new WorkflowGraph instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowGraph=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.WorkflowGraph} WorkflowGraph instance
                         */
                        WorkflowGraph.create = function create(properties) {
                            return new WorkflowGraph(properties);
                        };
    
                        /**
                         * Encodes the specified WorkflowGraph message. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowGraph.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowGraph} message WorkflowGraph message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowGraph.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nodes != null && message.nodes.length)
                                for (var i = 0; i < message.nodes.length; ++i)
                                    $root.google.cloud.dataproc.v1.WorkflowNode.encode(message.nodes[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkflowGraph message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowGraph.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowGraph} message WorkflowGraph message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowGraph.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkflowGraph message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.WorkflowGraph} WorkflowGraph
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowGraph.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.WorkflowGraph();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.nodes && message.nodes.length))
                                            message.nodes = [];
                                        message.nodes.push($root.google.cloud.dataproc.v1.WorkflowNode.decode(reader, reader.uint32()));
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkflowGraph message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.WorkflowGraph} WorkflowGraph
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowGraph.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkflowGraph message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkflowGraph.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nodes != null && message.hasOwnProperty("nodes")) {
                                if (!Array.isArray(message.nodes))
                                    return "nodes: array expected";
                                for (var i = 0; i < message.nodes.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.WorkflowNode.verify(message.nodes[i]);
                                    if (error)
                                        return "nodes." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a WorkflowGraph message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.WorkflowGraph} WorkflowGraph
                         */
                        WorkflowGraph.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.WorkflowGraph)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.WorkflowGraph();
                            if (object.nodes) {
                                if (!Array.isArray(object.nodes))
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowGraph.nodes: array expected");
                                message.nodes = [];
                                for (var i = 0; i < object.nodes.length; ++i) {
                                    if (typeof object.nodes[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.WorkflowGraph.nodes: object expected");
                                    message.nodes[i] = $root.google.cloud.dataproc.v1.WorkflowNode.fromObject(object.nodes[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkflowGraph message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {google.cloud.dataproc.v1.WorkflowGraph} message WorkflowGraph
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkflowGraph.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.nodes = [];
                            if (message.nodes && message.nodes.length) {
                                object.nodes = [];
                                for (var j = 0; j < message.nodes.length; ++j)
                                    object.nodes[j] = $root.google.cloud.dataproc.v1.WorkflowNode.toObject(message.nodes[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this WorkflowGraph to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkflowGraph.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkflowGraph
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.WorkflowGraph
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkflowGraph.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.WorkflowGraph";
                        };
    
                        return WorkflowGraph;
                    })();
    
                    v1.WorkflowNode = (function() {
    
                        /**
                         * Properties of a WorkflowNode.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IWorkflowNode
                         * @property {string|null} [stepId] WorkflowNode stepId
                         * @property {Array.<string>|null} [prerequisiteStepIds] WorkflowNode prerequisiteStepIds
                         * @property {string|null} [jobId] WorkflowNode jobId
                         * @property {google.cloud.dataproc.v1.WorkflowNode.NodeState|null} [state] WorkflowNode state
                         * @property {string|null} [error] WorkflowNode error
                         */
    
                        /**
                         * Constructs a new WorkflowNode.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a WorkflowNode.
                         * @implements IWorkflowNode
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IWorkflowNode=} [properties] Properties to set
                         */
                        function WorkflowNode(properties) {
                            this.prerequisiteStepIds = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * WorkflowNode stepId.
                         * @member {string} stepId
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         */
                        WorkflowNode.prototype.stepId = "";
    
                        /**
                         * WorkflowNode prerequisiteStepIds.
                         * @member {Array.<string>} prerequisiteStepIds
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         */
                        WorkflowNode.prototype.prerequisiteStepIds = $util.emptyArray;
    
                        /**
                         * WorkflowNode jobId.
                         * @member {string} jobId
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         */
                        WorkflowNode.prototype.jobId = "";
    
                        /**
                         * WorkflowNode state.
                         * @member {google.cloud.dataproc.v1.WorkflowNode.NodeState} state
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         */
                        WorkflowNode.prototype.state = 0;
    
                        /**
                         * WorkflowNode error.
                         * @member {string} error
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         */
                        WorkflowNode.prototype.error = "";
    
                        /**
                         * Creates a new WorkflowNode instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowNode=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.WorkflowNode} WorkflowNode instance
                         */
                        WorkflowNode.create = function create(properties) {
                            return new WorkflowNode(properties);
                        };
    
                        /**
                         * Encodes the specified WorkflowNode message. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowNode.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowNode} message WorkflowNode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowNode.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stepId != null && Object.hasOwnProperty.call(message, "stepId"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.stepId);
                            if (message.prerequisiteStepIds != null && message.prerequisiteStepIds.length)
                                for (var i = 0; i < message.prerequisiteStepIds.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.prerequisiteStepIds[i]);
                            if (message.jobId != null && Object.hasOwnProperty.call(message, "jobId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.jobId);
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.state);
                            if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.error);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified WorkflowNode message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.WorkflowNode.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {google.cloud.dataproc.v1.IWorkflowNode} message WorkflowNode message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        WorkflowNode.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a WorkflowNode message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.WorkflowNode} WorkflowNode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowNode.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.WorkflowNode();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.stepId = reader.string();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.prerequisiteStepIds && message.prerequisiteStepIds.length))
                                            message.prerequisiteStepIds = [];
                                        message.prerequisiteStepIds.push(reader.string());
                                        break;
                                    }
                                case 3: {
                                        message.jobId = reader.string();
                                        break;
                                    }
                                case 5: {
                                        message.state = reader.int32();
                                        break;
                                    }
                                case 6: {
                                        message.error = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a WorkflowNode message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.WorkflowNode} WorkflowNode
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        WorkflowNode.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a WorkflowNode message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        WorkflowNode.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stepId != null && message.hasOwnProperty("stepId"))
                                if (!$util.isString(message.stepId))
                                    return "stepId: string expected";
                            if (message.prerequisiteStepIds != null && message.hasOwnProperty("prerequisiteStepIds")) {
                                if (!Array.isArray(message.prerequisiteStepIds))
                                    return "prerequisiteStepIds: array expected";
                                for (var i = 0; i < message.prerequisiteStepIds.length; ++i)
                                    if (!$util.isString(message.prerequisiteStepIds[i]))
                                        return "prerequisiteStepIds: string[] expected";
                            }
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                if (!$util.isString(message.jobId))
                                    return "jobId: string expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.error != null && message.hasOwnProperty("error"))
                                if (!$util.isString(message.error))
                                    return "error: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a WorkflowNode message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.WorkflowNode} WorkflowNode
                         */
                        WorkflowNode.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.WorkflowNode)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.WorkflowNode();
                            if (object.stepId != null)
                                message.stepId = String(object.stepId);
                            if (object.prerequisiteStepIds) {
                                if (!Array.isArray(object.prerequisiteStepIds))
                                    throw TypeError(".google.cloud.dataproc.v1.WorkflowNode.prerequisiteStepIds: array expected");
                                message.prerequisiteStepIds = [];
                                for (var i = 0; i < object.prerequisiteStepIds.length; ++i)
                                    message.prerequisiteStepIds[i] = String(object.prerequisiteStepIds[i]);
                            }
                            if (object.jobId != null)
                                message.jobId = String(object.jobId);
                            switch (object.state) {
                            default:
                                if (typeof object.state === "number") {
                                    message.state = object.state;
                                    break;
                                }
                                break;
                            case "NODE_STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "BLOCKED":
                            case 1:
                                message.state = 1;
                                break;
                            case "RUNNABLE":
                            case 2:
                                message.state = 2;
                                break;
                            case "RUNNING":
                            case 3:
                                message.state = 3;
                                break;
                            case "COMPLETED":
                            case 4:
                                message.state = 4;
                                break;
                            case "FAILED":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            if (object.error != null)
                                message.error = String(object.error);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a WorkflowNode message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {google.cloud.dataproc.v1.WorkflowNode} message WorkflowNode
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        WorkflowNode.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.prerequisiteStepIds = [];
                            if (options.defaults) {
                                object.stepId = "";
                                object.jobId = "";
                                object.state = options.enums === String ? "NODE_STATE_UNSPECIFIED" : 0;
                                object.error = "";
                            }
                            if (message.stepId != null && message.hasOwnProperty("stepId"))
                                object.stepId = message.stepId;
                            if (message.prerequisiteStepIds && message.prerequisiteStepIds.length) {
                                object.prerequisiteStepIds = [];
                                for (var j = 0; j < message.prerequisiteStepIds.length; ++j)
                                    object.prerequisiteStepIds[j] = message.prerequisiteStepIds[j];
                            }
                            if (message.jobId != null && message.hasOwnProperty("jobId"))
                                object.jobId = message.jobId;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.dataproc.v1.WorkflowNode.NodeState[message.state] === undefined ? message.state : $root.google.cloud.dataproc.v1.WorkflowNode.NodeState[message.state] : message.state;
                            if (message.error != null && message.hasOwnProperty("error"))
                                object.error = message.error;
                            return object;
                        };
    
                        /**
                         * Converts this WorkflowNode to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        WorkflowNode.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for WorkflowNode
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.WorkflowNode
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        WorkflowNode.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.WorkflowNode";
                        };
    
                        /**
                         * NodeState enum.
                         * @name google.cloud.dataproc.v1.WorkflowNode.NodeState
                         * @enum {number}
                         * @property {number} NODE_STATE_UNSPECIFIED=0 NODE_STATE_UNSPECIFIED value
                         * @property {number} BLOCKED=1 BLOCKED value
                         * @property {number} RUNNABLE=2 RUNNABLE value
                         * @property {number} RUNNING=3 RUNNING value
                         * @property {number} COMPLETED=4 COMPLETED value
                         * @property {number} FAILED=5 FAILED value
                         */
                        WorkflowNode.NodeState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "NODE_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "BLOCKED"] = 1;
                            values[valuesById[2] = "RUNNABLE"] = 2;
                            values[valuesById[3] = "RUNNING"] = 3;
                            values[valuesById[4] = "COMPLETED"] = 4;
                            values[valuesById[5] = "FAILED"] = 5;
                            return values;
                        })();
    
                        return WorkflowNode;
                    })();
    
                    v1.CreateWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of a CreateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface ICreateWorkflowTemplateRequest
                         * @property {string|null} [parent] CreateWorkflowTemplateRequest parent
                         * @property {google.cloud.dataproc.v1.IWorkflowTemplate|null} [template] CreateWorkflowTemplateRequest template
                         */
    
                        /**
                         * Constructs a new CreateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a CreateWorkflowTemplateRequest.
                         * @implements ICreateWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function CreateWorkflowTemplateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateWorkflowTemplateRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @instance
                         */
                        CreateWorkflowTemplateRequest.prototype.parent = "";
    
                        /**
                         * CreateWorkflowTemplateRequest template.
                         * @member {google.cloud.dataproc.v1.IWorkflowTemplate|null|undefined} template
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @instance
                         */
                        CreateWorkflowTemplateRequest.prototype.template = null;
    
                        /**
                         * Creates a new CreateWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.CreateWorkflowTemplateRequest} CreateWorkflowTemplateRequest instance
                         */
                        CreateWorkflowTemplateRequest.create = function create(properties) {
                            return new CreateWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.CreateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest} message CreateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.dataproc.v1.WorkflowTemplate.encode(message.template, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.CreateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ICreateWorkflowTemplateRequest} message CreateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.CreateWorkflowTemplateRequest} CreateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.CreateWorkflowTemplateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.CreateWorkflowTemplateRequest} CreateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.dataproc.v1.WorkflowTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.CreateWorkflowTemplateRequest} CreateWorkflowTemplateRequest
                         */
                        CreateWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.CreateWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.CreateWorkflowTemplateRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.CreateWorkflowTemplateRequest.template: object expected");
                                message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.fromObject(object.template);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.CreateWorkflowTemplateRequest} message CreateWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.template = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.toObject(message.template, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for CreateWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.CreateWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CreateWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.CreateWorkflowTemplateRequest";
                        };
    
                        return CreateWorkflowTemplateRequest;
                    })();
    
                    v1.GetWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of a GetWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IGetWorkflowTemplateRequest
                         * @property {string|null} [name] GetWorkflowTemplateRequest name
                         * @property {number|null} [version] GetWorkflowTemplateRequest version
                         */
    
                        /**
                         * Constructs a new GetWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a GetWorkflowTemplateRequest.
                         * @implements IGetWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function GetWorkflowTemplateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetWorkflowTemplateRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @instance
                         */
                        GetWorkflowTemplateRequest.prototype.name = "";
    
                        /**
                         * GetWorkflowTemplateRequest version.
                         * @member {number} version
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @instance
                         */
                        GetWorkflowTemplateRequest.prototype.version = 0;
    
                        /**
                         * Creates a new GetWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.GetWorkflowTemplateRequest} GetWorkflowTemplateRequest instance
                         */
                        GetWorkflowTemplateRequest.create = function create(properties) {
                            return new GetWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.GetWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest} message GetWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.GetWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IGetWorkflowTemplateRequest} message GetWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.GetWorkflowTemplateRequest} GetWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.GetWorkflowTemplateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.GetWorkflowTemplateRequest} GetWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isInteger(message.version))
                                    return "version: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.GetWorkflowTemplateRequest} GetWorkflowTemplateRequest
                         */
                        GetWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.GetWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.GetWorkflowTemplateRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = object.version | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.GetWorkflowTemplateRequest} message GetWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this GetWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for GetWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.GetWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GetWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.GetWorkflowTemplateRequest";
                        };
    
                        return GetWorkflowTemplateRequest;
                    })();
    
                    v1.InstantiateWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of an InstantiateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IInstantiateWorkflowTemplateRequest
                         * @property {string|null} [name] InstantiateWorkflowTemplateRequest name
                         * @property {number|null} [version] InstantiateWorkflowTemplateRequest version
                         * @property {string|null} [requestId] InstantiateWorkflowTemplateRequest requestId
                         * @property {Object.<string,string>|null} [parameters] InstantiateWorkflowTemplateRequest parameters
                         */
    
                        /**
                         * Constructs a new InstantiateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an InstantiateWorkflowTemplateRequest.
                         * @implements IInstantiateWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function InstantiateWorkflowTemplateRequest(properties) {
                            this.parameters = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstantiateWorkflowTemplateRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateWorkflowTemplateRequest.prototype.name = "";
    
                        /**
                         * InstantiateWorkflowTemplateRequest version.
                         * @member {number} version
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateWorkflowTemplateRequest.prototype.version = 0;
    
                        /**
                         * InstantiateWorkflowTemplateRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateWorkflowTemplateRequest.prototype.requestId = "";
    
                        /**
                         * InstantiateWorkflowTemplateRequest parameters.
                         * @member {Object.<string,string>} parameters
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateWorkflowTemplateRequest.prototype.parameters = $util.emptyObject;
    
                        /**
                         * Creates a new InstantiateWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest} InstantiateWorkflowTemplateRequest instance
                         */
                        InstantiateWorkflowTemplateRequest.create = function create(properties) {
                            return new InstantiateWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstantiateWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest} message InstantiateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstantiateWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.version);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.requestId);
                            if (message.parameters != null && Object.hasOwnProperty.call(message, "parameters"))
                                for (var keys = Object.keys(message.parameters), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.parameters[keys[i]]).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstantiateWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateWorkflowTemplateRequest} message InstantiateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstantiateWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstantiateWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest} InstantiateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstantiateWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.int32();
                                        break;
                                    }
                                case 5: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                case 6: {
                                        if (message.parameters === $util.emptyObject)
                                            message.parameters = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = "";
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = reader.string();
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.parameters[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstantiateWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest} InstantiateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstantiateWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstantiateWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstantiateWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isInteger(message.version))
                                    return "version: integer expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            if (message.parameters != null && message.hasOwnProperty("parameters")) {
                                if (!$util.isObject(message.parameters))
                                    return "parameters: object expected";
                                var key = Object.keys(message.parameters);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.parameters[key[i]]))
                                        return "parameters: string{k:string} expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates an InstantiateWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest} InstantiateWorkflowTemplateRequest
                         */
                        InstantiateWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = object.version | 0;
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            if (object.parameters) {
                                if (typeof object.parameters !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest.parameters: object expected");
                                message.parameters = {};
                                for (var keys = Object.keys(object.parameters), i = 0; i < keys.length; ++i)
                                    message.parameters[keys[i]] = String(object.parameters[keys[i]]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstantiateWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest} message InstantiateWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstantiateWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.parameters = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = 0;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            var keys2;
                            if (message.parameters && (keys2 = Object.keys(message.parameters)).length) {
                                object.parameters = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.parameters[keys2[j]] = message.parameters[keys2[j]];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this InstantiateWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstantiateWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InstantiateWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InstantiateWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.InstantiateWorkflowTemplateRequest";
                        };
    
                        return InstantiateWorkflowTemplateRequest;
                    })();
    
                    v1.InstantiateInlineWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of an InstantiateInlineWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IInstantiateInlineWorkflowTemplateRequest
                         * @property {string|null} [parent] InstantiateInlineWorkflowTemplateRequest parent
                         * @property {google.cloud.dataproc.v1.IWorkflowTemplate|null} [template] InstantiateInlineWorkflowTemplateRequest template
                         * @property {string|null} [requestId] InstantiateInlineWorkflowTemplateRequest requestId
                         */
    
                        /**
                         * Constructs a new InstantiateInlineWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an InstantiateInlineWorkflowTemplateRequest.
                         * @implements IInstantiateInlineWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function InstantiateInlineWorkflowTemplateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InstantiateInlineWorkflowTemplateRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateInlineWorkflowTemplateRequest.prototype.parent = "";
    
                        /**
                         * InstantiateInlineWorkflowTemplateRequest template.
                         * @member {google.cloud.dataproc.v1.IWorkflowTemplate|null|undefined} template
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateInlineWorkflowTemplateRequest.prototype.template = null;
    
                        /**
                         * InstantiateInlineWorkflowTemplateRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @instance
                         */
                        InstantiateInlineWorkflowTemplateRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new InstantiateInlineWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest} InstantiateInlineWorkflowTemplateRequest instance
                         */
                        InstantiateInlineWorkflowTemplateRequest.create = function create(properties) {
                            return new InstantiateInlineWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InstantiateInlineWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest} message InstantiateInlineWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstantiateInlineWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.dataproc.v1.WorkflowTemplate.encode(message.template, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InstantiateInlineWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IInstantiateInlineWorkflowTemplateRequest} message InstantiateInlineWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InstantiateInlineWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InstantiateInlineWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest} InstantiateInlineWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstantiateInlineWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.requestId = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InstantiateInlineWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest} InstantiateInlineWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InstantiateInlineWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InstantiateInlineWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InstantiateInlineWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.dataproc.v1.WorkflowTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InstantiateInlineWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest} InstantiateInlineWorkflowTemplateRequest
                         */
                        InstantiateInlineWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest.template: object expected");
                                message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.fromObject(object.template);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InstantiateInlineWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest} message InstantiateInlineWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InstantiateInlineWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.template = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.toObject(message.template, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this InstantiateInlineWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InstantiateInlineWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for InstantiateInlineWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InstantiateInlineWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.InstantiateInlineWorkflowTemplateRequest";
                        };
    
                        return InstantiateInlineWorkflowTemplateRequest;
                    })();
    
                    v1.UpdateWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of an UpdateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IUpdateWorkflowTemplateRequest
                         * @property {google.cloud.dataproc.v1.IWorkflowTemplate|null} [template] UpdateWorkflowTemplateRequest template
                         */
    
                        /**
                         * Constructs a new UpdateWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents an UpdateWorkflowTemplateRequest.
                         * @implements IUpdateWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function UpdateWorkflowTemplateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateWorkflowTemplateRequest template.
                         * @member {google.cloud.dataproc.v1.IWorkflowTemplate|null|undefined} template
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @instance
                         */
                        UpdateWorkflowTemplateRequest.prototype.template = null;
    
                        /**
                         * Creates a new UpdateWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest} UpdateWorkflowTemplateRequest instance
                         */
                        UpdateWorkflowTemplateRequest.create = function create(properties) {
                            return new UpdateWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest} message UpdateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.template != null && Object.hasOwnProperty.call(message, "template"))
                                $root.google.cloud.dataproc.v1.WorkflowTemplate.encode(message.template, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IUpdateWorkflowTemplateRequest} message UpdateWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest} UpdateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest} UpdateWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.template != null && message.hasOwnProperty("template")) {
                                var error = $root.google.cloud.dataproc.v1.WorkflowTemplate.verify(message.template);
                                if (error)
                                    return "template." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest} UpdateWorkflowTemplateRequest
                         */
                        UpdateWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest();
                            if (object.template != null) {
                                if (typeof object.template !== "object")
                                    throw TypeError(".google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest.template: object expected");
                                message.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.fromObject(object.template);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest} message UpdateWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.template = null;
                            if (message.template != null && message.hasOwnProperty("template"))
                                object.template = $root.google.cloud.dataproc.v1.WorkflowTemplate.toObject(message.template, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for UpdateWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UpdateWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.UpdateWorkflowTemplateRequest";
                        };
    
                        return UpdateWorkflowTemplateRequest;
                    })();
    
                    v1.ListWorkflowTemplatesRequest = (function() {
    
                        /**
                         * Properties of a ListWorkflowTemplatesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListWorkflowTemplatesRequest
                         * @property {string|null} [parent] ListWorkflowTemplatesRequest parent
                         * @property {number|null} [pageSize] ListWorkflowTemplatesRequest pageSize
                         * @property {string|null} [pageToken] ListWorkflowTemplatesRequest pageToken
                         */
    
                        /**
                         * Constructs a new ListWorkflowTemplatesRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListWorkflowTemplatesRequest.
                         * @implements IListWorkflowTemplatesRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest=} [properties] Properties to set
                         */
                        function ListWorkflowTemplatesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListWorkflowTemplatesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @instance
                         */
                        ListWorkflowTemplatesRequest.prototype.parent = "";
    
                        /**
                         * ListWorkflowTemplatesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @instance
                         */
                        ListWorkflowTemplatesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListWorkflowTemplatesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @instance
                         */
                        ListWorkflowTemplatesRequest.prototype.pageToken = "";
    
                        /**
                         * Creates a new ListWorkflowTemplatesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesRequest} ListWorkflowTemplatesRequest instance
                         */
                        ListWorkflowTemplatesRequest.create = function create(properties) {
                            return new ListWorkflowTemplatesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListWorkflowTemplatesRequest message. Does not implicitly {@link google.cloud.dataproc.v1.ListWorkflowTemplatesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest} message ListWorkflowTemplatesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListWorkflowTemplatesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListWorkflowTemplatesRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListWorkflowTemplatesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesRequest} message ListWorkflowTemplatesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListWorkflowTemplatesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListWorkflowTemplatesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesRequest} ListWorkflowTemplatesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListWorkflowTemplatesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListWorkflowTemplatesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.parent = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.pageSize = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.pageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListWorkflowTemplatesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesRequest} ListWorkflowTemplatesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListWorkflowTemplatesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListWorkflowTemplatesRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListWorkflowTemplatesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListWorkflowTemplatesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesRequest} ListWorkflowTemplatesRequest
                         */
                        ListWorkflowTemplatesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListWorkflowTemplatesRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListWorkflowTemplatesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListWorkflowTemplatesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.ListWorkflowTemplatesRequest} message ListWorkflowTemplatesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListWorkflowTemplatesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListWorkflowTemplatesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListWorkflowTemplatesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListWorkflowTemplatesRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListWorkflowTemplatesRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListWorkflowTemplatesRequest";
                        };
    
                        return ListWorkflowTemplatesRequest;
                    })();
    
                    v1.ListWorkflowTemplatesResponse = (function() {
    
                        /**
                         * Properties of a ListWorkflowTemplatesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IListWorkflowTemplatesResponse
                         * @property {Array.<google.cloud.dataproc.v1.IWorkflowTemplate>|null} [templates] ListWorkflowTemplatesResponse templates
                         * @property {string|null} [nextPageToken] ListWorkflowTemplatesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListWorkflowTemplatesResponse.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a ListWorkflowTemplatesResponse.
                         * @implements IListWorkflowTemplatesResponse
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesResponse=} [properties] Properties to set
                         */
                        function ListWorkflowTemplatesResponse(properties) {
                            this.templates = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListWorkflowTemplatesResponse templates.
                         * @member {Array.<google.cloud.dataproc.v1.IWorkflowTemplate>} templates
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @instance
                         */
                        ListWorkflowTemplatesResponse.prototype.templates = $util.emptyArray;
    
                        /**
                         * ListWorkflowTemplatesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @instance
                         */
                        ListWorkflowTemplatesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListWorkflowTemplatesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesResponse=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} ListWorkflowTemplatesResponse instance
                         */
                        ListWorkflowTemplatesResponse.create = function create(properties) {
                            return new ListWorkflowTemplatesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListWorkflowTemplatesResponse message. Does not implicitly {@link google.cloud.dataproc.v1.ListWorkflowTemplatesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesResponse} message ListWorkflowTemplatesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListWorkflowTemplatesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.templates != null && message.templates.length)
                                for (var i = 0; i < message.templates.length; ++i)
                                    $root.google.cloud.dataproc.v1.WorkflowTemplate.encode(message.templates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListWorkflowTemplatesResponse message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.ListWorkflowTemplatesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.IListWorkflowTemplatesResponse} message ListWorkflowTemplatesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListWorkflowTemplatesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListWorkflowTemplatesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} ListWorkflowTemplatesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListWorkflowTemplatesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.ListWorkflowTemplatesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.templates && message.templates.length))
                                            message.templates = [];
                                        message.templates.push($root.google.cloud.dataproc.v1.WorkflowTemplate.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        message.nextPageToken = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListWorkflowTemplatesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} ListWorkflowTemplatesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListWorkflowTemplatesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListWorkflowTemplatesResponse message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListWorkflowTemplatesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.templates != null && message.hasOwnProperty("templates")) {
                                if (!Array.isArray(message.templates))
                                    return "templates: array expected";
                                for (var i = 0; i < message.templates.length; ++i) {
                                    var error = $root.google.cloud.dataproc.v1.WorkflowTemplate.verify(message.templates[i]);
                                    if (error)
                                        return "templates." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListWorkflowTemplatesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} ListWorkflowTemplatesResponse
                         */
                        ListWorkflowTemplatesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.ListWorkflowTemplatesResponse)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.ListWorkflowTemplatesResponse();
                            if (object.templates) {
                                if (!Array.isArray(object.templates))
                                    throw TypeError(".google.cloud.dataproc.v1.ListWorkflowTemplatesResponse.templates: array expected");
                                message.templates = [];
                                for (var i = 0; i < object.templates.length; ++i) {
                                    if (typeof object.templates[i] !== "object")
                                        throw TypeError(".google.cloud.dataproc.v1.ListWorkflowTemplatesResponse.templates: object expected");
                                    message.templates[i] = $root.google.cloud.dataproc.v1.WorkflowTemplate.fromObject(object.templates[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListWorkflowTemplatesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {google.cloud.dataproc.v1.ListWorkflowTemplatesResponse} message ListWorkflowTemplatesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListWorkflowTemplatesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.templates = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.templates && message.templates.length) {
                                object.templates = [];
                                for (var j = 0; j < message.templates.length; ++j)
                                    object.templates[j] = $root.google.cloud.dataproc.v1.WorkflowTemplate.toObject(message.templates[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListWorkflowTemplatesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListWorkflowTemplatesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for ListWorkflowTemplatesResponse
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.ListWorkflowTemplatesResponse
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ListWorkflowTemplatesResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.ListWorkflowTemplatesResponse";
                        };
    
                        return ListWorkflowTemplatesResponse;
                    })();
    
                    v1.DeleteWorkflowTemplateRequest = (function() {
    
                        /**
                         * Properties of a DeleteWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @interface IDeleteWorkflowTemplateRequest
                         * @property {string|null} [name] DeleteWorkflowTemplateRequest name
                         * @property {number|null} [version] DeleteWorkflowTemplateRequest version
                         */
    
                        /**
                         * Constructs a new DeleteWorkflowTemplateRequest.
                         * @memberof google.cloud.dataproc.v1
                         * @classdesc Represents a DeleteWorkflowTemplateRequest.
                         * @implements IDeleteWorkflowTemplateRequest
                         * @constructor
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest=} [properties] Properties to set
                         */
                        function DeleteWorkflowTemplateRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteWorkflowTemplateRequest name.
                         * @member {string} name
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @instance
                         */
                        DeleteWorkflowTemplateRequest.prototype.name = "";
    
                        /**
                         * DeleteWorkflowTemplateRequest version.
                         * @member {number} version
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @instance
                         */
                        DeleteWorkflowTemplateRequest.prototype.version = 0;
    
                        /**
                         * Creates a new DeleteWorkflowTemplateRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest=} [properties] Properties to set
                         * @returns {google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest} DeleteWorkflowTemplateRequest instance
                         */
                        DeleteWorkflowTemplateRequest.create = function create(properties) {
                            return new DeleteWorkflowTemplateRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteWorkflowTemplateRequest message. Does not implicitly {@link google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest} message DeleteWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteWorkflowTemplateRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.version);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteWorkflowTemplateRequest message, length delimited. Does not implicitly {@link google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.IDeleteWorkflowTemplateRequest} message DeleteWorkflowTemplateRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteWorkflowTemplateRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteWorkflowTemplateRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest} DeleteWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteWorkflowTemplateRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.name = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.version = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteWorkflowTemplateRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest} DeleteWorkflowTemplateRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteWorkflowTemplateRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteWorkflowTemplateRequest message.
                         * @function verify
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteWorkflowTemplateRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isInteger(message.version))
                                    return "version: integer expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteWorkflowTemplateRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest} DeleteWorkflowTemplateRequest
                         */
                        DeleteWorkflowTemplateRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest)
                                return object;
                            var message = new $root.google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.version != null)
                                message.version = object.version | 0;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteWorkflowTemplateRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest} message DeleteWorkflowTemplateRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteWorkflowTemplateRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.version = 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteWorkflowTemplateRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteWorkflowTemplateRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Gets the default type url for DeleteWorkflowTemplateRequest
                         * @function getTypeUrl
                         * @memberof google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DeleteWorkflowTemplateRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/google.cloud.dataproc.v1.DeleteWorkflowTemplateRequest";
                        };
    
                        return DeleteWorkflowTemplateRequest;
                    })();
    
                    return v1;
                })();
    
                return dataproc;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.rules && message.rules.length))
                                    message.rules = [];
                                message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.fullyDecodeReservedExpansion = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Http
                 * @function getTypeUrl
                 * @memberof google.api.Http
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Http.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.Http";
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.selector = reader.string();
                                break;
                            }
                        case 2: {
                                message.get = reader.string();
                                break;
                            }
                        case 3: {
                                message.put = reader.string();
                                break;
                            }
                        case 4: {
                                message.post = reader.string();
                                break;
                            }
                        case 5: {
                                message["delete"] = reader.string();
                                break;
                            }
                        case 6: {
                                message.patch = reader.string();
                                break;
                            }
                        case 8: {
                                message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                                break;
                            }
                        case 7: {
                                message.body = reader.string();
                                break;
                            }
                        case 12: {
                                message.responseBody = reader.string();
                                break;
                            }
                        case 11: {
                                if (!(message.additionalBindings && message.additionalBindings.length))
                                    message.additionalBindings = [];
                                message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for HttpRule
                 * @function getTypeUrl
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                HttpRule.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.HttpRule";
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.kind = reader.string();
                                break;
                            }
                        case 2: {
                                message.path = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CustomHttpPattern
                 * @function getTypeUrl
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CustomHttpPattern.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.CustomHttpPattern";
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.pattern && message.pattern.length))
                                    message.pattern = [];
                                message.pattern.push(reader.string());
                                break;
                            }
                        case 3: {
                                message.nameField = reader.string();
                                break;
                            }
                        case 4: {
                                message.history = reader.int32();
                                break;
                            }
                        case 5: {
                                message.plural = reader.string();
                                break;
                            }
                        case 6: {
                                message.singular = reader.string();
                                break;
                            }
                        case 10: {
                                if (!(message.style && message.style.length))
                                    message.style = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.style.push(reader.int32());
                                } else
                                    message.style.push(reader.int32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    default:
                        if (typeof object.history === "number") {
                            message.history = object.history;
                            break;
                        }
                        break;
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                                if (typeof object.style[i] === "number") {
                                    message.style[i] = object.style[i];
                                    break;
                                }
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] === undefined ? message.history : $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] === undefined ? message.style[j] : $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceDescriptor
                 * @function getTypeUrl
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceDescriptor.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceDescriptor";
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type = reader.string();
                                break;
                            }
                        case 2: {
                                message.childType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ResourceReference
                 * @function getTypeUrl
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ResourceReference.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.api.ResourceReference";
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.file && message.file.length))
                                    message.file = [];
                                message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorSet
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorSet.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorSet";
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 * @property {string|null} [edition] FileDescriptorProto edition
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * FileDescriptorProto edition.
                 * @member {string} edition
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.edition = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    if (message.edition != null && Object.hasOwnProperty.call(message, "edition"))
                        writer.uint32(/* id 13, wireType 2 =*/106).string(message.edition);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message["package"] = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.dependency && message.dependency.length))
                                    message.dependency = [];
                                message.dependency.push(reader.string());
                                break;
                            }
                        case 10: {
                                if (!(message.publicDependency && message.publicDependency.length))
                                    message.publicDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.publicDependency.push(reader.int32());
                                } else
                                    message.publicDependency.push(reader.int32());
                                break;
                            }
                        case 11: {
                                if (!(message.weakDependency && message.weakDependency.length))
                                    message.weakDependency = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.weakDependency.push(reader.int32());
                                } else
                                    message.weakDependency.push(reader.int32());
                                break;
                            }
                        case 4: {
                                if (!(message.messageType && message.messageType.length))
                                    message.messageType = [];
                                message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.service && message.service.length))
                                    message.service = [];
                                message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                                break;
                            }
                        case 12: {
                                message.syntax = reader.string();
                                break;
                            }
                        case 13: {
                                message.edition = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        if (!$util.isString(message.edition))
                            return "edition: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    if (object.edition != null)
                        message.edition = String(object.edition);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                        object.edition = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    if (message.edition != null && message.hasOwnProperty("edition"))
                        object.edition = message.edition;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileDescriptorProto";
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.field && message.field.length))
                                    message.field = [];
                                message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 6: {
                                if (!(message.extension && message.extension.length))
                                    message.extension = [];
                                message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                if (!(message.nestedType && message.nestedType.length))
                                    message.nestedType = [];
                                message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 4: {
                                if (!(message.enumType && message.enumType.length))
                                    message.enumType = [];
                                message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.extensionRange && message.extensionRange.length))
                                    message.extensionRange = [];
                                message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 8: {
                                if (!(message.oneofDecl && message.oneofDecl.length))
                                    message.oneofDecl = [];
                                message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 7: {
                                message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 9: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 10: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.DescriptorProto";
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 3: {
                                    message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ExtensionRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ExtensionRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ExtensionRange";
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for ReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    ReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.DescriptorProto.ReservedRange";
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ExtensionRangeOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ExtensionRangeOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ExtensionRangeOptions";
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 3: {
                                message.number = reader.int32();
                                break;
                            }
                        case 4: {
                                message.label = reader.int32();
                                break;
                            }
                        case 5: {
                                message.type = reader.int32();
                                break;
                            }
                        case 6: {
                                message.typeName = reader.string();
                                break;
                            }
                        case 2: {
                                message.extendee = reader.string();
                                break;
                            }
                        case 7: {
                                message.defaultValue = reader.string();
                                break;
                            }
                        case 9: {
                                message.oneofIndex = reader.int32();
                                break;
                            }
                        case 10: {
                                message.jsonName = reader.string();
                                break;
                            }
                        case 8: {
                                message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 17: {
                                message.proto3Optional = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    default:
                        if (typeof object.label === "number") {
                            message.label = object.label;
                            break;
                        }
                        break;
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    default:
                        if (typeof object.type === "number") {
                            message.type = object.type;
                            break;
                        }
                        break;
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] === undefined ? message.label : $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] === undefined ? message.type : $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldDescriptorProto";
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofDescriptorProto";
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.value && message.value.length))
                                    message.value = [];
                                message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 4: {
                                if (!(message.reservedRange && message.reservedRange.length))
                                    message.reservedRange = [];
                                message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                                break;
                            }
                        case 5: {
                                if (!(message.reservedName && message.reservedName.length))
                                    message.reservedName = [];
                                message.reservedName.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto";
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.start = reader.int32();
                                    break;
                                }
                            case 2: {
                                    message.end = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for EnumReservedRange
                     * @function getTypeUrl
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    EnumReservedRange.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.EnumDescriptorProto.EnumReservedRange";
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.number = reader.int32();
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueDescriptorProto";
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                if (!(message.method && message.method.length))
                                    message.method = [];
                                message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceDescriptorProto";
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.inputType = reader.string();
                                break;
                            }
                        case 3: {
                                message.outputType = reader.string();
                                break;
                            }
                        case 4: {
                                message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.clientStreaming = reader.bool();
                                break;
                            }
                        case 6: {
                                message.serverStreaming = reader.bool();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodDescriptorProto
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodDescriptorProto.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodDescriptorProto";
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.javaPackage = reader.string();
                                break;
                            }
                        case 8: {
                                message.javaOuterClassname = reader.string();
                                break;
                            }
                        case 10: {
                                message.javaMultipleFiles = reader.bool();
                                break;
                            }
                        case 20: {
                                message.javaGenerateEqualsAndHash = reader.bool();
                                break;
                            }
                        case 27: {
                                message.javaStringCheckUtf8 = reader.bool();
                                break;
                            }
                        case 9: {
                                message.optimizeFor = reader.int32();
                                break;
                            }
                        case 11: {
                                message.goPackage = reader.string();
                                break;
                            }
                        case 16: {
                                message.ccGenericServices = reader.bool();
                                break;
                            }
                        case 17: {
                                message.javaGenericServices = reader.bool();
                                break;
                            }
                        case 18: {
                                message.pyGenericServices = reader.bool();
                                break;
                            }
                        case 42: {
                                message.phpGenericServices = reader.bool();
                                break;
                            }
                        case 23: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 31: {
                                message.ccEnableArenas = reader.bool();
                                break;
                            }
                        case 36: {
                                message.objcClassPrefix = reader.string();
                                break;
                            }
                        case 37: {
                                message.csharpNamespace = reader.string();
                                break;
                            }
                        case 39: {
                                message.swiftPrefix = reader.string();
                                break;
                            }
                        case 40: {
                                message.phpClassPrefix = reader.string();
                                break;
                            }
                        case 41: {
                                message.phpNamespace = reader.string();
                                break;
                            }
                        case 44: {
                                message.phpMetadataNamespace = reader.string();
                                break;
                            }
                        case 45: {
                                message.rubyPackage = reader.string();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                    message[".google.api.resourceDefinition"] = [];
                                message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    default:
                        if (typeof object.optimizeFor === "number") {
                            message.optimizeFor = object.optimizeFor;
                            break;
                        }
                        break;
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] === undefined ? message.optimizeFor : $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FileOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FileOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FileOptions";
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.messageSetWireFormat = reader.bool();
                                break;
                            }
                        case 2: {
                                message.noStandardDescriptorAccessor = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 7: {
                                message.mapEntry = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1053: {
                                message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MessageOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MessageOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MessageOptions";
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [unverifiedLazy] FieldOptions unverifiedLazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions unverifiedLazy.
                 * @member {boolean} unverifiedLazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.unverifiedLazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.unverifiedLazy != null && Object.hasOwnProperty.call(message, "unverifiedLazy"))
                        writer.uint32(/* id 15, wireType 0 =*/120).bool(message.unverifiedLazy);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.ctype = reader.int32();
                                break;
                            }
                        case 2: {
                                message.packed = reader.bool();
                                break;
                            }
                        case 6: {
                                message.jstype = reader.int32();
                                break;
                            }
                        case 5: {
                                message.lazy = reader.bool();
                                break;
                            }
                        case 15: {
                                message.unverifiedLazy = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 10: {
                                message.weak = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1052: {
                                if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                    message[".google.api.fieldBehavior"] = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message[".google.api.fieldBehavior"].push(reader.int32());
                                } else
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                                break;
                            }
                        case 1055: {
                                message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        if (typeof message.unverifiedLazy !== "boolean")
                            return "unverifiedLazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    default:
                        if (typeof object.ctype === "number") {
                            message.ctype = object.ctype;
                            break;
                        }
                        break;
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    default:
                        if (typeof object.jstype === "number") {
                            message.jstype = object.jstype;
                            break;
                        }
                        break;
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.unverifiedLazy != null)
                        message.unverifiedLazy = Boolean(object.unverifiedLazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                                if (typeof object[".google.api.fieldBehavior"][i] === "number") {
                                    message[".google.api.fieldBehavior"][i] = object[".google.api.fieldBehavior"][i];
                                    break;
                                }
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object.unverifiedLazy = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] === undefined ? message.ctype : $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] === undefined ? message.jstype : $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.unverifiedLazy != null && message.hasOwnProperty("unverifiedLazy"))
                        object.unverifiedLazy = message.unverifiedLazy;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] === undefined ? message[".google.api.fieldBehavior"][j] : $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldOptions";
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OneofOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OneofOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.OneofOptions";
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                message.allowAlias = reader.bool();
                                break;
                            }
                        case 3: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumOptions";
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for EnumValueOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                EnumValueOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.EnumValueOptions";
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 1049: {
                                message[".google.api.defaultHost"] = reader.string();
                                break;
                            }
                        case 1050: {
                                message[".google.api.oauthScopes"] = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ServiceOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ServiceOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.ServiceOptions";
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33: {
                                message.deprecated = reader.bool();
                                break;
                            }
                        case 34: {
                                message.idempotencyLevel = reader.int32();
                                break;
                            }
                        case 999: {
                                if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                    message.uninterpretedOption = [];
                                message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                                break;
                            }
                        case 72295728: {
                                message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                                break;
                            }
                        case 1051: {
                                if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                    message[".google.api.methodSignature"] = [];
                                message[".google.api.methodSignature"].push(reader.string());
                                break;
                            }
                        case 1049: {
                                message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    default:
                        if (typeof object.idempotencyLevel === "number") {
                            message.idempotencyLevel = object.idempotencyLevel;
                            break;
                        }
                        break;
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] === undefined ? message.idempotencyLevel : $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for MethodOptions
                 * @function getTypeUrl
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                MethodOptions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.MethodOptions";
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2: {
                                if (!(message.name && message.name.length))
                                    message.name = [];
                                message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                                break;
                            }
                        case 3: {
                                message.identifierValue = reader.string();
                                break;
                            }
                        case 4: {
                                message.positiveIntValue = reader.uint64();
                                break;
                            }
                        case 5: {
                                message.negativeIntValue = reader.int64();
                                break;
                            }
                        case 6: {
                                message.doubleValue = reader.double();
                                break;
                            }
                        case 7: {
                                message.stringValue = reader.bytes();
                                break;
                            }
                        case 8: {
                                message.aggregateValue = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length >= 0)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for UninterpretedOption
                 * @function getTypeUrl
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                UninterpretedOption.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.UninterpretedOption";
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.namePart = reader.string();
                                    break;
                                }
                            case 2: {
                                    message.isExtension = reader.bool();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for NamePart
                     * @function getTypeUrl
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    NamePart.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.UninterpretedOption.NamePart";
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.location && message.location.length))
                                    message.location = [];
                                message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for SourceCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                SourceCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.SourceCodeInfo";
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    if (!(message.span && message.span.length))
                                        message.span = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.span.push(reader.int32());
                                    } else
                                        message.span.push(reader.int32());
                                    break;
                                }
                            case 3: {
                                    message.leadingComments = reader.string();
                                    break;
                                }
                            case 4: {
                                    message.trailingComments = reader.string();
                                    break;
                                }
                            case 6: {
                                    if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                        message.leadingDetachedComments = [];
                                    message.leadingDetachedComments.push(reader.string());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Location
                     * @function getTypeUrl
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Location.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.SourceCodeInfo.Location";
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.annotation && message.annotation.length))
                                    message.annotation = [];
                                message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GeneratedCodeInfo
                 * @function getTypeUrl
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GeneratedCodeInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo";
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     * @property {google.protobuf.GeneratedCodeInfo.Annotation.Semantic|null} [semantic] Annotation semantic
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Annotation semantic.
                     * @member {google.protobuf.GeneratedCodeInfo.Annotation.Semantic} semantic
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.semantic = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        if (message.semantic != null && Object.hasOwnProperty.call(message, "semantic"))
                            writer.uint32(/* id 5, wireType 0 =*/40).int32(message.semantic);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    if (!(message.path && message.path.length))
                                        message.path = [];
                                    if ((tag & 7) === 2) {
                                        var end2 = reader.uint32() + reader.pos;
                                        while (reader.pos < end2)
                                            message.path.push(reader.int32());
                                    } else
                                        message.path.push(reader.int32());
                                    break;
                                }
                            case 2: {
                                    message.sourceFile = reader.string();
                                    break;
                                }
                            case 3: {
                                    message.begin = reader.int32();
                                    break;
                                }
                            case 4: {
                                    message.end = reader.int32();
                                    break;
                                }
                            case 5: {
                                    message.semantic = reader.int32();
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            switch (message.semantic) {
                            default:
                                return "semantic: enum value expected";
                            case 0:
                            case 1:
                            case 2:
                                break;
                            }
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        switch (object.semantic) {
                        default:
                            if (typeof object.semantic === "number") {
                                message.semantic = object.semantic;
                                break;
                            }
                            break;
                        case "NONE":
                        case 0:
                            message.semantic = 0;
                            break;
                        case "SET":
                        case 1:
                            message.semantic = 1;
                            break;
                        case "ALIAS":
                        case 2:
                            message.semantic = 2;
                            break;
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                            object.semantic = options.enums === String ? "NONE" : 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.semantic != null && message.hasOwnProperty("semantic"))
                            object.semantic = options.enums === String ? $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] === undefined ? message.semantic : $root.google.protobuf.GeneratedCodeInfo.Annotation.Semantic[message.semantic] : message.semantic;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    /**
                     * Gets the default type url for Annotation
                     * @function getTypeUrl
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    Annotation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/google.protobuf.GeneratedCodeInfo.Annotation";
                    };
    
                    /**
                     * Semantic enum.
                     * @name google.protobuf.GeneratedCodeInfo.Annotation.Semantic
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} SET=1 SET value
                     * @property {number} ALIAS=2 ALIAS value
                     */
                    Annotation.Semantic = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "SET"] = 1;
                        values[valuesById[2] = "ALIAS"] = 2;
                        return values;
                    })();
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Duration
                 * @function getTypeUrl
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Duration.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Duration";
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Empty
                 * @function getTypeUrl
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Empty.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Empty";
                };
    
                return Empty;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.type_url = reader.string();
                                break;
                            }
                        case 2: {
                                message.value = reader.bytes();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length >= 0)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Any
                 * @function getTypeUrl
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Any.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Any";
                };
    
                return Any;
            })();
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.seconds = reader.int64();
                                break;
                            }
                        case 2: {
                                message.nanos = reader.int32();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Timestamp
                 * @function getTypeUrl
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.Timestamp";
                };
    
                return Timestamp;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.paths && message.paths.length))
                                    message.paths = [];
                                message.paths.push(reader.string());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for FieldMask
                 * @function getTypeUrl
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                FieldMask.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.protobuf.FieldMask";
                };
    
                return FieldMask;
            })();
    
            return protobuf;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations|waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        case 3: {
                                message.done = reader.bool();
                                break;
                            }
                        case 4: {
                                message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                                break;
                            }
                        case 5: {
                                message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Operation
                 * @function getTypeUrl
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Operation.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.Operation";
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for GetOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                GetOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.GetOperationRequest";
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4: {
                                message.name = reader.string();
                                break;
                            }
                        case 1: {
                                message.filter = reader.string();
                                break;
                            }
                        case 2: {
                                message.pageSize = reader.int32();
                                break;
                            }
                        case 3: {
                                message.pageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsRequest";
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                if (!(message.operations && message.operations.length))
                                    message.operations = [];
                                message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                                break;
                            }
                        case 2: {
                                message.nextPageToken = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for ListOperationsResponse
                 * @function getTypeUrl
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                ListOperationsResponse.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.ListOperationsResponse";
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for CancelOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                CancelOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.CancelOperationRequest";
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for DeleteOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                DeleteOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.DeleteOperationRequest";
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.name = reader.string();
                                break;
                            }
                        case 2: {
                                message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for WaitOperationRequest
                 * @function getTypeUrl
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                WaitOperationRequest.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.WaitOperationRequest";
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.responseType = reader.string();
                                break;
                            }
                        case 2: {
                                message.metadataType = reader.string();
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for OperationInfo
                 * @function getTypeUrl
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                OperationInfo.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.longrunning.OperationInfo";
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1: {
                                message.code = reader.int32();
                                break;
                            }
                        case 2: {
                                message.message = reader.string();
                                break;
                            }
                        case 3: {
                                if (!(message.details && message.details.length))
                                    message.details = [];
                                message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                                break;
                            }
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Gets the default type url for Status
                 * @function getTypeUrl
                 * @memberof google.rpc.Status
                 * @static
                 * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                 * @returns {string} The default type url
                 */
                Status.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                    if (typeUrlPrefix === undefined) {
                        typeUrlPrefix = "type.googleapis.com";
                    }
                    return typeUrlPrefix + "/google.rpc.Status";
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
